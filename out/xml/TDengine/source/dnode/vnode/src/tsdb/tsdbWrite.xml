<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/source/dnode/vnode/src/tsdb/tsdbWrite.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3
 * or later ("AGPL"), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tsdb.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/**
 * @brief max key by precision
 *  approximately calculation:
 *  ms: 3600*1000*8765*1000         // 1970 + 1000 years
 *  us: 3600*1000000*8765*1000      // 1970 + 1000 years
 *  ns: 3600*1000000000*8765*292    // 1970 + 292 years
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <name>int64_t</name></type> <name><name>tsMaxKeyByPrecision</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="number">31556995200000L</literal></expr>, <expr><literal type="number">31556995200000000L</literal></expr>, <expr><literal type="number">9214646400000000000L</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<comment type="line">// static int tsdbScanAndConvertSubmitMsg(STsdb *pTsdb, SSubmitReq *pMsg);</comment>

<function><type><name>int</name></type> <name>tsdbInsertData</name><parameter_list>(<parameter><decl><type><name>STsdb</name> <modifier>*</modifier></type><name>pTsdb</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>version</name></decl></parameter>, <parameter><decl><type><name>SSubmitReq</name> <modifier>*</modifier></type><name>pMsg</name></decl></parameter>, <parameter><decl><type><name>SSubmitRsp</name> <modifier>*</modifier></type><name>pRsp</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SSubmitMsgIter</name></type> <name>msgIter</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SSubmitBlk</name>    <modifier>*</modifier></type><name>pBlock</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type>        <name>affectedrows</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type>        <name>numOfRows</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name><name>pTsdb</name><operator>-&gt;</operator><name>mem</name></name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// scan and convert</comment>
  <if_stmt><if>if <condition>(<expr><call><name>tsdbScanAndConvertSubmitMsg</name><argument_list>(<argument><expr><name>pTsdb</name></expr></argument>, <argument><expr><name>pMsg</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>terrno</name> <operator>!=</operator> <name>TSDB_CODE_TDB_TABLE_RECONFIGURE</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>tsdbError</name><argument_list>(<argument><expr><literal type="string">"vgId:%d, failed to insert data since %s"</literal></expr></argument>, <argument><expr><call><name>TD_VID</name><argument_list>(<argument><expr><name><name>pTsdb</name><operator>-&gt;</operator><name>pVnode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>tstrerror</name><argument_list>(<argument><expr><name>terrno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <comment type="line">// loop to insert</comment>
  <if_stmt><if>if <condition>(<expr><call><name>tInitSubmitMsgIter</name><argument_list>(<argument><expr><name>pMsg</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>msgIter</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <while>while <condition>(<expr><name>true</name></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SSubmitBlkRsp</name></type> <name>r</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tGetSubmitMsgNext</name><argument_list>(<argument><expr><operator>&amp;</operator><name>msgIter</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pBlock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pBlock</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><operator>(</operator><name>terrno</name> <operator>=</operator> <call><name>tsdbInsertTableData</name><argument_list>(<argument><expr><name>pTsdb</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>msgIter</name></expr></argument>, <argument><expr><name>pBlock</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>r</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><name>numOfRows</name> <operator>+=</operator> <name><name>msgIter</name><operator>.</operator><name>numOfRows</name></name></expr>;</expr_stmt>
  </block_content>}</block></while>

  <if_stmt><if>if <condition>(<expr><name>pRsp</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <comment type="line">// pRsp-&gt;affectedRows = affectedrows;</comment>
    <comment type="line">// pRsp-&gt;numOfRows = numOfRows;</comment>
  </block_content>}</block></if></if_stmt>

  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
static FORCE_INLINE int tsdbCheckRowRange(STsdb *pTsdb, STable *pTable, STSRow *row, TSKEY minKey, TSKEY maxKey,
                                          TSKEY now) {
  TSKEY rowKey = TD_ROW_KEY(row);
  if (rowKey &lt; minKey || rowKey &gt; maxKey) {
    tsdbError("vgId:%d, table %s tid %d uid %" PRIu64 " timestamp is out of range! now %" PRId64 " minKey %" PRId64
              " maxKey %" PRId64 " row key %" PRId64,
              REPO_ID(pTsdb), TABLE_CHAR_NAME(pTable), TABLE_TID(pTable), TABLE_UID(pTable), now, minKey, maxKey,
              rowKey);
    terrno = TSDB_CODE_TDB_TIMESTAMP_OUT_OF_RANGE;
    return -1;
  }

  return 0;
}
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>FORCE_INLINE</name> <name>int</name></type> <name>tsdbCheckRowRange</name><parameter_list>(<parameter><decl><type><name>STsdb</name> <modifier>*</modifier></type><name>pTsdb</name></decl></parameter>, <parameter><decl><type><name>tb_uid_t</name></type> <name>uid</name></decl></parameter>, <parameter><decl><type><name>STSRow</name> <modifier>*</modifier></type><name>row</name></decl></parameter>, <parameter><decl><type><name>TSKEY</name></type> <name>minKey</name></decl></parameter>, <parameter><decl><type><name>TSKEY</name></type> <name>maxKey</name></decl></parameter>,
                                          <parameter><decl><type><name>TSKEY</name></type> <name>now</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TSKEY</name></type> <name>rowKey</name> <init>= <expr><call><name>TD_ROW_KEY</name><argument_list>(<argument><expr><name>row</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name><name>rowKey</name> <argument_list type="generic">&lt; <argument><expr><name>minKey</name> <operator>||</operator> <name>rowKey</name></expr></argument> &gt;</argument_list></name> <name>maxKey</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>tsdbError</name><argument_list>(<argument><expr><literal type="string">"vgId:%d, table uid %"</literal> <name>PRIu64</name> <literal type="string">" timestamp is out of range! now %"</literal> <name>PRId64</name> <literal type="string">" minKey %"</literal> <name>PRId64</name>
              <literal type="string">" maxKey %"</literal> <name>PRId64</name> <literal type="string">" row key %"</literal> <name>PRId64</name></expr></argument>,
              <argument><expr><call><name>TD_VID</name><argument_list>(<argument><expr><name><name>pTsdb</name><operator>-&gt;</operator><name>pVnode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>uid</name></expr></argument>, <argument><expr><name>now</name></expr></argument>, <argument><expr><name>minKey</name></expr></argument>, <argument><expr><name>maxKey</name></expr></argument>, <argument><expr><name>rowKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <name>TSDB_CODE_TDB_TIMESTAMP_OUT_OF_RANGE</name></expr>;</expr_stmt>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>tsdbScanAndConvertSubmitMsg</name><parameter_list>(<parameter><decl><type><name>STsdb</name> <modifier>*</modifier></type><name>pTsdb</name></decl></parameter>, <parameter><decl><type><name>SSubmitReq</name> <modifier>*</modifier></type><name>pMsg</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>pMsg</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="line">// STsdbMeta *    pMeta = pTsdb-&gt;tsdbMeta;</comment>
  <decl_stmt><decl><type><name>SSubmitMsgIter</name></type> <name>msgIter</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SSubmitBlk</name>    <modifier>*</modifier></type><name>pBlock</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SSubmitBlkIter</name></type> <name>blkIter</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>STSRow</name>        <modifier>*</modifier></type><name>row</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>STsdbKeepCfg</name>  <modifier>*</modifier></type><name>pCfg</name> <init>= <expr><operator>&amp;</operator><name><name>pTsdb</name><operator>-&gt;</operator><name>keepCfg</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>TSKEY</name></type>          <name>now</name> <init>= <expr><call><name>taosGetTimestamp</name><argument_list>(<argument><expr><name><name>pCfg</name><operator>-&gt;</operator><name>precision</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>TSKEY</name></type>          <name>minKey</name> <init>= <expr><name>now</name> <operator>-</operator> <name><name>tsTickPerMin</name><index>[<expr><name><name>pCfg</name><operator>-&gt;</operator><name>precision</name></name></expr>]</index></name> <operator>*</operator> <name><name>pCfg</name><operator>-&gt;</operator><name>keep2</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>TSKEY</name></type>          <name>maxKey</name> <init>= <expr><name><name>tsMaxKeyByPrecision</name><index>[<expr><name><name>pCfg</name><operator>-&gt;</operator><name>precision</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>terrno</name> <operator>=</operator> <name>TSDB_CODE_SUCCESS</name></expr>;</expr_stmt>
  <comment type="line">// pMsg-&gt;length = htonl(pMsg-&gt;length);</comment>
  <comment type="line">// pMsg-&gt;numOfBlocks = htonl(pMsg-&gt;numOfBlocks);</comment>

  <if_stmt><if>if <condition>(<expr><call><name>tInitSubmitMsgIter</name><argument_list>(<argument><expr><name>pMsg</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>msgIter</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
  <while>while <condition>(<expr><name>true</name></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name>tGetSubmitMsgNext</name><argument_list>(<argument><expr><operator>&amp;</operator><name>msgIter</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pBlock</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>pBlock</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

      <comment type="line">// pBlock-&gt;uid = htobe64(pBlock-&gt;uid);</comment>
      <comment type="line">// pBlock-&gt;suid = htobe64(pBlock-&gt;suid);</comment>
      <comment type="line">// pBlock-&gt;sversion = htonl(pBlock-&gt;sversion);</comment>
      <comment type="line">// pBlock-&gt;dataLen = htonl(pBlock-&gt;dataLen);</comment>
      <comment type="line">// pBlock-&gt;schemaLen = htonl(pBlock-&gt;schemaLen);</comment>
      <comment type="line">// pBlock-&gt;numOfRows = htonl(pBlock-&gt;numOfRows);</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
    if (pBlock-&gt;tid &lt;= 0 || pBlock-&gt;tid &gt;= pMeta-&gt;maxTables) {
      tsdbError("vgId:%d, failed to get table to insert data, uid %" PRIu64 " tid %d", REPO_ID(pTsdb), pBlock-&gt;uid,
                pBlock-&gt;tid);
      terrno = TSDB_CODE_TDB_INVALID_TABLE_ID;
      return -1;
    }

    STable *pTable = pMeta-&gt;tables[pBlock-&gt;tid];
    if (pTable == NULL || TABLE_UID(pTable) != pBlock-&gt;uid) {
      tsdbError("vgId:%d, failed to get table to insert data, uid %" PRIu64 " tid %d", REPO_ID(pTsdb), pBlock-&gt;uid,
                pBlock-&gt;tid);
      terrno = TSDB_CODE_TDB_INVALID_TABLE_ID;
      return -1;
    }

    if (TABLE_TYPE(pTable) == TSDB_SUPER_TABLE) {
      tsdbError("vgId:%d, invalid action trying to insert a super table %s", REPO_ID(pTsdb), TABLE_CHAR_NAME(pTable));
      terrno = TSDB_CODE_TDB_INVALID_ACTION;
      return -1;
    }

    <comment type="line">// Check schema version and update schema if needed</comment>
    if (tsdbCheckTableSchema(pTsdb, pBlock, pTable) &lt; 0) {
      if (terrno == TSDB_CODE_TDB_TABLE_RECONFIGURE) {
        continue;
      } else {
        return -1;
      }
    }
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name>tInitSubmitBlkIter</name><argument_list>(<argument><expr><operator>&amp;</operator><name>msgIter</name></expr></argument>, <argument><expr><name>pBlock</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>blkIter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while>while <condition>(<expr><operator>(</operator><name>row</name> <operator>=</operator> <call><name>tGetSubmitBlkNext</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blkIter</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name>tsdbCheckRowRange</name><argument_list>(<argument><expr><name>pTsdb</name></expr></argument>, <argument><expr><name><name>msgIter</name><operator>.</operator><name>uid</name></name></expr></argument>, <argument><expr><name>row</name></expr></argument>, <argument><expr><name>minKey</name></expr></argument>, <argument><expr><name>maxKey</name></expr></argument>, <argument><expr><name>now</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>
  </block_content>}</block></while>

  <if_stmt><if>if <condition>(<expr><name>terrno</name> <operator>!=</operator> <name>TSDB_CODE_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function></unit>
