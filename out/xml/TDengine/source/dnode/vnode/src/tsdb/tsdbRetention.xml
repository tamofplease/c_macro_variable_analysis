<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/source/dnode/vnode/src/tsdb/tsdbRetention.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3
 * or later ("AGPL"), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tsdb.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>tsdbShouldDoRetention</name><parameter_list>(<parameter><decl><type><name>STsdb</name> <modifier>*</modifier></type><name>pTsdb</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>now</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>iSet</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>iSet</name> <operator>&lt;</operator> <call><name>taosArrayGetSize</name><argument_list>(<argument><expr><name><name>pTsdb</name><operator>-&gt;</operator><name>fs</name><operator>.</operator><name>aDFileSet</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>iSet</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>SDFileSet</name> <modifier>*</modifier></type><name>pSet</name> <init>= <expr><operator>(</operator><name>SDFileSet</name> <operator>*</operator><operator>)</operator><call><name>taosArrayGet</name><argument_list>(<argument><expr><name><name>pTsdb</name><operator>-&gt;</operator><name>fs</name><operator>.</operator><name>aDFileSet</name></name></expr></argument>, <argument><expr><name>iSet</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int32_t</name></type>    <name>expLevel</name> <init>= <expr><call><name>tsdbFidLevel</name><argument_list>(<argument><expr><name><name>pSet</name><operator>-&gt;</operator><name>fid</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>pTsdb</name><operator>-&gt;</operator><name>keepCfg</name></name></expr></argument>, <argument><expr><name>now</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SDiskID</name></type>    <name>did</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>expLevel</name> <operator>==</operator> <name><name>pSet</name><operator>-&gt;</operator><name>diskId</name><operator>.</operator><name>level</name></name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>expLevel</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <return>return <expr><name>true</name></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name>tfsAllocDisk</name><argument_list>(<argument><expr><name><name>pTsdb</name><operator>-&gt;</operator><name>pVnode</name><operator>-&gt;</operator><name>pTfs</name></name></expr></argument>, <argument><expr><name>expLevel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>did</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>false</name></expr>;</return>
      </block_content>}</block></if></if_stmt>

      <if_stmt><if>if <condition>(<expr><name><name>did</name><operator>.</operator><name>level</name></name> <operator>==</operator> <name><name>pSet</name><operator>-&gt;</operator><name>diskId</name><operator>.</operator><name>level</name></name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

      <return>return <expr><name>true</name></expr>;</return>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></for>

  <return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int32_t</name></type> <name>tsdbDoRetention</name><parameter_list>(<parameter><decl><type><name>STsdb</name> <modifier>*</modifier></type><name>pTsdb</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>now</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>tsdbShouldDoRetention</name><argument_list>(<argument><expr><name>pTsdb</name></expr></argument>, <argument><expr><name>now</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <return>return <expr><name>code</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <comment type="line">// do retention</comment>
  <decl_stmt><decl><type><name>STsdbFS</name></type> <name>fs</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>tsdbFSCopy</name><argument_list>(<argument><expr><name>pTsdb</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>code</name></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>_err</name>;</goto></block_content></block></if></if_stmt>

  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>iSet</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>iSet</name> <operator>&lt;</operator> <call><name>taosArrayGetSize</name><argument_list>(<argument><expr><name><name>fs</name><operator>.</operator><name>aDFileSet</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>iSet</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>SDFileSet</name> <modifier>*</modifier></type><name>pSet</name> <init>= <expr><operator>(</operator><name>SDFileSet</name> <operator>*</operator><operator>)</operator><call><name>taosArrayGet</name><argument_list>(<argument><expr><name><name>fs</name><operator>.</operator><name>aDFileSet</name></name></expr></argument>, <argument><expr><name>iSet</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int32_t</name></type>    <name>expLevel</name> <init>= <expr><call><name>tsdbFidLevel</name><argument_list>(<argument><expr><name><name>pSet</name><operator>-&gt;</operator><name>fid</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>pTsdb</name><operator>-&gt;</operator><name>keepCfg</name></name></expr></argument>, <argument><expr><name>now</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>SDiskID</name></type>    <name>did</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>expLevel</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>taosMemoryFree</name><argument_list>(<argument><expr><name><name>pSet</name><operator>-&gt;</operator><name>pHeadF</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>taosMemoryFree</name><argument_list>(<argument><expr><name><name>pSet</name><operator>-&gt;</operator><name>pDataF</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>taosMemoryFree</name><argument_list>(<argument><expr><name><name>pSet</name><operator>-&gt;</operator><name>aSttF</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>taosMemoryFree</name><argument_list>(<argument><expr><name><name>pSet</name><operator>-&gt;</operator><name>pSmaF</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>taosArrayRemove</name><argument_list>(<argument><expr><name><name>fs</name><operator>.</operator><name>aDFileSet</name></name></expr></argument>, <argument><expr><name>iSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>iSet</name><operator>--</operator></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name>expLevel</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>tfsAllocDisk</name><argument_list>(<argument><expr><name><name>pTsdb</name><operator>-&gt;</operator><name>pVnode</name><operator>-&gt;</operator><name>pTfs</name></name></expr></argument>, <argument><expr><name>expLevel</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>did</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>code</name> <operator>=</operator> <name>terrno</name></expr>;</expr_stmt>
        <goto>goto <name>_exit</name>;</goto>
      </block_content>}</block></if></if_stmt>

      <if_stmt><if>if <condition>(<expr><name><name>did</name><operator>.</operator><name>level</name></name> <operator>==</operator> <name><name>pSet</name><operator>-&gt;</operator><name>diskId</name><operator>.</operator><name>level</name></name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

      <comment type="line">// copy file to new disk (todo)</comment>
      <decl_stmt><decl><type><name>SDFileSet</name></type> <name>fSet</name> <init>= <expr><operator>*</operator><name>pSet</name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name><name>fSet</name><operator>.</operator><name>diskId</name></name> <operator>=</operator> <name>did</name></expr>;</expr_stmt>

      <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>tsdbDFileSetCopy</name><argument_list>(<argument><expr><name>pTsdb</name></expr></argument>, <argument><expr><name>pSet</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>code</name></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>_err</name>;</goto></block_content></block></if></if_stmt>

      <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>tsdbFSUpsertFSet</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fSet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <if_stmt><if>if <condition>(<expr><name>code</name></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>_err</name>;</goto></block_content></block></if></if_stmt>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></for>

  <comment type="line">// do change fs</comment>
  <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>tsdbFSPrepareCommit</name><argument_list>(<argument><expr><name>pTsdb</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>code</name></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>_err</name>;</goto></block_content></block></if></if_stmt>

  <expr_stmt><expr><call><name>taosThreadRwlockWrlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pTsdb</name><operator>-&gt;</operator><name>rwLock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>tsdbFSCommit</name><argument_list>(<argument><expr><name>pTsdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>taosThreadRwlockUnlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pTsdb</name><operator>-&gt;</operator><name>rwLock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <goto>goto <name>_err</name>;</goto>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><call><name>taosThreadRwlockUnlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pTsdb</name><operator>-&gt;</operator><name>rwLock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>tsdbFSDestroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>_exit</name>:</label>
  <return>return <expr><name>code</name></expr>;</return>

<label><name>_err</name>:</label>
  <expr_stmt><expr><call><name>tsdbError</name><argument_list>(<argument><expr><literal type="string">"vgId:%d, tsdb do retention failed since %s"</literal></expr></argument>, <argument><expr><call><name>TD_VID</name><argument_list>(<argument><expr><name><name>pTsdb</name><operator>-&gt;</operator><name>pVnode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>tstrerror</name><argument_list>(<argument><expr><name>code</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="line">// tsdbFSRollback(pTsdb-&gt;pFS);</comment>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function></unit>
