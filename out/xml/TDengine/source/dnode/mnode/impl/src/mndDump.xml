<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/source/dnode/mnode/impl/src/mndDump.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3
 * or later ("AGPL"), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_DEFAULT_SOURCE</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mndDb.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mndInt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mndStb.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sdb.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tconfig.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tjson.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ttypes.h"</cpp:file></cpp:include>

<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>GCC</name> <name>diagnostic</name> <name>push</name></cpp:pragma>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>GCC</name> <name>diagnostic</name> <name>ignored</name> <cpp:literal>"-Wunused-result"</cpp:literal></cpp:pragma>

<function><type><name>void</name></type> <name>reportStartup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
<function><type><name>void</name></type> <name>sendRsp</name><parameter_list>(<parameter><decl><type><name>SRpcMsg</name> <modifier>*</modifier></type><name>pMsg</name></decl></parameter>)</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name>rpcFreeCont</name><argument_list>(<argument><expr><name><name>pMsg</name><operator>-&gt;</operator><name>pCont</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></function>

<function><type><name>int32_t</name></type> <name>sendReq</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>SEpSet</name> <modifier>*</modifier></type><name>pEpSet</name></decl></parameter>, <parameter><decl><type><name>SRpcMsg</name> <modifier>*</modifier></type><name>pMsg</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><name>terrno</name> <operator>=</operator> <name>TSDB_CODE_INVALID_PTR</name></expr>;</expr_stmt>
  <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>char</name> <modifier>*</modifier></type><name>i642str</name><parameter_list>(<parameter><decl><type><name>int64_t</name></type> <name>val</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>str</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>str</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%"</literal> <name>PRId64</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>str</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpFunc</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"funcs"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SFuncObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_FUNC</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"funcType"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>funcType</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"scriptType"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>scriptType</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"align"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>align</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"outputType"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>outputType</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"outputLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>outputLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"bufSize"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>bufSize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"signature"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>signature</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"commentSize"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>commentSize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"codeSize"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>codeSize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpDb</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>tjsonAddItemToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"dbs"</literal></expr></argument>, <argument><expr><name>items</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SDbObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_DB</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToObject</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><literal type="string">"db"</literal></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"acct"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createUser"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createUser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"uid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>uid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"cfgVersion"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfgVersion</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"vgVersion"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>vgVersion</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"numOfVgroups"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>numOfVgroups</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"numOfStables"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>numOfStables</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"buffer"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>buffer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"pageSize"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>pageSize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"pages"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>pages</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"cacheLastSize"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>cacheLastSize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"daysPerFile"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>daysPerFile</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"daysToKeep0"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>daysToKeep0</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"daysToKeep1"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>daysToKeep1</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"daysToKeep2"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>daysToKeep2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"minRows"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>minRows</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"maxRows"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>maxRows</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"precision"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>precision</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"compression"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>compression</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"replications"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>replications</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"strict"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>strict</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"cacheLast"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>cacheLast</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"hashMethod"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>hashMethod</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"hashPrefix"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>hashPrefix</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"hashSuffix"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>hashSuffix</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"sstTrigger"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>sstTrigger</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"tsdbPageSize"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>tsdbPageSize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"schemaless"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>schemaless</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"walLevel"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>walLevel</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"walFsyncPeriod"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>walFsyncPeriod</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"walRetentionPeriod"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>walRetentionPeriod</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"walRetentionSize"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>walRetentionSize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"walRollPeriod"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>walRollPeriod</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"walSegmentSize"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>walSegmentSize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"numOfRetensions"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>numOfRetensions</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>numOfRetensions</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>rentensions</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"rentensions"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>rentension</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>rentensions</name></expr></argument>, <argument><expr><name>rentension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>SRetention</name> <modifier>*</modifier></type><name>pRetension</name> <init>= <expr><call><name>taosArrayGet</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>pRetensions</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"freq"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pRetension</name><operator>-&gt;</operator><name>freq</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"freqUnit"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pRetension</name><operator>-&gt;</operator><name>freqUnit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"keep"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pRetension</name><operator>-&gt;</operator><name>keep</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"keepUnit"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pRetension</name><operator>-&gt;</operator><name>keepUnit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpStb</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"stbs"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SStbObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_STB</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><call><name>mndGetStbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"db"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>db</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"uid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>uid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"tagVer"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>tagVer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"colVer"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>colVer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"smaVer"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>smaVer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"nextColId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>nextColId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"watermark1"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>watermark</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"watermark2"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>watermark</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"maxdelay0"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>maxdelay</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"maxdelay1"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>maxdelay</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"ttl"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>ttl</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"numOfFuncs"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>numOfFuncs</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"commentLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>commentLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"ast1Len"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>ast1Len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"ast2Len"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>ast2Len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"numOfColumns"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>numOfColumns</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>columns</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"columns"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>pObj</name><operator>-&gt;</operator><name>numOfColumns</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>column</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>columns</name></expr></argument>, <argument><expr><name>column</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>SSchema</name> <modifier>*</modifier></type><name>pColumn</name> <init>= <expr><operator>&amp;</operator><name><name>pObj</name><operator>-&gt;</operator><name>pColumns</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>column</name></expr></argument>, <argument><expr><literal type="string">"type"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pColumn</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>column</name></expr></argument>, <argument><expr><literal type="string">"typestr"</literal></expr></argument>, <argument><expr><name><name>tDataTypes</name><index>[<expr><name><name>pColumn</name><operator>-&gt;</operator><name>type</name></name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>column</name></expr></argument>, <argument><expr><literal type="string">"flags"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pColumn</name><operator>-&gt;</operator><name>flags</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>column</name></expr></argument>, <argument><expr><literal type="string">"colId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pColumn</name><operator>-&gt;</operator><name>colId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>column</name></expr></argument>, <argument><expr><literal type="string">"bytes"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pColumn</name><operator>-&gt;</operator><name>bytes</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>column</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name><name>pColumn</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"numOfTags"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>numOfTags</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>tags</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"tags"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>pObj</name><operator>-&gt;</operator><name>numOfTags</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>tag</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>tags</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt><decl><type><name>SSchema</name> <modifier>*</modifier></type><name>pTag</name> <init>= <expr><operator>&amp;</operator><name><name>pObj</name><operator>-&gt;</operator><name>pTags</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><literal type="string">"type"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pTag</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><literal type="string">"typestr"</literal></expr></argument>, <argument><expr><name><name>tDataTypes</name><index>[<expr><name><name>pTag</name><operator>-&gt;</operator><name>type</name></name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><literal type="string">"flags"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pTag</name><operator>-&gt;</operator><name>flags</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><literal type="string">"colId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pTag</name><operator>-&gt;</operator><name>colId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><literal type="string">"bytes"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pTag</name><operator>-&gt;</operator><name>bytes</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>tag</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name><name>pTag</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpSma</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"smas"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SSmaObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_SMA</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><call><name>mndGetStbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"stb"</literal></expr></argument>, <argument><expr><call><name>mndGetStbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>stb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"db"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>db</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dstTbName"</literal></expr></argument>, <argument><expr><call><name>mndGetStbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dstTbName</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"uid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>uid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"stbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>stbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dstTbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dstTbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"intervalUnit"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>intervalUnit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"slidingUnit"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>slidingUnit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"timezone"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>timezone</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dstVgId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dstVgId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"interval"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>interval</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"offset"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>offset</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"sliding"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>sliding</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"exprLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>exprLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"tagsFilterLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>tagsFilterLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"sqlLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>sqlLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"astLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>astLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpVgroup</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"vgroups"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SVgObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_VGROUP</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"vgId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>vgId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"version"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"hashBegin"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>hashBegin</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"hashEnd"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>hashEnd</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"db"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"isTsma"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>isTsma</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"replica"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>replica</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>pObj</name><operator>-&gt;</operator><name>replica</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>replicas</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"replicas"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>replica</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>replicas</name></expr></argument>, <argument><expr><name>replica</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>replica</name></expr></argument>, <argument><expr><literal type="string">"dnodeId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>vnodeGid</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>dnodeId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpTopic</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"topics"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SMqTopicObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_TOPIC</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>db</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"uid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>uid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"version"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"subType"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>subType</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"withMeta"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>withMeta</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"stbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>stbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"sqlLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>sqlLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"astLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>astLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"sqlLen"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>sqlLen</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"ntbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>ntbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"ctbStbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>ctbStbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpConsumer</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"consumers"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SMqConsumerObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_CONSUMER</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"consumerId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>consumerId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"cgroup"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>cgroup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpSubscribe</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"subscribes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SMqSubscribeObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_SUBSCRIBE</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"key"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"stbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>stbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpOffset</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"offsets"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SMqOffsetObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_OFFSET</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"key"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"offset"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>offset</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpStream</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"streams"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SStreamObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_STREAM</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"version"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"totalLevel"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>totalLevel</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"smaId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>smaId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"uid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>uid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"status"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>status</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"igExpired"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>igExpired</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"trigger"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>trigger</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"triggerParam"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>triggerParam</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"watermark"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>watermark</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"sourceDbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>sourceDbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"targetDbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>targetDbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"sourceDb"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>sourceDb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"targetDb"</literal></expr></argument>, <argument><expr><call><name>mndGetDbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>targetDb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"targetSTbName"</literal></expr></argument>, <argument><expr><call><name>mndGetStbStr</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>targetSTbName</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"targetStbUid"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>targetStbUid</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"fixedSinkVgId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>fixedSinkVgId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpAcct</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"accts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SAcctObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_ACCT</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"acct"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"acctId"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpAuth</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <comment type="line">// todo</comment>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpUser</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"users"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SUserObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_USER</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>user</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"acct"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"superUser"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>superUser</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"authVersion"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>authVersion</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"numOfReadDbs"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><call><name>taosHashGetSize</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>readDbs</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"numOfWriteDbs"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><call><name>taosHashGetSize</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>writeDbs</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpDnode</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"dnodes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SDnodeObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_DNODE</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"port"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>port</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"fqdn"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>fqdn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpSnode</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"snodes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SSnodeObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_QNODE</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpQnode</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"qnodes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SQnodeObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_QNODE</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpMnode</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"mnodes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SMnodeObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_MNODE</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpCluster</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"clusters"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SClusterObj</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_CLUSTER</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"updateTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>updateTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpTrans</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>void</name>  <modifier>*</modifier></type><name>pIter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>items</name> <init>= <expr><call><name>tjsonAddArrayToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"transactions"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>STrans</name> <modifier>*</modifier></type><name>pObj</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>pIter</name> <operator>=</operator> <call><name>sdbFetch</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>SDB_TRANS</name></expr></argument>, <argument><expr><name>pIter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>pIter</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>tjsonAddItemToArray</name><argument_list>(<argument><expr><name>items</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"id"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"stage"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>stage</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"policy"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>policy</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"conflict"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>conflict</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"exec"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>exec</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"oper"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>oper</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"createdTime"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>createdTime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"dbname"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>dbname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"stbname"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>stbname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"opername"</literal></expr></argument>, <argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>opername</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"commitLogNum"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><call><name>taosArrayGetSize</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>commitActions</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"redoActionNum"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><call><name>taosArrayGetSize</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>redoActions</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><literal type="string">"undoActionNum"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><call><name>taosArrayGetSize</name><argument_list>(<argument><expr><name><name>pObj</name><operator>-&gt;</operator><name>undoActions</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sdbRelease</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>pObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dumpHeader</name><parameter_list>(<parameter><decl><type><name>SSdb</name> <modifier>*</modifier></type><name>pSdb</name></decl></parameter>, <parameter><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"sver"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"applyIndex"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pSdb</name><operator>-&gt;</operator><name>applyIndex</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"applyTerm"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pSdb</name><operator>-&gt;</operator><name>applyTerm</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"applyConfig"</literal></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name><name>pSdb</name><operator>-&gt;</operator><name>applyConfig</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>maxIdsJson</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>tjsonAddItemToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"maxIds"</literal></expr></argument>, <argument><expr><name>maxIdsJson</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>SDB_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>int64_t</name></type> <name>maxId</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>SDB_MAX</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>maxId</name> <operator>=</operator> <name><name>pSdb</name><operator>-&gt;</operator><name>maxId</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>maxIdsJson</name></expr></argument>, <argument><expr><call><name>sdbTableName</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name>maxId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>

  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>tableVersJson</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>tjsonAddItemToObject</name><argument_list>(<argument><expr><name>json</name></expr></argument>, <argument><expr><literal type="string">"tableVers"</literal></expr></argument>, <argument><expr><name>tableVersJson</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>SDB_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>int64_t</name></type> <name>tableVer</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>SDB_MAX</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>tableVer</name> <operator>=</operator> <name><name>pSdb</name><operator>-&gt;</operator><name>tableVer</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name>tjsonAddStringToObject</name><argument_list>(<argument><expr><name>tableVersJson</name></expr></argument>, <argument><expr><call><name>sdbTableName</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>i642str</name><argument_list>(<argument><expr><name>tableVer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>mndDumpSdb</name><parameter_list>()</parameter_list> <block>{<block_content>
  <expr_stmt><expr><call><name>mInfo</name><argument_list>(<argument><expr><literal type="string">"start to dump sdb info to sdb.json"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>char</name></type> <name><name>path</name><index>[<expr><name>PATH_MAX</name> <operator>*</operator> <literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%s%smnode"</literal></expr></argument>, <argument><expr><name>tsDataDir</name></expr></argument>, <argument><expr><name>TD_DIRSEP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>SMsgCb</name></type> <name>msgCb</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name><name>msgCb</name><operator>.</operator><name>reportStartupFp</name></name> <operator>=</operator> <name>reportStartup</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>msgCb</name><operator>.</operator><name>sendReqFp</name></name> <operator>=</operator> <name>sendReq</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>msgCb</name><operator>.</operator><name>sendRspFp</name></name> <operator>=</operator> <name>sendRsp</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>msgCb</name><operator>.</operator><name>mgmt</name></name> <operator>=</operator> <operator>(</operator><name>SMgmtWrapper</name> <operator>*</operator><operator>)</operator><operator>(</operator><operator>&amp;</operator><name>msgCb</name><operator>)</operator></expr>;</expr_stmt>  <comment type="line">// hack</comment>
  <expr_stmt><expr><call><name>tmsgSetDefault</name><argument_list>(<argument><expr><operator>&amp;</operator><name>msgCb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>walInit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>syncInit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>SMnodeOpt</name></type> <name>opt</name> <init>= <expr><block>{<expr><operator>.</operator><name>msgCb</name> <operator>=</operator> <name>msgCb</name></expr>}</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SMnode</name>   <modifier>*</modifier></type><name>pMnode</name> <init>= <expr><call><name>mndOpen</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>opt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>pMnode</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

  <decl_stmt><decl><type><name>SSdb</name>  <modifier>*</modifier></type><name>pSdb</name> <init>= <expr><name><name>pMnode</name><operator>-&gt;</operator><name>pSdb</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SJson</name> <modifier>*</modifier></type><name>json</name> <init>= <expr><call><name>tjsonCreateObject</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>dumpHeader</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpFunc</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpDb</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpStb</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpSma</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpVgroup</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpTopic</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpConsumer</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpSubscribe</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpOffset</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpStream</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpAcct</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpAuth</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpUser</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpDnode</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpSnode</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpQnode</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpMnode</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpCluster</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>dumpTrans</name><argument_list>(<argument><expr><name>pSdb</name></expr></argument>, <argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>char</name>     <modifier>*</modifier></type><name>pCont</name> <init>= <expr><call><name>tjsonToString</name><argument_list>(<argument><expr><name>json</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type>   <name>contLen</name> <init>= <expr><call><name>strlen</name><argument_list>(<argument><expr><name>pCont</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>char</name></type>      <name><name>file</name><index>[]</index></name> <init>= <expr><literal type="string">"sdb.json"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>TdFilePtr</name></type> <name>pFile</name> <init>= <expr><call><name>taosOpenFile</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>TD_FILE_CREATE</name> <operator>|</operator> <name>TD_FILE_WRITE</name> <operator>|</operator> <name>TD_FILE_TRUNC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>pFile</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>mError</name><argument_list>(<argument><expr><literal type="string">"failed to write %s since %s"</literal></expr></argument>, <argument><expr><name>file</name></expr></argument>, <argument><expr><call><name>terrstr</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return;</return>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>taosWriteFile</name><argument_list>(<argument><expr><name>pFile</name></expr></argument>, <argument><expr><name>pCont</name></expr></argument>, <argument><expr><name>contLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taosWriteFile</name><argument_list>(<argument><expr><name>pFile</name></expr></argument>, <argument><expr><literal type="string">"\n"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taosFsyncFile</name><argument_list>(<argument><expr><name>pFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taosCloseFile</name><argument_list>(<argument><expr><operator>&amp;</operator><name>pFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>tjsonDelete</name><argument_list>(<argument><expr><name>json</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taosMemoryFree</name><argument_list>(<argument><expr><name>pCont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>mInfo</name><argument_list>(<argument><expr><literal type="string">"dump sdb info success"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>GCC</name> <name>diagnostic</name> <name>pop</name></cpp:pragma>
</unit>
