<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/source/libs/parser/src/parAstParser.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3
 * or later ("AGPL"), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"functionMgt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"os.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"parAst.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"parInt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"parToken.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"systable.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tglobal.h"</cpp:file></cpp:include>

<typedef>typedef <function_decl><type><name>void</name><modifier>*</modifier></type> (<modifier>*</modifier><name>FMalloc</name>)<parameter_list>(<parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>FFree</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>extern</specifier> <name>void</name><modifier>*</modifier></type> <name>ParseAlloc</name><parameter_list>(<parameter><decl><type><name>FMalloc</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type>  <name>Parse</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>SToken</name></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type>  <name>ParseFree</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FFree</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type>  <name>ParseTrace</name><parameter_list>(<parameter><decl><type><name>FILE</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>int32_t</name></type> <name>parse</name><parameter_list>(<parameter><decl><type><name>SParseContext</name><modifier>*</modifier></type> <name>pParseCxt</name></decl></parameter>, <parameter><decl><type><name>SQuery</name><modifier>*</modifier><modifier>*</modifier></type> <name>pQuery</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SAstCreateContext</name></type> <name>cxt</name></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>initAstCreateContext</name><argument_list>(<argument><expr><name>pParseCxt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>void</name><modifier>*</modifier></type>   <name>pParser</name> <init>= <expr><call><name>ParseAlloc</name><argument_list>(<argument><expr><operator>(</operator><name>FMalloc</name><operator>)</operator><name>taosMemoryMalloc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SToken</name></type> <name>t0</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>cxt</name><operator>.</operator><name>pQueryCxt</name><operator>-&gt;</operator><name>pSql</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><call><name>Parse</name><argument_list>(<argument><expr><name>pParser</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>t0</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <goto>goto <name>abort_parse</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name><name>t0</name><operator>.</operator><name>n</name></name> <operator>=</operator> <call><name>tGetToken</name><argument_list>(<argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>cxt</name><operator>.</operator><name>pQueryCxt</name><operator>-&gt;</operator><name>pSql</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>t0</name><operator>.</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>t0</name><operator>.</operator><name>z</name></name> <operator>=</operator> <operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>(</operator><name><name>cxt</name><operator>.</operator><name>pQueryCxt</name><operator>-&gt;</operator><name>pSql</name></name> <operator>+</operator> <name>i</name><operator>)</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name>i</name> <operator>+=</operator> <name><name>t0</name><operator>.</operator><name>n</name></name></expr>;</expr_stmt>

    <switch>switch <condition>(<expr><name><name>t0</name><operator>.</operator><name>type</name></name></expr>)</condition> <block>{<block_content>
      <case>case <expr><name>TK_NK_SPACE</name></expr>:</case>
      <case>case <expr><name>TK_NK_COMMENT</name></expr>:</case> <block>{<block_content>
        <break>break;</break>
      </block_content>}</block>
      <case>case <expr><name>TK_NK_SEMI</name></expr>:</case> <block>{<block_content>
        <expr_stmt><expr><call><name>Parse</name><argument_list>(<argument><expr><name>pParser</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>t0</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto>goto <name>abort_parse</name>;</goto>
      </block_content>}</block>
      <case>case <expr><name>TK_NK_ILLEGAL</name></expr>:</case> <block>{<block_content>
        <expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name><name>cxt</name><operator>.</operator><name>pQueryCxt</name><operator>-&gt;</operator><name>pMsg</name></name></expr></argument>, <argument><expr><name><name>cxt</name><operator>.</operator><name>pQueryCxt</name><operator>-&gt;</operator><name>msgLen</name></name></expr></argument>, <argument><expr><literal type="string">"unrecognized token: \"%s\""</literal></expr></argument>, <argument><expr><name><name>t0</name><operator>.</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>cxt</name><operator>.</operator><name>errCode</name></name> <operator>=</operator> <name>TSDB_CODE_PAR_SYNTAX_ERROR</name></expr>;</expr_stmt>
        <goto>goto <name>abort_parse</name>;</goto>
      </block_content>}</block>
      <case>case <expr><name>TK_NK_HEX</name></expr>:</case>
      <case>case <expr><name>TK_NK_OCT</name></expr>:</case>
      <case>case <expr><name>TK_NK_BIN</name></expr>:</case> <block>{<block_content>
        <expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name><name>cxt</name><operator>.</operator><name>pQueryCxt</name><operator>-&gt;</operator><name>pMsg</name></name></expr></argument>, <argument><expr><name><name>cxt</name><operator>.</operator><name>pQueryCxt</name><operator>-&gt;</operator><name>msgLen</name></name></expr></argument>, <argument><expr><literal type="string">"unsupported token: \"%s\""</literal></expr></argument>, <argument><expr><name><name>t0</name><operator>.</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>cxt</name><operator>.</operator><name>errCode</name></name> <operator>=</operator> <name>TSDB_CODE_PAR_SYNTAX_ERROR</name></expr>;</expr_stmt>
        <goto>goto <name>abort_parse</name>;</goto>
      </block_content>}</block>
      <default>default:</default>
        <comment type="line">// ParseTrace(stdout, "");</comment>
        <expr_stmt><expr><call><name>Parse</name><argument_list>(<argument><expr><name>pParser</name></expr></argument>, <argument><expr><name><name>t0</name><operator>.</operator><name>type</name></name></expr></argument>, <argument><expr><name>t0</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>!=</operator> <name><name>cxt</name><operator>.</operator><name>errCode</name></name></expr>)</condition> <block>{<block_content>
          <goto>goto <name>abort_parse</name>;</goto>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></switch>
  </block_content>}</block></while>

<label><name>abort_parse</name>:</label>
  <expr_stmt><expr><call><name>ParseFree</name><argument_list>(<argument><expr><name>pParser</name></expr></argument>, <argument><expr><operator>(</operator><name>FFree</name><operator>)</operator><name>taosMemoryFree</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name><name>cxt</name><operator>.</operator><name>errCode</name></name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><operator>*</operator><name>pQuery</name> <operator>=</operator> <operator>(</operator><name>SQuery</name><operator>*</operator><operator>)</operator><call><name>nodesMakeNode</name><argument_list>(<argument><expr><name>QUERY_NODE_QUERY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>NULL</name> <operator>==</operator> <operator>*</operator><name>pQuery</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><name>TSDB_CODE_OUT_OF_MEMORY</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name><operator>(</operator><operator>*</operator><name>pQuery</name><operator>)</operator><operator>-&gt;</operator><name>pRoot</name></name> <operator>=</operator> <name><name>cxt</name><operator>.</operator><name>pRootNode</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><operator>(</operator><operator>*</operator><name>pQuery</name><operator>)</operator><operator>-&gt;</operator><name>placeholderNum</name></name> <operator>=</operator> <name><name>cxt</name><operator>.</operator><name>placeholderNo</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>TSWAP</name><argument_list>(<argument><expr><name><operator>(</operator><operator>*</operator><name>pQuery</name><operator>)</operator><operator>-&gt;</operator><name>pPlaceholderValues</name></name></expr></argument>, <argument><expr><name><name>cxt</name><operator>.</operator><name>pPlaceholderValues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><operator>(</operator><operator>*</operator><name>pQuery</name><operator>)</operator><operator>-&gt;</operator><name>execStage</name></name> <operator>=</operator> <name>QUERY_EXEC_STAGE_ANALYSE</name></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>taosArrayDestroy</name><argument_list>(<argument><expr><name><name>cxt</name><operator>.</operator><name>pPlaceholderValues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name><name>cxt</name><operator>.</operator><name>errCode</name></name></expr>;</return>
</block_content>}</block></function>

<typedef>typedef <type><struct>struct <name>SCollectMetaKeyCxt</name> <block>{
  <decl_stmt><decl><type><name>SParseContext</name><modifier>*</modifier></type>   <name>pParseCxt</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SParseMetaCache</name><modifier>*</modifier></type> <name>pMetaCache</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SNode</name><modifier>*</modifier></type>           <name>pStmt</name></decl>;</decl_stmt>
}</block></struct></type> <name>SCollectMetaKeyCxt</name>;</typedef>

<typedef>typedef <type><struct>struct <name>SCollectMetaKeyFromExprCxt</name> <block>{
  <decl_stmt><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pComCxt</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>bool</name></type>                <name>hasLastRowOrLast</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type>             <name>errCode</name></decl>;</decl_stmt>
}</block></struct></type> <name>SCollectMetaKeyFromExprCxt</name>;</typedef>

<function_decl><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromQuery</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SNode</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>EDealRes</name></type> <name>collectMetaKeyFromFunction</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyFromExprCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SFunctionNode</name><modifier>*</modifier></type> <name>pFunc</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <switch>switch <condition>(<expr><call><name>fmGetFuncType</name><argument_list>(<argument><expr><name><name>pFunc</name><operator>-&gt;</operator><name>functionName</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <case>case <expr><name>FUNCTION_TYPE_LAST_ROW</name></expr>:</case>
    <case>case <expr><name>FUNCTION_TYPE_LAST</name></expr>:</case>
      <expr_stmt><expr><name><name>pCxt</name><operator>-&gt;</operator><name>hasLastRowOrLast</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
      <break>break;</break>
    <case>case <expr><name>FUNCTION_TYPE_UDF</name></expr>:</case>
      <expr_stmt><expr><name><name>pCxt</name><operator>-&gt;</operator><name>errCode</name></name> <operator>=</operator> <call><name>reserveUdfInCache</name><argument_list>(<argument><expr><name><name>pFunc</name><operator>-&gt;</operator><name>functionName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pComCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <break>break;</break>
    <default>default:</default>
      <break>break;</break>
  </block_content>}</block></switch>
  <return>return <expr><ternary><condition><expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name><name>pCxt</name><operator>-&gt;</operator><name>errCode</name></name></expr> ?</condition><then> <expr><name>DEAL_RES_CONTINUE</name></expr> </then><else>: <expr><name>DEAL_RES_ERROR</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>needGetTableIndex</name><parameter_list>(<parameter><decl><type><name>SNode</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <if_stmt><if>if <condition>(<expr><name>QUERY_SMA_OPTIMIZE_ENABLE</name> <operator>==</operator> <name>tsQuerySmaOptimize</name> <operator>&amp;&amp;</operator> <name>QUERY_NODE_SELECT_STMT</name> <operator>==</operator> <call><name>nodeType</name><argument_list>(<argument><expr><name>pStmt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>SSelectStmt</name><modifier>*</modifier></type> <name>pSelect</name> <init>= <expr><operator>(</operator><name>SSelectStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></init></decl>;</decl_stmt>
    <return>return <expr><operator>(</operator><name>NULL</name> <operator>!=</operator> <name><name>pSelect</name><operator>-&gt;</operator><name>pWindow</name></name> <operator>&amp;&amp;</operator> <name>QUERY_NODE_INTERVAL_WINDOW</name> <operator>==</operator> <call><name>nodeType</name><argument_list>(<argument><expr><name><name>pSelect</name><operator>-&gt;</operator><name>pWindow</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromInsTagsImpl</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SName</name><modifier>*</modifier></type> <name>pName</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name><name>pName</name><operator>-&gt;</operator><name>type</name></name></expr>)</condition> <block>{<block_content>
    <return>return <expr><name>TSDB_CODE_SUCCESS</name></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_DB_NAME_T</name> <operator>==</operator> <name><name>pName</name><operator>-&gt;</operator><name>type</name></name></expr>)</condition> <block>{<block_content>
    <return>return <expr><call><name>reserveDbVgInfoInCache</name><argument_list>(<argument><expr><name><name>pName</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pName</name><operator>-&gt;</operator><name>dbname</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><call><name>reserveTableVgroupInCacheExt</name><argument_list>(<argument><expr><name>pName</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromInsTags</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SSelectStmt</name><modifier>*</modifier></type> <name>pSelect</name> <init>= <expr><operator>(</operator><name>SSelectStmt</name><operator>*</operator><operator>)</operator><name><name>pCxt</name><operator>-&gt;</operator><name>pStmt</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SName</name></type>        <name>name</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type>      <name>code</name> <init>= <expr><call><name>getVnodeSysTableTargetName</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pSelect</name><operator>-&gt;</operator><name>pWhere</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>collectMetaKeyFromInsTagsImpl</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromRealTableImpl</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>pDb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>pTable</name></decl></parameter>,
                                               <parameter><decl><type><name>AUTH_TYPE</name></type> <name>authType</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>pDb</name></expr></argument>, <argument><expr><name>pTable</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableVgroupInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>pDb</name></expr></argument>, <argument><expr><name>pTable</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveUserAuthInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>pUser</name></name></expr></argument>, <argument><expr><name>pDb</name></expr></argument>, <argument><expr><name>authType</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDbVgInfoInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>pDb</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name> <operator>&amp;&amp;</operator> <call><name>needGetTableIndex</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pStmt</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableIndexInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>pDb</name></expr></argument>, <argument><expr><name>pTable</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name> <operator>&amp;&amp;</operator> <operator>(</operator><literal type="number">0</literal> <operator>==</operator> <call><name>strcmp</name><argument_list>(<argument><expr><name>pTable</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_DNODE_VARIABLES</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDnodeRequiredInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name> <operator>&amp;&amp;</operator>
      <operator>(</operator><literal type="number">0</literal> <operator>==</operator> <call><name>strcmp</name><argument_list>(<argument><expr><name>pTable</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_TAGS</name></expr></argument>)</argument_list></call> <operator>||</operator> <literal type="number">0</literal> <operator>==</operator> <call><name>strcmp</name><argument_list>(<argument><expr><name>pTable</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_TABLES</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&amp;&amp;</operator>
      <name>QUERY_NODE_SELECT_STMT</name> <operator>==</operator> <call><name>nodeType</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pStmt</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>collectMetaKeyFromInsTags</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>EDealRes</name></type> <name>collectMetaKeyFromRealTable</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyFromExprCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SRealTableNode</name><modifier>*</modifier></type> <name>pRealTable</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><name><name>pCxt</name><operator>-&gt;</operator><name>errCode</name></name> <operator>=</operator> <call><name>collectMetaKeyFromRealTableImpl</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pComCxt</name></name></expr></argument>, <argument><expr><name><name>pRealTable</name><operator>-&gt;</operator><name>table</name><operator>.</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pRealTable</name><operator>-&gt;</operator><name>table</name><operator>.</operator><name>tableName</name></name></expr></argument>,
                                                  <argument><expr><name>AUTH_TYPE_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><ternary><condition><expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name><name>pCxt</name><operator>-&gt;</operator><name>errCode</name></name></expr> ?</condition><then> <expr><name>DEAL_RES_CONTINUE</name></expr> </then><else>: <expr><name>DEAL_RES_ERROR</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>EDealRes</name></type> <name>collectMetaKeyFromTempTable</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyFromExprCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>STempTableNode</name><modifier>*</modifier></type> <name>pTempTable</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><name><name>pCxt</name><operator>-&gt;</operator><name>errCode</name></name> <operator>=</operator> <call><name>collectMetaKeyFromQuery</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pComCxt</name></name></expr></argument>, <argument><expr><name><name>pTempTable</name><operator>-&gt;</operator><name>pSubquery</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><ternary><condition><expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name><name>pCxt</name><operator>-&gt;</operator><name>errCode</name></name></expr> ?</condition><then> <expr><name>DEAL_RES_CONTINUE</name></expr> </then><else>: <expr><name>DEAL_RES_ERROR</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>EDealRes</name></type> <name>collectMetaKeyFromExprImpl</name><parameter_list>(<parameter><decl><type><name>SNode</name><modifier>*</modifier></type> <name>pNode</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>pContext</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SCollectMetaKeyFromExprCxt</name><modifier>*</modifier></type> <name>pCxt</name> <init>= <expr><name>pContext</name></expr></init></decl>;</decl_stmt>
  <switch>switch <condition>(<expr><call><name>nodeType</name><argument_list>(<argument><expr><name>pNode</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <case>case <expr><name>QUERY_NODE_FUNCTION</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromFunction</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SFunctionNode</name><operator>*</operator><operator>)</operator><name>pNode</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_REAL_TABLE</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromRealTable</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SRealTableNode</name><operator>*</operator><operator>)</operator><name>pNode</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_TEMP_TABLE</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromTempTable</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>STempTableNode</name><operator>*</operator><operator>)</operator><name>pNode</name></expr></argument>)</argument_list></call></expr>;</return>
    <default>default:</default>
      <break>break;</break>
  </block_content>}</block></switch>
  <return>return <expr><name>DEAL_RES_CONTINUE</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromExprs</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SNodeList</name><modifier>*</modifier></type> <name>pList</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SCollectMetaKeyFromExprCxt</name></type> <name>cxt</name> <init>= <expr><block>{<expr><operator>.</operator><name>pComCxt</name> <operator>=</operator> <name>pCxt</name></expr>, <expr><operator>.</operator><name>errCode</name> <operator>=</operator> <name>TSDB_CODE_SUCCESS</name></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>nodesWalkExprs</name><argument_list>(<argument><expr><name>pList</name></expr></argument>, <argument><expr><name>collectMetaKeyFromExprImpl</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name><name>cxt</name><operator>.</operator><name>errCode</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromSetOperator</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SSetOperator</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>collectMetaKeyFromQuery</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>pLeft</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>collectMetaKeyFromQuery</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>pRight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>collectMetaKeyFromExprs</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>pOrderByList</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>reserveDbCfgForLastRow</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SNode</name><modifier>*</modifier></type> <name>pTable</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <if_stmt><if>if <condition>(<expr><name>NULL</name> <operator>==</operator> <name>pTable</name> <operator>||</operator> <name>QUERY_NODE_REAL_TABLE</name> <operator>!=</operator> <call><name>nodeType</name><argument_list>(<argument><expr><name>pTable</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <return>return <expr><name>TSDB_CODE_SUCCESS</name></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>SRealTableNode</name><operator>*</operator><operator>)</operator><name>pTable</name><operator>)</operator><operator>-&gt;</operator><name><name>table</name><operator>.</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromSelect</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SSelectStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SCollectMetaKeyFromExprCxt</name></type> <name>cxt</name> <init>= <expr><block>{<expr><operator>.</operator><name>pComCxt</name> <operator>=</operator> <name>pCxt</name></expr>, <expr><operator>.</operator><name>hasLastRowOrLast</name> <operator>=</operator> <name>false</name></expr>, <expr><operator>.</operator><name>errCode</name> <operator>=</operator> <name>TSDB_CODE_SUCCESS</name></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>nodesWalkSelectStmt</name><argument_list>(<argument><expr><name>pStmt</name></expr></argument>, <argument><expr><name>SQL_CLAUSE_FROM</name></expr></argument>, <argument><expr><name>collectMetaKeyFromExprImpl</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name><name>cxt</name><operator>.</operator><name>errCode</name></name> <operator>&amp;&amp;</operator> <name><name>cxt</name><operator>.</operator><name>hasLastRowOrLast</name></name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name><name>cxt</name><operator>.</operator><name>errCode</name></name> <operator>=</operator> <call><name>reserveDbCfgForLastRow</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>pFromTable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name><name>cxt</name><operator>.</operator><name>errCode</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromAlterDatabase</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SAlterDatabaseStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromFlushDatabase</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SFlushDatabaseStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveDbVgInfoInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromCreateTable</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SCreateTableStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name> <operator>&amp;&amp;</operator> <name>NULL</name> <operator>==</operator> <name><name>pStmt</name><operator>-&gt;</operator><name>pTags</name></name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableVgroupInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromCreateMultiTable</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SCreateMultiTableStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><name>TSDB_CODE_SUCCESS</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SNode</name><modifier>*</modifier></type>  <name>pNode</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <macro><name>FOREACH</name><argument_list>(<argument>pNode</argument>, <argument>pStmt-&gt;pSubTables</argument>)</argument_list></macro> <block>{<block_content>
    <decl_stmt><decl><type><name>SCreateSubTableClause</name><modifier>*</modifier></type> <name>pClause</name> <init>= <expr><operator>(</operator><name>SCreateSubTableClause</name><operator>*</operator><operator>)</operator><name>pNode</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>code</name> <operator>=</operator>
          <call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>useDbName</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>useTableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableVgroupInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>!=</operator> <name>code</name></expr>)</condition> <block>{<block_content>
      <break>break;</break>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromDropTable</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SDropTableStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><name>TSDB_CODE_SUCCESS</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SNode</name><modifier>*</modifier></type>  <name>pNode</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <macro><name>FOREACH</name><argument_list>(<argument>pNode</argument>, <argument>pStmt-&gt;pTables</argument>)</argument_list></macro> <block>{<block_content>
    <decl_stmt><decl><type><name>SDropTableClause</name><modifier>*</modifier></type> <name>pClause</name> <init>= <expr><operator>(</operator><name>SDropTableClause</name><operator>*</operator><operator>)</operator><name>pNode</name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableVgroupInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pClause</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>!=</operator> <name>code</name></expr>)</condition> <block>{<block_content>
      <break>break;</break>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromAlterTable</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SAlterTableStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableVgroupInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromAlterStable</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SAlterTableStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromUseDatabase</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SUseDatabaseStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveDbVgVersionInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromCreateIndex</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SCreateIndexStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><name>TSDB_CODE_SUCCESS</name></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>INDEX_TYPE_SMA</name> <operator>==</operator> <name><name>pStmt</name><operator>-&gt;</operator><name>indexType</name></name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableVgroupInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDbVgInfoInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromCreateTopic</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SCreateTopicStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <if_stmt><if>if <condition>(<expr><name>NULL</name> <operator>!=</operator> <name><name>pStmt</name><operator>-&gt;</operator><name>pQuery</name></name></expr>)</condition> <block>{<block_content>
    <return>return <expr><call><name>collectMetaKeyFromQuery</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>pQuery</name></name></expr></argument>)</argument_list></call></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>TSDB_CODE_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromExplain</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SExplainStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>collectMetaKeyFromQuery</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>pQuery</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromDescribe</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SDescribeStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SName</name></type> <name>name</name> <init>= <expr><block>{<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>TSDB_TABLE_NAME_T</name></expr>, <expr><operator>.</operator><name>acctId</name> <operator>=</operator> <name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>name</name><operator>.</operator><name>dbname</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>name</name><operator>.</operator><name>tname</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>catalogRemoveTableMeta</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>pCatalog</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromCreateStream</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SCreateStreamStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>collectMetaKeyFromQuery</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>pQuery</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowDnodes</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_DNODES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowMnodes</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_MNODES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowModules</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_MODULES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowQnodes</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_QNODES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowSnodes</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_SNODES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowBnodes</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_BNODES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowCluster</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_CLUSTER</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowDatabases</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_DATABASES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowFunctions</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_FUNCTIONS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowIndexes</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_INDEXES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowStables</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_STABLES</name></expr></argument>,
                                         <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveUserAuthInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>pUser</name></name></expr></argument>,
                                  <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pDbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>, <argument><expr><name>AUTH_TYPE_READ</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowStreams</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_STREAMS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowTables</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_TABLES</name></expr></argument>,
                                         <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDbVgInfoInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pDbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveUserAuthInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>pUser</name></name></expr></argument>,
                                  <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pDbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>, <argument><expr><name>AUTH_TYPE_READ</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowTags</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_TAGS</name></expr></argument>,
                                         <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDbVgInfoInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pDbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name> <operator>&amp;&amp;</operator> <name>NULL</name> <operator>!=</operator> <name><name>pStmt</name><operator>-&gt;</operator><name>pTbName</name></name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableVgroupInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pDbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>,
                                     <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pTbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowStableTags</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowTableTagsStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>collectMetaKeyFromRealTableImpl</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pDbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>,
                                         <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pTbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>, <argument><expr><name>AUTH_TYPE_READ</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowUsers</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_USERS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowLicence</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_LICENCES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowVgroups</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_VGROUPS</name></expr></argument>,
                                         <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <comment type="line">// just to verify whether the database exists</comment>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>SValueNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pDbName</name></name><operator>)</operator><operator>-&gt;</operator><name>literal</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowTopics</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_TOPICS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowConsumers</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_PERFORMANCE_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_PERFS_TABLE_CONSUMERS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowConnections</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_PERFORMANCE_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_PERFS_TABLE_CONNECTIONS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowQueries</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_PERFORMANCE_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_PERFS_TABLE_QUERIES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowVariables</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_CONFIGS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowDnodeVariables</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowDnodeVariablesStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>,
                                         <argument><expr><name>TSDB_INS_TABLE_DNODE_VARIABLES</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDnodeRequiredInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowVnodes</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowVnodesStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_VNODES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowUserPrivileges</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_USER_PRIVILEGES</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowCreateDatabase</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowCreateDatabaseStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowCreateTable</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowCreateTableStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SName</name></type> <name>name</name> <init>= <expr><block>{<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>TSDB_TABLE_NAME_T</name></expr>, <expr><operator>.</operator><name>acctId</name> <operator>=</operator> <name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>name</name><operator>.</operator><name>dbname</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>name</name><operator>.</operator><name>tname</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>catalogRemoveTableMeta</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>pCatalog</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveTableCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveDbCfgInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>reserveUserAuthInCacheExt</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>pUser</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>name</name></expr></argument>, <argument><expr><name>AUTH_TYPE_READ</name></expr></argument>, <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowApps</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_PERFORMANCE_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_PERFS_TABLE_APPS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowTransactions</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_PERFORMANCE_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_PERFS_TABLE_TRANS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromDelete</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SDeleteStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>STableNode</name><modifier>*</modifier></type> <name>pTable</name> <init>= <expr><operator>(</operator><name>STableNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pFromTable</name></name></expr></init></decl>;</decl_stmt>
  <return>return <expr><call><name>collectMetaKeyFromRealTableImpl</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pTable</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pTable</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name>AUTH_TYPE_WRITE</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromInsert</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SInsertStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>STableNode</name><modifier>*</modifier></type> <name>pTable</name> <init>= <expr><operator>(</operator><name>STableNode</name><operator>*</operator><operator>)</operator><name><name>pStmt</name><operator>-&gt;</operator><name>pTable</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type>     <name>code</name> <init>= <expr><call><name>collectMetaKeyFromRealTableImpl</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pTable</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pTable</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name>AUTH_TYPE_WRITE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>collectMetaKeyFromQuery</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>pQuery</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowBlockDist</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowTableDistributedStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SName</name></type> <name>name</name> <init>= <expr><block>{<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>TSDB_TABLE_NAME_T</name></expr>, <expr><operator>.</operator><name>acctId</name> <operator>=</operator> <name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>name</name><operator>.</operator><name>dbname</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>name</name><operator>.</operator><name>tname</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>code</name> <init>= <expr><call><name>catalogRemoveTableMeta</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>pCatalog</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>TSDB_CODE_SUCCESS</name> <operator>==</operator> <name>code</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>collectMetaKeyFromRealTableImpl</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>dbName</name></name></expr></argument>, <argument><expr><name><name>pStmt</name><operator>-&gt;</operator><name>tableName</name></name></expr></argument>, <argument><expr><name>AUTH_TYPE_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromShowSubscriptions</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SShowStmt</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <return>return <expr><call><name>reserveTableMetaInCache</name><argument_list>(<argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pParseCxt</name><operator>-&gt;</operator><name>acctId</name></name></expr></argument>, <argument><expr><name>TSDB_INFORMATION_SCHEMA_DB</name></expr></argument>, <argument><expr><name>TSDB_INS_TABLE_SUBSCRIPTIONS</name></expr></argument>,
                                 <argument><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pMetaCache</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>collectMetaKeyFromQuery</name><parameter_list>(<parameter><decl><type><name>SCollectMetaKeyCxt</name><modifier>*</modifier></type> <name>pCxt</name></decl></parameter>, <parameter><decl><type><name>SNode</name><modifier>*</modifier></type> <name>pStmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><name><name>pCxt</name><operator>-&gt;</operator><name>pStmt</name></name> <operator>=</operator> <name>pStmt</name></expr>;</expr_stmt>
  <switch>switch <condition>(<expr><call><name>nodeType</name><argument_list>(<argument><expr><name>pStmt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <case>case <expr><name>QUERY_NODE_SET_OPERATOR</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromSetOperator</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SSetOperator</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SELECT_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromSelect</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SSelectStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_ALTER_DATABASE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromAlterDatabase</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SAlterDatabaseStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_FLUSH_DATABASE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromFlushDatabase</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SFlushDatabaseStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_CREATE_TABLE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromCreateTable</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SCreateTableStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_CREATE_MULTI_TABLE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromCreateMultiTable</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SCreateMultiTableStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_DROP_TABLE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromDropTable</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SDropTableStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_ALTER_TABLE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromAlterTable</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SAlterTableStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_ALTER_SUPER_TABLE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromAlterStable</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SAlterTableStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_USE_DATABASE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromUseDatabase</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SUseDatabaseStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_CREATE_INDEX_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromCreateIndex</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SCreateIndexStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_CREATE_TOPIC_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromCreateTopic</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SCreateTopicStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_EXPLAIN_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromExplain</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SExplainStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_DESCRIBE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromDescribe</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SDescribeStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_CREATE_STREAM_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromCreateStream</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SCreateStreamStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_DNODES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowDnodes</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_MNODES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowMnodes</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_MODULES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowModules</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_QNODES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowQnodes</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_SNODES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowSnodes</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_BNODES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowBnodes</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_CLUSTER_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowCluster</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_DATABASES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowDatabases</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_FUNCTIONS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowFunctions</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_INDEXES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowIndexes</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_STABLES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowStables</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_STREAMS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowStreams</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_TABLES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowTables</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_TAGS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowTags</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_TABLE_TAGS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowStableTags</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowTableTagsStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_USERS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowUsers</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_LICENCES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowLicence</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_VGROUPS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowVgroups</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_TOPICS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowTopics</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_CONSUMERS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowConsumers</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_CONNECTIONS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowConnections</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_QUERIES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowQueries</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_VARIABLES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowVariables</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_DNODE_VARIABLES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowDnodeVariables</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowDnodeVariablesStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_VNODES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowVnodes</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowVnodesStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_USER_PRIVILEGES_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowUserPrivileges</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_CREATE_DATABASE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowCreateDatabase</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowCreateDatabaseStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_CREATE_TABLE_STMT</name></expr>:</case>
    <case>case <expr><name>QUERY_NODE_SHOW_CREATE_STABLE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowCreateTable</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowCreateTableStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_APPS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowApps</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_TRANSACTIONS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowTransactions</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_DELETE_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromDelete</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SDeleteStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_INSERT_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromInsert</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SInsertStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_TABLE_DISTRIBUTED_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowBlockDist</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowTableDistributedStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <case>case <expr><name>QUERY_NODE_SHOW_SUBSCRIPTIONS_STMT</name></expr>:</case>
      <return>return <expr><call><name>collectMetaKeyFromShowSubscriptions</name><argument_list>(<argument><expr><name>pCxt</name></expr></argument>, <argument><expr><operator>(</operator><name>SShowStmt</name><operator>*</operator><operator>)</operator><name>pStmt</name></expr></argument>)</argument_list></call></expr>;</return>
    <default>default:</default>
      <break>break;</break>
  </block_content>}</block></switch>
  <return>return <expr><name>TSDB_CODE_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int32_t</name></type> <name>collectMetaKey</name><parameter_list>(<parameter><decl><type><name>SParseContext</name><modifier>*</modifier></type> <name>pParseCxt</name></decl></parameter>, <parameter><decl><type><name>SQuery</name><modifier>*</modifier></type> <name>pQuery</name></decl></parameter>, <parameter><decl><type><name>SParseMetaCache</name><modifier>*</modifier></type> <name>pMetaCache</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SCollectMetaKeyCxt</name></type> <name>cxt</name> <init>= <expr><block>{<expr><operator>.</operator><name>pParseCxt</name> <operator>=</operator> <name>pParseCxt</name></expr>, <expr><operator>.</operator><name>pMetaCache</name> <operator>=</operator> <name>pMetaCache</name></expr>, <expr><operator>.</operator><name>pStmt</name> <operator>=</operator> <name><name>pQuery</name><operator>-&gt;</operator><name>pRoot</name></name></expr>}</block></expr></init></decl>;</decl_stmt>
  <return>return <expr><call><name>collectMetaKeyFromQuery</name><argument_list>(<argument><expr><operator>&amp;</operator><name>cxt</name></expr></argument>, <argument><expr><name><name>pQuery</name><operator>-&gt;</operator><name>pRoot</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
