<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/source/libs/wal/src/walSeek.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3
 * or later ("AGPL"), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_DEFAULT_SOURCE</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"os.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"taoserror.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tref.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"walInt.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
static int64_t walSeekWritePos(SWal* pWal, int64_t ver) {
  int64_t code = 0;

  TdFilePtr pIdxTFile = pWal-&gt;pIdxFile;
  TdFilePtr pLogTFile = pWal-&gt;pLogFile;

  <comment type="line">// seek position</comment>
  int64_t idxOff = walGetVerIdxOffset(pWal, ver);
  code = taosLSeekFile(pIdxTFile, idxOff, SEEK_SET);
  if (code != 0) {
    terrno = TAOS_SYSTEM_ERROR(errno);
    return -1;
  }
  SWalIdxEntry entry;
  <comment type="line">// TODO:deserialize</comment>
  code = taosReadFile(pIdxTFile, &amp;entry, sizeof(SWalIdxEntry));
  if (code != 0) {
    terrno = TAOS_SYSTEM_ERROR(errno);
    return -1;
  }
  ASSERT(entry.ver == ver);
  code = taosLSeekFile(pLogTFile, entry.offset, SEEK_SET);
  if (code &lt; 0) {
    terrno = TAOS_SYSTEM_ERROR(errno);
    return -1;
  }
  return 0;
}
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>int</name></type> <name>walInitWriteFile</name><parameter_list>(<parameter><decl><type><name>SWal</name><modifier>*</modifier></type> <name>pWal</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TdFilePtr</name></type>     <name>pIdxTFile</name></decl>, <decl><type ref="prev"/><name>pLogTFile</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SWalFileInfo</name><modifier>*</modifier></type> <name>pRet</name> <init>= <expr><call><name>taosArrayGetLast</name><argument_list>(<argument><expr><name><name>pWal</name><operator>-&gt;</operator><name>fileInfoSet</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>pRet</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int64_t</name></type> <name>fileFirstVer</name> <init>= <expr><name><name>pRet</name><operator>-&gt;</operator><name>firstVer</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>char</name></type> <name><name>fnameStr</name><index>[<expr><name>WAL_FILE_LEN</name></expr>]</index></name></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>walBuildIdxName</name><argument_list>(<argument><expr><name>pWal</name></expr></argument>, <argument><expr><name>fileFirstVer</name></expr></argument>, <argument><expr><name>fnameStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>pIdxTFile</name> <operator>=</operator> <call><name>taosOpenFile</name><argument_list>(<argument><expr><name>fnameStr</name></expr></argument>, <argument><expr><name>TD_FILE_CREATE</name> <operator>|</operator> <name>TD_FILE_WRITE</name> <operator>|</operator> <name>TD_FILE_APPEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>pIdxTFile</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>walBuildLogName</name><argument_list>(<argument><expr><name>pWal</name></expr></argument>, <argument><expr><name>fileFirstVer</name></expr></argument>, <argument><expr><name>fnameStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>pLogTFile</name> <operator>=</operator> <call><name>taosOpenFile</name><argument_list>(<argument><expr><name>fnameStr</name></expr></argument>, <argument><expr><name>TD_FILE_CREATE</name> <operator>|</operator> <name>TD_FILE_WRITE</name> <operator>|</operator> <name>TD_FILE_APPEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>pLogTFile</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <comment type="line">// switch file</comment>
  <expr_stmt><expr><name><name>pWal</name><operator>-&gt;</operator><name>pIdxFile</name></name> <operator>=</operator> <name>pIdxTFile</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pWal</name><operator>-&gt;</operator><name>pLogFile</name></name> <operator>=</operator> <name>pLogTFile</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pWal</name><operator>-&gt;</operator><name>writeCur</name></name> <operator>=</operator> <call><name>taosArrayGetSize</name><argument_list>(<argument><expr><name><name>pWal</name><operator>-&gt;</operator><name>fileInfoSet</name></name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int64_t</name></type> <name>walChangeWrite</name><parameter_list>(<parameter><decl><type><name>SWal</name><modifier>*</modifier></type> <name>pWal</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>ver</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int</name></type>       <name>code</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>TdFilePtr</name></type> <name>pIdxTFile</name></decl>, <decl><type ref="prev"/><name>pLogTFile</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>char</name></type>      <name><name>fnameStr</name><index>[<expr><name>WAL_FILE_LEN</name></expr>]</index></name></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name><name>pWal</name><operator>-&gt;</operator><name>pLogFile</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>taosFsyncFile</name><argument_list>(<argument><expr><name><name>pWal</name><operator>-&gt;</operator><name>pLogFile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>code</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>taosCloseFile</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pWal</name><operator>-&gt;</operator><name>pLogFile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>code</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name><name>pWal</name><operator>-&gt;</operator><name>pIdxFile</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>taosFsyncFile</name><argument_list>(<argument><expr><name><name>pWal</name><operator>-&gt;</operator><name>pIdxFile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>code</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>taosCloseFile</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pWal</name><operator>-&gt;</operator><name>pIdxFile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>code</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></if></if_stmt>

  <decl_stmt><decl><type><name>SWalFileInfo</name></type> <name>tmpInfo</name></decl>;</decl_stmt>
  <expr_stmt><expr><name><name>tmpInfo</name><operator>.</operator><name>firstVer</name></name> <operator>=</operator> <name>ver</name></expr>;</expr_stmt>
  <comment type="line">// bsearch in fileSet</comment>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>idx</name> <init>= <expr><call><name>taosArraySearchIdx</name><argument_list>(<argument><expr><name><name>pWal</name><operator>-&gt;</operator><name>fileInfoSet</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>tmpInfo</name></expr></argument>, <argument><expr><name>compareWalFileInfo</name></expr></argument>, <argument><expr><name>TD_LE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>idx</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>SWalFileInfo</name><modifier>*</modifier></type> <name>pFileInfo</name> <init>= <expr><call><name>taosArrayGet</name><argument_list>(<argument><expr><name><name>pWal</name><operator>-&gt;</operator><name>fileInfoSet</name></name></expr></argument>, <argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <comment type="block">/*ASSERT(pFileInfo != NULL);*/</comment>

  <decl_stmt><decl><type><name>int64_t</name></type> <name>fileFirstVer</name> <init>= <expr><name><name>pFileInfo</name><operator>-&gt;</operator><name>firstVer</name></name></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>walBuildIdxName</name><argument_list>(<argument><expr><name>pWal</name></expr></argument>, <argument><expr><name>fileFirstVer</name></expr></argument>, <argument><expr><name>fnameStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>pIdxTFile</name> <operator>=</operator> <call><name>taosOpenFile</name><argument_list>(<argument><expr><name>fnameStr</name></expr></argument>, <argument><expr><name>TD_FILE_CREATE</name> <operator>|</operator> <name>TD_FILE_WRITE</name> <operator>|</operator> <name>TD_FILE_APPEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>pIdxTFile</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>pWal</name><operator>-&gt;</operator><name>pIdxFile</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>walBuildLogName</name><argument_list>(<argument><expr><name>pWal</name></expr></argument>, <argument><expr><name>fileFirstVer</name></expr></argument>, <argument><expr><name>fnameStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>pLogTFile</name> <operator>=</operator> <call><name>taosOpenFile</name><argument_list>(<argument><expr><name>fnameStr</name></expr></argument>, <argument><expr><name>TD_FILE_CREATE</name> <operator>|</operator> <name>TD_FILE_WRITE</name> <operator>|</operator> <name>TD_FILE_APPEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>pLogTFile</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>taosCloseFile</name><argument_list>(<argument><expr><operator>&amp;</operator><name>pIdxTFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>pWal</name><operator>-&gt;</operator><name>pLogFile</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name><name>pWal</name><operator>-&gt;</operator><name>pLogFile</name></name> <operator>=</operator> <name>pLogTFile</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pWal</name><operator>-&gt;</operator><name>pIdxFile</name></name> <operator>=</operator> <name>pIdxTFile</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pWal</name><operator>-&gt;</operator><name>writeCur</name></name> <operator>=</operator> <name>idx</name></expr>;</expr_stmt>
  <return>return <expr><name>fileFirstVer</name></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
int walSeekWriteVer(SWal* pWal, int64_t ver) {
  int64_t code;
  if (ver == pWal-&gt;vers.lastVer) {
    return 0;
  }
  if (ver &gt; pWal-&gt;vers.lastVer || ver &lt; pWal-&gt;vers.firstVer) {
    terrno = TSDB_CODE_WAL_INVALID_VER;
    return -1;
  }
  if (ver &lt; pWal-&gt;vers.snapshotVer) {
  }
  if (ver &lt; walGetCurFileFirstVer(pWal) || (ver &gt; walGetCurFileLastVer(pWal))) {
    code = walChangeWrite(pWal, ver);
    if (code != 0) {
      return -1;
    }
  }
  code = walSeekWritePos(pWal, ver);
  if (code != 0) {
    return -1;
  }

  return 0;
}
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
