<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/source/libs/tfs/src/tfsTier.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3
 * or later ("AGPL"), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_DEFAULT_SOURCE</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tfsInt.h"</cpp:file></cpp:include>

<function><type><name>int32_t</name></type> <name>tfsInitTier</name><parameter_list>(<parameter><decl><type><name>STfsTier</name> <modifier>*</modifier></type><name>pTier</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>level</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>pTier</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>STfsTier</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt><if>if <condition>(<expr><call><name>taosThreadSpinInit</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pTier</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <call><name>TAOS_SYSTEM_ERROR</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>level</name></name> <operator>=</operator> <name>level</name></expr>;</expr_stmt>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>tfsDestroyTier</name><parameter_list>(<parameter><decl><type><name>STfsTier</name> <modifier>*</modifier></type><name>pTier</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>id</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>id</name> <operator>&lt;</operator> <name>TFS_MAX_DISKS_PER_TIER</name></expr>;</condition> <incr><expr><name>id</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><name>id</name></expr>]</index></name> <operator>=</operator> <call><name>tfsFreeDisk</name><argument_list>(<argument><expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><name>id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>

  <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taosThreadSpinDestroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pTier</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>STfsDisk</name> <modifier>*</modifier></type><name>tfsMountDiskToTier</name><parameter_list>(<parameter><decl><type><name>STfsTier</name> <modifier>*</modifier></type><name>pTier</name></decl></parameter>, <parameter><decl><type><name>SDiskCfg</name> <modifier>*</modifier></type><name>pCfg</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <if_stmt><if>if <condition>(<expr><name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name> <operator>&gt;=</operator> <name>TFS_MAX_DISKS_PER_TIER</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <name>TSDB_CODE_FS_TOO_MANY_MOUNT</name></expr>;</expr_stmt>
    <return>return <expr><name>NULL</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <decl_stmt><decl><type><name>int32_t</name></type> <name>id</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name><name>pTier</name><operator>-&gt;</operator><name>level</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><name><name>pCfg</name><operator>-&gt;</operator><name>primary</name></name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
      </block_content>}</block></if> <else>else <block>{<block_content>
        <expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></if> <else>else <block>{<block_content>
    <expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name></expr>;</expr_stmt>
  </block_content>}</block></else></if_stmt>

  <if_stmt><if>if <condition>(<expr><name>id</name> <operator>&gt;=</operator> <name>TFS_MAX_DISKS_PER_TIER</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <name>TSDB_CODE_FS_TOO_MANY_MOUNT</name></expr>;</expr_stmt>
    <return>return <expr><name>NULL</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <decl_stmt><decl><type><name>STfsDisk</name> <modifier>*</modifier></type><name>pDisk</name> <init>= <expr><call><name>tfsNewDisk</name><argument_list>(<argument><expr><name><name>pCfg</name><operator>-&gt;</operator><name>level</name></name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name><name>pCfg</name><operator>-&gt;</operator><name>dir</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>pDisk</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

  <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><name>id</name></expr>]</index></name> <operator>=</operator> <name>pDisk</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name><operator>++</operator></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>fDebug</name><argument_list>(<argument><expr><literal type="string">"disk %s is mounted to tier level %d id %d"</literal></expr></argument>, <argument><expr><name><name>pCfg</name><operator>-&gt;</operator><name>dir</name></name></expr></argument>, <argument><expr><name><name>pCfg</name><operator>-&gt;</operator><name>level</name></name></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><name>id</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>tfsUpdateTierSize</name><parameter_list>(<parameter><decl><type><name>STfsTier</name> <modifier>*</modifier></type><name>pTier</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SDiskSize</name></type> <name>size</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type>   <name>nAvailDisks</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><call><name>tfsLockTier</name><argument_list>(<argument><expr><name>pTier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>id</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>id</name> <operator>&lt;</operator> <name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name></expr>;</condition> <incr><expr><name>id</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>STfsDisk</name> <modifier>*</modifier></type><name>pDisk</name> <init>= <expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><name>id</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>pDisk</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>tfsUpdateDiskSize</name><argument_list>(<argument><expr><name>pDisk</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

    <expr_stmt><expr><name><name>size</name><operator>.</operator><name>total</name></name> <operator>+=</operator> <name><name>pDisk</name><operator>-&gt;</operator><name>size</name><operator>.</operator><name>total</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>size</name><operator>.</operator><name>used</name></name> <operator>+=</operator> <name><name>pDisk</name><operator>-&gt;</operator><name>size</name><operator>.</operator><name>used</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>size</name><operator>.</operator><name>avail</name></name> <operator>+=</operator> <name><name>pDisk</name><operator>-&gt;</operator><name>size</name><operator>.</operator><name>avail</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name>nAvailDisks</name><operator>++</operator></expr>;</expr_stmt>
  </block_content>}</block></for>

  <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <name>size</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>nAvailDisks</name></name> <operator>=</operator> <name>nAvailDisks</name></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>tfsUnLockTier</name><argument_list>(<argument><expr><name>pTier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="line">// Round-Robin to allocate disk on a tier</comment>
<function><type><name>int32_t</name></type> <name>tfsAllocDiskOnTier</name><parameter_list>(<parameter><decl><type><name>STfsTier</name> <modifier>*</modifier></type><name>pTier</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><name>terrno</name> <operator>=</operator> <name>TSDB_CODE_FS_NO_VALID_DISK</name></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>tfsLockTier</name><argument_list>(<argument><expr><name>pTier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt><if>if <condition>(<expr><name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>pTier</name><operator>-&gt;</operator><name>nAvailDisks</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>tfsUnLockTier</name><argument_list>(<argument><expr><name>pTier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <decl_stmt><decl><type><name>int32_t</name></type> <name>retId</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>id</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>id</name> <operator>&lt;</operator> <name>TFS_MAX_DISKS_PER_TIER</name></expr>;</condition> <incr><expr><operator>++</operator><name>id</name></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>int32_t</name></type>   <name>diskId</name> <init>= <expr><operator>(</operator><name><name>pTier</name><operator>-&gt;</operator><name>nextid</name></name> <operator>+</operator> <name>id</name><operator>)</operator> <operator>%</operator> <name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>STfsDisk</name> <modifier>*</modifier></type><name>pDisk</name> <init>= <expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><name>diskId</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>pDisk</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name><name>pDisk</name><operator>-&gt;</operator><name>size</name><operator>.</operator><name>avail</name></name> <operator>&lt;</operator> <name>TFS_MIN_DISK_FREE_SIZE</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

    <expr_stmt><expr><name>retId</name> <operator>=</operator> <name>diskId</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>terrno</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>nextid</name></name> <operator>=</operator> <operator>(</operator><name>diskId</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name></expr>;</expr_stmt>
    <break>break;</break>
  </block_content>}</block></for>

  <expr_stmt><expr><call><name>tfsUnLockTier</name><argument_list>(<argument><expr><name>pTier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>retId</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>tfsPosNextId</name><parameter_list>(<parameter><decl><type><name>STfsTier</name> <modifier>*</modifier></type><name>pTier</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>nextid</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>id</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>id</name> <operator>&lt;</operator> <name><name>pTier</name><operator>-&gt;</operator><name>ndisk</name></name></expr>;</condition> <incr><expr><name>id</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>STfsDisk</name> <modifier>*</modifier></type><name>pLDisk</name> <init>= <expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><name>nextid</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>STfsDisk</name> <modifier>*</modifier></type><name>pDisk</name> <init>= <expr><name><name>pTier</name><operator>-&gt;</operator><name>disks</name><index>[<expr><name>id</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>pDisk</name><operator>-&gt;</operator><name>size</name><operator>.</operator><name>avail</name></name> <operator>&gt;</operator> <name>TFS_MIN_DISK_FREE_SIZE</name> <operator>&amp;&amp;</operator> <name><name>pDisk</name><operator>-&gt;</operator><name>size</name><operator>.</operator><name>avail</name></name> <operator>&gt;</operator> <name><name>pLDisk</name><operator>-&gt;</operator><name>size</name><operator>.</operator><name>avail</name></name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>nextid</name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></for>

  <expr_stmt><expr><name><name>pTier</name><operator>-&gt;</operator><name>nextid</name></name> <operator>=</operator> <name>nextid</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
