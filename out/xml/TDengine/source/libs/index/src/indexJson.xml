<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/source/libs/index/src/indexJson.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3 * or later ("AGPL"), as published by the Free
 * Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"index.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"indexInt.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>indexJsonOpen</name><parameter_list>(<parameter><decl><type><name>SIndexJsonOpts</name> <modifier>*</modifier></type><name>opts</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>SIndexJson</name> <modifier>*</modifier><modifier>*</modifier></type><name>index</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <comment type="line">// handle</comment>
  <return>return <expr><call><name>indexOpen</name><argument_list>(<argument><expr><name>opts</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>int</name></type> <name>indexJsonPut</name><parameter_list>(<parameter><decl><type><name>SIndexJson</name> <modifier>*</modifier></type><name>index</name></decl></parameter>, <parameter><decl><type><name>SIndexJsonMultiTerm</name> <modifier>*</modifier></type><name>terms</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>uid</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>taosArrayGetSize</name><argument_list>(<argument><expr><name>terms</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>SIndexJsonTerm</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><call><name>taosArrayGetP</name><argument_list>(<argument><expr><name>terms</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_BOOL</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>=</operator> <name>TSDB_DATA_TYPE_INT</name></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_VARCHAR</name> <operator>||</operator> <name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_NCHAR</name> <operator>||</operator>
               <name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_BINARY</name></expr>)</condition> <block>{<block_content>
      <comment type="line">// p-&gt;colType = TSDB_DATA_TYPE_NCHAR;</comment>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>=</operator> <name>TSDB_DATA_TYPE_DOUBLE</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><call><name>IDX_TYPE_ADD_EXTERN_TYPE</name><argument_list>(<argument><expr><operator>(</operator><name><name>p</name><operator>-&gt;</operator><name>colType</name></name><operator>)</operator></expr></argument>, <argument><expr><name>TSDB_DATA_TYPE_JSON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>
  <comment type="line">// handle put</comment>
  <return>return <expr><call><name>indexPut</name><argument_list>(<argument><expr><name>index</name></expr></argument>, <argument><expr><name>terms</name></expr></argument>, <argument><expr><name>uid</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>indexJsonSearch</name><parameter_list>(<parameter><decl><type><name>SIndexJson</name> <modifier>*</modifier></type><name>index</name></decl></parameter>, <parameter><decl><type><name>SIndexJsonMultiTermQuery</name> <modifier>*</modifier></type><name>tq</name></decl></parameter>, <parameter><decl><type><name>SArray</name> <modifier>*</modifier></type><name>result</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SArray</name> <modifier>*</modifier></type><name>terms</name> <init>= <expr><name><name>tq</name><operator>-&gt;</operator><name>query</name></name></expr></init></decl>;</decl_stmt>
  <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>taosArrayGetSize</name><argument_list>(<argument><expr><name>terms</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <decl_stmt><decl><type><name>SIndexJsonTerm</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><call><name>taosArrayGetP</name><argument_list>(<argument><expr><name>terms</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_BOOL</name></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>=</operator> <name>TSDB_DATA_TYPE_INT</name></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_VARCHAR</name> <operator>||</operator> <name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_NCHAR</name> <operator>||</operator>
               <name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_BINARY</name></expr>)</condition> <block>{<block_content>
      <comment type="line">// p-&gt;colType = TSDB_DATA_TYPE_NCHAR;</comment>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name> <operator>=</operator> <name>TSDB_DATA_TYPE_DOUBLE</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><call><name>IDX_TYPE_ADD_EXTERN_TYPE</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>colType</name></name></expr></argument>, <argument><expr><name>TSDB_DATA_TYPE_JSON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>
  <comment type="line">// handle search</comment>
  <return>return <expr><call><name>indexSearch</name><argument_list>(<argument><expr><name>index</name></expr></argument>, <argument><expr><name>tq</name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>indexJsonClose</name><parameter_list>(<parameter><decl><type><name>SIndexJson</name> <modifier>*</modifier></type><name>index</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <comment type="line">// handle close</comment>
  <return>return <expr><call><name>indexClose</name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
