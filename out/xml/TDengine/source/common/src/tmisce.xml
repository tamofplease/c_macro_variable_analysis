<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/source/common/src/tmisce.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3
 * or later ("AGPL"), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_DEFAULT_SOURCE</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tmisce.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tglobal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tlog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tname.h"</cpp:file></cpp:include>

<function><type><name>int32_t</name></type> <name>taosGetFqdnPortFromEp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>ep</name></decl></parameter>, <parameter><decl><type><name>SEp</name><modifier>*</modifier></type> <name>pEp</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><name><name>pEp</name><operator>-&gt;</operator><name>port</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>pEp</name><operator>-&gt;</operator><name>fqdn</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>TSDB_FQDN_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>pEp</name><operator>-&gt;</operator><name>fqdn</name></name></expr></argument>, <argument><expr><name>ep</name></expr></argument>, <argument><expr><name>TSDB_FQDN_LEN</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>temp</name> <init>= <expr><call><name>strchr</name><argument_list>(<argument><expr><name><name>pEp</name><operator>-&gt;</operator><name>fqdn</name></name></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>temp</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><operator>*</operator><name>temp</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>pEp</name><operator>-&gt;</operator><name>port</name></name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>temp</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>

  <if_stmt><if>if <condition>(<expr><name><name>pEp</name><operator>-&gt;</operator><name>port</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name><name>pEp</name><operator>-&gt;</operator><name>port</name></name> <operator>=</operator> <name>tsServerPort</name></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>

  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>addEpIntoEpSet</name><parameter_list>(<parameter><decl><type><name>SEpSet</name><modifier>*</modifier></type> <name>pEpSet</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>fqdn</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>port</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <if_stmt><if>if <condition>(<expr><name>pEpSet</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>fqdn</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>fqdn</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <return>return;</return>
  </block_content>}</block></if></if_stmt>

  <decl_stmt><decl><type><name>int32_t</name></type> <name>index</name> <init>= <expr><name><name>pEpSet</name><operator>-&gt;</operator><name>numOfEps</name></name></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>tstrncpy</name><argument_list>(<argument><expr><name><name>pEpSet</name><operator>-&gt;</operator><name>eps</name><index>[<expr><name>index</name></expr>]</index></name><operator>.</operator><name>fqdn</name></expr></argument>, <argument><expr><name>fqdn</name></expr></argument>, <argument><expr><call><name>tListLen</name><argument_list>(<argument><expr><name><name>pEpSet</name><operator>-&gt;</operator><name>eps</name><index>[<expr><name>index</name></expr>]</index></name><operator>.</operator><name>fqdn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pEpSet</name><operator>-&gt;</operator><name>eps</name><index>[<expr><name>index</name></expr>]</index></name><operator>.</operator><name>port</name> <operator>=</operator> <name>port</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pEpSet</name><operator>-&gt;</operator><name>numOfEps</name></name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name>isEpsetEqual</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>SEpSet</name><modifier>*</modifier></type> <name>s1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>SEpSet</name><modifier>*</modifier></type> <name>s2</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <if_stmt><if>if <condition>(<expr><name><name>s1</name><operator>-&gt;</operator><name>numOfEps</name></name> <operator>!=</operator> <name><name>s2</name><operator>-&gt;</operator><name>numOfEps</name></name> <operator>||</operator> <name><name>s1</name><operator>-&gt;</operator><name>inUse</name></name> <operator>!=</operator> <name><name>s2</name><operator>-&gt;</operator><name>inUse</name></name></expr>)</condition> <block>{<block_content>
    <return>return <expr><name>false</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>s1</name><operator>-&gt;</operator><name>numOfEps</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>s1</name><operator>-&gt;</operator><name>eps</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>port</name> <operator>!=</operator> <name><name>s2</name><operator>-&gt;</operator><name>eps</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>port</name> <operator>||</operator> <call><name>strncmp</name><argument_list>(<argument><expr><name><name>s1</name><operator>-&gt;</operator><name>eps</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>fqdn</name></expr></argument>, <argument><expr><name><name>s2</name><operator>-&gt;</operator><name>eps</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>fqdn</name></expr></argument>, <argument><expr><name>TSDB_FQDN_LEN</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>
  </block_content>}</block></for>
  <return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>updateEpSet_s</name><parameter_list>(<parameter><decl><type><name>SCorEpSet</name><modifier>*</modifier></type> <name>pEpSet</name></decl></parameter>, <parameter><decl><type><name>SEpSet</name><modifier>*</modifier></type> <name>pNewEpSet</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><call><name>taosCorBeginWrite</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pEpSet</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>pEpSet</name><operator>-&gt;</operator><name>epSet</name></name> <operator>=</operator> <operator>*</operator><name>pNewEpSet</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taosCorEndWrite</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pEpSet</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>SEpSet</name></type> <name>getEpSet_s</name><parameter_list>(<parameter><decl><type><name>SCorEpSet</name><modifier>*</modifier></type> <name>pEpSet</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>SEpSet</name></type> <name>ep</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taosCorBeginRead</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pEpSet</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ep</name> <operator>=</operator> <name><name>pEpSet</name><operator>-&gt;</operator><name>epSet</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taosCorEndRead</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pEpSet</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>ep</name></expr>;</return>
</block_content>}</block></function>
</unit>
