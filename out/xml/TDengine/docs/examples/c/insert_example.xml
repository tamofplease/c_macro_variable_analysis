<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/docs/examples/c/insert_example.c"><comment type="line">// compile with</comment>
<comment type="line">// gcc -o insert_example insert_example.c -ltaos</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"taos.h"</cpp:file></cpp:include>


<comment type="block" format="doxygen">/**
 * @brief execute sql and print affected rows.
 * 
 * @param taos 
 * @param sql 
 */</comment>
<function><type><name>void</name></type> <name>executeSQL</name><parameter_list>(<parameter><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sql</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>res</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><name>sql</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type>       <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>code</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Error code: %d; Message: %s\n"</literal></expr></argument>, <argument><expr><name>code</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>affectedRows</name> <init>= <expr><call><name>taos_affected_rows</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"affected rows %d\n"</literal></expr></argument>, <argument><expr><name>affectedRows</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{<block_content>
   <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">6030</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>taos</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"failed to connect to server\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>executeSQL</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"CREATE DATABASE power"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>executeSQL</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"USE power"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>executeSQL</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"CREATE STABLE meters (ts TIMESTAMP, current FLOAT, voltage INT, phase FLOAT) TAGS (location BINARY(64), groupId INT)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>executeSQL</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"INSERT INTO d1001 USING meters TAGS('California.SanFrancisco', 2) VALUES ('2018-10-03 14:38:05.000', 10.30000, 219, 0.31000) ('2018-10-03 14:38:15.000', 12.60000, 218, 0.33000) ('2018-10-03 14:38:16.800', 12.30000, 221, 0.31000)"</literal>
                <literal type="string">"d1002 USING meters TAGS('California.SanFrancisco', 3) VALUES ('2018-10-03 14:38:16.650', 10.30000, 218, 0.25000)"</literal>
                <literal type="string">"d1003 USING meters TAGS('California.LosAngeles', 2) VALUES ('2018-10-03 14:38:05.500', 11.80000, 221, 0.28000) ('2018-10-03 14:38:16.600', 13.40000, 223, 0.29000)"</literal>
                <literal type="string">"d1004 USING meters TAGS('California.LosAngeles', 3) VALUES ('2018-10-03 14:38:05.000', 10.80000, 223, 0.29000) ('2018-10-03 14:38:06.500', 11.50000, 221, 0.35000)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="line">// output:</comment>
<comment type="line">// affected rows 0</comment>
<comment type="line">// affected rows 0</comment>
<comment type="line">// affected rows 0</comment>
<comment type="line">// affected rows 8</comment>
</unit>
