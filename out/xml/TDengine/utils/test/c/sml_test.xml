<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/utils/test/c/sml_test.c"><comment type="block">/*
 * Copyright (c) 2019 TAOS Data, Inc. &lt;jhtao@taosdata.com&gt;
 *
 * This program is free software: you can use, redistribute, and/or modify
 * it under the terms of the GNU Affero General Public License, version 3
 * or later ("AGPL"), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;time.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"taos.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tlog.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>smlProcess_influx_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"readings,name=truck_0,fleet=South,driver=Trish,model=H-2,device_version=v2.3 "</literal>
      <literal type="string">"load_capacity=1500,fuel_capacity=150,nominal_fuel_consumption=12,latitude=52.31854,longitude=4.72037,elevation="</literal>
      <literal type="string">"124,velocity=0,heading=221,grade=0 1451606401000000000"</literal></expr>,
      <expr><literal type="string">"readings,name=truck_0,fleet=South,driver=Trish,model=H-2,device_version=v2.3 "</literal>
      <literal type="string">"load_capacity=1500,fuel_capacity=150,nominal_fuel_consumption=12,latitude=52.31854,longitude=4.72037,elevation="</literal>
      <literal type="string">"124,velocity=0,heading=221,grade=0,fuel_consumption=25 1451607402000000000"</literal></expr>,
      <expr><literal type="string">"readings,name=truck_0,fleet=South,driver=Trish,model=H-2,device_version=v2.3 "</literal>
      <literal type="string">"load_capacity=1500,fuel_capacity=150,nominal_fuel_consumption=12,latitude=52.31854,longitude=4.72037,elevation="</literal>
      <literal type="string">"124,heading=221,grade=0,fuel_consumption=25 1451608403000000000"</literal></expr>,
      <expr><literal type="string">"readings,name=truck_0,fleet=South,driver=Trish,model=H-2,device_version=v2.3 "</literal>
      <literal type="string">"fuel_capacity=150,nominal_fuel_consumption=12,latitude=52.31854,longitude=4.72037,elevation=124,velocity=0,"</literal>
      <literal type="string">"heading=221,grade=0,fuel_consumption=25 1451609404000000000"</literal></expr>,
      <expr><literal type="string">"readings,name=truck_0,fleet=South,driver=Trish,model=H-2,device_version=v2.3 fuel_consumption=25,grade=0 "</literal>
      <literal type="string">"1451619405000000000"</literal></expr>,
      <expr><literal type="string">"readings,name=truck_1,fleet=South,driver=Albert,model=F-150,device_version=v1.5 "</literal>
      <literal type="string">"load_capacity=2000,fuel_capacity=200,nominal_fuel_consumption=15,latitude=72.45258,longitude=68.83761,elevation="</literal>
      <literal type="string">"255,velocity=0,heading=181,grade=0,fuel_consumption=25 1451606406000000000"</literal></expr>,
      <expr><literal type="string">"readings,name=truck_2,driver=Derek,model=F-150,device_version=v1.5 "</literal>
      <literal type="string">"load_capacity=2000,fuel_capacity=200,nominal_fuel_consumption=15,latitude=24.5208,longitude=28.09377,elevation="</literal>
      <literal type="string">"428,velocity=0,heading=304,grade=0,fuel_consumption=25 1451606407000000000"</literal></expr>,
      <expr><literal type="string">"readings,name=truck_2,fleet=North,driver=Derek,model=F-150 "</literal>
      <literal type="string">"load_capacity=2000,fuel_capacity=200,nominal_fuel_consumption=15,latitude=24.5208,longitude=28.09377,elevation="</literal>
      <literal type="string">"428,velocity=0,heading=304,grade=0,fuel_consumption=25 1451609408000000000"</literal></expr>,
      <expr><literal type="string">"readings,fleet=South,name=truck_0,driver=Trish,model=H-2,device_version=v2.3 fuel_consumption=25,grade=0 "</literal>
      <literal type="string">"1451629409000000000"</literal></expr>,
      <expr><literal type="string">"stable,t1=t1,t2=t2,t3=t3 c1=1,c2=2,c3=\"kk\",c4=4 1451629501000000000"</literal></expr>,
      <expr><literal type="string">"stable,t2=t2,t1=t1,t3=t3 c1=1,c3=\"\",c4=4 1451629602000000000"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>smlProcess_telnet_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="string">"sys.if.bytes.out  1479496100 1.3E0 host=web01 interface=eth0"</literal></expr>,
                       <expr><literal type="string">"sys.if.bytes.out  1479496101 1.3E1 interface=eth0    host=web01   "</literal></expr>,
                       <expr><literal type="string">"sys.if.bytes.out  1479496102 1.3E3 network=tcp"</literal></expr>,
                       <expr><literal type="string">" sys.procs.running   1479496100 42 host=web01   "</literal></expr>}</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_TELNET_PROTOCOL</name></expr></argument>,
                                <argument><expr><name>TSDB_SML_TIMESTAMP_NANO_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>smlProcess_json1_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"[{\"metric\":\"sys.cpu.nice\",\"timestamp\":0,\"value\":18,\"tags\":{\"host\":\"web01\",\"id\":\"t1\",\"dc\":\"lga\"}},{\"metric\":\"sys.cpu.nice\",\"timestamp\":1662344042,\"value\":9,\"tags\":{\"host\":\"web02\",\"dc\":\"lga\"}}]"</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_JSON_PROTOCOL</name></expr></argument>,
                                <argument><expr><name>TSDB_SML_TIMESTAMP_NANO_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>smlProcess_json2_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"{\"metric\":\"meter_current0\",\"timestamp\":{\"value\":1662344042,\"type\":\"s\"},\"value\":{\"value\":10.3,\"type\":\"i64\"},\"tags\":{\"groupid\":{\"value\":2,\"type\":\"bigint\"},\"location\":{\"value\":\"åäº¬\",\"type\":\"binary\"},\"id\":\"d1001\"}}"</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_JSON_PROTOCOL</name></expr></argument>,
                                <argument><expr><name>TSDB_SML_TIMESTAMP_NANO_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>smlProcess_json3_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"{\"metric\":\"meter_current1\",\"timestamp\":{\"value\":1662344042,\"type\":\"s\"},\"value\":{\"value\":10.3,\"type\":\"i64\"},\"tags\":{\"t1\":{\"value\":2,\"type\":\"bigint\"},\"t2\":{\"value\":2,\"type\":\"int\"},\"t3\":{\"value\":2,\"type\":\"i16\"},\"t4\":{\"value\":2,\"type\":\"i8\"},\"t5\":{\"value\":2,\"type\":\"f32\"},\"t6\":{\"value\":2,\"type\":\"double\"},\"t7\":{\"value\":\"8323\",\"type\":\"binary\"},\"t8\":{\"value\":\"åäº¬\",\"type\":\"nchar\"},\"t9\":{\"value\":true,\"type\":\"bool\"},\"id\":\"d1001\"}}"</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_JSON_PROTOCOL</name></expr></argument>,
                                <argument><expr><name>TSDB_SML_TIMESTAMP_NANO_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>smlProcess_json4_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"{\"metric\":\"meter_current2\",\"timestamp\":{\"value\":1662344042000,\"type\":\"ms\"},\"value\":\"ni\",\"tags\":{\"t1\":{\"value\":20,\"type\":\"i64\"},\"t2\":{\"value\":25,\"type\":\"i32\"},\"t3\":{\"value\":2,\"type\":\"smallint\"},\"t4\":{\"value\":2,\"type\":\"tinyint\"},\"t5\":{\"value\":2,\"type\":\"float\"},\"t6\":{\"value\":0.2,\"type\":\"f64\"},\"t7\":\"nsj\",\"t8\":{\"value\":\"åäº¬\",\"type\":\"nchar\"},\"t9\":false,\"id\":\"d1001\"}}"</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_JSON_PROTOCOL</name></expr></argument>,
                                <argument><expr><name>TSDB_SML_TIMESTAMP_NANO_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_TD15662_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db precision 'ns' schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"hetrey c0=f,c1=127i8 1626006833639"</literal></expr>,
      <expr><literal type="string">"hetrey,t1=r c0=f,c1=127i8 1626006833640"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>,
                                <argument><expr><name>TSDB_SML_TIMESTAMP_MILLI_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_TD15742_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"test_ms,t0=t c0=f 1626006833641"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>,
                                <argument><expr><name>TSDB_SML_TIMESTAMP_MILLI_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_16384_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"qelhxo,id=pnnqhsa,t0=t,t1=127i8 c0=t,c1=127i8 1626006833639000000"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if<condition>(<expr><name>code</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>code</name></expr>;</return></block_content></block></if></if_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql1</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"qelhxo,id=pnnqhsa,t0=t,t1=127i8 c0=f,c1=127i8,c11=L\"ncharColValue\",c10=t 1626006833639000000"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql1</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_oom_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <comment type="line">//"test_ms,t0=t c0=f 1626006833641",</comment>
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"pgxbrbga\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"gviggpmi\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"cexkarjn\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"rzwwuoxu\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"xphrlkey\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"llsawebj\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"jwpkipff\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"euzzhcvu\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"jumhnsvw\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"fnetgdhj\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"vrmmpgqe\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"lnpfjapr\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"gvbhmsfr\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=t,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"kydxrxwc\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"pfyarryq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"uxptotap\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"prolhudh\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ttxaxnac\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"dfgvmjmz\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"bloextkn\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"dvjxwzsi\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"aigjomaf\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"refbidtf\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=t,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"vuanlfpz\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"nbpajxkx\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ktzzauxh\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"prcwdjct\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"vmbhvjtp\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"liuddtuz\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"pddsktow\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"algldlvl\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"mlmnjgdl\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"oiynpcog\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"wmynbagb\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"asvyulrm\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ohaacrkp\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"ytyejhiq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"bbznuerb\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"lpebcibw\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"xmqrbafv\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"lnmwpdne\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"jpcsjqun\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"mmxqmavz\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"hhsbgaow\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"uwogyuud\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=t,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ytxpaxnk\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"wouwdvtt\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"iitwikkh\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"lgyzuyaq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"bdtiigxi\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"qpnsvdhw\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"pjxihgvu\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"ksxkfetn\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ocukufqs\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"qzerxmpe\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"qwcfdyxs\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"jldrpmmd\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"lucxlfzc\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"rcewrvya\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"dknvaphs\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"nxtxgzdr\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"mbvuugwz\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"uikakffu\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"mwmtqsma\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"bfcxrrpa\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ksajygdj\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"vmhhszyv\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"urwjgvut\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"jrvytcxy\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"evqkzygh\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"zitdznhg\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"tpqekrxa\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"yrrbgjtk\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"bnphiuyq\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"huknehjn\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"iudbxfke\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"fjmolwbn\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"gukzgcjs\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"bjvdtlgq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"phxnesxh\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"qgpgckvc\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"yechqtfa\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"pbouxywy\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"kxtuojyo\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"txaniwlj\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"fixgufrj\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"okzvalwq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"iitawgbn\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"gayvmird\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=t,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"dprkfjph\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"kmuccshq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"vkslsdsd\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"dukccdqk\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"leztxmqf\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"kltixbwz\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"xqhkweef\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"idxsimvz\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"vbruvcpk\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"uxandqkd\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"dsiosysh\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"kxuyanpp\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"wkrktags\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"yvizzpiv\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ddnefben\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"novmfmbc\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"fnusxsfu\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"ouerfjap\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"sigognkf\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"slvzhede\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"bknerect\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"tmhcdfjb\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"hpnoanpp\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"okmhelnc\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"xcernjin\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"jdmiismg\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"tmnqozrf\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"zgwrftkx\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"zyamlwwh\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"nuedqcro\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"lpsvyqaa\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"mneitsul\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"vpleinwb\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"njxuaedy\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"sdgxpqmu\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"yjirrebp\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ikqndzfj\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"ghnfdxhr\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"hrwczpvo\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"nattumpb\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"zoyfzazn\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"rdwemofy\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"phkgsjeg\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"pyhvvjrt\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"zfslyton\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"bxwjzeri\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"uovzzgjv\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"cfjmacvr\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"jefqgzqx\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"njrksxmr\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"mhvabvgn\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"kfekjltr\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"lexfaaby\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"zbblsmwq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"oqcombkx\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"rcdmhzyw\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"otksuean\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"itbdvowq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"tswtmhex\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"xoukkzid\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"guangmpq\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"rayxzuky\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"lspwucrv\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"pdprzzkf\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"sddqrtza\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"kabndgkx\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"aglnqqxs\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"fiwpzmdr\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"hxctooen\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"pckjpwyh\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=false,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ivmvsbai\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"eljdclst\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"rwgdctie\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"zlnthxoz\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"ljtxelle\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"llfggdpy\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=t,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"tvnridze\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"hxjpgube\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"zmldmquq\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"bggqwcoj\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"drksfofm\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"jcsixens\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"cdwnwhaf\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"nngpumuq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"hylgooci\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"cozeyjys\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"lcgpfcsa\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"qdtzhtyd\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"txpubynb\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"gbslzbtu\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"buihcpcl\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"ayqezaiq\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"zgkgtilj\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"bcjopqif\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"mfzxiaqt\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"xmnlqxoj\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"reyiklyf\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"xssuomhk\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=False,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"liazkjll\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"nigjlblo\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=true,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"vmojyznk\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"dotkbvrz\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"kuwdyydw\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"slsfqydw\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=t,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"zyironhd\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"pktwfhzi\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=T,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"xybavsvh\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"pyrxemvx\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=True,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"tlfihwjs\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
      <expr><literal type="string">"ogirwqci,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,"</literal>
      <literal type="string">"t7=\"neumakmg\",t8=L\"ncharTagValue\" "</literal>
      <literal type="string">"c0=F,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7="</literal>
      <literal type="string">"\"wxqingoa\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_16368_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"[{\"metric\": \"st123456\", \"timestamp\": {\"value\": 1626006833639000, \"type\": \"us\"}, \"value\": 1, "</literal>
      <literal type="string">"\"tags\": {\"t1\": 3, \"t2\": {\"value\": 4, \"type\": \"double\"}, \"t3\": {\"value\": \"t3\", \"type\": "</literal>
      <literal type="string">"\"binary\"}}},"</literal>
      <literal type="string">"{\"metric\": \"st123456\", \"timestamp\": {\"value\": 1626006833739000, \"type\": \"us\"}, \"value\": 2, "</literal>
      <literal type="string">"\"tags\": {\"t1\": {\"value\": 4, \"type\": \"double\"}, \"t3\": {\"value\": \"t4\", \"type\": \"binary\"}, "</literal>
      <literal type="string">"\"t2\": {\"value\": 5, \"type\": \"double\"}, \"t4\": {\"value\": 5, \"type\": \"double\"}}},"</literal>
      <literal type="string">"{\"metric\": \"stb_name\", \"timestamp\": {\"value\": 1626006833639100, \"type\": \"us\"}, \"value\": 3, "</literal>
      <literal type="string">"\"tags\": {\"t2\": {\"value\": 5, \"type\": \"double\"}, \"t3\": {\"value\": \"ste\", \"type\": \"nchar\"}}},"</literal>
      <literal type="string">"{\"metric\": \"stf567890\", \"timestamp\": {\"value\": 1626006833639200, \"type\": \"us\"}, \"value\": 4, "</literal>
      <literal type="string">"\"tags\": {\"t1\": {\"value\": 4, \"type\": \"bigint\"}, \"t3\": {\"value\": \"t4\", \"type\": \"binary\"}, "</literal>
      <literal type="string">"\"t2\": {\"value\": 5, \"type\": \"double\"}, \"t4\": {\"value\": 5, \"type\": \"double\"}}},"</literal>
      <literal type="string">"{\"metric\": \"st123456\", \"timestamp\": {\"value\": 1626006833639300, \"type\": \"us\"}, \"value\": "</literal>
      <literal type="string">"{\"value\": 5, \"type\": \"double\"}, \"tags\": {\"t1\": {\"value\": 4, \"type\": \"double\"}, \"t2\": 5.0, "</literal>
      <literal type="string">"\"t3\": {\"value\": \"t4\", \"type\": \"binary\"}}},"</literal>
      <literal type="string">"{\"metric\": \"stb_name\", \"timestamp\": {\"value\": 1626006833639400, \"type\": \"us\"}, \"value\": "</literal>
      <literal type="string">"{\"value\": 6, \"type\": \"double\"}, \"tags\": {\"t2\": 5.0, \"t3\": {\"value\": \"ste2\", \"type\": "</literal>
      <literal type="string">"\"nchar\"}}},"</literal>
      <literal type="string">"{\"metric\": \"stb_name\", \"timestamp\": {\"value\": 1626006834639400, \"type\": \"us\"}, \"value\": "</literal>
      <literal type="string">"{\"value\": 7, \"type\": \"double\"}, \"tags\": {\"t2\": {\"value\": 5.0, \"type\": \"double\"}, \"t3\": "</literal>
      <literal type="string">"{\"value\": \"ste2\", \"type\": \"nchar\"}}},"</literal>
      <literal type="string">"{\"metric\": \"st123456\", \"timestamp\": {\"value\": 1626006833839006, \"type\": \"us\"}, \"value\": "</literal>
      <literal type="string">"{\"value\": 8, \"type\": \"double\"}, \"tags\": {\"t1\": {\"value\": 4, \"type\": \"double\"}, \"t3\": "</literal>
      <literal type="string">"{\"value\": \"t4\", \"type\": \"binary\"}, \"t2\": {\"value\": 5, \"type\": \"double\"}, \"t4\": {\"value\": 5, "</literal>
      <literal type="string">"\"type\": \"double\"}}},"</literal>
      <literal type="string">"{\"metric\": \"st123456\", \"timestamp\": {\"value\": 1626006833939007, \"type\": \"us\"}, \"value\": "</literal>
      <literal type="string">"{\"value\": 9, \"type\": \"double\"}, \"tags\": {\"t1\": 4, \"t3\": {\"value\": \"t4\", \"type\": \"binary\"}, "</literal>
      <literal type="string">"\"t2\": {\"value\": 5, \"type\": \"double\"}, \"t4\": {\"value\": 5, \"type\": \"double\"}}}]"</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>TSDB_SML_JSON_PROTOCOL</name></expr></argument>, <argument><expr><name>TSDB_SML_TIMESTAMP_MICRO_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_dup_time_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{<comment type="line">//"test_ms,t0=t c0=f 1626006833641",</comment>
                       <expr><literal type="string">"ubzlsr,id=qmtcvgd,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11."</literal>
                       <literal type="string">"12345f32,t6=22.123456789f64,t7=\"binaryTagValue\",t8=L\"ncharTagValue\" "</literal>
                       <literal type="string">"c0=false,c1=1i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22."</literal>
                       <literal type="string">"123456789f64,c7=\"xcxvwjvf\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>,
                       <expr><literal type="string">"ubzlsr,id=qmtcvgd,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11."</literal>
                       <literal type="string">"12345f32,t6=22.123456789f64,t7=\"binaryTagValue\",t8=L\"ncharTagValue\" "</literal>
                       <literal type="string">"c0=T,c1=2i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22."</literal>
                       <literal type="string">"123456789f64,c7=\"fixrzcuq\",c8=L\"ncharColValue\",c9=7u64 1626006834639000000"</literal></expr>,
                       <expr><literal type="string">"ubzlsr,id=qmtcvgd,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11."</literal>
                       <literal type="string">"12345f32,t6=22.123456789f64,t7=\"binaryTagValue\",t8=L\"ncharTagValue\" "</literal>
                       <literal type="string">"c0=t,c1=3i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22."</literal>
                       <literal type="string">"123456789f64,c7=\"iupzdqub\",c8=L\"ncharColValue\",c9=7u64 1626006835639000000"</literal></expr>,
                       <expr><literal type="string">"ubzlsr,id=qmtcvgd,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11."</literal>
                       <literal type="string">"12345f32,t6=22.123456789f64,t7=\"binaryTagValue\",t8=L\"ncharTagValue\" "</literal>
                       <literal type="string">"c0=t,c1=4i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22."</literal>
                       <literal type="string">"123456789f64,c7=\"yvvtzzof\",c8=L\"ncharColValue\",c9=7u64 1626006836639000000"</literal></expr>,
                       <expr><literal type="string">"ubzlsr,id=qmtcvgd,t0=t,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11."</literal>
                       <literal type="string">"12345f32,t6=22.123456789f64,t7=\"binaryTagValue\",t8=L\"ncharTagValue\" "</literal>
                       <literal type="string">"c0=t,c1=5i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22."</literal>
                       <literal type="string">"123456789f64,c7=\"vbxpilkj\",c8=L\"ncharColValue\",c9=7u64 1626006837639000000"</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_16960_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"["</literal>
      <literal type="string">"{"</literal>
      <literal type="string">"\"timestamp\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 1664418955000, \"type\": \"ms\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"value\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 830525384, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"tags\": {"</literal>
      <literal type="string">"\"id\": \"stb00_0\","</literal>
      <literal type="string">"\"t0\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 83972721, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t1\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 539147525, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t2\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 618258572, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t3\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -10536201, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t4\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 349227409, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t5\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 249347042, \"type\": \"int\" }"</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"\"metric\": \"stb0\""</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"{"</literal>
      <literal type="string">"\"timestamp\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 1664418955001, \"type\": \"ms\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"value\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -588348364, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"tags\": {"</literal>
      <literal type="string">"\"id\": \"stb00_0\","</literal>
      <literal type="string">"\"t0\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 83972721, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t1\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 539147525, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t2\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 618258572, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t3\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -10536201, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t4\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 349227409, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t5\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 249347042, \"type\": \"int\" }"</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"\"metric\": \"stb0\""</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"{"</literal>
      <literal type="string">"\"timestamp\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 1664418955002, \"type\": \"ms\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"value\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -370310823, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"tags\": {"</literal>
      <literal type="string">"\"id\": \"stb00_0\","</literal>
      <literal type="string">"\"t0\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 83972721, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t1\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 539147525, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t2\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 618258572, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t3\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -10536201, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t4\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 349227409, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t5\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 249347042, \"type\": \"int\" }"</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"\"metric\": \"stb0\""</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"{"</literal>
      <literal type="string">"\"timestamp\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 1664418955003, \"type\": \"ms\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"value\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -811250191, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"tags\": {"</literal>
      <literal type="string">"\"id\": \"stb00_0\","</literal>
      <literal type="string">"\"t0\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 83972721, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t1\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 539147525, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t2\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 618258572, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t3\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -10536201, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t4\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 349227409, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t5\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 249347042, \"type\": \"int\" }"</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"\"metric\": \"stb0\""</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"{"</literal>
      <literal type="string">"\"timestamp\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 1664418955004, \"type\": \"ms\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"value\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -330340558, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"tags\": {"</literal>
      <literal type="string">"\"id\": \"stb00_0\","</literal>
      <literal type="string">"\"t0\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 83972721, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t1\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 539147525, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t2\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 618258572, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t3\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": -10536201, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t4\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 349227409, \"type\": \"int\" }"</literal>
      <literal type="string">","</literal>
      <literal type="string">"\"t5\":"</literal>
      <literal type="string">""</literal>
      <literal type="string">"{ \"value\": 249347042, \"type\": \"int\" }"</literal>
      <literal type="string">"},"</literal>
      <literal type="string">"\"metric\": \"stb0\""</literal>
      <literal type="string">"}"</literal>
      <literal type="string">"]"</literal></expr>}</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_JSON_PROTOCOL</name></expr></argument>,
                                <argument><expr><name>TSDB_SML_TIMESTAMP_MILLI_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_add_tag_col_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
    <expr><literal type="string">"macylr,t0=f,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,t7=\"binaryTagValue\",t8=L\"ncharTagValue\" c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c7=\"binaryColValue\",c8=L\"ncharColValue\",c9=7u64 1626006833639000000"</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>code</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>code</name></expr>;</return></block_content></block></if></if_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql1</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"macylr,id=macylr_17875_1804,t1=127i8,t2=32767i16,t3=2147483647i32,t4=9223372036854775807i64,t5=11.12345f32,t6=22.123456789f64,t7=\"binaryTagValue\",t8=L\"ncharTagValue\",t11=127i8,t10=L\"ncharTagValue\" c0=f,c1=127i8,c2=32767i16,c3=2147483647i32,c4=9223372036854775807i64,c5=11.12345f32,c6=22.123456789f64,c8=L\"ncharColValue\",c9=7u64,c11=L\"ncharColValue\",c10=f 1626006833639000000"</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql1</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql1</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql1</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>smlProcess_18784_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"disk,device=sdc inodes_used=176059i,total=1081101176832i 1661943960000000000"</literal></expr>,
      <expr><literal type="string">"disk,device=sdc inodes_free=66932805i 1661943960000000000"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s, rows:%d\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>taos_affected_rows</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><call><name>taos_affected_rows</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"select * from disk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>fieldNum</name> <init>= <expr><call><name>taos_field_count</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>fieldNum</name> <operator>==</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"fieldNum:%d\n"</literal></expr></argument>, <argument><expr><name>fieldNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>TAOS_ROW</name></type> <name>row</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>rowIndex</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <while>while<condition>(<expr><operator>(</operator><name>row</name> <operator>=</operator> <call><name>taos_fetch_row</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>int64_t</name></type> <name>ts</name> <init>= <expr><operator>*</operator><operator>(</operator><name>int64_t</name><operator>*</operator><operator>)</operator><name><name>row</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int64_t</name></type> <name>used</name> <init>= <expr><operator>*</operator><operator>(</operator><name>int64_t</name><operator>*</operator><operator>)</operator><name><name>row</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int64_t</name></type> <name>total</name> <init>= <expr><operator>*</operator><operator>(</operator><name>int64_t</name><operator>*</operator><operator>)</operator><name><name>row</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int64_t</name></type> <name>freed</name> <init>= <expr><operator>*</operator><operator>(</operator><name>int64_t</name><operator>*</operator><operator>)</operator><name><name>row</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if<condition>(<expr><name>rowIndex</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content>
      <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>ts</name> <operator>==</operator> <literal type="number">1661943960000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>used</name> <operator>==</operator> <literal type="number">176059</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>total</name> <operator>==</operator> <literal type="number">1081101176832</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>freed</name> <operator>==</operator> <literal type="number">66932805</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line">//      ASSERT_EQ(latitude, 24.5208);</comment>
<comment type="line">//      ASSERT_EQ(longitude, 28.09377);</comment>
<comment type="line">//      ASSERT_EQ(elevation, 428);</comment>
<comment type="line">//      ASSERT_EQ(velocity, 0);</comment>
<comment type="line">//      ASSERT_EQ(heading, 304);</comment>
<comment type="line">//      ASSERT_EQ(grade, 0);</comment>
<comment type="line">//      ASSERT_EQ(fuel_consumption, 25);</comment>
    </block_content>}</block></if><else>else<block>{<block_content>
<comment type="line">//      ASSERT(0);</comment>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><name>rowIndex</name><operator>++</operator></expr>;</expr_stmt>
  </block_content>}</block></while>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_19221_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"qelhxo,id=pnnqhsa,t0=t,t1=127i8 c11=L\"ncharColValue\",c0=t,c1=127i8 1626006833639000000\nqelhxo,id=pnnhsa,t0=t,t1=127i8 c11=L\"ncharColValue\",c0=t,c1=127i8 1626006833639000000\n#comment\nqelhxo,id=pnqhsa,t0=t,t1=127i8 c11=L\"ncharColValue\",c0=t,c1=127i8 1626006833639000000"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>tmp</name> <init>= <expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><call><name>taosMemoryCalloc</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><operator>*</operator><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>(</operator><name>tmp</name><operator>+</operator><literal type="number">44</literal><operator>)</operator> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>totalRows</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert_raw</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><name>tmp</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>totalRows</name></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><name>TSDB_SML_TIMESTAMP_NANO_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>totalRows</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taosMemoryFree</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_ts2164_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"CREATE DATABASE IF NOT EXISTS line_test  BUFFER 384  MINROWS 1000  PAGES 256 PRECISION 'ns'"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"meters,location=la,groupid=ca current=11.8,voltage=221,phase=0.27"</literal></expr>,
      <expr><literal type="string">"meters,location=la,groupid=ca current=11.8,voltage=221,phase=0.27"</literal></expr>,
      <expr><literal type="string">"meters,location=la,groupid=cb current=11.8,voltage=221,phase=0.27"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use line_test"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><name>TSDB_SML_TIMESTAMP_MILLI_SECONDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sml_ttl_Test</name><parameter_list>()</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>TAOS</name> <modifier>*</modifier></type><name>taos</name> <init>= <expr><call><name>taos_connect</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">"taosdata"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>TAOS_RES</name> <modifier>*</modifier></type><name>pRes</name> <init>= <expr><call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"create database if not exists sml_db schemaless 1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>sql</name><index>[]</index></name> <init>= <expr><block>{
      <expr><literal type="string">"meters,location=California.LosAngeles,groupid=2 current=11.8,voltage=221,phase=\"2022-02-0210:22:22\" 1626006833739000000"</literal></expr>,
  }</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"use sml_db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_schemaless_insert_ttl</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>sql</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sql</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>sql</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>TSDB_SML_LINE_PROTOCOL</name></expr></argument>, <argument><expr><name>TSDB_SML_TIMESTAMP_NANO_SECONDS</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result1:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>pRes</name> <operator>=</operator> <call><name>taos_query</name><argument_list>(<argument><expr><name>taos</name></expr></argument>, <argument><expr><literal type="string">"select `ttl` from information_schema.ins_tables where table_name='t_be97833a0e1f523fcdaeb6291d6fdf27'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s result2:%s\n"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><call><name>taos_errstr</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>TAOS_ROW</name></type> <name>row</name> <init>= <expr><call><name>taos_fetch_row</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int32_t</name></type> <name>ttl</name> <init>= <expr><operator>*</operator><operator>(</operator><name>int32_t</name><operator>*</operator><operator>)</operator><name><name>row</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>ttl</name> <operator>==</operator> <literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>int</name></type> <name>code</name> <init>= <expr><call><name>taos_errno</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>taos_free_result</name><argument_list>(<argument><expr><name>pRes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>taos_close</name><argument_list>(<argument><expr><name>taos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>code</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_ttl_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_ts2164_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smlProcess_influx_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smlProcess_telnet_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smlProcess_json1_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smlProcess_json2_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smlProcess_json3_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smlProcess_json4_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_TD15662_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_TD15742_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_16384_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_oom_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_16368_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_dup_time_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_16960_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_add_tag_col_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smlProcess_18784_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sml_19221_Test</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>
</unit>
