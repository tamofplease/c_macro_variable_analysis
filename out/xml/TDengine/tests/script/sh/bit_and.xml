<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TDengine/tests/script/sh/bit_and.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"taosudf.h"</cpp:file></cpp:include>


<function><type><name>DLL_EXPORT</name> <name>int32_t</name></type> <name>bit_and_init</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>DLL_EXPORT</name> <name>int32_t</name></type> <name>bit_and_destroy</name><parameter_list>()</parameter_list> <block>{<block_content>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>DLL_EXPORT</name> <name>int32_t</name></type> <name>bit_and</name><parameter_list>(<parameter><decl><type><name>SUdfDataBlock</name><modifier>*</modifier></type> <name>block</name></decl></parameter>, <parameter><decl><type><name>SUdfColumn</name> <modifier>*</modifier></type><name>resultCol</name></decl></parameter>)</parameter_list> <block>{<block_content>

    <if_stmt><if>if <condition>(<expr><name><name>block</name><operator>-&gt;</operator><name>numOfCols</name></name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>TSDB_CODE_UDF_INVALID_INPUT</name></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>block</name><operator>-&gt;</operator><name>numOfCols</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
        <decl_stmt><decl><type><name>SUdfColumn</name><modifier>*</modifier></type> <name>col</name> <init>= <expr><name><name>block</name><operator>-&gt;</operator><name>udfCols</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>col</name><operator>-&gt;</operator><name>colMeta</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>TSDB_DATA_TYPE_INT</name><operator>)</operator></expr>)</condition> <block>{<block_content>
            <return>return <expr><name>TSDB_CODE_UDF_INVALID_INPUT</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>

    <decl_stmt><decl><type><name>SUdfColumnMeta</name> <modifier>*</modifier></type><name>meta</name> <init>= <expr><operator>&amp;</operator><name><name>resultCol</name><operator>-&gt;</operator><name>colMeta</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>meta</name><operator>-&gt;</operator><name>bytes</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>meta</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>TSDB_DATA_TYPE_INT</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>meta</name><operator>-&gt;</operator><name>scale</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>meta</name><operator>-&gt;</operator><name>precision</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


    <decl_stmt><decl><type><name>SUdfColumnData</name> <modifier>*</modifier></type><name>resultData</name> <init>= <expr><operator>&amp;</operator><name><name>resultCol</name><operator>-&gt;</operator><name>colData</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name><name>resultData</name><operator>-&gt;</operator><name>numOfRows</name></name> <operator>=</operator> <name><name>block</name><operator>-&gt;</operator><name>numOfRows</name></name></expr>;</expr_stmt>

    <for>for <control>(<init><decl><type><name>int32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>resultData</name><operator>-&gt;</operator><name>numOfRows</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name>udfColDataIsNull</name><argument_list>(<argument><expr><name><name>block</name><operator>-&gt;</operator><name>udfCols</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>udfColDataSetNull</name><argument_list>(<argument><expr><name>resultCol</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <continue>continue;</continue>
        </block_content>}</block></if></if_stmt>
        <decl_stmt><decl><type><name>int32_t</name></type> <name>result</name> <init>= <expr><operator>*</operator><operator>(</operator><name>int32_t</name><operator>*</operator><operator>)</operator><call><name>udfColDataGetData</name><argument_list>(<argument><expr><name><name>block</name><operator>-&gt;</operator><name>udfCols</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>block</name><operator>-&gt;</operator><name>numOfCols</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name>udfColDataIsNull</name><argument_list>(<argument><expr><name><name>block</name><operator>-&gt;</operator><name>udfCols</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name>udfColDataSetNull</name><argument_list>(<argument><expr><name>resultCol</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break>break;</break>
            </block_content>}</block></if></if_stmt>

            <decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>colData</name> <init>= <expr><call><name>udfColDataGetData</name><argument_list>(<argument><expr><name><name>block</name><operator>-&gt;</operator><name>udfCols</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>result</name> <operator>&amp;=</operator> <operator>*</operator><operator>(</operator><name>int32_t</name><operator>*</operator><operator>)</operator><name>colData</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <if_stmt><if>if <condition>(<expr><name>j</name> <operator>==</operator> <name><name>block</name><operator>-&gt;</operator><name>numOfCols</name></name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>udfColDataSet</name><argument_list>(<argument><expr><name>resultCol</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>result</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>
    <return>return <expr><name>TSDB_CODE_SUCCESS</name></expr>;</return>
</block_content>}</block></function>
</unit>
