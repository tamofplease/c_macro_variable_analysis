<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/unqlite/src/jx9_const.c"><comment type="block">/*
 * Symisc JX9: A Highly Efficient Embeddable Scripting Engine Based on JSON.
 * Copyright (C) 2012-2013, Symisc Systems http://jx9.symisc.net/
 * Version 1.7.2
 * For information on licensing, redistribution of this file, and for a DISCLAIMER OF ALL WARRANTIES
 * please contact Symisc Systems via:
 *       legal@symisc.net
 *       licensing@symisc.net
 *       contact@symisc.net
 * or visit:
 *      http://jx9.symisc.net/
 */</comment>
 <comment type="block">/* $SymiscID: const.c v1.7 Win7 2012-12-13 00:01 stable &lt;chm@symisc.net&gt; $ */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>JX9_AMALGAMATION</name></cpp:ifndef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jx9Int.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<comment type="block">/* This file implement built-in constants for the JX9 engine. */</comment>
<comment type="block">/*
 * JX9_VERSION
 * __JX9__
 *   Expand the current version of the JX9 engine.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_VER_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><call><name>jx9_lib_signature</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__WINNT__</name></cpp:ifdef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;Windows.h&gt;</cpp:file></cpp:include>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__UNIXES__</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/utsname.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<comment type="block">/*
 * JX9_OS
 * __OS__
 *  Expand the name of the host Operating System.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_OS_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__WINNT__</name></expr></argument>)</argument_list></call></expr></cpp:if>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"WinNT"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"WinNT"</literal></expr></argument>)</argument_list></sizeof><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__UNIXES__</name></expr></argument>)</argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name><name>struct</name> <name>utsname</name></name></type> <name>sInfo</name></decl>;</decl_stmt>
	<if_stmt><if>if<condition>( <expr><call><name>uname</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sInfo</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition><block>{<block_content>
		<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"Unix"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"Unix"</literal></expr></argument>)</argument_list></sizeof><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if><else>else<block>{<block_content>
		<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name><name>sInfo</name><operator>.</operator><name>sysname</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>,<argument><expr><literal type="string">"Host OS"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"Host OS"</literal></expr></argument>)</argument_list></sizeof><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_EOL
 *  Expand the correct 'End Of Line' symbol for this platform.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_EOL_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__WINNT__</name></cpp:ifdef>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"\r\n"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"\r\n"</literal></expr></argument>)</argument_list></sizeof><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"\n"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_INT_MAX
 * Expand the largest integer supported.
 * Note that JX9 deals with 64-bit integer for all platforms.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_INTMAX_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>jx9_value_int64</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>SXI64_HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_INT_SIZE
 * Expand the size in bytes of a 64-bit integer.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_INTSIZE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>jx9_value_int64</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sxi64</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DIRECTORY_SEPARATOR.
 * Expand the directory separator character.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DIRSEP_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__WINNT__</name></cpp:ifdef>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"\\"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>
<comment type="block">/*
 * PATH_SEPARATOR.
 * Expand the path separator character.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_PATHSEP_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__WINNT__</name></cpp:ifdef>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">";"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">":"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>__WINNT__</name></cpp:ifndef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;time.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<comment type="block">/*
 * __TIME__
 *  Expand the current time (GMT).
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_TIME_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>Sytm</name></type> <name>sTm</name></decl>;</decl_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__WINNT__</name></cpp:ifdef>
	<decl_stmt><decl><type><name>SYSTEMTIME</name></type> <name>sOS</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>GetSystemTime</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SYSTEMTIME_TO_SYTM</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sOS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sTm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><name><name>struct</name> <name>tm</name></name> <modifier>*</modifier></type><name>pTm</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>time_t</name></type> <name>t</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>time</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>pTm</name> <operator>=</operator> <call><name>gmtime</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>STRUCT_TM_TO_SYTM</name><argument_list>(<argument><expr><name>pTm</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sTm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<comment type="block">/* Expand */</comment>
	<expr_stmt><expr><call><name>jx9_value_string_format</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"%02d:%02d:%02d"</literal></expr></argument>, <argument><expr><name><name>sTm</name><operator>.</operator><name>tm_hour</name></name></expr></argument>, <argument><expr><name><name>sTm</name><operator>.</operator><name>tm_min</name></name></expr></argument>, <argument><expr><name><name>sTm</name><operator>.</operator><name>tm_sec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * __DATE__
 *  Expand the current date in the ISO-8601 format.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUnused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>Sytm</name></type> <name>sTm</name></decl>;</decl_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__WINNT__</name></cpp:ifdef>
	<decl_stmt><decl><type><name>SYSTEMTIME</name></type> <name>sOS</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>GetSystemTime</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SYSTEMTIME_TO_SYTM</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sOS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sTm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><name><name>struct</name> <name>tm</name></name> <modifier>*</modifier></type><name>pTm</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>time_t</name></type> <name>t</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>time</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>pTm</name> <operator>=</operator> <call><name>gmtime</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>STRUCT_TM_TO_SYTM</name><argument_list>(<argument><expr><name>pTm</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sTm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUnused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<comment type="block">/* Expand */</comment>
	<expr_stmt><expr><call><name>jx9_value_string_format</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"%04d-%02d-%02d"</literal></expr></argument>, <argument><expr><name><name>sTm</name><operator>.</operator><name>tm_year</name></name></expr></argument>, <argument><expr><name><name>sTm</name><operator>.</operator><name>tm_mon</name></name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>sTm</name><operator>.</operator><name>tm_mday</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * __FILE__
 *  Path of the processed script.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FILE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>jx9_vm</name> <modifier>*</modifier></type><name>pVm</name> <init>= <expr><operator>(</operator><name>jx9_vm</name> <operator>*</operator><operator>)</operator><name>pUserData</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>SyString</name> <modifier>*</modifier></type><name>pFile</name></decl>;</decl_stmt>
	<comment type="block">/* Peek the top entry */</comment>
	<expr_stmt><expr><name>pFile</name> <operator>=</operator> <operator>(</operator><name>SyString</name> <operator>*</operator><operator>)</operator><call><name>SySetPeek</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pVm</name><operator>-&gt;</operator><name>aFiles</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if<condition>( <expr><name>pFile</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block>{<block_content>
		<comment type="block">/* Expand the magic word: ":MEMORY:" */</comment>
		<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">":MEMORY:"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">":MEMORY:"</literal></expr></argument>)</argument_list></sizeof><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if><else>else<block>{<block_content>
		<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name><name>pFile</name><operator>-&gt;</operator><name>zString</name></name></expr></argument>, <argument><expr><name><name>pFile</name><operator>-&gt;</operator><name>nByte</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * __DIR__
 *  Directory holding the processed script.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DIR_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>jx9_vm</name> <modifier>*</modifier></type><name>pVm</name> <init>= <expr><operator>(</operator><name>jx9_vm</name> <operator>*</operator><operator>)</operator><name>pUserData</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>SyString</name> <modifier>*</modifier></type><name>pFile</name></decl>;</decl_stmt>
	<comment type="block">/* Peek the top entry */</comment>
	<expr_stmt><expr><name>pFile</name> <operator>=</operator> <operator>(</operator><name>SyString</name> <operator>*</operator><operator>)</operator><call><name>SySetPeek</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pVm</name><operator>-&gt;</operator><name>aFiles</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if<condition>( <expr><name>pFile</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block>{<block_content>
		<comment type="block">/* Expand the magic word: ":MEMORY:" */</comment>
		<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">":MEMORY:"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">":MEMORY:"</literal></expr></argument>)</argument_list></sizeof><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if><else>else<block>{<block_content>
		<if_stmt><if>if<condition>( <expr><name><name>pFile</name><operator>-&gt;</operator><name>nByte</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition><block>{<block_content>
			<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>zDir</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>int</name></type> <name>nLen</name></decl>;</decl_stmt>
			<expr_stmt><expr><name>zDir</name> <operator>=</operator> <call><name>jx9ExtractDirName</name><argument_list>(<argument><expr><name><name>pFile</name><operator>-&gt;</operator><name>zString</name></name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>pFile</name><operator>-&gt;</operator><name>nByte</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>nLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>zDir</name></expr></argument>, <argument><expr><name>nLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if><else>else<block>{<block_content>
			<comment type="block">/* Expand '.' as the current directory*/</comment>
			<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"."</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></else></if_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * E_ERROR
 *  Expands 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_E_ERROR_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * E_WARNING
 *  Expands 2
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_E_WARNING_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * E_PARSE
 *  Expands 4
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_E_PARSE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * E_NOTICE
 * Expands 8
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_E_NOTICE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * CASE_LOWER
 *  Expands 0.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_CASE_LOWER_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * CASE_UPPER
 *  Expands 1.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_CASE_UPPER_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * STR_PAD_LEFT
 *  Expands 0.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_STR_PAD_LEFT_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * STR_PAD_RIGHT
 *  Expands 1.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_STR_PAD_RIGHT_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * STR_PAD_BOTH
 *  Expands 2.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_STR_PAD_BOTH_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * COUNT_NORMAL
 *  Expands 0
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_COUNT_NORMAL_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * COUNT_RECURSIVE
 *  Expands 1.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_COUNT_RECURSIVE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SORT_ASC
 *  Expands 1.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SORT_ASC_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SORT_DESC
 *  Expands 2.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SORT_DESC_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SORT_REGULAR
 *  Expands 3.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SORT_REG_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SORT_NUMERIC
 *  Expands 4.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SORT_NUMERIC_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SORT_STRING
 *  Expands 5.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SORT_STRING_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_ROUND_HALF_UP
 *  Expands 1.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_ROUND_HALF_UP_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SJX9_ROUND_HALF_DOWN
 *  Expands 2.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_ROUND_HALF_DOWN_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_ROUND_HALF_EVEN
 *  Expands 3.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_ROUND_HALF_EVEN_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_ROUND_HALF_ODD
 *  Expands 4.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_ROUND_HALF_ODD_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>JX9_ENABLE_MATH_FUNC</name></cpp:ifdef>
<comment type="block">/*
 * PI
 *  Expand the value of pi.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_PI_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>JX9_PI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_E
 *  Expand 2.7182818284590452354
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_E_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2.7182818284590452354</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_LOG2E
 *  Expand 2.7182818284590452354
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_LOG2E_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1.4426950408889634074</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_LOG10E
 *  Expand 0.4342944819032518276
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_LOG10E_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0.4342944819032518276</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_LN2
 *  Expand 	0.69314718055994530942
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_LN2_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0.69314718055994530942</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_LN10
 *  Expand 	2.30258509299404568402
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_LN10_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2.30258509299404568402</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_PI_2
 *  Expand 	1.57079632679489661923
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_PI_2_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1.57079632679489661923</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_PI_4
 *  Expand 	0.78539816339744830962
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_PI_4_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0.78539816339744830962</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_1_PI
 *  Expand 	0.31830988618379067154
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_1_PI_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0.31830988618379067154</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_2_PI
 *  Expand 0.63661977236758134308
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_2_PI_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0.63661977236758134308</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_SQRTPI
 *  Expand 1.77245385090551602729
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_SQRTPI_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1.77245385090551602729</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_2_SQRTPI
 *  Expand 	1.12837916709551257390
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_2_SQRTPI_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1.12837916709551257390</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_SQRT2
 *  Expand 	1.41421356237309504880
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_SQRT2_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1.41421356237309504880</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_SQRT3
 *  Expand 	1.73205080756887729352
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_SQRT3_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1.73205080756887729352</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_SQRT1_2
 *  Expand 	0.70710678118654752440
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_SQRT1_2_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0.70710678118654752440</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_LNPI
 *  Expand 	1.14472988584940017414
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_LNPI_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1.14472988584940017414</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * M_EULER
 *  Expand  0.57721566490153286061
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_M_EULER_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_double</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0.57721566490153286061</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* JX9_DISABLE_BUILTIN_MATH */</comment>
<comment type="block">/*
 * DATE_ATOM
 *  Expand Atom (example: 2005-08-15T15:52:01+00:00) 
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_ATOM_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"Y-m-d\\TH:i:sP"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_COOKIE
 *  HTTP Cookies (example: Monday, 15-Aug-05 15:52:01 UTC)  
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_COOKIE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"l, d-M-y H:i:s T"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_ISO8601
 *  ISO-8601 (example: 2005-08-15T15:52:01+0000) 
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_ISO8601_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"Y-m-d\\TH:i:sO"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_RFC822
 *  RFC 822 (example: Mon, 15 Aug 05 15:52:01 +0000) 
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_RFC822_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"D, d M y H:i:s O"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_RFC850
 *  RFC 850 (example: Monday, 15-Aug-05 15:52:01 UTC) 
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_RFC850_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"l, d-M-y H:i:s T"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_RFC1036
 *  RFC 1123 (example: Mon, 15 Aug 2005 15:52:01 +0000) 
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_RFC1036_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"D, d M y H:i:s O"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_RFC1123
 *  RFC 1123 (example: Mon, 15 Aug 2005 15:52:01 +0000)  
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_RFC1123_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"D, d M Y H:i:s O"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_RFC2822
 *  RFC 2822 (Mon, 15 Aug 2005 15:52:01 +0000)  
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_RFC2822_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"D, d M Y H:i:s O"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_RSS
 *  RSS (Mon, 15 Aug 2005 15:52:01 +0000) 
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_RSS_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"D, d M Y H:i:s O"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * DATE_W3C
 *  World Wide Web Consortium (example: 2005-08-15T15:52:01+00:00) 
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_DATE_W3C_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_string</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="string">"Y-m-d\\TH:i:sP"</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument><comment type="block">/*Compute length automatically*/</comment>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_COMPAT
 *  Expand 0x01 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_COMPAT_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_QUOTES
 *  Expand 0x02 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_QUOTES_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_NOQUOTES
 *  Expand 0x04 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_NOQUOTES_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_IGNORE
 *  Expand 0x08 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_IGNORE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x08</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_SUBSTITUTE
 *  Expand 0x10 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_SUBSTITUTE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_DISALLOWED
 *  Expand 0x20 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_DISALLOWED_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_HTML401
 *  Expand 0x40 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_HTML401_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_XML1
 *  Expand 0x80 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_XML1_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_XHTML
 *  Expand 0x100 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_XHTML_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ENT_HTML5
 *  Expand 0x200 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ENT_HTML5_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ISO-8859-1
 * ISO_8859_1
 *   Expand 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ISO88591_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * UTF-8
 * UTF8
 *  Expand 2
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_UTF8_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * HTML_ENTITIES
 *  Expand 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_HTML_ENTITIES_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * HTML_SPECIALCHARS
 *  Expand 2
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_HTML_SPECIALCHARS_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_URL_SCHEME.
 * Expand 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_URL_SCHEME_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_URL_HOST.
 * Expand 2
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_URL_HOST_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_URL_PORT.
 * Expand 3
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_URL_PORT_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_URL_USER.
 * Expand 4
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_URL_USER_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_URL_PASS.
 * Expand 5
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_URL_PASS_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_URL_PATH.
 * Expand 6
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_URL_PATH_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_URL_QUERY.
 * Expand 7
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_URL_QUERY_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_URL_FRAGMENT.
 * Expand 8
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_URL_FRAGMENT_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_QUERY_RFC1738
 * Expand 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_QUERY_RFC1738_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * JX9_QUERY_RFC3986
 * Expand 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_JX9_QUERY_RFC3986_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * FNM_NOESCAPE
 *  Expand 0x01 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FNM_NOESCAPE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * FNM_PATHNAME
 *  Expand 0x02 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FNM_PATHNAME_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * FNM_PERIOD
 *  Expand 0x04 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FNM_PERIOD_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * FNM_CASEFOLD
 *  Expand 0x08 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FNM_CASEFOLD_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x08</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * PATHINFO_DIRNAME
 *  Expand 1.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_PATHINFO_DIRNAME_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * PATHINFO_BASENAME
 *  Expand 2.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_PATHINFO_BASENAME_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * PATHINFO_EXTENSION
 *  Expand 3.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_PATHINFO_EXTENSION_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * PATHINFO_FILENAME
 *  Expand 4.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_PATHINFO_FILENAME_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ASSERT_ACTIVE.
 *  Expand the value of JX9_ASSERT_ACTIVE defined in jx9Int.h
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ASSERT_ACTIVE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>JX9_ASSERT_DISABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ASSERT_WARNING.
 *  Expand the value of JX9_ASSERT_WARNING defined in jx9Int.h
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ASSERT_WARNING_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>JX9_ASSERT_WARNING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ASSERT_BAIL.
 *  Expand the value of JX9_ASSERT_BAIL defined in jx9Int.h
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ASSERT_BAIL_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>JX9_ASSERT_BAIL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ASSERT_QUIET_EVAL.
 *  Expand the value of JX9_ASSERT_QUIET_EVAL defined in jx9Int.h
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ASSERT_QUIET_EVAL_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>JX9_ASSERT_QUIET_EVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * ASSERT_CALLBACK.
 *  Expand the value of JX9_ASSERT_CALLBACK defined in jx9Int.h
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_ASSERT_CALLBACK_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>JX9_ASSERT_CALLBACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SEEK_SET.
 *  Expand 0
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SEEK_SET_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SEEK_CUR.
 *  Expand 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SEEK_CUR_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SEEK_END.
 *  Expand 2
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SEEK_END_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * LOCK_SH.
 *  Expand 2
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_LOCK_SH_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * LOCK_NB.
 *  Expand 5
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_LOCK_NB_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * LOCK_EX.
 *  Expand 0x01 (MUST BE A POWER OF TWO)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_LOCK_EX_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * LOCK_UN.
 *  Expand 0
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_LOCK_UN_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * FILE_USE_INC_PATH
 *  Expand 0x01 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FILE_USE_INCLUDE_PATH_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * FILE_IGN_NL
 *  Expand 0x02 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FILE_IGNORE_NEW_LINES_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * FILE_SKIP_EL
 *  Expand 0x04 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FILE_SKIP_EMPTY_LINES_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * FILE_APPEND
 *  Expand 0x08 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_FILE_APPEND_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x08</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SCANDIR_SORT_ASCENDING
 *  Expand 0
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SCANDIR_SORT_ASCENDING_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SCANDIR_SORT_DESCENDING
 *  Expand 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SCANDIR_SORT_DESCENDING_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * SCANDIR_SORT_NONE
 *  Expand 2
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_SCANDIR_SORT_NONE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * GLOB_MARK
 *  Expand 0x01 (must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_GLOB_MARK_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * GLOB_NOSORT
 *  Expand 0x02 (must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_GLOB_NOSORT_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * GLOB_NOCHECK
 *  Expand 0x04 (must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_GLOB_NOCHECK_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * GLOB_NOESCAPE
 *  Expand 0x08 (must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_GLOB_NOESCAPE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x08</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * GLOB_BRACE
 *  Expand 0x10 (must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_GLOB_BRACE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * GLOB_ONLYDIR
 *  Expand 0x20 (must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_GLOB_ONLYDIR_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * GLOB_ERR
 *  Expand 0x40 (must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_GLOB_ERR_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * STDIN
 *  Expand the STDIN handle as a resource.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_STDIN_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>jx9_vm</name> <modifier>*</modifier></type><name>pVm</name> <init>= <expr><operator>(</operator><name>jx9_vm</name> <operator>*</operator><operator>)</operator><name>pUserData</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>pResource</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>pResource</name> <operator>=</operator> <call><name>jx9ExportStdin</name><argument_list>(<argument><expr><name>pVm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>jx9_value_resource</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>pResource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * STDOUT
 *   Expand the STDOUT handle as a resource.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_STDOUT_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>jx9_vm</name> <modifier>*</modifier></type><name>pVm</name> <init>= <expr><operator>(</operator><name>jx9_vm</name> <operator>*</operator><operator>)</operator><name>pUserData</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>pResource</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>pResource</name> <operator>=</operator> <call><name>jx9ExportStdout</name><argument_list>(<argument><expr><name>pVm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>jx9_value_resource</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>pResource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * STDERR
 *  Expand the STDERR handle as a resource.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_STDERR_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>jx9_vm</name> <modifier>*</modifier></type><name>pVm</name> <init>= <expr><operator>(</operator><name>jx9_vm</name> <operator>*</operator><operator>)</operator><name>pUserData</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>pResource</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>pResource</name> <operator>=</operator> <call><name>jx9ExportStderr</name><argument_list>(<argument><expr><name>pVm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>jx9_value_resource</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><name>pResource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * INI_SCANNER_NORMAL
 *   Expand 1
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_INI_SCANNER_NORMAL_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * INI_SCANNER_RAW
 *   Expand 2
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_INI_SCANNER_RAW_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * EXTR_OVERWRITE
 *   Expand 0x01 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_EXTR_OVERWRITE_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * EXTR_SKIP
 *   Expand 0x02 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_EXTR_SKIP_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * EXTR_PREFIX_SAME
 *   Expand 0x04 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_EXTR_PREFIX_SAME_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * EXTR_PREFIX_ALL
 *   Expand 0x08 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_EXTR_PREFIX_ALL_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * EXTR_PREFIX_INVALID
 *   Expand 0x10 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_EXTR_PREFIX_INVALID_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * EXTR_IF_EXISTS
 *   Expand 0x20 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_EXTR_IF_EXISTS_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * EXTR_PREFIX_IF_EXISTS
 *   Expand 0x40 (Must be a power of two)
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>JX9_EXTR_PREFIX_IF_EXISTS_Const</name><parameter_list>(<parameter><decl><type><name>jx9_value</name> <modifier>*</modifier></type><name>pVal</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pUserData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>SXUNUSED</name><argument_list>(<argument><expr><name>pUserData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* cc warning */</comment>
	<expr_stmt><expr><call><name>jx9_value_int</name><argument_list>(<argument><expr><name>pVal</name></expr></argument>, <argument><expr><literal type="number">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*
 * Table of built-in constants.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>jx9_builtin_constant</name></type> <name><name>aBuiltIn</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{<expr><literal type="string">"JX9_VERSION"</literal></expr>,          <expr><name>JX9_VER_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_ENGINE"</literal></expr>,           <expr><name>JX9_VER_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"__JX9__"</literal></expr>,              <expr><name>JX9_VER_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_OS"</literal></expr>,               <expr><name>JX9_OS_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"__OS__"</literal></expr>,               <expr><name>JX9_OS_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_EOL"</literal></expr>,              <expr><name>JX9_EOL_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_INT_MAX"</literal></expr>,          <expr><name>JX9_INTMAX_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"MAXINT"</literal></expr>,               <expr><name>JX9_INTMAX_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_INT_SIZE"</literal></expr>,         <expr><name>JX9_INTSIZE_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"PATH_SEPARATOR"</literal></expr>,       <expr><name>JX9_PATHSEP_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DIRECTORY_SEPARATOR"</literal></expr>,  <expr><name>JX9_DIRSEP_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DIR_SEP"</literal></expr>,              <expr><name>JX9_DIRSEP_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"__TIME__"</literal></expr>,             <expr><name>JX9_TIME_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"__DATE__"</literal></expr>,             <expr><name>JX9_DATE_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"__FILE__"</literal></expr>,             <expr><name>JX9_FILE_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"__DIR__"</literal></expr>,              <expr><name>JX9_DIR_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"E_ERROR"</literal></expr>,              <expr><name>JX9_E_ERROR_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"E_WARNING"</literal></expr>,            <expr><name>JX9_E_WARNING_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"E_PARSE"</literal></expr>,              <expr><name>JX9_E_PARSE_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"E_NOTICE"</literal></expr>,             <expr><name>JX9_E_NOTICE_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"CASE_LOWER"</literal></expr>,           <expr><name>JX9_CASE_LOWER_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"CASE_UPPER"</literal></expr>,           <expr><name>JX9_CASE_UPPER_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"STR_PAD_LEFT"</literal></expr>,         <expr><name>JX9_STR_PAD_LEFT_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"STR_PAD_RIGHT"</literal></expr>,        <expr><name>JX9_STR_PAD_RIGHT_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"STR_PAD_BOTH"</literal></expr>,         <expr><name>JX9_STR_PAD_BOTH_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"COUNT_NORMAL"</literal></expr>,         <expr><name>JX9_COUNT_NORMAL_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"COUNT_RECURSIVE"</literal></expr>,      <expr><name>JX9_COUNT_RECURSIVE_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SORT_ASC"</literal></expr>,             <expr><name>JX9_SORT_ASC_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SORT_DESC"</literal></expr>,            <expr><name>JX9_SORT_DESC_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SORT_REGULAR"</literal></expr>,         <expr><name>JX9_SORT_REG_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SORT_NUMERIC"</literal></expr>,         <expr><name>JX9_SORT_NUMERIC_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SORT_STRING"</literal></expr>,          <expr><name>JX9_SORT_STRING_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_ROUND_HALF_DOWN"</literal></expr>,  <expr><name>JX9_JX9_ROUND_HALF_DOWN_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_ROUND_HALF_EVEN"</literal></expr>,  <expr><name>JX9_JX9_ROUND_HALF_EVEN_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_ROUND_HALF_UP"</literal></expr>,    <expr><name>JX9_JX9_ROUND_HALF_UP_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_ROUND_HALF_ODD"</literal></expr>,   <expr><name>JX9_JX9_ROUND_HALF_ODD_Const</name></expr>  }</block></expr>, 
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>JX9_ENABLE_MATH_FUNC</name></cpp:ifdef> 
	<expr><block>{<expr><literal type="string">"PI"</literal></expr>,                 <expr><name>JX9_M_PI_Const</name></expr>         }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_E"</literal></expr>,                  <expr><name>JX9_M_E_Const</name></expr>          }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_LOG2E"</literal></expr>,              <expr><name>JX9_M_LOG2E_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_LOG10E"</literal></expr>,             <expr><name>JX9_M_LOG10E_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_LN2"</literal></expr>,                <expr><name>JX9_M_LN2_Const</name></expr>        }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_LN10"</literal></expr>,               <expr><name>JX9_M_LN10_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_PI_2"</literal></expr>,               <expr><name>JX9_M_PI_2_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_PI_4"</literal></expr>,               <expr><name>JX9_M_PI_4_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_1_PI"</literal></expr>,               <expr><name>JX9_M_1_PI_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_2_PI"</literal></expr>,               <expr><name>JX9_M_2_PI_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_SQRTPI"</literal></expr>,             <expr><name>JX9_M_SQRTPI_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_2_SQRTPI"</literal></expr>,           <expr><name>JX9_M_2_SQRTPI_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_SQRT2"</literal></expr>,              <expr><name>JX9_M_SQRT2_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_SQRT3"</literal></expr>,              <expr><name>JX9_M_SQRT3_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_SQRT1_2"</literal></expr>,            <expr><name>JX9_M_SQRT1_2_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_LNPI"</literal></expr>,               <expr><name>JX9_M_LNPI_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"M_EULER"</literal></expr>,              <expr><name>JX9_M_EULER_Const</name></expr>      }</block></expr>, 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* JX9_ENABLE_MATH_FUNC */</comment>
	<expr><block>{<expr><literal type="string">"DATE_ATOM"</literal></expr>,            <expr><name>JX9_DATE_ATOM_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_COOKIE"</literal></expr>,          <expr><name>JX9_DATE_COOKIE_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_ISO8601"</literal></expr>,         <expr><name>JX9_DATE_ISO8601_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_RFC822"</literal></expr>,          <expr><name>JX9_DATE_RFC822_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_RFC850"</literal></expr>,          <expr><name>JX9_DATE_RFC850_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_RFC1036"</literal></expr>,         <expr><name>JX9_DATE_RFC1036_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_RFC1123"</literal></expr>,         <expr><name>JX9_DATE_RFC1123_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_RFC2822"</literal></expr>,         <expr><name>JX9_DATE_RFC2822_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_RFC3339"</literal></expr>,         <expr><name>JX9_DATE_ATOM_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_RSS"</literal></expr>,             <expr><name>JX9_DATE_RSS_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"DATE_W3C"</literal></expr>,             <expr><name>JX9_DATE_W3C_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_COMPAT"</literal></expr>,           <expr><name>JX9_ENT_COMPAT_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_QUOTES"</literal></expr>,           <expr><name>JX9_ENT_QUOTES_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_NOQUOTES"</literal></expr>,         <expr><name>JX9_ENT_NOQUOTES_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_IGNORE"</literal></expr>,           <expr><name>JX9_ENT_IGNORE_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_SUBSTITUTE"</literal></expr>,       <expr><name>JX9_ENT_SUBSTITUTE_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_DISALLOWED"</literal></expr>,       <expr><name>JX9_ENT_DISALLOWED_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_HTML401"</literal></expr>,          <expr><name>JX9_ENT_HTML401_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_XML1"</literal></expr>,             <expr><name>JX9_ENT_XML1_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_XHTML"</literal></expr>,            <expr><name>JX9_ENT_XHTML_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ENT_HTML5"</literal></expr>,            <expr><name>JX9_ENT_HTML5_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ISO-8859-1"</literal></expr>,           <expr><name>JX9_ISO88591_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ISO_8859_1"</literal></expr>,           <expr><name>JX9_ISO88591_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"UTF-8"</literal></expr>,                <expr><name>JX9_UTF8_Const</name></expr>         }</block></expr>, 
	<expr><block>{<expr><literal type="string">"UTF8"</literal></expr>,                 <expr><name>JX9_UTF8_Const</name></expr>         }</block></expr>, 
	<expr><block>{<expr><literal type="string">"HTML_ENTITIES"</literal></expr>,        <expr><name>JX9_HTML_ENTITIES_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"HTML_SPECIALCHARS"</literal></expr>,    <expr><name>JX9_HTML_SPECIALCHARS_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_URL_SCHEME"</literal></expr>,       <expr><name>JX9_JX9_URL_SCHEME_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_URL_HOST"</literal></expr>,         <expr><name>JX9_JX9_URL_HOST_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_URL_PORT"</literal></expr>,         <expr><name>JX9_JX9_URL_PORT_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_URL_USER"</literal></expr>,         <expr><name>JX9_JX9_URL_USER_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_URL_PASS"</literal></expr>,         <expr><name>JX9_JX9_URL_PASS_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_URL_PATH"</literal></expr>,         <expr><name>JX9_JX9_URL_PATH_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_URL_QUERY"</literal></expr>,        <expr><name>JX9_JX9_URL_QUERY_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_URL_FRAGMENT"</literal></expr>,     <expr><name>JX9_JX9_URL_FRAGMENT_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_QUERY_RFC1738"</literal></expr>,    <expr><name>JX9_JX9_QUERY_RFC1738_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"JX9_QUERY_RFC3986"</literal></expr>,    <expr><name>JX9_JX9_QUERY_RFC3986_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"FNM_NOESCAPE"</literal></expr>,         <expr><name>JX9_FNM_NOESCAPE_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"FNM_PATHNAME"</literal></expr>,         <expr><name>JX9_FNM_PATHNAME_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"FNM_PERIOD"</literal></expr>,           <expr><name>JX9_FNM_PERIOD_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"FNM_CASEFOLD"</literal></expr>,         <expr><name>JX9_FNM_CASEFOLD_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"PATHINFO_DIRNAME"</literal></expr>,     <expr><name>JX9_PATHINFO_DIRNAME_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"PATHINFO_BASENAME"</literal></expr>,    <expr><name>JX9_PATHINFO_BASENAME_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"PATHINFO_EXTENSION"</literal></expr>,   <expr><name>JX9_PATHINFO_EXTENSION_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"PATHINFO_FILENAME"</literal></expr>,    <expr><name>JX9_PATHINFO_FILENAME_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ASSERT_ACTIVE"</literal></expr>,        <expr><name>JX9_ASSERT_ACTIVE_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ASSERT_WARNING"</literal></expr>,       <expr><name>JX9_ASSERT_WARNING_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ASSERT_BAIL"</literal></expr>,          <expr><name>JX9_ASSERT_BAIL_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ASSERT_QUIET_EVAL"</literal></expr>,    <expr><name>JX9_ASSERT_QUIET_EVAL_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"ASSERT_CALLBACK"</literal></expr>,      <expr><name>JX9_ASSERT_CALLBACK_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SEEK_SET"</literal></expr>,             <expr><name>JX9_SEEK_SET_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SEEK_CUR"</literal></expr>,             <expr><name>JX9_SEEK_CUR_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SEEK_END"</literal></expr>,             <expr><name>JX9_SEEK_END_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"LOCK_EX"</literal></expr>,              <expr><name>JX9_LOCK_EX_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"LOCK_SH"</literal></expr>,              <expr><name>JX9_LOCK_SH_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"LOCK_NB"</literal></expr>,              <expr><name>JX9_LOCK_NB_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"LOCK_UN"</literal></expr>,              <expr><name>JX9_LOCK_UN_Const</name></expr>      }</block></expr>, 
	<expr><block>{<expr><literal type="string">"FILE_USE_INC_PATH"</literal></expr>,    <expr><name>JX9_FILE_USE_INCLUDE_PATH_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"FILE_IGN_NL"</literal></expr>,          <expr><name>JX9_FILE_IGNORE_NEW_LINES_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"FILE_SKIP_EL"</literal></expr>,         <expr><name>JX9_FILE_SKIP_EMPTY_LINES_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"FILE_APPEND"</literal></expr>,          <expr><name>JX9_FILE_APPEND_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SCANDIR_SORT_ASC"</literal></expr>,     <expr><name>JX9_SCANDIR_SORT_ASCENDING_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SCANDIR_SORT_DESC"</literal></expr>,    <expr><name>JX9_SCANDIR_SORT_DESCENDING_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"SCANDIR_SORT_NONE"</literal></expr>,    <expr><name>JX9_SCANDIR_SORT_NONE_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"GLOB_MARK"</literal></expr>,            <expr><name>JX9_GLOB_MARK_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"GLOB_NOSORT"</literal></expr>,          <expr><name>JX9_GLOB_NOSORT_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"GLOB_NOCHECK"</literal></expr>,         <expr><name>JX9_GLOB_NOCHECK_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"GLOB_NOESCAPE"</literal></expr>,        <expr><name>JX9_GLOB_NOESCAPE_Const</name></expr>}</block></expr>, 
	<expr><block>{<expr><literal type="string">"GLOB_BRACE"</literal></expr>,           <expr><name>JX9_GLOB_BRACE_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"GLOB_ONLYDIR"</literal></expr>,         <expr><name>JX9_GLOB_ONLYDIR_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"GLOB_ERR"</literal></expr>,             <expr><name>JX9_GLOB_ERR_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"STDIN"</literal></expr>,                <expr><name>JX9_STDIN_Const</name></expr>        }</block></expr>, 
	<expr><block>{<expr><literal type="string">"stdin"</literal></expr>,                <expr><name>JX9_STDIN_Const</name></expr>        }</block></expr>, 
	<expr><block>{<expr><literal type="string">"STDOUT"</literal></expr>,               <expr><name>JX9_STDOUT_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"stdout"</literal></expr>,               <expr><name>JX9_STDOUT_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"STDERR"</literal></expr>,               <expr><name>JX9_STDERR_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"stderr"</literal></expr>,               <expr><name>JX9_STDERR_Const</name></expr>       }</block></expr>, 
	<expr><block>{<expr><literal type="string">"INI_SCANNER_NORMAL"</literal></expr>,   <expr><name>JX9_INI_SCANNER_NORMAL_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"INI_SCANNER_RAW"</literal></expr>,      <expr><name>JX9_INI_SCANNER_RAW_Const</name></expr>    }</block></expr>, 
	<expr><block>{<expr><literal type="string">"EXTR_OVERWRITE"</literal></expr>,       <expr><name>JX9_EXTR_OVERWRITE_Const</name></expr>     }</block></expr>, 
	<expr><block>{<expr><literal type="string">"EXTR_SKIP"</literal></expr>,            <expr><name>JX9_EXTR_SKIP_Const</name></expr>        }</block></expr>, 
	<expr><block>{<expr><literal type="string">"EXTR_PREFIX_SAME"</literal></expr>,     <expr><name>JX9_EXTR_PREFIX_SAME_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"EXTR_PREFIX_ALL"</literal></expr>,      <expr><name>JX9_EXTR_PREFIX_ALL_Const</name></expr>  }</block></expr>, 
	<expr><block>{<expr><literal type="string">"EXTR_PREFIX_INVALID"</literal></expr>,  <expr><name>JX9_EXTR_PREFIX_INVALID_Const</name></expr> }</block></expr>, 
	<expr><block>{<expr><literal type="string">"EXTR_IF_EXISTS"</literal></expr>,       <expr><name>JX9_EXTR_IF_EXISTS_Const</name></expr>   }</block></expr>, 
	<expr><block>{<expr><literal type="string">"EXTR_PREFIX_IF_EXISTS"</literal></expr>, <expr><name>JX9_EXTR_PREFIX_IF_EXISTS_Const</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<comment type="block">/*
 * Register the built-in constants defined above.
 */</comment>
<function><type><name>JX9_PRIVATE</name> <name>void</name></type> <name>jx9RegisterBuiltInConstant</name><parameter_list>(<parameter><decl><type><name>jx9_vm</name> <modifier>*</modifier></type><name>pVm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>sxu32</name></type> <name>n</name></decl>;</decl_stmt>
	<comment type="block">/* 
	 * Note that all built-in constants have access to the jx9 virtual machine
	 * that trigger the constant invocation as their private data.
	 */</comment>
	<for>for<control>( <init><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</init> <condition><expr><name>n</name> <operator>&lt;</operator> <call><name>SX_ARRAYSIZE</name><argument_list>(<argument><expr><name>aBuiltIn</name></expr></argument>)</argument_list></call></expr> ;</condition> <incr><expr><operator>++</operator><name>n</name></expr></incr> )</control><block>{<block_content>
		<expr_stmt><expr><call><name>jx9_create_constant</name><argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><operator>*</operator><name>pVm</name><operator>)</operator></expr></argument>, <argument><expr><name><name>aBuiltIn</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>zName</name></expr></argument>, <argument><expr><name><name>aBuiltIn</name><index>[<expr><name>n</name></expr>]</index></name><operator>.</operator><name>xExpand</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><operator>*</operator><name>pVm</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>
</unit>
