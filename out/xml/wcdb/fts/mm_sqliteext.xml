<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/wcdb/fts/mm_sqliteext.c"><comment type="block">/*
 * Tencent is pleased to support the open source community by making
 * WCDB available.
 *
 * Copyright (C) 2017 THL A29 Limited, a Tencent company.
 * All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 *       https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sqlite3ext.h&gt;</cpp:file></cpp:include>
<decl_stmt><decl><type><name>SQLITE_EXTENSION_INIT1</name>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mm_fts.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;icucompat.h&gt;</cpp:file></cpp:include>

<specifier>const</specifier> <specifier>static</specifier> <name>uint8_t</name></type> <name><name>g_default_key</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0x94</literal></expr>,
                                          <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0xb6</literal></expr>,
                                          <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0x9c</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>_WIN32</name></cpp:ifdef>
<macro><name>__declspec</name><argument_list>(<argument>dllexport</argument>)</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><type><name>int</name></type> <name>sqlite3_mmftsext_init</name><parameter_list>(<parameter><decl><type><name>sqlite3</name> <modifier>*</modifier></type><name>db</name></decl></parameter>,
							<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>pzErrMsg</name></decl></parameter>,
							<parameter><decl><type><specifier>const</specifier> <name>sqlite3_api_routines</name> <modifier>*</modifier></type><name>pApi</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>rc</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>errmsg</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>SQLITE_EXTENSION_INIT2</name><argument_list>(<argument><expr><name>pApi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Load and initialize ICU library.</comment>
    <if_stmt><if>if <condition>(<expr><call><name>init_icucompat</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><operator>*</operator><name>pzErrMsg</name> <operator>=</operator> <call><name>sqlite3_mprintf</name><argument_list>(<argument><expr><literal type="string">"failed to load ICU library."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>SQLITE_ERROR</name></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// Register tokenizer.</comment>
    <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>sqlite3_register_mm_tokenizer</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>!=</operator> <name>SQLITE_OK</name></expr>)</condition><block type="pseudo"><block_content>
        <goto>goto <name>bail</name>;</goto></block_content></block></if></if_stmt>

    <comment type="line">// Register text cipher.</comment>
    <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>sqlite3_register_mm_cipher</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>g_default_key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>!=</operator> <name>SQLITE_OK</name></expr>)</condition><block type="pseudo"><block_content>
        <goto>goto <name>bail</name>;</goto></block_content></block></if></if_stmt>

    <comment type="line">// Register utility functions.</comment>
    <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>sqlite3_register_mm_utils</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>!=</operator> <name>SQLITE_OK</name></expr>)</condition><block type="pseudo"><block_content>
        <goto>goto <name>bail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt><expr><operator>*</operator><name>pzErrMsg</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <return>return <expr><name>SQLITE_OK</name></expr>;</return>

<label><name>bail</name>:</label>
    <expr_stmt><expr><name>errmsg</name> <operator>=</operator> <call><name>sqlite3_errmsg</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>errmsg</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>errmsg</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt><expr><operator>*</operator><name>pzErrMsg</name> <operator>=</operator> <call><name>sqlite3_mprintf</name><argument_list>(
        <argument><expr><literal type="string">"Failed to register SQLite functions: %s, ErrCode: %d"</literal></expr></argument>, <argument><expr><name>errmsg</name></expr></argument>, <argument><expr><name>rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>rc</name></expr>;</return>
</block_content>}</block></function>
</unit>
