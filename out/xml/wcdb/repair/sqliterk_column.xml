<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/wcdb/repair/sqliterk_column.c"><comment type="block">/*
 * Tencent is pleased to support the open source community by making
 * WCDB available.
 *
 * Copyright (C) 2017 THL A29 Limited, a Tencent company.
 * All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 *       https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sqliterk_column.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sqliterk_os.h"</cpp:file></cpp:include>

<struct>struct <name>sqliterk_column</name> <block>{
    <decl_stmt><decl><type><name>int64_t</name></type> <name>rowid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>sqliterk_values</name> <modifier>*</modifier></type><name>values</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>sqliterk_values</name> <modifier>*</modifier></type><name>overflowPages</name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><name>int</name></type> <name>sqliterkColumnAlloc</name><parameter_list>(<parameter><decl><type><name>sqliterk_column</name> <modifier>*</modifier><modifier>*</modifier></type><name>column</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>column</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>SQLITERK_MISUSE</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>rc</name> <init>= <expr><name>SQLITERK_OK</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>sqliterk_column</name> <modifier>*</modifier></type><name>theColumn</name> <init>= <expr><call><name>sqliterkOSMalloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sqliterk_column</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>theColumn</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>rc</name> <operator>=</operator> <name>SQLITERK_NOMEM</name></expr>;</expr_stmt>
        <goto>goto <name>sqliterkColumnAlloc_Failed</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>sqliterkValuesAlloc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>theColumn</name><operator>-&gt;</operator><name>values</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>!=</operator> <name>SQLITERK_OK</name></expr>)</condition> <block>{<block_content>
        <goto>goto <name>sqliterkColumnAlloc_Failed</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>sqliterkValuesAlloc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>theColumn</name><operator>-&gt;</operator><name>overflowPages</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>!=</operator> <name>SQLITERK_OK</name></expr>)</condition> <block>{<block_content>
        <goto>goto <name>sqliterkColumnAlloc_Failed</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><operator>*</operator><name>column</name> <operator>=</operator> <name>theColumn</name></expr>;</expr_stmt>
    <return>return <expr><name>SQLITERK_OK</name></expr>;</return>

<label><name>sqliterkColumnAlloc_Failed</name>:</label>
    <if_stmt><if>if <condition>(<expr><name>theColumn</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>sqliterkColumnFree</name><argument_list>(<argument><expr><name>theColumn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><operator>*</operator><name>column</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <return>return <expr><name>rc</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sqliterkColumnFree</name><parameter_list>(<parameter><decl><type><name>sqliterk_column</name> <modifier>*</modifier></type><name>column</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>column</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>SQLITERK_MISUSE</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>column</name><operator>-&gt;</operator><name>overflowPages</name></name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>sqliterkValuesFree</name><argument_list>(<argument><expr><name><name>column</name><operator>-&gt;</operator><name>overflowPages</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>column</name><operator>-&gt;</operator><name>values</name></name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>sqliterkValuesFree</name><argument_list>(<argument><expr><name><name>column</name><operator>-&gt;</operator><name>values</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name>sqliterkOSFree</name><argument_list>(<argument><expr><name>column</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>SQLITERK_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>sqliterk_values</name> <modifier>*</modifier></type><name>sqliterkColumnGetValues</name><parameter_list>(<parameter><decl><type><name>sqliterk_column</name> <modifier>*</modifier></type><name>column</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>column</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>NULL</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name><name>column</name><operator>-&gt;</operator><name>values</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>sqliterkColumnSetRowId</name><parameter_list>(<parameter><decl><type><name>sqliterk_column</name> <modifier>*</modifier></type><name>column</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>rowid</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>column</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name><name>column</name><operator>-&gt;</operator><name>rowid</name></name> <operator>=</operator> <name>rowid</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>int64_t</name></type> <name>sqliterkColumnGetRowId</name><parameter_list>(<parameter><decl><type><name>sqliterk_column</name> <modifier>*</modifier></type><name>column</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>column</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name><name>column</name><operator>-&gt;</operator><name>rowid</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>sqliterk_values</name> <modifier>*</modifier></type><name>sqliterkColumnGetOverflowPages</name><parameter_list>(<parameter><decl><type><name>sqliterk_column</name> <modifier>*</modifier></type><name>column</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>column</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>NULL</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name><name>column</name><operator>-&gt;</operator><name>overflowPages</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sqliterkColumnClear</name><parameter_list>(<parameter><decl><type><name>sqliterk_column</name> <modifier>*</modifier></type><name>column</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>column</name></expr>)</condition> <block>{<block_content>
        <return>return <expr><name>SQLITERK_MISUSE</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name><name>column</name><operator>-&gt;</operator><name>rowid</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sqliterkValuesClear</name><argument_list>(<argument><expr><name><name>column</name><operator>-&gt;</operator><name>overflowPages</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>sqliterkValuesClear</name><argument_list>(<argument><expr><name><name>column</name><operator>-&gt;</operator><name>values</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>SQLITERK_OK</name></expr>;</return>
</block_content>}</block></function></unit>
