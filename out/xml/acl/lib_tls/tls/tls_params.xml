<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/workspace/acl/lib_tls/tls/tls_params.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"StdAfx.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_TLS</name></cpp:ifdef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tls.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tls_params.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tls_private.h"</cpp:file></cpp:include>

 <comment type="block">/*
  * ipc params
  */</comment>
<decl_stmt><decl><type><name>int</name></type>   <name>var_ipc_timeout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_ipc_idle_limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_ipc_ttl_limit</name></decl>;</decl_stmt>

 <comment type="block">/*
  * Tunable parameters.
  */</comment>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_tls_high_clist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_tls_medium_clist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_tls_low_clist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_tls_export_clist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_tls_null_clist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_tls_daemon_rand_bytes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_tls_eecdh_strong</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_tls_eecdh_ultra</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_mand_proto</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_proto</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>var_tlsmgr_service</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<comment type="block">/* tls_params_init - Load TLS related config parameters */</comment>

<function><type><name>void</name></type>    <name>tls_params_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"tls_param_init"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CONFIG_STR_TABLE</name></type> <name><name>str_table</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><name>VAR_TLS_HIGH_CLIST</name></expr>, <expr><name>DEF_TLS_HIGH_CLIST</name></expr>, <expr><operator>&amp;</operator><name>var_tls_high_clist</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_TLS_MEDIUM_CLIST</name></expr>, <expr><name>DEF_TLS_MEDIUM_CLIST</name></expr>, <expr><operator>&amp;</operator><name>var_tls_medium_clist</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_TLS_LOW_CLIST</name></expr>, <expr><name>DEF_TLS_LOW_CLIST</name></expr>, <expr><operator>&amp;</operator><name>var_tls_low_clist</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_TLS_EXPORT_CLIST</name></expr>, <expr><name>DEF_TLS_EXPORT_CLIST</name></expr>, <expr><operator>&amp;</operator><name>var_tls_export_clist</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_TLS_NULL_CLIST</name></expr>, <expr><name>DEF_TLS_NULL_CLIST</name></expr>, <expr><operator>&amp;</operator><name>var_tls_null_clist</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_TLS_EECDH_STRONG</name></expr>, <expr><name>DEF_TLS_EECDH_STRONG</name></expr>, <expr><operator>&amp;</operator><name>var_tls_eecdh_strong</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_TLS_EECDH_ULTRA</name></expr>, <expr><name>DEF_TLS_EECDH_ULTRA</name></expr>, <expr><operator>&amp;</operator><name>var_tls_eecdh_ultra</name></expr> }</block></expr>,

	<expr><block>{ <expr><name>VAR_SERVER_TLS_MAND_PROTO</name></expr>, <expr><name>DEF_SERVER_TLS_MAND_PROTO</name></expr>, <expr><operator>&amp;</operator><name>var_server_tls_mand_proto</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_SERVER_TLS_PROTO</name></expr>, <expr><name>DEF_SERVER_TLS_PROTO</name></expr>, <expr><operator>&amp;</operator><name>var_server_tls_proto</name></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
    }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CONFIG_INT_TABLE</name></type> <name><name>int_table</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><name>VAR_TLS_DAEMON_RAND_BYTES</name></expr>, <expr><name>DEF_TLS_DAEMON_RAND_BYTES</name></expr>, <expr><operator>&amp;</operator><name>var_tls_daemon_rand_bytes</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

	<expr><block>{ <expr><name>VAR_IPC_TIMEOUT</name></expr>, <expr><name>DEF_IPC_TIMEOUT</name></expr>, <expr><operator>&amp;</operator><name>var_ipc_timeout</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_IPC_IDLE</name></expr>, <expr><name>DEF_IPC_IDLE</name></expr>, <expr><operator>&amp;</operator><name>var_ipc_idle_limit</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><name>VAR_IPC_TTL</name></expr>, <expr><name>DEF_IPC_TTL</name></expr>, <expr><operator>&amp;</operator><name>var_ipc_ttl_limit</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
    }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>init_done</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>init_done</name></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>acl_msg_warn</name><argument_list>(<argument><expr><literal type="string">"%s: has been called before"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name>init_done</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>acl_get_app_conf_str_table</name><argument_list>(<argument><expr><name>str_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>acl_get_app_conf_int_table</name><argument_list>(<argument><expr><name>int_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
