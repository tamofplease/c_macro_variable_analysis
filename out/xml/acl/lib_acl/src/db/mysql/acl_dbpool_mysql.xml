<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/acl/lib_acl/src/db/mysql/acl_dbpool_mysql.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"StdAfx.h"</cpp:file></cpp:include>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ACL_PREPARE_COMPILE</name></cpp:ifndef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_define.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>ACL_BCB_COMPILER</name></cpp:ifdef>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>hdrstop</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"thread/acl_thread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_stdlib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db/acl_dbpool.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ACL_CLIENT_ONLY</name></cpp:ifndef>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive>	<name>HAS_MYSQL</name></cpp:ifdef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mysql.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"acl_dbmysql.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"acl_dbpool_mysql.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>ACL_DB_HANDLE_MYSQL</name> <block>{
	<decl_stmt><decl><type><name>ACL_DB_HANDLE</name></type> <name>handle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>MYSQL</name>   <modifier>*</modifier></type><name>connection</name></decl>;</decl_stmt>
}</block></struct></type> <name>ACL_DB_HANDLE_MYSQL</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ACL_DB_POOL_MYSQL</name> <block>{
	<decl_stmt><decl><type><name>ACL_DB_POOL</name></type> <name>db_pool</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>acl_pthread_mutex_t</name></type> <name>mutex</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_ARRAY</name> <modifier>*</modifier></type><name>handles</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>time_t</name></type> <name>when_check</name></decl>;</decl_stmt>
}</block></struct></type> <name>ACL_DB_POOL_MYSQL</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive>	<cpp:macro><name>DB_LOCK</name><parameter_list>(<parameter><type><name>mlock</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ acl_pthread_mutex_lock(&amp;mlock); }</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive>	<cpp:macro><name>DB_UNLOCK</name><parameter_list>(<parameter><type><name>mlock</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ acl_pthread_mutex_unlock(&amp;mlock); }</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>__close_mysql_handle</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><specifier>static</specifier> <name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>__new_mysql_handle</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>mysql_handle</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_HANDLE_MYSQL</name> <operator>*</operator><operator>)</operator>
		<call><name>acl_mycalloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ACL_DB_HANDLE_MYSQL</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>sql_results</name></name> <operator>=</operator> <name>acl_dbmysql_results</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>sql_result</name></name> <operator>=</operator> <name>acl_dbmysql_result</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>sql_update</name></name> <operator>=</operator> <name>acl_dbmysql_update</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>sql_select</name></name> <operator>=</operator> <name>acl_dbmysql_select</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>free_result</name></name> <operator>=</operator> <name>acl_dbmysql_free_result</name></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator><name>mysql_handle</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>__open_mysql_handle</name><parameter_list>(<parameter><decl><type><name>ACL_DB_POOL_MYSQL</name> <modifier>*</modifier></type><name>mysql_pool</name></decl></parameter>,
	<parameter><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name></decl></parameter>, <parameter><decl><type><name>ACL_DB_INFO</name> <modifier>*</modifier></type><name>db_info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"__open_mysql_handle"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>reuse_flag</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>db_host</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>db_unix</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>db_port</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type>  <name><name>tmpbuf</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>n</name></decl>, <decl><type ref="prev"/><name>len</name></decl>, <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>my_bool</name></type> <name>reconnect</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>strchr</name><argument_list>(<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>ptr</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>strchr</name><argument_list>(<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>ptr</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): invalid db_addr=%s"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt><expr><name>len</name> <operator>=</operator> <name>ptr</name> <operator>-</operator> <name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>len</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): invalid db_addr=%s"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt><expr><name>len</name><operator>++</operator></expr>;</expr_stmt>	<comment type="block">/* 1 for '\0' */</comment>
		<expr_stmt><expr><name>i</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>tmpbuf</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>n</name> <operator>=</operator> <ternary><condition><expr><name>i</name> <operator>&gt;</operator> <name>len</name></expr> ?</condition><then> <expr><name>len</name></expr> </then><else>: <expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>ACL_SAFE_STRNCPY</name><argument_list>(<argument><expr><name>tmpbuf</name></expr></argument>, <argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>db_host</name> <operator>=</operator> <name>tmpbuf</name></expr>;</expr_stmt>

		<expr_stmt><expr><name>ptr</name><operator>++</operator></expr>;</expr_stmt>  <comment type="block">/* skip ':' */</comment>
		<expr_stmt><expr><name>db_port</name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>db_port</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): invalid port=%d"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>db_port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt><expr><name>db_unix</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name>db_unix</name> <operator>=</operator> <name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>db_host</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>db_port</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<if_stmt><if>if <condition>(<expr><name>mysql_handle</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>mysql_handle</name> <operator>=</operator> <call><name>__new_mysql_handle</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>parent</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name></name></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else<block type="pseudo"><block_content>
		<expr_stmt><expr><name>reuse_flag</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>=</operator> <call><name>mysql_init</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): mysql init error"</literal></expr></argument>,
			<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>reuse_flag</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>db_info</name><operator>-&gt;</operator><name>conn_timeout</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>,
			<argument><expr><name>MYSQL_OPT_CONNECT_TIMEOUT</name></expr></argument>,
			<argument><expr><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator><operator>)</operator> <operator>&amp;</operator><name><name>db_info</name><operator>-&gt;</operator><name>conn_timeout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>db_info</name><operator>-&gt;</operator><name>rw_timeout</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>,
			<argument><expr><name>MYSQL_OPT_READ_TIMEOUT</name></expr></argument>,
			<argument><expr><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator><operator>)</operator> <operator>&amp;</operator><name><name>db_info</name><operator>-&gt;</operator><name>rw_timeout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>,
			<argument><expr><name>MYSQL_OPT_WRITE_TIMEOUT</name></expr></argument>,
			<argument><expr><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator><operator>)</operator> <operator>&amp;</operator><name><name>db_info</name><operator>-&gt;</operator><name>rw_timeout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>,
		<argument><expr><name>MYSQL_OPT_RECONNECT</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator><operator>)</operator> <operator>&amp;</operator><name>reconnect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>db_info</name><operator>-&gt;</operator><name>db_before_connect</name></name>
		<operator>&amp;&amp;</operator> <call><name><name>db_info</name><operator>-&gt;</operator><name>db_before_connect</name></name><argument_list>(<argument><expr><operator>(</operator><name>ACL_DB_HANDLE</name><operator>*</operator><operator>)</operator> <name>mysql_handle</name></expr></argument>,
			<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>ctx</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): db_before_connect return &lt; 0"</literal></expr></argument>,
			<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>mysql_close</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>reuse_flag</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>mysql_real_connect</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>,
				<argument><expr><name>db_host</name></expr></argument>,
				<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_user</name></name></expr></argument>,
				<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_pass</name></name></expr></argument>,
				<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_name</name></name></expr></argument>,
				<argument><expr><name>db_port</name></expr></argument>,
				<argument><expr><name>db_unix</name></expr></argument>,
				<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_flags</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): connect mysql error(%s), db_host=%s"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>,
				<argument><expr><call><name>mysql_error</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>mysql_close</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>reuse_flag</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>MYSQL_VERSION_ID</name> <operator>&gt;=</operator> <literal type="number">50000</literal></expr></cpp:if>
	<if_stmt><if>if <condition>(<expr><call><name>mysql_autocommit</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>, <argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>auto_commit</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): mysql_autocommit error"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>mysql_close</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>reuse_flag</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<expr_stmt><expr><name><name>db_info</name><operator>-&gt;</operator><name>auto_commit</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

	<if_stmt><if>if <condition>(<expr><name><name>db_info</name><operator>-&gt;</operator><name>db_after_connect</name></name>
		<operator>&amp;&amp;</operator> <call><name><name>db_info</name><operator>-&gt;</operator><name>db_after_connect</name></name><argument_list>(<argument><expr><operator>(</operator><name>ACL_DB_HANDLE</name><operator>*</operator><operator>)</operator> <name>mysql_handle</name></expr></argument>,
			<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>ctx</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): db_after_connect return &lt; 0"</literal></expr></argument>,
			<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>reuse_flag</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name>acl_msg_verbose</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"OK, database connected, db_host: %s"</literal>
			<literal type="string">", db_name: %s, db_user: %s, autocommit %s"</literal></expr></argument>,
			<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_addr</name></name></expr></argument>, <argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_name</name></name></expr></argument>, <argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_user</name></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name>db_info</name><operator>-&gt;</operator><name>auto_commit</name></name></expr> ?</condition><then> <expr><literal type="string">"true"</literal></expr> </then><else>: <expr><literal type="string">"false"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
	acl_msg_info("db_pass: %s\n", db_info-&gt;db_pass);
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>status</name></name>  <operator>=</operator> <name>ACL_DBH_STATUS_READY</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>timeout</name></name> <operator>=</operator> <call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>db_info</name><operator>-&gt;</operator><name>timeout_inter</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>ping</name></name>    <operator>=</operator> <call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>db_info</name><operator>-&gt;</operator><name>ping_inter</name></name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><name>reuse_flag</name></expr>)</condition> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><call><name>acl_array_append</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name></expr></argument>, <argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): append to handles error(%s)"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><call><name>acl_last_serror</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><name>mysql_handle</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sane_mysql_reopen</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>handle</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"sane_mysql_repopen"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name> <init>= <expr><operator>(</operator><name>ACL_DB_HANDLE_MYSQL</name><operator>*</operator><operator>)</operator> <name>handle</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>myconn_saved</name> <init>= <expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_INFO</name> <modifier>*</modifier></type><name>db_info</name> <init>= <expr><operator>&amp;</operator><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>parent</name><operator>-&gt;</operator><name>db_info</name></name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>__close_mysql_handle</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>__open_mysql_handle</name><argument_list>(<argument><expr><operator>(</operator><name>ACL_DB_POOL_MYSQL</name><operator>*</operator><operator>)</operator> <name><name>handle</name><operator>-&gt;</operator><name>parent</name></name></expr></argument>,
			<argument><expr><name>mysql_handle</name></expr></argument>, <argument><expr><name>db_info</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): reopen mysql connection error"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>=</operator> <name>myconn_saved</name></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>__close_mysql_handle</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<return>return;</return></block_content></block></if></if_stmt>
	<expr_stmt><expr><call><name>mysql_close</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>status</name></name> <operator>=</operator> <name>ACL_DBH_STATUS_NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>timeout</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>ping</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>__dbpool_mysql_check</name><parameter_list>(<parameter><decl><type><name>ACL_DB_POOL</name> <modifier>*</modifier></type><name>db_pool</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_DB_POOL_MYSQL</name> <modifier>*</modifier></type><name>mysql_pool</name> <init>= <expr><operator>(</operator><name>ACL_DB_POOL_MYSQL</name><operator>*</operator><operator>)</operator> <name>db_pool</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>  <name>i</name></decl>, <decl><type ref="prev"/><name>n</name></decl>, <decl><type ref="prev"/><name>ping_inter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>time_t</name></type> <name>now</name> <init>= <expr><call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>ping_inter</name> <operator>=</operator> <name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>db_info</name><operator>.</operator><name>ping_inter</name></name></expr>;</expr_stmt>

	<expr_stmt><expr><name>n</name> <operator>=</operator> <call><name>acl_array_size</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>mysql_handle</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_HANDLE_MYSQL</name> <operator>*</operator><operator>)</operator>
				<call><name>acl_array_index</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>mysql_handle</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
			<continue>continue;</continue></block_content></block></if></if_stmt>
		<if_stmt><if>if <condition>(<expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>status</name></name> <operator>!=</operator> <name>ACL_DBH_STATUS_READY</name></expr>)</condition><block type="pseudo"><block_content>
			<continue>continue;</continue></block_content></block></if></if_stmt>

		<comment type="block">/* if the connecion is idle timeout ? */</comment>
		<if_stmt><if>if <condition>(<expr><name>now</name> <operator>&gt;</operator> <name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>timeout</name></name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>__close_mysql_handle</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>db_ready</name></name><operator>--</operator></expr>;</expr_stmt>
			<continue>continue;</continue>
		</block_content>}</block></if></if_stmt>

		<comment type="block">/* has the ping time reached ? */</comment>
		<if_stmt><if>if <condition>(<expr><name>now</name> <operator>&lt;=</operator> <name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>ping</name></name></expr>)</condition><block type="pseudo"><block_content> 
			<continue>continue;</continue></block_content></block></if></if_stmt>

		<if_stmt><if>if <condition>(<expr><call><name>mysql_ping</name><argument_list>(<argument><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>ping</name></name> <operator>=</operator> <call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>ping_inter</name></expr>;</expr_stmt>
		</block_content>}</block></if> <else>else <block>{<block_content>
			<expr_stmt><expr><call><name>__close_mysql_handle</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>db_ready</name></name><operator>--</operator></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><specifier>static</specifier> <name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>__dbpool_mysql_peek</name><parameter_list>(<parameter><decl><type><name>ACL_DB_POOL</name> <modifier>*</modifier></type><name>db_pool</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"__dbpool_mysql_peek"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_POOL_MYSQL</name> <modifier>*</modifier></type><name>mysql_pool</name> <init>= <expr><operator>(</operator><name>ACL_DB_POOL_MYSQL</name> <operator>*</operator><operator>)</operator> <name>db_pool</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>mysql_handle_slot</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>i</name></decl>, <decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>time_t</name></type> <name>now</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>static</specifier> <name>time_t</name></type> <name>last_time</name></decl>;</decl_stmt>  <comment type="block">/* ÒòÎªÔÚµ÷ÓÃ´Ëº¯ÊýÊ±ÒÑ¾­ÉÏËø,
				   * ËùÒÔ´Ë´¦ÉùÃ÷Ò»¾²Ì¬±äÁ¿ÊÇÏß³Ì°²È«µÄ.
				   */</comment>

<cpp:undef>#<cpp:directive>undef</cpp:directive>	<name>RETURN</name></cpp:undef>
<cpp:define>#<cpp:directive>define</cpp:directive>	<cpp:macro><name>RETURN</name><parameter_list>(<parameter><type><name>_x_</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { \
	now = time(NULL); \
	if (acl_msg_verbose &amp;&amp; now - last_time &gt; 5) { \
		acl_msg_info("Database status: max = %d, idle = %d, busy = %d", \
				db_pool-&gt;db_max, db_pool-&gt;db_ready, db_pool-&gt;db_inuse); \
		last_time = now; \
	} \
	DB_UNLOCK(mysql_pool-&gt;mutex); \
	return (_x_); \
} while (0)</cpp:value></cpp:define>

	<expr_stmt><expr><call><name>DB_LOCK</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <name><name>mysql_pool</name><operator>-&gt;</operator><name>when_check</name></name></expr>)</condition> <block>{<block_content>
		<decl_stmt><decl><type><name>int</name></type>   <name>inter</name> <init>= <expr><ternary><condition><expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_info</name><operator>.</operator><name>ping_inter</name></name> <operator>&gt;</operator> <name><name>db_pool</name><operator>-&gt;</operator><name>db_info</name><operator>.</operator><name>timeout_inter</name></name></expr>
			?</condition><then> <expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_info</name><operator>.</operator><name>timeout_inter</name></name></expr> </then><else>: <expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_info</name><operator>.</operator><name>ping_inter</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name><name>db_pool</name><operator>-&gt;</operator><name>dbh_check</name></name><argument_list>(<argument><expr><name>db_pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>when_check</name></name> <operator>=</operator> <call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>inter</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>


	<if_stmt><if>if <condition>(<expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_inuse</name></name> <operator>&gt;=</operator> <name><name>db_pool</name><operator>-&gt;</operator><name>db_max</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_warn</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): all connections be used, reached db_max(%d)"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RETURN</name> <argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>n</name> <operator>=</operator> <call><name>acl_array_size</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* lookup mysql connection from pool */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>mysql_handle</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_HANDLE_MYSQL</name> <operator>*</operator><operator>)</operator>
			<call><name>acl_array_index</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt><if>if <condition>(<expr><name>mysql_handle</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
			<continue>continue;</continue></block_content></block></if></if_stmt>

		<if_stmt><if>if <condition>(<expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>status</name></name> <operator>==</operator> <name>ACL_DBH_STATUS_READY</name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>status</name></name> <operator>=</operator> <name>ACL_DBH_STATUS_INUSE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_inuse</name></name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_ready</name></name><operator>--</operator></expr>;</expr_stmt>

			<expr_stmt><expr><call><name>RETURN</name> <argument_list>(<argument><expr><operator>(</operator><name>ACL_DB_HANDLE</name> <operator>*</operator><operator>)</operator> <name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>status</name></name> <operator>==</operator> <name>ACL_DBH_STATUS_NULL</name>
			   <operator>&amp;&amp;</operator> <name>mysql_handle_slot</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name>mysql_handle_slot</name> <operator>=</operator> <name>mysql_handle</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	</block_content>}</block></for>

	<comment type="block">/* create new mysql connection */</comment>

	<expr_stmt><expr><name>mysql_handle</name> <operator>=</operator> <call><name>__open_mysql_handle</name><argument_list>(<argument><expr><name>mysql_pool</name></expr></argument>, <argument><expr><name>mysql_handle_slot</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>db_pool</name><operator>-&gt;</operator><name>db_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mysql_handle</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>RETURN</name> <argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>status</name></name> <operator>=</operator> <name>ACL_DBH_STATUS_INUSE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_inuse</name></name><operator>++</operator></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name>RETURN</name> <argument_list>(<argument><expr><operator>(</operator><name>ACL_DB_HANDLE</name> <operator>*</operator><operator>)</operator> <name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>__dbpool_mysql_release</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>db_handle</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"__dbpool_mysql_release"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_POOL</name> <modifier>*</modifier></type><name>db_pool</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_POOL_MYSQL</name> <modifier>*</modifier></type><name>mysql_pool</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>timeout_inter</name></decl>, <decl><type ref="prev"/><name>ping_inter</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>mysql_handle</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_HANDLE_MYSQL</name> <operator>*</operator><operator>)</operator> <name>db_handle</name></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>db_handle</name><operator>-&gt;</operator><name>status</name></name> <operator>!=</operator> <name>ACL_DBH_STATUS_INUSE</name> <operator>||</operator> <name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): status %s ACL_DBH_STATUS_INUSE, connection %s"</literal></expr></argument>,
			<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name>db_handle</name><operator>-&gt;</operator><name>status</name></name> <operator>==</operator> <name>ACL_DBH_STATUS_INUSE</name></expr> ?</condition><then> <expr><literal type="string">"="</literal></expr> </then><else>: <expr><literal type="string">"!="</literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr> ?</condition><then> <expr><literal type="string">"not null"</literal></expr> </then><else>: <expr><literal type="string">"null"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>db_pool</name> <operator>=</operator> <name><name>db_handle</name><operator>-&gt;</operator><name>parent</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>timeout_inter</name> <operator>=</operator> <name><name>db_pool</name><operator>-&gt;</operator><name>db_info</name><operator>.</operator><name>timeout_inter</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>ping_inter</name> <operator>=</operator> <name><name>db_pool</name><operator>-&gt;</operator><name>db_info</name><operator>.</operator><name>ping_inter</name></name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>db_pool</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): db_handle's parent is null"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>mysql_pool</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_POOL_MYSQL</name> <operator>*</operator><operator>)</operator> <name>db_pool</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DB_LOCK</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>db_handle</name><operator>-&gt;</operator><name>status</name></name>  <operator>=</operator> <name>ACL_DBH_STATUS_READY</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>db_handle</name><operator>-&gt;</operator><name>timeout</name></name> <operator>=</operator> <call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>timeout_inter</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>db_handle</name><operator>-&gt;</operator><name>ping</name></name>    <operator>=</operator> <call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>ping_inter</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_inuse</name></name><operator>--</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_ready</name></name><operator>++</operator></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DB_UNLOCK</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>__dbpool_mysql_export</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>db_handle</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name> <init>= <expr><operator>(</operator><name>ACL_DB_HANDLE_MYSQL</name> <operator>*</operator><operator>)</operator> <name>db_handle</name></expr></init></decl>;</decl_stmt>

	<return>return <expr><operator>(</operator><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator> <name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>__dbpool_mysql_close</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>db_handle</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"__dbpool_mysql_close"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_POOL</name> <modifier>*</modifier></type><name>db_pool</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_POOL_MYSQL</name> <modifier>*</modifier></type><name>mysql_pool</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name> <init>= <expr><operator>(</operator><name>ACL_DB_HANDLE_MYSQL</name> <operator>*</operator><operator>)</operator> <name>db_handle</name></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>db_handle</name><operator>-&gt;</operator><name>status</name></name> <operator>!=</operator> <name>ACL_DBH_STATUS_INUSE</name> <operator>||</operator> <name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): status %s ACL_DBH_STATUS_INUSE, connection %s"</literal></expr></argument>,
			<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name>db_handle</name><operator>-&gt;</operator><name>status</name></name> <operator>==</operator> <name>ACL_DBH_STATUS_INUSE</name></expr> ?</condition><then> <expr><literal type="string">"="</literal></expr> </then><else>: <expr><literal type="string">"!="</literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name>mysql_handle</name><operator>-&gt;</operator><name>connection</name></name></expr> ?</condition><then> <expr><literal type="string">"not null"</literal></expr> </then><else>: <expr><literal type="string">"null"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>db_pool</name> <operator>=</operator> <name><name>db_handle</name><operator>-&gt;</operator><name>parent</name></name></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>db_pool</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): db_handle's parent is null"</literal></expr></argument>,
				<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><name>mysql_pool</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_POOL_MYSQL</name> <operator>*</operator><operator>)</operator> <name>db_pool</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DB_LOCK</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>__close_mysql_handle</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>db_pool</name><operator>-&gt;</operator><name>db_inuse</name></name><operator>--</operator></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DB_UNLOCK</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>__dbpool_mysql_destroy</name><parameter_list>(<parameter><decl><type><name>ACL_DB_POOL</name> <modifier>*</modifier></type><name>db_pool</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_DB_POOL_MYSQL</name> <modifier>*</modifier></type><name>mysql_pool</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE_MYSQL</name> <modifier>*</modifier></type><name>mysql_handle</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>i</name></decl>, <decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>mysql_pool</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_POOL_MYSQL</name> <operator>*</operator><operator>)</operator> <name>db_pool</name></expr>;</expr_stmt>

	<expr_stmt><expr><name>n</name> <operator>=</operator> <call><name>acl_array_size</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>mysql_handle</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_HANDLE_MYSQL</name> <operator>*</operator><operator>)</operator>
			<call><name>acl_array_index</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>mysql_handle</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
			<continue>continue;</continue></block_content></block></if></if_stmt>
		<expr_stmt><expr><call><name>__close_mysql_handle</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>mysql_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>acl_pthread_mutex_destroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mysql_pool</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_array_destroy</name><argument_list>(<argument><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>mysql_pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mysql_library_end</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<comment type="block">/*----------------------------------------------------------------------------*/</comment>
<function><type><name>ACL_DB_POOL</name> <modifier>*</modifier></type><name>acl_dbpool_mysql_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ACL_DB_INFO</name> <modifier>*</modifier></type><name>db_info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_dbpool_mysql_create"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_POOL_MYSQL</name> <modifier>*</modifier></type><name>mysql_pool</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>mysql_pool</name> <operator>=</operator> <operator>(</operator><name>ACL_DB_POOL_MYSQL</name> <operator>*</operator><operator>)</operator> <call><name>acl_mycalloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ACL_DB_POOL_MYSQL</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mysql_pool</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<decl_stmt><decl><type><name>char</name></type>  <name><name>tbuf</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): calloc error=%s"</literal></expr></argument>,
			<argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><call><name>acl_last_strerror</name><argument_list>(<argument><expr><name>tbuf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>tbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>dbh_peek</name></name>    <operator>=</operator> <operator>&amp;</operator><name>__dbpool_mysql_peek</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>dbh_check</name></name>   <operator>=</operator> <operator>&amp;</operator><name>__dbpool_mysql_check</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>dbh_release</name></name> <operator>=</operator> <operator>&amp;</operator><name>__dbpool_mysql_release</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>dbh_export</name></name>  <operator>=</operator> <operator>&amp;</operator><name>__dbpool_mysql_export</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>dbh_close</name></name>   <operator>=</operator> <operator>&amp;</operator><name>__dbpool_mysql_close</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>db_pool</name><operator>.</operator><name>destroy</name></name>     <operator>=</operator> <operator>&amp;</operator><name>__dbpool_mysql_destroy</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>mysql_pool</name><operator>-&gt;</operator><name>handles</name></name>  <operator>=</operator> <call><name>acl_array_create</name><argument_list>(<argument><expr><name><name>db_info</name><operator>-&gt;</operator><name>db_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_pthread_mutex_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mysql_pool</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator><operator>(</operator><name>ACL_DB_POOL</name> <operator>*</operator><operator>)</operator> <name>mysql_pool</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<comment type="block">/*----------------------------------------------------------------------------*/</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>ACL_WINDOWS</name></cpp:ifdef>
<comment type="block">/* XXX: just for the poor mysql */</comment>
extern void _dosmaperr(unsigned long error);
void _dosmaperr(unsigned long error)
{

}
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* ACL_WINDOWS */</comment>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* HAS_MYSQL */</comment>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* ACL_CLIENT_ONLY */</comment>
</unit>
