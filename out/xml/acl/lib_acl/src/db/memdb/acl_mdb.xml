<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/acl/lib_acl/src/db/memdb/acl_mdb.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"StdAfx.h"</cpp:file></cpp:include>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ACL_PREPARE_COMPILE</name></cpp:ifndef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_define.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>ACL_BCB_COMPILER</name></cpp:ifdef>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>hdrstop</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_mymalloc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_msg.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_htable.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_mystring.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db/acl_mdb.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"struct.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mdb_private.h"</cpp:file></cpp:include>

<function><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>acl_mdb_create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dbname</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dbtype</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_create"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>dbname</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>dbname</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): dbname invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>dbtype</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>dbtype</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): dbtype invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>mdb</name> <operator>=</operator> <call><name>acl_mycalloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ACL_MDB</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ACL_SAFE_STRNCPY</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>dbname</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ACL_SAFE_STRNCPY</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name>dbtype</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name> <operator>=</operator> <call><name>acl_htable_create</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><name>mdb</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>free_tbl_fn</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name> <init>= <expr><operator>(</operator><name>ACL_MDT</name><operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>acl_mdt_free</name><argument_list>(<argument><expr><name>mdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>acl_mdb_free</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_htable_free</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>free_tbl_fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>mdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>acl_mdb_tbl_create</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tbl_name</name></decl></parameter>,
	<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>tbl_flag</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>init_capacity</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>key_labels</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name><name>flags</name><index>[]</index></name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_tbl_create"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>mdb</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>tbl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>tbl_name</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): input invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name>init_capacity</name> <operator>&lt;</operator> <literal type="number">128</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name>init_capacity</name> <operator>=</operator> <literal type="number">128</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>mdt</name> <operator>=</operator> <call><name>acl_mdt_create</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>, <argument><expr><name>tbl_flag</name></expr></argument>,
			<argument><expr><name>init_capacity</name></expr></argument>, <argument><expr><name>key_labels</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>acl_htable_enter</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator> <name>mdt</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s(%d): acl_htable_enter error, tbl_name = %s"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return>return <expr><operator>(</operator><name>mdt</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>ACL_MDT_NOD</name> <modifier>*</modifier></type><name>acl_mdb_add</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tbl_name</name></decl></parameter>,
	<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>dlen</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>key_labels</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>keys</name><index>[]</index></name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_add"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT_NOD</name> <modifier>*</modifier></type><name>node</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>tbl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>tbl_name</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): tbl_name invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>data</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): data invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/* ´ÓÊý¾Ý¿âÖÐ»ñµÃËùÐèÒªµÄÊý¾ÝË÷Òý±í */</comment>
	<expr_stmt><expr><name>mdt</name> <operator>=</operator> <operator>(</operator><name>ACL_MDT</name> <operator>*</operator><operator>)</operator> <call><name>acl_htable_find</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mdt</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): table no exist, tbl_name(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>node</name> <operator>=</operator> <call><name><name>mdt</name><operator>-&gt;</operator><name>add</name></name><argument_list>(<argument><expr><name>mdt</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>dlen</name></expr></argument>, <argument><expr><name>key_labels</name></expr></argument>, <argument><expr><name>keys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator><name>node</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>acl_mdb_probe</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tbl_name</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key_label</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_probe"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>tbl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>tbl_name</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): tbl_name invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>key_label</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>key_label</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): key_label invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>key</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>key</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): key invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>mdt</name> <operator>=</operator> <operator>(</operator><name>ACL_MDT</name> <operator>*</operator><operator>)</operator> <call><name>acl_htable_find</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mdt</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): table no exist, tbl_name(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><call><name><name>mdt</name><operator>-&gt;</operator><name>probe</name></name><argument_list>(<argument><expr><name>mdt</name></expr></argument>, <argument><expr><name>key_label</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>ACL_MDT_RES</name> <modifier>*</modifier></type><name>acl_mdb_find</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tbl_name</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key_label</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>limit</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_find"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>tbl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>tbl_name</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): tbl_name invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>key_label</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>key_label</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): key_label invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>key</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>key</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): key invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>mdt</name> <operator>=</operator> <operator>(</operator><name>ACL_MDT</name> <operator>*</operator><operator>)</operator> <call><name>acl_htable_find</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mdt</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): table no exist, tbl_name(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><call><name><name>mdt</name><operator>-&gt;</operator><name>get</name></name><argument_list>(<argument><expr><name>mdt</name></expr></argument>, <argument><expr><name>key_label</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name>from</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>ACL_MDT_RES</name> <modifier>*</modifier></type><name>acl_mdb_list</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tbl_name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>limit</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_list"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>tbl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>tbl_name</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): tbl_name invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>mdt</name> <operator>=</operator> <operator>(</operator><name>ACL_MDT</name> <operator>*</operator><operator>)</operator> <call><name>acl_htable_find</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mdt</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): table no exist, tbl_name(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>NULL</name><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><call><name><name>mdt</name><operator>-&gt;</operator><name>list</name></name><argument_list>(<argument><expr><name>mdt</name></expr></argument>, <argument><expr><name>from</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>acl_mdb_del</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tbl_name</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key_label</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
	<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>onfree_fn</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_del"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>tbl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>tbl_name</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): tbl_name invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>key_label</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>key_label</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): key_label invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>key</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>key</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): key invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>mdt</name> <operator>=</operator> <operator>(</operator><name>ACL_MDT</name> <operator>*</operator><operator>)</operator> <call><name>acl_htable_find</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mdt</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): table no exist, tbl_name(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><call><name><name>mdt</name><operator>-&gt;</operator><name>del</name></name><argument_list>(<argument><expr><name>mdt</name></expr></argument>, <argument><expr><name>key_label</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name>onfree_fn</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>acl_mdb_walk</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tbl_name</name></decl></parameter>,
	<parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>walk_fn</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>int</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>limit</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_walk"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>tbl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>tbl_name</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): tbl_name invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>mdt</name> <operator>=</operator> <operator>(</operator><name>ACL_MDT</name> <operator>*</operator><operator>)</operator> <call><name>acl_htable_find</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mdt</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): table no exist, tbl_name(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><call><name><name>mdt</name><operator>-&gt;</operator><name>walk</name></name><argument_list>(<argument><expr><name>mdt</name></expr></argument>, <argument><expr><name>walk_fn</name></expr></argument>, <argument><expr><name>from</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>acl_mdb_cnt</name><parameter_list>(<parameter><decl><type><name>ACL_MDB</name> <modifier>*</modifier></type><name>mdb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tbl_name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_mdb_cnt"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MDT</name> <modifier>*</modifier></type><name>mdt</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>tbl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>tbl_name</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): tbl_name invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>mdt</name> <operator>=</operator> <operator>(</operator><name>ACL_MDT</name> <operator>*</operator><operator>)</operator> <call><name>acl_htable_find</name><argument_list>(<argument><expr><name><name>mdb</name><operator>-&gt;</operator><name>tbls</name></name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>mdt</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): table no exist, tbl_name(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>tbl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><call><name>acl_mdt_cnt</name><argument_list>(<argument><expr><name>mdt</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
