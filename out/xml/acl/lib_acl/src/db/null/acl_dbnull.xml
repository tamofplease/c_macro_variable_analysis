<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/acl/lib_acl/src/db/null/acl_dbnull.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"StdAfx.h"</cpp:file></cpp:include>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ACL_PREPARE_COMPILE</name></cpp:ifndef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_define.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;time.h&gt;</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>ACL_BCB_COMPILER</name></cpp:ifdef>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>hdrstop</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stdlib/acl_stdlib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"db/acl_dberr.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ACL_CLIENT_ONLY</name></cpp:ifndef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"acl_dbnull.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>int</name></type> <name>acl_dbnull_results</name><argument_list>(<argument><expr><name>ACL_DB_HANDLE</name> <operator>*</operator><name>handle</name> <name>acl_unused</name></expr></argument>,
	<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>sql</name> <name>acl_unused</name></expr></argument>, <argument><expr><name>int</name> <operator>*</operator><name>error</name> <name>acl_unused</name></expr></argument>,
	<argument><expr><macro><name>int</name> <argument_list>(<argument>*walk_fn</argument>)</argument_list></macro><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator><operator>*</operator> <name>my_row</name><operator>,</operator> <name>void</name> <operator>*</operator><name>arg</name><operator>)</operator> <name>acl_unused</name></expr></argument>,
	<argument><expr><name>void</name> <operator>*</operator><name>arg</name> <name>acl_unused</name></expr></argument>)</argument_list>
<block>{<block_content>       
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_dbnull_results"</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): not supported!"</literal></expr></argument>, <argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>acl_dbnull_result</name><argument_list>(<argument><expr><name>ACL_DB_HANDLE</name> <operator>*</operator><name>handle</name> <name>acl_unused</name></expr></argument>,
	<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>sql</name> <name>acl_unused</name></expr></argument>, <argument><expr><name>int</name> <operator>*</operator><name>error</name> <name>acl_unused</name></expr></argument>,
	<argument><expr><macro><name>int</name> <argument_list>(<argument>*callback</argument>)</argument_list></macro><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator><operator>*</operator> <name>my_row</name><operator>,</operator> <name>void</name> <operator>*</operator><name>arg</name><operator>)</operator> <name>acl_unused</name></expr></argument>,
	<argument><expr><name>void</name> <operator>*</operator><name>arg</name> <name>acl_unused</name></expr></argument>)</argument_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_dbnull_result"</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): not supported!"</literal></expr></argument>, <argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<function><type><name>int</name></type> <name>acl_dbnull_update</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier><name>handle</name></type> <name>acl_unused</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><name>sql</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier><name>error</name></type> <name>acl_unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"acl_dbnull_update"</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s, %s(%d): not supported!"</literal></expr></argument>, <argument><expr><name>__FILE__</name></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* ACL_CLIENT_ONLY */</comment>
</unit>
