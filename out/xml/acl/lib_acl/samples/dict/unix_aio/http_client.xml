<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/acl/lib_acl/samples/dict/unix_aio/http_client.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_service.h"</cpp:file></cpp:include>

<function><type><name>HTTP_CLIENT</name> <modifier>*</modifier></type><name>http_client_new</name><parameter_list>(<parameter><decl><type><name>ACL_ASTREAM</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>HTTP_CLIENT</name> <modifier>*</modifier></type><name>client</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>client</name> <operator>=</operator> <operator>(</operator><name>HTTP_CLIENT</name><operator>*</operator><operator>)</operator> <call><name>acl_mycalloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>HTTP_CLIENT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>client</name><operator>-&gt;</operator><name>hdr_req</name></name> <operator>=</operator> <call><name>http_hdr_req_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>client</name><operator>-&gt;</operator><name>stream</name></name> <operator>=</operator> <name>stream</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>client</name><operator>-&gt;</operator><name>http_req</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator><name>client</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>http_client_free</name><parameter_list>(<parameter><decl><type><name>HTTP_CLIENT</name> <modifier>*</modifier></type><name>client</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name><name>client</name><operator>-&gt;</operator><name>hdr_req</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>http_hdr_req_free</name><argument_list>(<argument><expr><name><name>client</name><operator>-&gt;</operator><name>hdr_req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>client</name><operator>-&gt;</operator><name>http_req</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name><name>client</name><operator>-&gt;</operator><name>http_req</name><operator>-&gt;</operator><name>hdr_req</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>http_req_free</name><argument_list>(<argument><expr><name><name>client</name><operator>-&gt;</operator><name>http_req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>client</name><operator>-&gt;</operator><name>key</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_vstring_free</name><argument_list>(<argument><expr><name><name>client</name><operator>-&gt;</operator><name>key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>client</name><operator>-&gt;</operator><name>sbuf</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_vstring_free</name><argument_list>(<argument><expr><name><name>client</name><operator>-&gt;</operator><name>sbuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>http_client_reset</name><parameter_list>(<parameter><decl><type><name>HTTP_CLIENT</name> <modifier>*</modifier></type><name>client</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name><name>client</name><operator>-&gt;</operator><name>hdr_req</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>TRACE</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>http_hdr_req_reset</name><argument_list>(<argument><expr><name><name>client</name><operator>-&gt;</operator><name>hdr_req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>client</name><operator>-&gt;</operator><name>http_req</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>TRACE</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>client</name><operator>-&gt;</operator><name>http_req</name><operator>-&gt;</operator><name>hdr_req</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>TRACE</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>http_req_free</name><argument_list>(<argument><expr><name><name>client</name><operator>-&gt;</operator><name>http_req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>TRACE</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>client</name><operator>-&gt;</operator><name>http_req</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>client</name><operator>-&gt;</operator><name>key</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>ACL_VSTRING_RESET</name><argument_list>(<argument><expr><name><name>client</name><operator>-&gt;</operator><name>key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>client</name><operator>-&gt;</operator><name>sbuf</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>ACL_VSTRING_RESET</name><argument_list>(<argument><expr><name><name>client</name><operator>-&gt;</operator><name>sbuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>
</unit>
