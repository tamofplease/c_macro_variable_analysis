<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/acl/lib_acl/samples/mysql3/main.c">
<comment type="block">/* 
 * Copyright (C) 2010 51IKER
 * All rights reserved.
 *
 * AUTHOR(S)
 *	Xiaohua Jia
 *	Beijing, RPC 100006
 *	E-mail: jiaxiaohua@51iker.com
 */</comment>

<comment type="block">/* System library. */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<comment type="block">/* Utility library. */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mysql.h"</cpp:file></cpp:include>

<comment type="block">/* Global library. */</comment>

<comment type="block">/* Application-specific. */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_batch_insert</name><parameter_list>(<parameter><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>mysql</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
	const char *sql[] = {
		"INSERT IGNORE INTO address_book_group_00(owner, name) "
			"values('xxx@ikmail.com' , 'xxx1');",
		"INSERT IGNORE INTO address_book_group_00 "
			"SET  owner='xxx@ikmail.com' , name='xxx2';",
		"INSERT IGNORE INTO address_book_group_00 "
			"SET  owner='xxx@ikmail.com' , name='xxx3'",
		"INSERT IGNORE INTO address_book_group_00 "
			"SET  owner='xxx@ikmail.com' , name='xxx4';" };

	printf("sql0: %s\n", sql[0]);
	printf("sql1: %s\n", sql[1]);
	printf("sql2: %s\n", sql[2]);
	printf("sql3: %s\n", sql[3]);
	assert(mysql_query(mysql, sql[0]) == 0);
	assert(mysql_query(mysql, sql[1]) == 0);
	assert(mysql_query(mysql, sql[2]) == 0);
	assert(mysql_query(mysql, sql[3]) == 0);
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sql</name> <init>=
		<expr><literal type="string">"INSERT IGNORE INTO address_book_group_00(owner, name) "</literal>
			<literal type="string">"values('xxx@ikmail.com' , 'xxx1'); "</literal>
		<literal type="string">"INSERT IGNORE INTO address_book_group_00 "</literal>
			<literal type="string">"SET  owner='xxx@ikmail.com' , name='xxx2'; "</literal>
		<literal type="string">"INSERT IGNORE INTO address_book_group_00 "</literal>
			<literal type="string">"SET  owner='xxx@ikmail.com' , name='xxx3'; "</literal>
		<literal type="string">"INSERT IGNORE INTO address_book_group_00 "</literal>
			<literal type="string">"SET  owner='xxx@ikmail.com' , name='xxx4';"</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"sql: %s\n"</literal></expr></argument>, <argument><expr><name>sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>mysql_query</name><argument_list>(<argument><expr><name>mysql</name></expr></argument>, <argument><expr><name>sql</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>mysql</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>reconnect</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>mysql_library_init</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>mysql</name> <operator>=</operator> <call><name>mysql_init</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>mysql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>mysql</name></expr></argument>, <argument><expr><name>MYSQL_OPT_RECONNECT</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator><operator>)</operator> <operator>&amp;</operator><name>reconnect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>mysql_real_connect</name><argument_list>(<argument><expr><name>mysql</name></expr></argument>, <argument><expr><literal type="string">"127.0.0.1"</literal></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">"ikmail"</literal></expr></argument>, <argument><expr><literal type="number">3306</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>CLIENT_MULTI_STATEMENTS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mysql_autocommit</name><argument_list>(<argument><expr><name>mysql</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>test_batch_insert</name><argument_list>(<argument><expr><name>mysql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>mysql_library_end</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
