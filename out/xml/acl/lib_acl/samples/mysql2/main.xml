<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/workspace/acl/lib_acl/samples/mysql2/main.c">
<comment type="block">/* 
 * Copyright (C) 2010 51IKER
 * All rights reserved.
 *
 * AUTHOR(S)
 *	Xiaohua Jia
 *	Beijing, RPC 100006
 *	E-mail: jiaxiaohua@51iker.com
 */</comment>

<comment type="block">/* System library. */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<comment type="block">/* Utility library. */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mysql.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>

<comment type="block">/* Global library. */</comment>

<comment type="block">/* Application-specific. */</comment>


<function_decl><type><name>void</name></type> <name>test_select</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>db_handle</name></decl></parameter>)</parameter_list>;</function_decl>
<function><type><name>void</name></type> <name>test_select</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>db_handle</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>error</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>num_fields</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>ACL_ITER</name></type> <name>iter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_SQL_RES</name> <modifier>*</modifier></type><name>res</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>	

	<decl_stmt><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>mysql</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>MYSQL_RES</name> <modifier>*</modifier></type><name>my_res</name><init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>MYSQL_FIELD</name> <modifier>*</modifier></type><name>fields</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>row</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_VSTRING</name> <modifier>*</modifier></type><name>xml_datas</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>acl_dbsql_select</name><argument_list>(<argument><expr><name>db_handle</name></expr></argument>, 
		<argument><expr><literal type="string">"SELECT * FROM filter_rules WHERE frid=\"4\""</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>mysql</name> <operator>=</operator> <operator>(</operator><name>MYSQL</name> <operator>*</operator><operator>)</operator><call><name>acl_dbpool_export</name><argument_list>(<argument><expr><name>db_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"error=%d; mysql errno=%d; "</literal>
			<literal type="string">"error=%s;"</literal></expr></argument>, <argument><expr><name>error</name></expr></argument>,
			<argument><expr><call><name>mysql_errno</name><argument_list>(<argument><expr><name>mysql</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>mysql_error</name><argument_list>(<argument><expr><name>mysql</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>xml_datas</name> <operator>=</operator> <call><name>acl_vstring_alloc</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>my_res</name> <operator>=</operator> <operator>(</operator><name>MYSQL_RES</name><operator>*</operator><operator>)</operator><name><name>res</name><operator>-&gt;</operator><name>res</name></name></expr>;</expr_stmt>


	<expr_stmt><expr><name>num_fields</name> <operator>=</operator> <call><name>mysql_num_fields</name><argument_list>(<argument><expr><name>my_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>fields</name> <operator>=</operator> <call><name>mysql_fetch_fields</name><argument_list>(<argument><expr><name>my_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"res=%p; num=%d; fel=%p; ss=%lu; sf=%lu\n"</literal></expr></argument>, 
	<argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>my_res</name></expr></argument>, <argument><expr><name>num_fields</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>fields</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>my_res</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>fields</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<macro><name>acl_foreach</name><argument_list>(<argument>iter</argument>, <argument>res</argument>)</argument_list></macro> <block>{<block_content>
		<expr_stmt><expr><name>row</name> <operator>=</operator> <operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>*</operator><operator>)</operator> <name><name>iter</name><operator>.</operator><name>data</name></name></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>acl_vstring_sprintf_append</name><argument_list>(<argument><expr><name>xml_datas</name></expr></argument>, <argument><expr><literal type="string">"&lt;data "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


		<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>num_fields</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>	<block>{<block_content>
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Field %u is %s\n"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>acl_vstring_sprintf_append</name><argument_list>(<argument><expr><name>xml_datas</name></expr></argument>, 
				<argument><expr><literal type="string">" %s=\"%s\""</literal></expr></argument>, <argument><expr><name><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>, <argument><expr><name><name>row</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s\n"</literal></expr></argument>, <argument><expr><call><name>acl_vstring_str</name><argument_list>(<argument><expr><name>xml_datas</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>test_batch_insert</name><parameter_list>(<parameter><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>db_handle</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>error</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sql</name> <init>= <expr><literal type="string">"START TRANSACTION; "</literal>
		<literal type="string">"INSERT IGNORE INTO address_book_group_00 "</literal>
		<literal type="string">"SET  owner=\'xxx@ikmail.com\' , name=\'xxx1\'; "</literal>
		<literal type="string">"INSERT IGNORE INTO address_book_group_00 "</literal>
		<literal type="string">"SET  owner=\'xxx@ikmail.com\' , name=\'xxx2\'; "</literal>
		<literal type="string">"INSERT IGNORE INTO address_book_group_00 "</literal>
		<literal type="string">"SET  owner=\'xxx@ikmail.com\' , name=\'xxx3\'; "</literal>
		<literal type="string">"INSERT IGNORE INTO address_book_group_00 "</literal>
		<literal type="string">"SET  owner=\'xxx@ikmail.com\' , name=\'xxx4\';   COMMIT;"</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>acl_dbsql_update</name><argument_list>(<argument><expr><name>db_handle</name></expr></argument>, <argument><expr><name>sql</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"ret=%d; error=%d; sql=%s\n"</literal></expr></argument>, <argument><expr><name>ret</name></expr></argument>, <argument><expr><name>error</name></expr></argument>, <argument><expr><name>sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name> <name>argc</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><name><name>argv</name><index>[]</index></name></type> <name>acl_unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>

	<decl_stmt><decl><type><name>ACL_DB_INFO</name></type> <name>dbi</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_HANDLE</name> <modifier>*</modifier></type><name>db_handle</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DB_POOL</name> <modifier>*</modifier></type><name>db_pool</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	

	<expr_stmt><expr><call><name>mysql_library_init</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dbi</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dbi</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>auto_commit</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>buf_size</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>conn_timeout</name></name> <operator>=</operator> <literal type="number">6</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>db_max</name></name> <operator>=</operator> <literal type="number">20</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>debug_flag</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>ping_inter</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>rw_timeout</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>timeout_inter</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dbi</name><operator>.</operator><name>db_flags</name></name> <operator>=</operator> <name>CLIENT_MULTI_STATEMENTS</name></expr> ;</expr_stmt>

	<expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>dbi</name><operator>.</operator><name>db_addr</name></name></expr></argument>, <argument><expr><literal type="string">"127.0.0.1:3306"</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>dbi</name><operator>.</operator><name>db_addr</name></name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>dbi</name><operator>.</operator><name>db_name</name></name></expr></argument>, <argument><expr><literal type="string">"ikmail"</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>dbi</name><operator>.</operator><name>db_name</name></name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>dbi</name><operator>.</operator><name>db_user</name></name></expr></argument>, <argument><expr><literal type="string">"root"</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>dbi</name><operator>.</operator><name>db_user</name></name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>dbi</name><operator>.</operator><name>db_pass</name></name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>dbi</name><operator>.</operator><name>db_pass</name></name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>db_pool</name> <operator>=</operator> <call><name>acl_dbpool_create</name><argument_list>(<argument><expr><literal type="string">"mysql"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>dbi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>db_handle</name> <operator>=</operator> <call><name>acl_dbpool_peek</name><argument_list>(<argument><expr><name>db_pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>test_batch_insert</name><argument_list>(<argument><expr><name>db_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>acl_dbpool_destroy</name><argument_list>(<argument><expr><name>db_pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mysql_library_end</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
