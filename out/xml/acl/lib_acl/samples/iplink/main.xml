<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/workspace/acl/lib_acl/samples/iplink/main.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_IPLINK</name> <modifier>*</modifier></type><name>lnk</name> <init>= <expr><call><name>acl_iplink_create</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ip1_from</name> <init>= <expr><literal type="string">"127.0.0.1"</literal></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>ip1_to</name> <init>= <expr><literal type="string">"127.0.0.1"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ip2_from</name> <init>= <expr><literal type="string">"10.0.250.218"</literal></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>ip2_to</name> <init>= <expr><literal type="string">"10.0.250.218"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ip3_from</name> <init>= <expr><literal type="string">"10.0.250.38"</literal></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>ip3_to</name> <init>= <expr><literal type="string">"10.0.250.38"</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_iplink_insert</name><argument_list>(<argument><expr><name>lnk</name></expr></argument>, <argument><expr><name>ip1_from</name></expr></argument>, <argument><expr><name>ip1_to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"add from: %s to: %s\r\n"</literal></expr></argument>, <argument><expr><name>ip1_from</name></expr></argument>, <argument><expr><name>ip1_to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_iplink_insert</name><argument_list>(<argument><expr><name>lnk</name></expr></argument>, <argument><expr><name>ip2_from</name></expr></argument>, <argument><expr><name>ip2_to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"add from: %s to: %s\r\n"</literal></expr></argument>, <argument><expr><name>ip2_from</name></expr></argument>, <argument><expr><name>ip2_to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_iplink_insert</name><argument_list>(<argument><expr><name>lnk</name></expr></argument>, <argument><expr><name>ip3_from</name></expr></argument>, <argument><expr><name>ip3_to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"add from: %s to: %s\r\n"</literal></expr></argument>, <argument><expr><name>ip3_from</name></expr></argument>, <argument><expr><name>ip3_to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"==================================================\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>acl_iplink_list</name><argument_list>(<argument><expr><name>lnk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"==================================================\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>acl_dlink_list</name><argument_list>(<argument><expr><name>lnk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"==================================================\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>acl_iplink_lookup_str</name><argument_list>(<argument><expr><name>lnk</name></expr></argument>, <argument><expr><name>ip1_from</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"ip: %s not included!\r\n"</literal></expr></argument>, <argument><expr><name>ip1_from</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
	<else>else<block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"ip: %s included!\r\n"</literal></expr></argument>, <argument><expr><name>ip1_from</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

	<expr_stmt><expr><call><name>acl_iplink_free</name><argument_list>(<argument><expr><name>lnk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
