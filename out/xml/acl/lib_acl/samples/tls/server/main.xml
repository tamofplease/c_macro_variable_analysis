<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/acl/lib_acl/samples/tls/server/main.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive>  <expr><call><name>defined</name><argument_list>(<argument><expr><name>ACL_MS_WINDOWS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>comment</name><name>(</name><name>lib</name><name>,</name><cpp:literal>"ws2_32"</cpp:literal><name>)</name></cpp:pragma>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>comment</name><name>(</name><name>lib</name><name>,</name> <cpp:literal>"wsock32"</cpp:literal><name>)</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;time.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tls.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tls_params.h"</cpp:file></cpp:include>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>ACL_UNIX</name></cpp:ifdef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;getopt.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>conf_file</name> <init>= <expr><literal type="string">"tlssvr.cf"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type>  <name><name>serv_addr</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type>   <name>var_cfg_server_tls_loglevel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_server_tls_ccert_vd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_cfg_server_tls_scache_timeout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_server_tls_set_sessid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_server_enforce_tls</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_server_ask_client_cert</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_server_tls_req_ccert</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_server_starttls_tmout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_cert_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_key_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_dcert_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_dkey_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_eccert_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_eckey_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_CAfile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_CApath</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_dh1024_param_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_dh512_param_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_eecdh</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_server_tls_fpt_dgst</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CONFIG_INT_TABLE</name></type> <name><name>int_table</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><literal type="string">"server_tls_loglevel"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_server_tls_loglevel</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_ccert_vd"</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_ccert_vd</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_scache_timeout"</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_server_tls_scache_timeout</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_set_sessid"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_set_sessid</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_enforce_tls"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>&amp;</operator><name>var_server_enforce_tls</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_ask_client_cert"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>&amp;</operator><name>var_server_ask_client_cert</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_req_ccert"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_req_ccert</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_starttls_tmout"</literal></expr>, <expr><literal type="number">300</literal></expr>, <expr><operator>&amp;</operator><name>var_server_starttls_tmout</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CONFIG_STR_TABLE</name></type> <name><name>str_table</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><literal type="string">"server_tls_cert_file"</literal></expr>, <expr><literal type="string">"conf/server.pem"</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_cert_file</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_key_file"</literal></expr>, <expr><literal type="string">"conf/server.pem"</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_key_file</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_dcert_file"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_dcert_file</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_dkey_file"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_dkey_file</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_eccert_file"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_eccert_file</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_eckey_file"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_eckey_file</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_CAfile"</literal></expr>, <expr><literal type="string">"conf/server.pem"</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_CAfile</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_CApath"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_CApath</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_dh1024_param_file"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_dh1024_param_file</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_dh512_param_file"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_dh512_param_file</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_eecdh"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_eecdh</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"server_tls_fpt_dgst"</literal></expr>, <expr><literal type="string">"sha1"</literal></expr>, <expr><operator>&amp;</operator><name>var_server_tls_fpt_dgst</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>TLS_SERVER_INIT_PROPS</name></type> <name>init_props</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_app_conf_load</name><argument_list>(<argument><expr><name>conf_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>acl_get_app_conf_str_table</name><argument_list>(<argument><expr><name>str_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_get_app_conf_int_table</name><argument_list>(<argument><expr><name>int_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>var_tlsmgr_stand_alone</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>tls_server_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TLS_SERVER_SETUP</name><argument_list>(<argument><expr><operator>&amp;</operator><name>init_props</name></expr></argument>,
			<argument><expr><name>log_level</name> <operator>=</operator> <name>var_cfg_server_tls_loglevel</name></expr></argument>,
			<argument><expr><name>verifydepth</name> <operator>=</operator> <name>var_server_tls_ccert_vd</name></expr></argument>,
			<argument><expr><name>cache_type</name> <operator>=</operator> <name>TLS_MGR_SCACHE_SERVER</name></expr></argument>,
			<argument><expr><name>scache_timeout</name> <operator>=</operator> <name>var_cfg_server_tls_scache_timeout</name></expr></argument>,
			<argument><expr><name>set_sessid</name> <operator>=</operator> <name>var_server_tls_set_sessid</name></expr></argument>,
			<argument><expr><name>cert_file</name> <operator>=</operator> <name>var_server_tls_cert_file</name></expr></argument>,
			<argument><expr><name>key_file</name> <operator>=</operator> <name>var_server_tls_key_file</name></expr></argument>,
			<argument><expr><name>dcert_file</name> <operator>=</operator> <name>var_server_tls_dcert_file</name></expr></argument>,
			<argument><expr><name>dkey_file</name> <operator>=</operator> <name>var_server_tls_dkey_file</name></expr></argument>,
			<argument><expr><name>eccert_file</name> <operator>=</operator> <name>var_server_tls_eccert_file</name></expr></argument>,
			<argument><expr><name>eckey_file</name> <operator>=</operator> <name>var_server_tls_eckey_file</name></expr></argument>,
			<argument><expr><name>CAfile</name> <operator>=</operator> <name>var_server_tls_CAfile</name></expr></argument>,
			<argument><expr><name>CApath</name> <operator>=</operator> <name>var_server_tls_CApath</name></expr></argument>,
			<argument><expr><name>dh1024_param_file</name> <operator>=</operator> <name>var_server_tls_dh1024_param_file</name></expr></argument>,
			<argument><expr><name>dh512_param_file</name> <operator>=</operator> <name>var_server_tls_dh512_param_file</name></expr></argument>,
			<argument><expr><name>eecdh_grade</name> <operator>=</operator> <name>var_server_tls_eecdh</name></expr></argument>,
			<argument><expr><name>protocols</name> <operator>=</operator> <ternary><condition><expr><name>var_server_enforce_tls</name></expr> ?</condition><then>  <expr><name>var_server_tls_mand_proto</name></expr> </then><else>: <expr><name>var_server_tls_proto</name></expr></else></ternary></expr></argument>,
			<argument><expr><name>ask_ccert</name> <operator>=</operator> <name>var_server_ask_client_cert</name></expr></argument>,
			<argument><expr><name>fpt_dgst</name> <operator>=</operator> <name>var_server_tls_fpt_dgst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>usage</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>procname</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"usage: %s -h [help] -c conf_file\n"</literal></expr></argument>, <argument><expr><name>procname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>reply</name> <init>= <expr><literal type="string">"HTTP/1.1 200 OK\r\n"</literal>
	<literal type="string">"Date: Thu, 09 Jul 2009 03:30:09 GMT\r\n"</literal>
	<literal type="string">"Server: Apache/1.3.37 (Unix)\r\n"</literal>
	<literal type="string">"Last-Modified: Fri, 13 Mar 2009 07:37:22 GMT\r\n"</literal>
	<literal type="string">"Connection: close\r\n"</literal>
	<literal type="string">"Content-Type: text/html\r\n"</literal>
	<literal type="string">"\r\n"</literal>
	<literal type="string">"&lt;html&gt;&lt;body&gt;hello world!&lt;/body&gt;&lt;/html&gt;"</literal></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>free_ctx_fn</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>TLS_APPL_STATE</name> <modifier>*</modifier></type><name>server_tls_ctx</name> <init>= <expr><operator>(</operator><name>TLS_APPL_STATE</name><operator>*</operator><operator>)</operator> <name>ctx</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>tls_free_app_context</name><argument_list>(<argument><expr><name>server_tls_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>client_thread</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>client</name> <init>= <expr><operator>(</operator><name>ACL_VSTREAM</name><operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>static</specifier> <name>__thread</name> <name>TLS_APPL_STATE</name> <modifier>*</modifier></type><name>server_tls_ctx</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TLS_SESS_STATE</name> <modifier>*</modifier></type><name>server_sess_ctx</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TLS_SERVER_START_PROPS</name></type> <name>tls_props</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type>  <name><name>buf</name><index>[<expr><literal type="number">4096</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>ret</name></decl>, <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>time_t</name></type> <name>last</name></decl>, <decl><type ref="prev"/><name>now</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>int</name></type>   <name>tls_level</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>namaddrport</name> <init>= <expr><literal type="string">"test.com"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>serverid</name> <init>= <expr><literal type="string">"service:addr:port:helo"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>tls_grade</name> <init>= <expr><literal type="string">"low"</literal></expr></init></decl>;</decl_stmt>  <comment type="block">/* high, medium, low, export, null */</comment>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>tls_exclusions</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_tcp_nodelay</name><argument_list>(<argument><expr><call><name>ACL_VSTREAM_SOCK</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>server_tls_ctx</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>server_tls_ctx</name> <operator>=</operator> <call><name>tls_server_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>init_props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>server_tls_ctx</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"tls_server_create error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return;</return>
		</block_content>}</block></if></if_stmt>
		<expr_stmt><expr><call><name>acl_pthread_atexit_add</name><argument_list>(<argument><expr><name>server_tls_ctx</name></expr></argument>, <argument><expr><name>free_ctx_fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>server_sess_ctx</name> <operator>=</operator> <call><name>TLS_SERVER_START</name><argument_list>(<argument><expr><operator>&amp;</operator><name>tls_props</name></expr></argument>,
			<argument><expr><name>ctx</name> <operator>=</operator> <name>server_tls_ctx</name></expr></argument>,
			<argument><expr><name>stream</name> <operator>=</operator> <name>client</name></expr></argument>,
			<argument><expr><name>log_level</name> <operator>=</operator> <name>var_server_tls_loglevel</name></expr></argument>,
			<argument><expr><name>timeout</name> <operator>=</operator> <name>var_server_starttls_tmout</name></expr></argument>,
			<argument><expr><name>requirecert</name> <operator>=</operator> <operator>(</operator><name>var_server_tls_req_ccert</name> <operator>&amp;&amp;</operator> <name>var_server_enforce_tls</name><operator>)</operator></expr></argument>,
			<argument><expr><name>serverid</name> <operator>=</operator> <name>serverid</name></expr></argument>,
			<argument><expr><name>namaddr</name> <operator>=</operator> <name>namaddrport</name></expr></argument>,
			<argument><expr><name>cipher_grade</name> <operator>=</operator> <name>tls_grade</name></expr></argument>,
			<argument><expr><name>cipher_exclusions</name> <operator>=</operator> <name>tls_exclusions</name></expr></argument>,
			<argument><expr><name>fpt_dgst</name> <operator>=</operator> <name>var_server_tls_fpt_dgst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>server_sess_ctx</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"TLS_SERVER_START error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_vstream_close</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name>tls_level</name> <operator>&gt;=</operator> <name>TLS_LEV_VERIFY</name></expr>)</condition> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>TLS_CERT_IS_TRUSTED</name><argument_list>(<argument><expr><name>server_sess_ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Server certificate not trusted\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name>tls_level</name> <operator>&gt;</operator> <name>TLS_LEV_ENCRYPT</name></expr>)</condition> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>TLS_CERT_IS_MATCHED</name><argument_list>(<argument><expr><name>server_sess_ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Server certificate not verified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>time</name><argument_list>(<argument><expr><operator>&amp;</operator><name>last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while <condition>(<expr><literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>acl_vstream_gets</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <name>ACL_VSTREAM_EOF</name></expr>)</condition><block type="pseudo"><block_content>
			<goto>goto <name>END</name>;</goto></block_content></block></if></if_stmt>
		<if_stmt><if>if <condition>(<expr><call><name>acl_vstream_writen</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>ACL_VSTREAM_EOF</name></expr>)</condition><block type="pseudo"><block_content>
			<goto>goto <name>END</name>;</goto></block_content></block></if></if_stmt>
		<break>break;</break>

		<expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>i</name> <operator>%</operator> <literal type="number">50000</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>time</name><argument_list>(<argument><expr><operator>&amp;</operator><name>now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"i: %d, time: %ld\n"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>now</name> <operator>-</operator> <name>last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>last</name> <operator>=</operator> <name>now</name></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></while>

	<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
		<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>acl_vstream_gets_nonl</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <name>ACL_VSTREAM_EOF</name></expr>)</condition><block type="pseudo"><block_content>
				<goto>goto <name>END</name>;</goto></block_content></block></if></if_stmt>

			<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
				<break>break;</break></block_content></block></if></if_stmt>
			<comment type="block">/* printf("buf: %s, ret: %d\n", buf, ret); */</comment>
		</block_content>}</block></while>

		<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>acl_vstream_writen</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>reply</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="block">/* printf("\nret: %d, reply: \n%s\n", ret, reply); */</comment>
		<break>break;</break>
	</block_content>}</block></while>

<label><name>END</name>:</label>
	<expr_stmt><expr><call><name>tls_server_stop</name><argument_list>(<argument><expr><name>server_tls_ctx</name></expr></argument>, <argument><expr><name>client</name></expr></argument>, <argument><expr><name>var_server_starttls_tmout</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>server_sess_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_vstream_close</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>run</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>server</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>client</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>acl_pthread_pool_t</name> <modifier>*</modifier></type><name>pool</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>server</name> <operator>=</operator> <call><name>acl_vstream_listen</name><argument_list>(<argument><expr><name>serv_addr</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>server</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"listen %s error(%s)\n"</literal></expr></argument>, <argument><expr><name>serv_addr</name></expr></argument>, <argument><expr><call><name>acl_last_serror</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>pool</name> <operator>=</operator> <call><name>acl_thread_pool_create</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>pool</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_vstream_close</name><argument_list>(<argument><expr><name>server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"create thread pool error(%s)\n"</literal></expr></argument>, <argument><expr><call><name>acl_last_serror</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>
	
	<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>client</name> <operator>=</operator> <call><name>acl_vstream_accept</name><argument_list>(<argument><expr><name>server</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>client</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
			<if_stmt><if>if <condition>(<expr><name>errno</name> <operator>!=</operator> <name>ACL_EINTR</name></expr>)</condition> <block>{<block_content>
				<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"accept error(%s)\n"</literal></expr></argument>, <argument><expr><call><name>acl_last_serror</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block></if></if_stmt>
			<continue>continue;</continue>
		</block_content>}</block></if></if_stmt>
		<expr_stmt><expr><call><name>acl_pthread_pool_add</name><argument_list>(<argument><expr><name>pool</name></expr></argument>, <argument><expr><name>client_thread</name></expr></argument>, <argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></while>

	<expr_stmt><expr><call><name>acl_vstream_close</name><argument_list>(<argument><expr><name>server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_pthread_pool_destroy</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>free_fn</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>conf_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>char</name></type>  <name>ch</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ACL_SAFE_STRNCPY</name><argument_list>(<argument><expr><name>serv_addr</name></expr></argument>, <argument><expr><literal type="string">"0.0.0.0:443"</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>serv_addr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<while>while <condition>(<expr><operator>(</operator><name>ch</name> <operator>=</operator> <call><name>getopt</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"hc:"</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<switch>switch <condition>(<expr><name>ch</name></expr>)</condition> <block>{<block_content>
		<case>case <expr><literal type="char">'h'</literal></expr>:</case>
			<expr_stmt><expr><call><name>usage</name><argument_list>(<argument><expr><name><name>argv</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>exit</name> <argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<case>case <expr><literal type="char">'c'</literal></expr>:</case>
			<expr_stmt><expr><name>conf_file</name> <operator>=</operator> <call><name>acl_mystrdup</name><argument_list>(<argument><expr><name>optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>atexit</name><argument_list>(<argument><expr><name>free_fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		<default>default:</default>
			<break>break;</break>
		</block_content>}</block></switch>
	</block_content>}</block></while>

	<expr_stmt><expr><call><name>init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>run</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_end</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
