<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/acl/lib_acl/samples/master/master_notify/sms_notify.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_tpl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"service_var.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"notify.h"</cpp:file></cpp:include>

<comment type="block">/*
Á¬½Ó9010¶Ë¿Ú£¬Ö®ºó·¢ËÍxml¸ñÊ½Îª&lt;send_sms phone="ÊÖ»úºÅÂë" message="¶ÌÐÅÄÚÈÝ" /&gt;
³É¹¦Ôò·µ»Ø&lt;send_sms result="succeeded" /&gt;
Ê§°ÜÔò·µ»Ø&lt;send_sms result="failed" /&gt;

Ö§³Ö¶à¸öÁ¬½Ó£¬Ã¿¸öÁ¬½Ó¿ÉÒÔÁ¬Ðø·¢ËÍ£¬³¤Á¬½Ó¿É²»¶Ï
122.49.0.234
*/</comment>

<function><type><specifier>static</specifier> <name>int</name></type> <name>sms_send</name><parameter_list>(<parameter><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>client</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>phone</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>proc</name></decl></parameter>,
	<parameter><decl><type><name>int</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>info</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ip</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_VSTRING</name> <modifier>*</modifier></type><name>buf</name> <init>= <expr><call><name>acl_vstring_alloc</name><argument_list>(<argument><expr><literal type="number">256</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_XML</name> <modifier>*</modifier></type><name>xml</name> <init>= <expr><call><name>acl_xml_alloc</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type>  <name><name>res</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>ret</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_vstring_sprintf</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"&lt;send_sms phone=\"%s\" message=\"proc:%s, pid:%d, ip:%s, info:%s\" /&gt;"</literal></expr></argument>,
			<argument><expr><name>phone</name></expr></argument>, <argument><expr><name>proc</name></expr></argument>, <argument><expr><name>pid</name></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><call><name>acl_vstream_writen</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>acl_vstring_str</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>ACL_VSTRING_LEN</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
		<operator>==</operator> <name>ACL_VSTREAM_EOF</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"write to sms server error, msg: %s"</literal></expr></argument>,
			<argument><expr><call><name>acl_vstring_str</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_vstring_free</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"&gt;&gt;send: %s"</literal></expr></argument>, <argument><expr><call><name>acl_vstring_str</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_vstring_free</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>acl_vstream_read</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>res</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <name>ACL_VSTREAM_EOF</name></expr>)</condition><block type="pseudo"><block_content>
			<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return></block_content></block></if></if_stmt>
		<expr_stmt><expr><name><name>res</name><index>[<expr><name>ret</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_xml_parse</name><argument_list>(<argument><expr><name>xml</name></expr></argument>, <argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><call><name>acl_xml_is_complete</name><argument_list>(<argument><expr><name>xml</name></expr></argument>, <argument><expr><literal type="string">"send_sms"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"send ok!(%s)"</literal></expr></argument>, <argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></while>

	<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>sms_notify</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>proc</name></decl></parameter>, <parameter><decl><type><name>ACL_ARGV</name> <modifier>*</modifier></type><name>rcpts</name></decl></parameter>,
	<parameter><decl><type><name>int</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_ITER</name></type> <name>iter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>client</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type>  <name><name>ip</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>var_cfg_sms_addr</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>var_cfg_sms_addr</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"%s(%d): var_cfg_sms_addr null"</literal></expr></argument>,
			<argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>client</name> <operator>=</operator> <call><name>acl_vstream_connect</name><argument_list>(<argument><expr><name>var_cfg_sms_addr</name></expr></argument>, <argument><expr><name>ACL_BLOCKING</name></expr></argument>,
			<argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><literal type="number">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>client</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): connect %s error(%s)"</literal></expr></argument>,
			<argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>,
			<argument><expr><name>var_cfg_sms_addr</name></expr></argument>, <argument><expr><call><name>acl_last_serror</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name>var_cfg_host_ip</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>var_cfg_host_ip</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>ip</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ip</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>var_cfg_host_ip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>acl_getsockname</name><argument_list>(<argument><expr><call><name>ACL_VSTREAM_SOCK</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ip</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_warn</name><argument_list>(<argument><expr><literal type="string">"%s(%d): get local ip error: %s"</literal></expr></argument>,
			<argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><call><name>acl_last_serror</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>ip</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ip</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"127.0.0.1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>strchr</name><argument_list>(<argument><expr><name>ip</name></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>ptr</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><operator>*</operator><name>ptr</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
	</block_content>}</block></else></if_stmt>

	<macro><name>acl_foreach</name><argument_list>(<argument>iter</argument>, <argument>rcpts</argument>)</argument_list></macro> <block>{<block_content>
		<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>phone</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator> <name><name>iter</name><operator>.</operator><name>data</name></name></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><call><name>sms_send</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>phone</name></expr></argument>, <argument><expr><name>proc</name></expr></argument>, <argument><expr><name>pid</name></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><name>ip</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
			<break>break;</break></block_content></block></if></if_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>acl_vstream_close</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
