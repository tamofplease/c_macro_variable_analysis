<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/acl/lib_dict/src/dict_alloc.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"StdAfx.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dict.h"</cpp:file></cpp:include>

<comment type="block">/* dict_default_lookup - trap unimplemented operation */</comment>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dict_default_lookup</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><name>key</name></type> <name>acl_unused</name></decl></parameter>,
	<parameter><decl><type><name>size_t</name> <name>key_len</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier><name>value</name></type> <name>acl_unused</name></decl></parameter>,
	<parameter><decl><type><name>size_t</name> <modifier>*</modifier><name>size</name></type> <name>acl_unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s table %s: lookup operation is not supported"</literal></expr></argument>,
		<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* dict_default_update - trap unimplemented operation */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dict_default_update</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><name>key</name></type> <name>acl_unused</name></decl></parameter>,
	<parameter><decl><type><name>size_t</name> <name>key_len</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><name>value</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <name>len</name></type> <name>acl_unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s table %s: update operation is not supported"</literal></expr></argument>,
		<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* dict_default_delete - trap unimplemented operation */</comment>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dict_default_delete</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><name>key</name></type> <name>acl_unused</name></decl></parameter>,
	<parameter><decl><type><name>size_t</name> <name>key_len</name></type> <name>acl_unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s table %s: delete operation is not supported"</literal></expr></argument>,
		<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* not reached */</comment>
	<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* dict_default_sequence_reset - trap unimplemented operation */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dict_default_sequence_reset</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s table %s: sequence_reset operation is not supported"</literal></expr></argument>,
		<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* dict_default_sequence_delcur - trap unimplemented operation */</comment>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dict_default_sequence_delcur</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s table %s: sequence_delcur operation is not supported"</literal></expr></argument>,
		<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* not reached */</comment>
	<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* dict_default_sequence - trap unimplemented operation */</comment>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dict_default_sequence</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>, <parameter><decl><type><name>int</name> <name>function</name></type> <name>acl_unused</name></decl></parameter>,
	<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier><name>key</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier><name>key_size</name></type> <name>acl_unused</name></decl></parameter>,
	<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier><name>value</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier><name>value_size</name></type> <name>acl_unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s table %s: sequence operation is not supported"</literal></expr></argument>,
		<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* not reached */</comment>
	<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* dict_default_close - trap unimplemented operation */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dict_default_close</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s table %s: close operation is not supported"</literal></expr></argument>,
		<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* dict_alloc - allocate dictionary object, initialize super-class */</comment>

<function><type><name>DICT</name>   <modifier>*</modifier></type><name>dict_alloc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dict_type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dict_name</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>DICT</name>   <modifier>*</modifier></type><name>dict</name> <init>= <expr><operator>(</operator><name>DICT</name> <operator>*</operator><operator>)</operator> <call><name>acl_mymalloc</name><argument_list>(<argument><expr><name>size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name>            <operator>=</operator> <call><name>acl_mystrdup</name><argument_list>(<argument><expr><name>dict_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name>            <operator>=</operator> <call><name>acl_mystrdup</name><argument_list>(<argument><expr><name>dict_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>flags</name></name>           <operator>=</operator> <name>DICT_FLAG_FIXED</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>lookup</name></name>          <operator>=</operator> <name>dict_default_lookup</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>update</name></name>          <operator>=</operator> <name>dict_default_update</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>delete_it</name></name>       <operator>=</operator> <name>dict_default_delete</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>sequence</name></name>        <operator>=</operator> <name>dict_default_sequence</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>sequence_reset</name></name>  <operator>=</operator> <name>dict_default_sequence_reset</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>sequence_delcur</name></name> <operator>=</operator> <name>dict_default_sequence_delcur</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>close</name></name>           <operator>=</operator> <name>dict_default_close</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>lock_fd</name></name>         <operator>=</operator> <name>ACL_FILE_INVALID</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>stat_fd</name></name>         <operator>=</operator> <name>ACL_FILE_INVALID</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>mtime</name></name>           <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict</name><operator>-&gt;</operator><name>fold_buf</name></name>        <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<return>return <expr><name>dict</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* dict_free - super-class destructor */</comment>

<function><type><name>void</name></type>    <name>dict_free</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name><name>dict</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>dict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
