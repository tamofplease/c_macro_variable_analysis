<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/acl/lib_dict/src/dict_ht.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"StdAfx.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dict.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dict_ht.h"</cpp:file></cpp:include>

<comment type="block">/* Application-specific. */</comment>

<typedef>typedef <type><struct>struct <block>{
	<decl_stmt><decl><type><name>DICT</name></type>    <name>dict</name></decl>;</decl_stmt>			<comment type="block">/* generic members */</comment>
	<decl_stmt><decl><type><name>ACL_HTABLE</name> <modifier>*</modifier></type><name>table</name></decl>;</decl_stmt>		<comment type="block">/* hash table */</comment>
	<function_decl><type><name>void</name></type>    (<modifier>*</modifier><name>remove_fn</name>) <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>	<comment type="block">/* callback */</comment>
}</block></struct></type> <name>DICT_HT</name>;</typedef>

<comment type="block">/* dict_ht_lookup - find hash-table entry */</comment>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dict_ht_lookup</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <name>name_len</name></type> <name>acl_unused</name></decl></parameter>,
	<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>DICT_HT</name> <modifier>*</modifier></type><name>dict_ht</name> <init>= <expr><operator>(</operator><name>DICT_HT</name> <operator>*</operator><operator>)</operator> <name>dict</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>dict_errno</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

	<expr_stmt><expr><operator>*</operator><name>value</name> <operator>=</operator> <call><name>acl_htable_find</name><argument_list>(<argument><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>table</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><operator>*</operator><name>value</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><operator>*</operator><name>size</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><operator>*</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<return>return <expr><operator>(</operator><operator>*</operator><name>value</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* dict_ht_update - add or update hash-table entry */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dict_ht_update</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <name>name_len</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>DICT_HT</name> <modifier>*</modifier></type><name>dict_ht</name> <init>= <expr><operator>(</operator><name>DICT_HT</name> <operator>*</operator><operator>)</operator> <name>dict</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_HTABLE_INFO</name> <modifier>*</modifier></type><name>ht</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ht</name> <operator>=</operator> <call><name>acl_htable_locate</name><argument_list>(<argument><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>table</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name><name>ht</name><operator>-&gt;</operator><name>value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name>ht</name> <operator>=</operator> <call><name>acl_htable_enter</name><argument_list>(<argument><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>table</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
	<expr_stmt><expr><name><name>ht</name><operator>-&gt;</operator><name>value</name></name> <operator>=</operator> <call><name>acl_mymemdup</name><argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* dict_ht_close - disassociate from hash table */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dict_ht_close</name><parameter_list>(<parameter><decl><type><name>DICT</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>DICT_HT</name> <modifier>*</modifier></type><name>dict_ht</name> <init>= <expr><operator>(</operator><name>DICT_HT</name> <operator>*</operator><operator>)</operator> <name>dict</name></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>dict_ht</name><operator>-&gt;</operator><name>remove_fn</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_htable_free</name><argument_list>(<argument><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>table</name></name></expr></argument>, <argument><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>remove_fn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><call><name>dict_free</name><argument_list>(<argument><expr><name>dict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* dict_ht_open - create association with hash table */</comment>

<function><type><name>DICT</name>   <modifier>*</modifier></type><name>dict_ht_open</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ACL_HTABLE</name> <modifier>*</modifier></type><name>table</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>remove_fn</name>) <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>DICT_HT</name> <modifier>*</modifier></type><name>dict_ht</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>dict_ht</name> <operator>=</operator> <operator>(</operator><name>DICT_HT</name> <operator>*</operator><operator>)</operator> <call><name>dict_alloc</name><argument_list>(<argument><expr><name>DICT_TYPE_HT</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>dict_ht</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>dict</name><operator>.</operator><name>lookup</name></name> <operator>=</operator> <name>dict_ht_lookup</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>dict</name><operator>.</operator><name>update</name></name> <operator>=</operator> <name>dict_ht_update</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>dict</name><operator>.</operator><name>close</name></name> <operator>=</operator> <name>dict_ht_close</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>table</name></name> <operator>=</operator> <name>table</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dict_ht</name><operator>-&gt;</operator><name>remove_fn</name></name> <operator>=</operator> <name>remove_fn</name></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><operator>&amp;</operator><name><name>dict_ht</name><operator>-&gt;</operator><name>dict</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
