<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/acl/lib_protocol/src/icmp/icmp_host.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"StdAfx.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"icmp_struct.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"icmp_private.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"icmp/lib_icmp.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>icmp_host_free</name><parameter_list>(<parameter><decl><type><name>ICMP_HOST</name> <modifier>*</modifier></type><name>host</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>host</name><operator>-&gt;</operator><name>npkt</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>icmp_pkt_free</name><argument_list>(<argument><expr><name><name>host</name><operator>-&gt;</operator><name>pkts</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>ICMP_HOST</name> <modifier>*</modifier></type><name>icmp_host_alloc</name><parameter_list>(<parameter><decl><type><name>ICMP_CHAT</name> <modifier>*</modifier></type><name>chat</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>domain</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ip</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ICMP_HOST</name> <modifier>*</modifier></type><name>host</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>ip</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>*</operator><name>ip</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s(%d): ip null"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>host</name> <operator>=</operator> <operator>(</operator><name>ICMP_HOST</name><operator>*</operator><operator>)</operator> <call><name>acl_mycalloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ICMP_HOST</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>domain</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>domain</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>ACL_SAFE_STRNCPY</name><argument_list>(<argument><expr><name><name>host</name><operator>-&gt;</operator><name>domain</name></name></expr></argument>, <argument><expr><name>domain</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>host</name><operator>-&gt;</operator><name>domain</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><call><name>ACL_SAFE_STRNCPY</name><argument_list>(<argument><expr><name><name>host</name><operator>-&gt;</operator><name>dest_ip</name></name></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>host</name><operator>-&gt;</operator><name>dest_ip</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>strchr</name><argument_list>(<argument><expr><name><name>host</name><operator>-&gt;</operator><name>dest_ip</name></name></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>ptr</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><operator>*</operator><name>ptr</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block">/* È¥µô¶Ë¿Ú×Ö¶Î */</comment>

	<if_stmt><if>if <condition>(<expr><name><name>chat</name><operator>-&gt;</operator><name>aio</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>icmp_chat_aio_add</name><argument_list>(<argument><expr><name>chat</name></expr></argument>, <argument><expr><name>host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><call><name>acl_ring_prepend</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>chat</name><operator>-&gt;</operator><name>host_head</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>host</name><operator>-&gt;</operator><name>host_ring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>chat</name></name>  <operator>=</operator> <name>chat</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>nsent</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>dest</name><operator>.</operator><name>sin_family</name></name>      <operator>=</operator> <name>AF_INET</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>dest</name><operator>.</operator><name>sin_addr</name><operator>.</operator><name>s_addr</name></name> <operator>=</operator> <call><name>inet_addr</name><argument_list>(<argument><expr><name><name>host</name><operator>-&gt;</operator><name>dest_ip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>host</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>icmp_host_init</name><parameter_list>(<parameter><decl><type><name>ICMP_HOST</name> <modifier>*</modifier></type><name>host</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name></type> <name>code</name></decl></parameter>,
	<parameter><decl><type><name>size_t</name></type> <name>npkt</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>dlen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delay</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>timeout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>npkt</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name>npkt</name> <operator>=</operator> <literal type="number">5</literal></expr>;</expr_stmt></block_content></block></if>
	<if type="elseif">else if <condition>(<expr><name>npkt</name> <operator>&gt;</operator> <literal type="number">10240</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name>npkt</name> <operator>=</operator> <literal type="number">10240</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>delay</name></name>   <operator>=</operator> <name>delay</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>timeout</name></name> <operator>=</operator> <name>timeout</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>dlen</name></name> <operator>=</operator> <name>dlen</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>npkt</name></name> <operator>=</operator> <name>npkt</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>pkts</name></name> <operator>=</operator> <operator>(</operator><name>ICMP_PKT</name><operator>*</operator><operator>*</operator><operator>)</operator> <call><name>acl_mycalloc</name><argument_list>(<argument><expr><name><name>host</name><operator>-&gt;</operator><name>npkt</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ICMP_PKT</name><operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>npkt</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>ICMP_PKT</name> <modifier>*</modifier></type><name>pkt</name> <init>= <expr><call><name>icmp_pkt_alloc</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>icmp_pkt_client</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>code</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>dlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>pkts</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>pkt</name></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>ICMP_HOST</name> <modifier>*</modifier></type><name>icmp_host_new</name><parameter_list>(<parameter><decl><type><name>ICMP_CHAT</name> <modifier>*</modifier></type><name>chat</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>domain</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ip</name></decl></parameter>,
	<parameter><decl><type><name>size_t</name></type> <name>npkt</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>dlen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delay</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>timeout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ICMP_HOST</name> <modifier>*</modifier></type><name>host</name> <init>= <expr><call><name>icmp_host_alloc</name><argument_list>(<argument><expr><name>chat</name></expr></argument>, <argument><expr><name>domain</name></expr></argument>, <argument><expr><name>ip</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>icmp_host_init</name><argument_list>(<argument><expr><name>host</name></expr></argument>, <argument><expr><name>ICMP_TYPE_ECHO</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>npkt</name></expr></argument>, <argument><expr><name>dlen</name></expr></argument>, <argument><expr><name>delay</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>host</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>icmp_host_set</name><parameter_list>(<parameter><decl><type><name>ICMP_HOST</name> <modifier>*</modifier></type><name>host</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>,
	<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>stat_respond</name>)<parameter_list>(<parameter><decl><type><name>ICMP_PKT_STATUS</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,
	<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>stat_timeout</name>)<parameter_list>(<parameter><decl><type><name>ICMP_PKT_STATUS</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,
	<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>stat_unreach</name>)<parameter_list>(<parameter><decl><type><name>ICMP_PKT_STATUS</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,
	<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>stat_finish</name>)<parameter_list>(<parameter><decl><type><name>ICMP_HOST</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>arg</name></name> <operator>=</operator> <name>arg</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>stat_respond</name></name> <operator>=</operator> <name>stat_respond</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>stat_unreach</name></name> <operator>=</operator> <name>stat_unreach</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>stat_timeout</name></name> <operator>=</operator> <name>stat_timeout</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>host</name><operator>-&gt;</operator><name>stat_finish</name></name>  <operator>=</operator> <name>stat_finish</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
