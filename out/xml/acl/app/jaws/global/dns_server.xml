<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/acl/app/jaws/global/dns_server.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sys_patch.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>ACL_BCB_COMPILER</name></cpp:ifdef>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>hdrstop</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dns.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MSG_SEND</name></cpp:macro>	<cpp:value>acl_msgio_send</cpp:value></cpp:define>

<comment type="block">/* DNS²éÑ¯Ïß³ÌÏòÖ÷Ïß³Ì·¢ËÍIOÏûÏ¢£¬ÒòÎª¶à¸öÏß³Ì¶¼ÒªÓÃÒ»¸öÏûÏ¢¾ä±ú·¢ËÍÏûÏ¢£¬ËùÒÔÐèÒª¼ÓËø */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>reply_lookup_msg</name><parameter_list>(<parameter><decl><type><name>DNS_CTX</name> <modifier>*</modifier></type><name>dns_ctx</name></decl></parameter>, <parameter><decl><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"reply_lookup_msg"</literal></expr></init></decl>;</decl_stmt>

	<comment type="block">/* ¼ÓËø */</comment>
	<expr_stmt><expr><call><name>acl_pthread_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dns</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ÏòÖ÷Ïß³Ì·¢ËÍDNS²éÑ¯½á¹ûÏûÏ¢ */</comment>
	<if_stmt><if>if <condition>(<expr><call><name>MSG_SEND</name><argument_list>(<argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>mio</name></name></expr></argument>, <argument><expr><name>DNS_MSG_LOOKUP_RESULT</name></expr></argument>, <argument><expr><name>dns_ctx</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>DNS_CTX</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s: send msg error, domain(%s)"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>domain_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/* ½âËø */</comment>
	<expr_stmt><expr><call><name>acl_pthread_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dns</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ÊÍ·ÅÓÉ msg_lookup º¯Êý·ÖÅäµÄÄÚ´æ */</comment>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>dns_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* DNS²éÑ¯Ïß³Ì£¬²éµ½DNS½á¹û»áÍ¨¹ýIOÏûÏ¢½«Êý¾Ý´«µÝ¸ø·Ç×èÈûÊ½Ö÷Ïß³ÌµÄÏûÏ¢¶ÓÁÐ */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>lookup_thread</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"lookup_thread"</literal></expr></init></decl>;</decl_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_THREAD_POOL</name></cpp:ifdef>
	<decl_stmt><decl><type><name>DNS_CTX</name> <modifier>*</modifier></type><name>dns_ctx</name> <init>= <expr><operator>(</operator><name>DNS_CTX</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns</name> <init>= <expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns</name></name></expr></init></decl>;</decl_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><name>DNS_CTX</name> <modifier>*</modifier></type><name>dns_ctx</name> <init>= <expr><operator>(</operator><name>DNS_CTX</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns</name> <init>= <expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns</name></name></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name>int</name></type>  <name>error</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>n</name></decl>, <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns_db</name></name> <operator>=</operator> <call><name>acl_gethostbyname</name><argument_list>(<argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>domain_key</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns_db</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s: gethostbyname error(%s), domain(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><call><name>acl_netdb_strerror</name><argument_list>(<argument><expr><name>error</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>domain_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>ip_cnt</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>reply_lookup_msg</name><argument_list>(<argument><expr><name>dns_ctx</name></expr></argument>, <argument><expr><name>dns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>n</name> <operator>=</operator> <call><name>acl_netdb_size</name><argument_list>(<argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns_db</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>ip_cnt</name></name> <operator>=</operator> <ternary><condition><expr><name>n</name> <operator>&gt;</operator> <name>DNS_IP_MAX</name></expr> ?</condition><then> <expr><name>DNS_IP_MAX</name></expr> </then><else>: <expr><name>n</name></expr></else></ternary></expr>;</expr_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>dns_ctx</name><operator>-&gt;</operator><name>ip_cnt</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>ip</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>ip</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>,
			<argument><expr><call><name>acl_netdb_index_ip</name><argument_list>(<argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns_db</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>port</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="block">/* ¶ÔÓÚDNS²éÑ¯µ½µÄ½á¹û£¬²ÉÓÃÄ¬ÈÏµÄ¶Ë¿ÚºÅ */</comment>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>reply_lookup_msg</name><argument_list>(<argument><expr><name>dns_ctx</name></expr></argument>, <argument><expr><name>dns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* Ö÷Ïß³ÌÏûÏ¢´¦Àíº¯Êý: Ö÷Ïß³ÌÍ¨¹ý´Ëº¯Êý´´½¨DNSÏß³Ì½øÐÐDNS²éÑ¯¹ý³Ì */</comment>

<function><type><specifier>static</specifier> <name>int</name></type> <name>msg_lookup</name><parameter_list>(<parameter><decl><type><name>int</name> <name>msg_type</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>ACL_MSGIO</name> <modifier>*</modifier></type><name>mio</name></decl></parameter>,
		  <parameter><decl><type><specifier>const</specifier> <name>ACL_MSGIO_INFO</name> <modifier>*</modifier></type><name>info</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>DNS_CTX</name> <modifier>*</modifier></type><name>dns_ctx</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>dns_ctx</name> <operator>=</operator> <operator>(</operator><name>DNS_CTX</name> <operator>*</operator><operator>)</operator> <call><name>acl_mycalloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>DNS_CTX</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>dns_ctx</name></expr></argument>, <argument><expr><call><name>acl_vstring_str</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>buf</name></name></expr></argument>)</argument_list></call></expr></argument>,
		<argument><expr><call><name>ACL_VSTRING_LEN</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>buf</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ÉèÖÃDNS¾ä±ú */</comment>
	<expr_stmt><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns</name></name> <operator>=</operator> <operator>(</operator><name>DNS_SERVER</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr>;</expr_stmt>
	<comment type="block">/* ÉèÖÃÏûÏ¢¾ä±ú£¬Ïß³Ì³ØÖÐµÄ²éÑ¯Ïß³ÌÍ¨¹ýÏò´Ë¾ä±ú·¢ËÍÏûÏ¢ÒÔÍ¨Öª
	 * Ö÷Ïß³ÌÓÐ¹ØDNSµÄ²éÑ¯½á¹û 
	 */</comment>
	<expr_stmt><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>mio</name></name> <operator>=</operator> <name>mio</name></expr>;</expr_stmt>

	<comment type="block">/* ´´½¨µ¥¶ÀµÄÏß³Ì½øÐÐ×èÈûÊ½DNS²éÑ¯¹ý³Ì */</comment>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_THREAD_POOL</name></cpp:ifdef>
	<expr_stmt><expr><call><name>acl_pthread_pool_add</name><argument_list>(<argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns</name><operator>-&gt;</operator><name>wq</name></name></expr></argument>, <argument><expr><name>lookup_thread</name></expr></argument>, <argument><expr><name>dns_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name>lookup_thread</name><argument_list>(<argument><expr><name>dns_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

	<return>return <expr><operator>(</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* Ö÷Ïß³ÌÏûÏ¢´¦Àíº¯Êý: Ö÷Ïß³ÌÍ¨¹ý´Ëº¯Êý½ÓÊÕDNS²éÑ¯Ïß³Ì·¢ËÍµÄDNS²éÑ¯½á¹ûÏûÏ¢ */</comment>

<function><type><specifier>static</specifier> <name>int</name></type> <name>msg_lookup_result</name><parameter_list>(<parameter><decl><type><name>int</name> <name>msg_type</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>ACL_MSGIO</name> <modifier>*</modifier><name>mio</name></type> <name>acl_unused</name></decl></parameter>,
		  <parameter><decl><type><specifier>const</specifier> <name>ACL_MSGIO_INFO</name> <modifier>*</modifier></type><name>info</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>DNS_CTX</name> <modifier>*</modifier></type><name>dns_ctx</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns</name> <init>= <expr><operator>(</operator><name>DNS_SERVER</name><operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>

	<comment type="block">/* »ñµÃDNS²éÑ¯Ïß³ÌµÄ½á¹ûÏûÏ¢ */</comment>
	<expr_stmt><expr><name>dns_ctx</name> <operator>=</operator> <operator>(</operator><name>DNS_CTX</name> <operator>*</operator><operator>)</operator> <call><name>acl_vstring_str</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>body</name><operator>.</operator><name>buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ½«²éÑ¯½á¹û·ÅÈëDNS»º´æÖÐ */</comment>
	<if_stmt><if>if <condition>(<expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>ip_cnt</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>dns_cache_push</name><argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>dns_cache</name></name></expr></argument>, <argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns_db</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/* ÊÍ·ÅÓÉ lookup_thread ·ÖÅäµÄ dns_db ¶ÔÏó */</comment>
	<if_stmt><if>if <condition>(<expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns_db</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_netdb_free</name><argument_list>(<argument><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns_db</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><name><name>dns_ctx</name><operator>-&gt;</operator><name>dns_db</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

	<comment type="block">/* »Øµ÷ÇëÇóÈÎÎñº¯Êý */</comment>
	<expr_stmt><expr><call><name><name>dns_ctx</name><operator>-&gt;</operator><name>callback</name></name><argument_list>(<argument><expr><name>dns_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* ´´½¨DNS²éÑ¯¾ä±ú */</comment>

<function><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns_server_create</name><parameter_list>(<parameter><decl><type><name>ACL_AIO</name> <modifier>*</modifier></type><name>aio</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>timeout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"dns_server_create"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>max_threads</name> <init>= <expr><literal type="number">200</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>idle_timeout</name> <init>= <expr><literal type="number">60</literal></expr></init></decl> <comment type="block">/* ´ËÖµÄ¿Ç°²»Æð×÷ÓÃ£¬ÐèÒªÐÞ¸ÄÒ»ÏÂACL¿â²Å¿É */</comment>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>aio</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s(%d): aio null"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/* acl ¿âµÄDNS»º´æÄ£¿éÐèÒª¼ÓËø£¬ÒòÎª²éÑ¯Ïß³Ì³Ø¶¼Òª·ÃÎÊ¸ÃÍ¬Ò»×ÊÔ´
	 * ½öÈÃ acl µÄDNS»º´æÄ£¿éµÄ»º´æÊ±¼äÎª60Ãë£¬ÒòÎª±¾³ÌÐòÄ£¿éÒ²ÓÐ»º´æ¿ØÖÆ
	 * ÒòÎª±¾´úÂë×Ô¼ºÒÑ¾­ÊµÏÖÁËDNS»º´æ£¬ËùÒÔ²»ÐèÒªACL¿âµÄDNS»º´æ´¦Àí
	 * acl_netdb_cache_init(60 , 1);
	 */</comment>

	<expr_stmt><expr><name>dns</name> <operator>=</operator> <operator>(</operator><name>DNS_SERVER</name> <operator>*</operator><operator>)</operator> <call><name>acl_mycalloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>DNS_SERVER</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dns</name><operator>-&gt;</operator><name>aio</name></name> <operator>=</operator> <name>aio</name></expr>;</expr_stmt>
	<comment type="block">/* ±¾µØµÄDNS»º´æÄ£¿éÐèÒª¼ÓËø£¬ÒòÎªÖ»ÓÐÒ»¸öÏß³Ì·ÃÎÊÆä×ÊÔ´ */</comment>
	<expr_stmt><expr><name><name>dns</name><operator>-&gt;</operator><name>dns_cache</name></name> <operator>=</operator> <call><name>dns_cache_create</name><argument_list>(<argument><expr><name>timeout</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<comment type="block">/* ¼àÌý IO ÊÂ¼þÏûÏ¢ */</comment>
	<expr_stmt><expr><name><name>dns</name><operator>-&gt;</operator><name>listener</name></name> <operator>=</operator> <call><name>acl_msgio_listen</name><argument_list>(<argument><expr><name>aio</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>dns</name><operator>-&gt;</operator><name>listener</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s: listen error"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/* ×¢²á IO ÊÂ¼þÏûÏ¢¼°´¦Àíº¯Êý£ºÓÃÓÚ¼àÌýÐÂµÄ²éÑ¯ÇëÇó */</comment>
	<expr_stmt><expr><call><name>acl_msgio_listen_reg</name><argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>listener</name></name></expr></argument>, <argument><expr><name>DNS_MSG_LOOKUP</name></expr></argument>, <argument><expr><name>msg_lookup</name></expr></argument>, <argument><expr><name>dns</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>acl_msgio_addr</name><argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>listener</name></name></expr></argument>, <argument><expr><name><name>dns</name><operator>-&gt;</operator><name>addr</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>addr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>dns</name><operator>-&gt;</operator><name>mio</name></name> <operator>=</operator> <call><name>acl_msgio_connect</name><argument_list>(<argument><expr><name>aio</name></expr></argument>, <argument><expr><name><name>dns</name><operator>-&gt;</operator><name>addr</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>dns</name><operator>-&gt;</operator><name>mio</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s: connect server(%s) error"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name><name>dns</name><operator>-&gt;</operator><name>addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/* ×¢²á IO ÊÂ¼þÏûÏ¢¼°´¦Àíº¯Êý£ºÓÃÓÚ´¦Àí²éÑ¯Ïß³Ì·µ»Ø²éÑ¯½á¹û */</comment>
	<expr_stmt><expr><call><name>acl_msgio_reg</name><argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>mio</name></name></expr></argument>, <argument><expr><name>DNS_MSG_LOOKUP_RESULT</name></expr></argument>, <argument><expr><name>msg_lookup_result</name></expr></argument>, <argument><expr><name>dns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ³õÊ¼»¯DNS¹²ÏíÏß³ÌËø */</comment>
	<expr_stmt><expr><call><name>acl_pthread_mutex_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dns</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ÐèÒª´´½¨¶ÀÁ¢µÄÏß³Ì³Ì²éÑ¯DNS(ÒòÎª²éÑ¯DNSÊÇ×èÈûÊ½²éÑ¯) */</comment>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_THREAD_POOL</name></cpp:ifdef>
	<expr_stmt><expr><name><name>dns</name><operator>-&gt;</operator><name>wq</name></name> <operator>=</operator> <call><name>acl_thread_pool_create</name><argument_list>(<argument><expr><name>max_threads</name></expr></argument>, <argument><expr><name>idle_timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	
	<return>return <expr><operator>(</operator><name>dns</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* ¹Ø±ÕDNS²éÑ¯¾ä±ú */</comment>

<function><type><name>void</name></type> <name>dns_server_close</name><parameter_list>(<parameter><decl><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_msgio_close</name><argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>listener</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_pthread_pool_destroy</name><argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>wq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>dns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dns_server_static_add</name><parameter_list>(<parameter><decl><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>delim</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>def_port</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>ACL_DNS_DB</name> <modifier>*</modifier></type><name>dns_db</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_ARGV</name> <modifier>*</modifier></type><name>argv</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>i</name></decl>, <decl><type ref="prev"/><name>port</name></decl>;</decl_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive>	<name>RETURN</name></cpp:undef>
<cpp:define>#<cpp:directive>define</cpp:directive>	<cpp:macro><name>RETURN</name></cpp:macro> <cpp:value>do {  \
	if (argv != NULL)  \
		acl_argv_free(argv);  \
	if (dns_db != NULL)  \
		acl_netdb_free(dns_db);  \
	return;  \
} while (0)</cpp:value></cpp:define>

	<expr_stmt><expr><name>argv</name> <operator>=</operator> <call><name>acl_argv_split</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name>delim</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>argv</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name>RETURN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>argv</name><operator>-&gt;</operator><name>argc</name></name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name>RETURN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>dns_db</name> <operator>=</operator> <call><name>acl_netdb_new</name><argument_list>(<argument><expr><name><name>argv</name><operator>-&gt;</operator><name>argv</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>argv</name><operator>-&gt;</operator><name>argc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>strchr</name><argument_list>(<argument><expr><name><name>argv</name><operator>-&gt;</operator><name>argv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>ptr</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><operator>*</operator><name>ptr</name><operator>++</operator> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>port</name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
			<if_stmt><if>if <condition>(<expr><name>port</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
				<expr_stmt><expr><name>port</name> <operator>=</operator> <name>def_port</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></if> <else>else <block>{<block_content>
			<expr_stmt><expr><name>port</name> <operator>=</operator> <name>def_port</name></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<expr_stmt><expr><call><name>acl_netdb_add_addr</name><argument_list>(<argument><expr><name>dns_db</name></expr></argument>, <argument><expr><name><name>argv</name><operator>-&gt;</operator><name>argv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>

	<comment type="block">/* ÉèÖÃ³¬Ê±Ê±¼äÎª0´Ó¶øÊ¹ÆäÓÀ²»³¬Ê± */</comment>
	<expr_stmt><expr><call><name>dns_cache_push_one</name><argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>dns_cache</name></name></expr></argument>, <argument><expr><name>dns_db</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>RETURN</name></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* ¿ªÊ¼²éÑ¯Ä³¸öÓòÃû */</comment>

<function><type><name>int</name></type> <name>dns_server_lookup</name><parameter_list>(<parameter><decl><type><name>DNS_SERVER</name> <modifier>*</modifier></type><name>dns</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>DNS_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"dns_server_lookup"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_MSGIO</name> <modifier>*</modifier></type><name>mio</name> <init>= <expr><name><name>dns</name><operator>-&gt;</operator><name>mio</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>DNS_CTX</name></type> <name>dns_ctx</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_DNS_DB</name> <modifier>*</modifier></type><name>dns_db</name></decl>;</decl_stmt>

	<comment type="block">/* Ö»ËùÒÔ²ÉÓÃ´Ë·½Ê½£¬ÊÇÎªÁË±£Ö¤ dns_server_lookup ²ÎÊý ctxÎª const ÀàÐÍ */</comment>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dns_ctx</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dns_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ÏÈ²éÑ¯DNS»º´æ±íÖÐÊÇ·ñ´æÔÚ±¾´ÎËù²éÓòÃû */</comment>
	<expr_stmt><expr><name>dns_db</name> <operator>=</operator> <call><name>dns_cache_lookup</name><argument_list>(<argument><expr><name><name>dns</name><operator>-&gt;</operator><name>dns_cache</name></name></expr></argument>, <argument><expr><name><name>ctx</name><operator>-&gt;</operator><name>domain_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>dns_db</name></expr>)</condition> <block>{<block_content>
		<decl_stmt><decl><type><name>ACL_ITER</name></type> <name>iter</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type>   <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

		<macro><name>acl_foreach</name><argument_list>(<argument>iter</argument>, <argument>dns_db</argument>)</argument_list></macro> <block>{<block_content>
			<decl_stmt><decl><type><specifier>const</specifier> <name>ACL_HOST_INFO</name> <modifier>*</modifier></type><name>info</name></decl>;</decl_stmt>

			<expr_stmt><expr><name>info</name> <operator>=</operator> <operator>(</operator><specifier>const</specifier> <name>ACL_HOST_INFO</name><operator>*</operator><operator>)</operator> <name><name>iter</name><operator>.</operator><name>data</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>ACL_SAFE_STRNCPY</name><argument_list>(<argument><expr><name><name>dns_ctx</name><operator>.</operator><name>ip</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>ip</name></name></expr></argument>,
				<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>dns_ctx</name><operator>.</operator><name>ip</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>dns_ctx</name><operator>.</operator><name>port</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name><name>info</name><operator>-&gt;</operator><name>hport</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>dns_ctx</name><operator>.</operator><name>ip_cnt</name></name><operator>++</operator></expr>;</expr_stmt>
			<if_stmt><if>if <condition>(<expr><name><name>dns_ctx</name><operator>.</operator><name>ip_cnt</name></name> <operator>&gt;=</operator> <name>DNS_IP_MAX</name></expr>)</condition><block type="pseudo"><block_content>
				<break>break;</break></block_content></block></if></if_stmt>
		</block_content>}</block>

		<comment type="block">/* ¶ÔÒÑ¾­DNS»º´æ±íÖÐÒÑ¾­´æÔÚµÄÓòÃûÖ±½Ó´¥·¢ÈÎÎñ»Øµ÷¹ý³Ì */</comment>
		<expr_stmt><expr><call><name><name>dns_ctx</name><operator>.</operator><name>callback</name></name><argument_list>(<argument><expr><operator>&amp;</operator><name>dns_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="block">/* ´Ë´¦Ö®ËùÒÔÐèÒªÊÍ·Å¸Ã¶ÔÏó£¬ÊÇÒòÎª dns_cache_lookup ·µ»ØµÄ¶ÔÏóÎª¶¯Ì¬
		 * ·ÖÅäµÄ(acl_netdb_clone)
		 */</comment>
		<expr_stmt><expr><call><name>acl_netdb_free</name><argument_list>(<argument><expr><name>dns_db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/* Ïò²éÑ¯Ïß³Ì³Ø·¢ËÍ²éÑ¯Ö¸Áî */</comment>
	
	<if_stmt><if>if <condition>(<expr><call><name>MSG_SEND</name><argument_list>(<argument><expr><name>mio</name></expr></argument>, <argument><expr><name>DNS_MSG_LOOKUP</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>dns_ctx</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>DNS_CTX</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s: send msg error, domain(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name><name>dns_ctx</name><operator>.</operator><name>domain_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
