<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/workspace/acl/app/jaws/global/client_entry.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"service.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>ACL_BCB_COMPILER</name></cpp:ifdef>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>hdrstop</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>void</name></type> <name>client_entry_free</name><parameter_list>(<parameter><decl><type><name>CLIENT_ENTRY</name> <modifier>*</modifier></type><name>entry</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* µ±¿Í»§¶ËÒì²½Á÷±»¹Ø±ÕÊ±µÄ»Øµ÷º¯Êý */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>onclose_client_stream</name><parameter_list>(<parameter><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"onclose_client_stream"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>CLIENT_ENTRY</name> <modifier>*</modifier></type><name>entry</name> <init>= <expr><operator>(</operator><name>CLIENT_ENTRY</name><operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"%s(%d), fd: %d, nrefer: %d, nrefer: %d, addr: %lx, %lx, domain(%s)"</literal></expr></argument>,
		<argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><call><name>ACL_VSTREAM_SOCK</name><argument_list>(<argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr></argument>,
		<argument><expr><name><name>stream</name><operator>-&gt;</operator><name>nrefer</name></name></expr></argument>, <argument><expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name></expr></argument>,
		<argument><expr><operator>(</operator><name>long</name><operator>)</operator> <name>entry</name></expr></argument>, <argument><expr><operator>(</operator><name>long</name><operator>)</operator> <name><name>entry</name><operator>-&gt;</operator><name>client</name></name></expr></argument>, <argument><expr><name><name>entry</name><operator>-&gt;</operator><name>domain_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>stream</name><operator>-&gt;</operator><name>nrefer</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s: stream-&gt;nrefer(%d) != 0"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name><name>stream</name><operator>-&gt;</operator><name>nrefer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/* ÐèÒªÌáÇ°ÉèÖÃÎª¿Õ, ÒÔ·ÀÔÚµ÷ÓÃ acl_aio_iocp_close ºóÓÖÒª²Ù×÷¸ÃÁ÷Ö¸Õë */</comment>
	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_aio_iocp_close</name><argument_list>(<argument><expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/* ÐèÒª·ÅÔÚ acl_aio_iocp_lose() ºóÃæ£¬ÒÔ·ÀÖ¹ entry ¶ÔÏóÌáÇ°ÊÍ·Å */</comment>
	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name><operator>--</operator></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<return>return;</return></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s(%d): server not null"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><call><name><name>entry</name><operator>-&gt;</operator><name>free_fn</name></name><argument_list>(<argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>CLIENT_ENTRY</name> <modifier>*</modifier></type><name>client_entry_new</name><parameter_list>(<parameter><decl><type><name>SERVICE</name> <modifier>*</modifier></type><name>service</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>ACL_ASTREAM</name> <modifier>*</modifier></type><name>client</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"client_entry_new"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>CLIENT_ENTRY</name> <modifier>*</modifier></type><name>entry</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>size</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>CLIENT_ENTRY</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s(%d): size(%d) invalid"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>entry</name> <operator>=</operator> <operator>(</operator><name>CLIENT_ENTRY</name><operator>*</operator> <operator>)</operator> <call><name>acl_mycalloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>service</name></name> <operator>=</operator> <name>service</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name> <operator>=</operator> <name>client</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name><operator>++</operator></expr>;</expr_stmt>

	<expr_stmt><expr><name>stream</name> <operator>=</operator> <call><name>acl_aio_vstream</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_vstream_add_close_handle</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name>onclose_client_stream</name></expr></argument>, <argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator><name>entry</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* µ±·þÎñ¶ËÒì²½Á÷±»¹Ø±ÕÊ±µÄ»Øµ÷º¯Êý */</comment>

<function><type><specifier>static</specifier> <name>void</name></type> <name>onclose_server_stream</name><parameter_list>(<parameter><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"onclose_server_stream"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>CLIENT_ENTRY</name> <modifier>*</modifier></type><name>entry</name> <init>= <expr><operator>(</operator><name>CLIENT_ENTRY</name><operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"%s(%d), nrefer: %d"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name><name>stream</name><operator>-&gt;</operator><name>nrefer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>stream</name><operator>-&gt;</operator><name>nrefer</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s: stream-&gt;nrefer(%d) != 0"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name><name>stream</name><operator>-&gt;</operator><name>nrefer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/* ÐèÒªÌáÇ°ÉèÖÃÎª¿Õ, ÒÔ·ÀÔÚµ÷ÓÃ acl_aio_iocp_close ºóÓÖÒª²Ù×÷¸ÃÁ÷Ö¸Õë */</comment>
	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_aio_iocp_close</name><argument_list>(<argument><expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/* ÐèÒª·ÅÔÚ acl_aio_iocp_lose() ºóÃæ£¬ÒÔ·ÀÖ¹ entry ¶ÔÏóÌáÇ°ÊÍ·Å */</comment>
	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name><operator>--</operator></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<return>return;</return></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s(%d): client not null"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><call><name><name>entry</name><operator>-&gt;</operator><name>free_fn</name></name><argument_list>(<argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>client_entry_set_server</name><parameter_list>(<parameter><decl><type><name>CLIENT_ENTRY</name> <modifier>*</modifier></type><name>entry</name></decl></parameter>, <parameter><decl><type><name>ACL_ASTREAM</name> <modifier>*</modifier></type><name>server</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"client_entry_set_server"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s(%d): entry-&gt;server not null"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name> <operator>=</operator> <name>server</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name><operator>++</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name>stream</name> <operator>=</operator> <call><name>acl_aio_vstream</name><argument_list>(<argument><expr><name>server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_vstream_add_close_handle</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name>onclose_server_stream</name></expr></argument>, <argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>client_entry_detach</name><parameter_list>(<parameter><decl><type><name>CLIENT_ENTRY</name> <modifier>*</modifier></type><name>entry</name></decl></parameter>, <parameter><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><operator>(</operator><call><name>client_entry_detach3</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>client_entry_detach3</name><parameter_list>(<parameter><decl><type><name>CLIENT_ENTRY</name> <modifier>*</modifier></type><name>entry</name></decl></parameter>, <parameter><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>auto_free</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"client_entry_detach"</literal></expr></init></decl>;</decl_stmt>

	<comment type="block">/* ±ØÐëÈ¡ÏûÔÚ¹Ø±ÕÁ÷Ê±µÄ»Øµ÷º¯Êý */</comment>
	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name> <operator>&amp;&amp;</operator> <call><name>acl_aio_vstream</name><argument_list>(<argument><expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <name>stream</name></expr>)</condition> <block>{<block_content>
		<comment type="block">/* É¾³ýÁ÷µÄ¹Ø±Õ»Øµ÷º¯Êý¾ä±ú£¬ÕâÑù½öÇå³ýÓë¸ÃÓ¦ÓÃÏà¹ØµÄÉ¾³ý»Øµ÷ */</comment>
		<expr_stmt><expr><call><name>acl_vstream_delete_close_handle</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name>onclose_client_stream</name></expr></argument>, <argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name><operator>--</operator></expr>;</expr_stmt>
	</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name> <operator>&amp;&amp;</operator> <call><name>acl_aio_vstream</name><argument_list>(<argument><expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <name>stream</name></expr>)</condition> <block>{<block_content>
		<comment type="block">/* É¾³ýÁ÷µÄ¹Ø±Õ»Øµ÷º¯Êý¾ä±ú£¬ÕâÑù½öÇå³ýÓë¸ÃÓ¦ÓÃÏà¹ØµÄÉ¾³ý»Øµ÷ */</comment>
		<expr_stmt><expr><call><name>acl_vstream_delete_close_handle</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name>onclose_server_stream</name></expr></argument>, <argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name><operator>--</operator></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_fatal</name><argument_list>(<argument><expr><literal type="string">"%s(%d): unknown stream"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<comment type="block">/* Èç¹û entry ÒýÓÃ¶ÔÏó¼ÆÊýÎª0ÔòÐèÒªÊÍ·Åµô¸Ã¶ÔÏó */</comment>
	<if_stmt><if>if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name>auto_free</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name><name>entry</name><operator>-&gt;</operator><name>free_fn</name></name><argument_list>(<argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<comment type="block">/* ¸æËßµ÷ÓÃÕß£¬ entry ×ÊÔ´ÒÑ¾­±»ÊÍ·Å£¬²»ÄÜÔÙÊ¹ÓÃ */</comment>
		<return>return <expr><operator>(</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name> <operator>==</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>entry</name><operator>-&gt;</operator><name>server</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_warn</name><argument_list>(<argument><expr><literal type="string">"%s(%d): nrefer=%d, client %s, server %s\n"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name><name>entry</name><operator>-&gt;</operator><name>nrefer</name></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name>entry</name><operator>-&gt;</operator><name>client</name></name></expr> ?</condition><then> <expr><literal type="string">"not null"</literal></expr> </then><else>: <expr><literal type="string">"null"</literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name>entry</name><operator>-&gt;</operator><name>server</name></name></expr> ?</condition><then> <expr><literal type="string">"not null"</literal></expr> </then><else>: <expr><literal type="string">"null"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
