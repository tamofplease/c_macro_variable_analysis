<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/acl/app/jaws/plugin/gbfilter/http_conf.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_plugin.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>var_cfg_log_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CFG_STR_TABLE</name></type> <name><name>__conf_str_tab</name><index>[]</index></name> <init>= <expr><block>{
	<comment type="block">/* ÅäÖÃÏîÃû³Æ, ÅäÖÃÏîÈ±Ê¡Öµ, ´æ´¢ÅäÖÃÏîÖµµÄµØÖ· */</comment>
	<expr><block>{ <expr><literal type="string">"logpath"</literal></expr>, <expr><literal type="string">"/tmp/gbfilter.log"</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_log_name</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type>   <name>var_cfg_data_clone</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_cfg_rewrite_enable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type>   <name>var_cfg_debug_mem</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CFG_BOOL_TABLE</name></type> <name><name>__conf_bool_tab</name><index>[]</index></name> <init>= <expr><block>{
	<comment type="block">/* ÅäÖÃÏîÃû³Æ, ÅäÖÃÏîÈ±Ê¡Öµ, ´æ´¢ÅäÖÃÏîÖµµÄµØÖ· */</comment>
	<expr><block>{ <expr><literal type="string">"data_clone"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_data_clone</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"debug_mem"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_debug_mem</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"rewrite_enable"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_rewrite_enable</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>var_cfg_threads_limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>var_cfg_threads_idle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CFG_INT_TABLE</name></type> <name><name>__conf_int_tab</name><index>[]</index></name> <init>= <expr><block>{
	<comment type="block">/* ÅäÖÃÏîÃû³Æ, ÅäÖÃÏîÈ±Ê¡Öµ, ´æ´¢ÅäÖÃÏîÖµµÄµØÖ· */</comment>
	<expr><block>{ <expr><literal type="string">"threads_limit"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_threads_limit</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"threads_idle"</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_threads_idle</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>http_conf_load</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cfg_dir</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>filepath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_XINETD_CFG_PARSER</name> <modifier>*</modifier></type><name>cfg</name></decl>;</decl_stmt>

	<comment type="block">/* ¶ÁÈ¡ÅäÖÃÎÄ¼þ */</comment>

	<expr_stmt><expr><name>filepath</name> <operator>=</operator> <call><name>acl_concatenate</name><argument_list>(<argument><expr><ternary><condition><expr><operator>(</operator><name>cfg_dir</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>cfg_dir</name><operator>)</operator></expr>
			?</condition><then> <expr><name>cfg_dir</name></expr> </then><else>: <expr><literal type="string">"/tmp"</literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string">"/http_gb.cf"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>cfg</name> <operator>=</operator> <call><name>acl_xinetd_cfg_load</name><argument_list>(<argument><expr><name>filepath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>cfg</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_warn</name><argument_list>(<argument><expr><literal type="string">"load cfg(%s) error(%s)"</literal></expr></argument>,
			<argument><expr><name>filepath</name></expr></argument>, <argument><expr><call><name>acl_last_serror</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><call><name>acl_xinetd_params_str_table</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>__conf_str_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_xinetd_params_int_table</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>__conf_int_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_xinetd_params_bool_table</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>__conf_bool_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>cfg</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_xinetd_cfg_free</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>filepath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ´´½¨Ïß³Ì³Ø */</comment>

	<expr_stmt><expr><call><name>http_plugin_pool_create</name><argument_list>(<argument><expr><name>var_cfg_threads_limit</name></expr></argument>, <argument><expr><name>var_cfg_threads_idle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
