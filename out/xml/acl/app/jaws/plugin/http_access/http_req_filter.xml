<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/workspace/acl/app/jaws/plugin/http_access/http_req_filter.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_protocol.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_access.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"html_template.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_redirect.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_plugin.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>http_request_filter</name><parameter_list>(<parameter><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier><name>client</name></type> <name>acl_unused</name></decl></parameter>, <parameter><decl><type><name>HTTP_HDR_REQ</name> <modifier>*</modifier></type><name>hdr_req</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>ctx_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"http_request_filter"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>domain</name> <init>= <expr><call><name>http_hdr_req_host</name><argument_list>(<argument><expr><name>hdr_req</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>HTTP_DOMAIN_MAP</name> <modifier>*</modifier></type><name>hdm</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>domain</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): no host in request(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><call><name>http_hdr_req_url</name><argument_list>(<argument><expr><name>hdr_req</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">403</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>http_access_permit</name><argument_list>(<argument><expr><name>domain</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>hdm</name> <operator>=</operator> <call><name>http_redirect_lookup</name><argument_list>(<argument><expr><name>domain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>hdm</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
			<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return></block_content></block></if></if_stmt>
		<expr_stmt><expr><operator>*</operator><name>ctx_ptr</name> <operator>=</operator> <name>hdm</name></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"%s(%d): domain(%s) denied!"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>domain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">403</literal><operator>)</operator></expr>;</return>
	</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>http_request_forward</name><parameter_list>(<parameter><decl><type><name>ACL_VSTREAM</name> <modifier>*</modifier></type><name>client</name></decl></parameter>, <parameter><decl><type><name>HTTP_HDR_REQ</name> <modifier>*</modifier></type><name>hdr_req</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"http_request_forward"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>HTTP_DOMAIN_MAP</name> <modifier>*</modifier></type><name>hdm</name> <init>= <expr><operator>(</operator><name>HTTP_DOMAIN_MAP</name><operator>*</operator><operator>)</operator> <name>ctx</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_VSTRING</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>HTTP_HDR_RES</name> <modifier>*</modifier></type><name>hdr_res</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>host_ptr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>   <name>n</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>hdm</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): ctx null"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_vstream_writen</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_ERROR</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>HTTP_INTERNAL_ERROR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_vstream_close</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>http_hdr_req_free</name><argument_list>(<argument><expr><name>hdr_req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>host_ptr</name> <operator>=</operator> <call><name>http_hdr_req_host</name><argument_list>(<argument><expr><name>hdr_req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><call><name>acl_strrncmp</name><argument_list>(<argument><expr><name><name>hdm</name><operator>-&gt;</operator><name>domain_from</name></name></expr></argument>, <argument><expr><name>host_ptr</name></expr></argument>, <argument><expr><name><name>hdm</name><operator>-&gt;</operator><name>size_from</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_error</name><argument_list>(<argument><expr><literal type="string">"%s(%d): domain_from(%s) != host(%s)"</literal></expr></argument>,
			<argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name><name>hdm</name><operator>-&gt;</operator><name>domain_from</name></name></expr></argument>, <argument><expr><name>host_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_vstream_writen</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><name>HTTP_INTERNAL_ERROR</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>HTTP_INTERNAL_ERROR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_vstream_close</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>http_hdr_req_free</name><argument_list>(<argument><expr><name>hdr_req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>buf</name> <operator>=</operator> <call><name>acl_vstring_alloc</name><argument_list>(<argument><expr><literal type="number">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Éú³ÉÐÂµÄ url µØÖ· */</comment>
	<expr_stmt><expr><name>n</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>host_ptr</name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>hdm</name><operator>-&gt;</operator><name>size_from</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_vstring_strcpy</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"http://"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>n</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_vstring_strncat</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>host_ptr</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<expr_stmt><expr><call><name>acl_vstring_strcat</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name><name>hdm</name><operator>-&gt;</operator><name>domain_to</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_vstring_strcat</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><call><name>acl_vstring_str</name><argument_list>(<argument><expr><name><name>hdr_req</name><operator>-&gt;</operator><name>url_part</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ²úÉúÖØ¶¨ÏòÍ· */</comment>
	<expr_stmt><expr><name>hdr_res</name> <operator>=</operator> <call><name>http_hdr_res_static</name><argument_list>(<argument><expr><literal type="number">302</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>http_hdr_put_str</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>hdr_res</name><operator>-&gt;</operator><name>hdr</name></name></expr></argument>, <argument><expr><literal type="string">"Location"</literal></expr></argument>, <argument><expr><call><name>acl_vstring_str</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>http_hdr_put_str</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>hdr_res</name><operator>-&gt;</operator><name>hdr</name></name></expr></argument>, <argument><expr><literal type="string">"Connection"</literal></expr></argument>, <argument><expr><literal type="string">"close"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<comment type="block">/* Éú³ÉÏìÓ¦Êý¾Ý°ü */</comment>
	<expr_stmt><expr><call><name>http_hdr_build</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>hdr_res</name><operator>-&gt;</operator><name>hdr</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>acl_vstream_writen</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>acl_vstring_str</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>ACL_VSTRING_LEN</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_vstream_close</name><argument_list>(<argument><expr><name>client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>http_hdr_req_free</name><argument_list>(<argument><expr><name>hdr_req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>acl_vstring_free</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>http_hdr_res_free</name><argument_list>(<argument><expr><name>hdr_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
