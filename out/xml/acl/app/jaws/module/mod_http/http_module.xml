<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/acl/app/jaws/module/mod_http/http_module.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_acl.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"service.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_service.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"http_module.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>var_cfg_http_plugin_dlnames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>var_cfg_http_plugin_cfgdir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>var_cfg_http_filter_info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>var_cfg_http_tmpl_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>var_cfg_http_vhost_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>var_cfg_http_vhost_default</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CFG_STR_TABLE</name></type> <name><name>__conf_str_tab</name><index>[]</index></name> <init>= <expr><block>{
	<comment type="block">/* ÅäÖÃÏîÃû³Æ, ÅäÖÃÏîÈ±Ê¡Öµ, ´æ´¢ÅäÖÃÏîÖµµÄµØÖ· */</comment>

	<expr><block>{ <expr><literal type="string">"http_filter_proxy"</literal></expr>, <expr><literal type="string">"HTTP_FILTER_PROXY"</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_filter_info</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_tmpl_path"</literal></expr>, <expr><literal type="string">"/opt/jaws/www/tmpl"</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_tmpl_path</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_vhost_path"</literal></expr>, <expr><literal type="string">"/opt/jaws/conf/www"</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_vhost_path</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_vhost_default"</literal></expr>, <expr><literal type="string">"/opt/jaws/conf/default/default.cf"</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_vhost_default</name></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="string">"http_plugin_dlnames"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_plugin_dlnames</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_plugin_cfgdir"</literal></expr>, <expr><literal type="string">"/tmp"</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_plugin_cfgdir</name></expr>}</block></expr>,

	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type>   <name>var_cfg_http_server_conn_limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type>   <name>var_cfg_http_buf_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CONFIG_INT_TABLE</name></type> <name><name>__conf_int_tab</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><literal type="string">"http_server_conn_limit"</literal></expr>, <expr><literal type="number">1000</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_server_conn_limit</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_buf_size"</literal></expr>, <expr><literal type="number">8192</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_buf_size</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type>   <name>var_cfg_http_debug_mem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type>   <name>var_cfg_http_use_cache</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_cfg_http_client_keepalive</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_cfg_http_server_keepalive</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_cfg_http_method_connect_enable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type>   <name>var_cfg_http_proxy_connection_off</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_CONFIG_BOOL_TABLE</name></type> <name><name>__conf_bool_tab</name><index>[]</index></name> <init>= <expr><block>{
	<comment type="block">/* TODO: you can add configure variables of int type here */</comment>

	<expr><block>{ <expr><literal type="string">"debug_mem"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_debug_mem</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_client_keepalive"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_client_keepalive</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_server_keepalive"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_server_keepalive</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_use_cache"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_use_cache</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_method_connect_enable"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_method_connect_enable</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"http_proxy_connection_off"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>&amp;</operator><name>var_cfg_http_proxy_connection_off</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>ACL_DLL_ENV</name></type> <name>__dll_env</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ACL_DLL_ENV</name> <modifier>*</modifier></type><name>var_http_dll_env</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>module_service_init</name><parameter_list>(<parameter><decl><type><name>ACL_DLL_ENV</name> <modifier>*</modifier></type><name>dll_env</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cfg_dir</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>myname</name> <init>= <expr><literal type="string">"module_service_init"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ACL_XINETD_CFG_PARSER</name> <modifier>*</modifier></type><name>cfg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>filepath</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>dll_env</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>__dll_env</name></expr></argument>, <argument><expr><name>dll_env</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ACL_DLL_ENV</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
	<else>else<block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>__dll_env</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ACL_DLL_ENV</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

	<comment type="block">/* Èç¹û mem_slice ·Ç¿ÕÔòÉèÖÃÄÚ´æ·ÖÅä²ÉÓÃÇÐÆ¬·ÖÅä·½Ê½ */</comment>
	<if_stmt><if>if <condition>(<expr><name><name>__dll_env</name><operator>.</operator><name>mem_slice</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_mem_slice_set</name><argument_list>(<argument><expr><name><name>__dll_env</name><operator>.</operator><name>mem_slice</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"%s(%d): set mem slice now"</literal></expr></argument>, <argument><expr><name>myname</name></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<expr_stmt><expr><name>var_http_dll_env</name> <operator>=</operator> <operator>&amp;</operator><name>__dll_env</name></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>var_http_dll_env</name><operator>-&gt;</operator><name>logfp</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_msg_open2</name><argument_list>(<argument><expr><name><name>var_http_dll_env</name><operator>-&gt;</operator><name>logfp</name></name></expr></argument>, <argument><expr><literal type="string">"jaws-http"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_msg_info</name><argument_list>(<argument><expr><literal type="string">"%s(%d): logger opened, %s"</literal></expr></argument>, <argument><expr><name>__FUNCTION__</name></expr></argument>,
			<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><call><name>ACL_VSTREAM_PATH</name><argument_list>(<argument><expr><name><name>var_http_dll_env</name><operator>-&gt;</operator><name>logfp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="block">/*
		var_http_dll_env-&gt;logfp = acl_log_fp();
		*/</comment>
	</block_content>}</block></if></if_stmt>


	<expr_stmt><expr><name>filepath</name> <operator>=</operator> <call><name>acl_concatenate</name><argument_list>(<argument><expr><ternary><condition><expr><operator>(</operator><name>cfg_dir</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>cfg_dir</name><operator>)</operator></expr>
			?</condition><then> <expr><name>cfg_dir</name></expr> </then><else>: <expr><literal type="string">"/tmp"</literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string">"/http.cf"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>cfg</name> <operator>=</operator> <call><name>acl_xinetd_cfg_load</name><argument_list>(<argument><expr><name>filepath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>cfg</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>acl_msg_warn</name><argument_list>(<argument><expr><literal type="string">"load cfg(%s) error(%s)"</literal></expr></argument>,
			<argument><expr><name>filepath</name></expr></argument>, <argument><expr><call><name>acl_last_serror</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><call><name>acl_xinetd_params_str_table</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>__conf_str_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_xinetd_params_bool_table</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>__conf_bool_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_xinetd_params_int_table</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>__conf_int_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_xinetd_cfg_free</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>acl_myfree</name><argument_list>(<argument><expr><name>filepath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ÊÇ·ñµ÷ÊÔÄÚ´æµÄ·ÖÎö×´Ì¬ */</comment>
	<if_stmt><if>if <condition>(<expr><name>var_cfg_http_debug_mem</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_memory_debug_start</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_memory_debug_stack</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>var_cfg_http_debug_mem</name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name><name>var_http_dll_env</name><operator>-&gt;</operator><name>mmd</name></name> <operator>=</operator> <call><name>acl_debug_malloc_init</name><argument_list>(
				<argument><expr><name><name>var_http_dll_env</name><operator>-&gt;</operator><name>mmd</name></name></expr></argument>, <argument><expr><literal type="string">"log.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>var_cfg_http_debug_mem</name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>acl_memory_debug_start</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>acl_memory_debug_stack</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>var_http_dll_env</name><operator>-&gt;</operator><name>mmd</name></name> <operator>=</operator> <call><name>acl_debug_malloc_init</name><argument_list>(
				<argument><expr><name><name>var_http_dll_env</name><operator>-&gt;</operator><name>mmd</name></name></expr></argument>, <argument><expr><literal type="string">"log.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/* ÉèÖÃHTTP·þÎñÔËÐÐÄ£Ê½: ·þÎñÆ÷Ä£Ê½»¹ÊÇ´úÀíÄ£Ê½ */</comment>
	<expr_stmt><expr><call><name>http_filter_set</name><argument_list>(<argument><expr><name>var_cfg_http_filter_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* ·þÎñÆ÷Ä£Ê½ÏÂ¼ÓÔØÅäÖÃ */</comment>
	<expr_stmt><expr><call><name>http_conf_load</name><argument_list>(<argument><expr><name>var_cfg_http_vhost_path</name></expr></argument>, <argument><expr><name>var_cfg_http_vhost_default</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* ¼ÓÔØHMTLÄ£°å */</comment>
	<expr_stmt><expr><call><name>http_tmpl_load</name><argument_list>(<argument><expr><name>var_cfg_http_tmpl_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* ³õÊ¼»¯Á¬½Ó³Ø */</comment>
	<if_stmt><if>if <condition>(<expr><name>var_cfg_http_server_conn_limit</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name>var_cfg_http_server_conn_limit</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/* ÉèÖÃHTTP»º³åÇø´óÐ¡ */</comment>
	<if_stmt><if>if <condition>(<expr><name>var_cfg_http_buf_size</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>http_buf_size_set</name><argument_list>(<argument><expr><name>var_cfg_http_buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/* ¼ÓÔØËùÓÐ¶¯Ì¬²å¼þ¿â²¢³õÊ¼»¯¶¯Ì¬¿â */</comment>
	<expr_stmt><expr><call><name>http_plugin_load_all</name><argument_list>(<argument><expr><name>dll_env</name></expr></argument>, <argument><expr><name>var_cfg_http_plugin_dlnames</name></expr></argument>, <argument><expr><name>var_cfg_http_plugin_cfgdir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>SERVICE</name> <modifier>*</modifier></type><name>module_service_create</name><parameter_list>()</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>HTTP_SERVICE</name> <modifier>*</modifier></type><name>service</name></decl>;</decl_stmt>

	<comment type="block">/* ´´½¨ HTTP ·þÎñ¶ÔÏó */</comment>
	<expr_stmt><expr><name>service</name> <operator>=</operator> <call><name>http_service_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><operator>(</operator><name>SERVICE</name><operator>*</operator><operator>)</operator> <name>service</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>module_service_main</name><parameter_list>(<parameter><decl><type><name>SERVICE</name> <modifier>*</modifier></type><name>service</name></decl></parameter>, <parameter><decl><type><name>ACL_ASTREAM</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>http_service_main</name><argument_list>(<argument><expr><operator>(</operator><name>HTTP_SERVICE</name><operator>*</operator><operator>)</operator> <name>service</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
