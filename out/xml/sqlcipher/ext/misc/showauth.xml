<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/sqlcipher/ext/misc/showauth.c"><comment type="block">/*
** 2014-09-21
**
** The author disclaims copyright to this source code.  In place of
** a legal notice, here is a blessing:
**
**    May you do good and not evil.
**    May you find forgiveness for yourself and forgive others.
**    May you share freely, never taking more than you give.
**
******************************************************************************
**
** This SQLite extension adds a debug "authorizer" callback to the database
** connection.  The callback merely writes the authorization request to
** standard output and returns SQLITE_OK.
**
** This extension can be used (for example) in the command-line shell to
** trace the operation of the authorizer.
*/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sqlite3ext.h"</cpp:file></cpp:include>
<function><type><name>SQLITE_EXTENSION_INIT1</name>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<comment type="block">/*
** Display the authorization request
*/</comment>
<specifier>static</specifier> <name>int</name></type> <name>authCallback</name><parameter_list>(
  <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pClientData</name></decl></parameter>,
  <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>,
  <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>z1</name></decl></parameter>,
  <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>z2</name></decl></parameter>,
  <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>z3</name></decl></parameter>,
  <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>z4</name></decl></parameter>
)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>zOp</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>char</name></type> <name><name>zOpSpace</name><index>[<expr><literal type="number">50</literal></expr>]</index></name></decl>;</decl_stmt>
  <switch>switch<condition>( <expr><name>op</name></expr> )</condition><block>{<block_content>
    <case>case <expr><name>SQLITE_CREATE_INDEX</name></expr>:</case>        <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_INDEX"</literal></expr>;</expr_stmt>        <break>break;</break>
    <case>case <expr><name>SQLITE_CREATE_TABLE</name></expr>:</case>        <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_TABLE"</literal></expr>;</expr_stmt>        <break>break;</break>
    <case>case <expr><name>SQLITE_CREATE_TEMP_INDEX</name></expr>:</case>   <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_TEMP_INDEX"</literal></expr>;</expr_stmt>   <break>break;</break>
    <case>case <expr><name>SQLITE_CREATE_TEMP_TABLE</name></expr>:</case>   <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_TEMP_TABLE"</literal></expr>;</expr_stmt>   <break>break;</break>
    <case>case <expr><name>SQLITE_CREATE_TEMP_TRIGGER</name></expr>:</case> <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_TEMP_TRIGGER"</literal></expr>;</expr_stmt> <break>break;</break>
    <case>case <expr><name>SQLITE_CREATE_TEMP_VIEW</name></expr>:</case>    <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_TEMP_VIEW"</literal></expr>;</expr_stmt>    <break>break;</break>
    <case>case <expr><name>SQLITE_CREATE_TRIGGER</name></expr>:</case>      <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_TRIGGER"</literal></expr>;</expr_stmt>      <break>break;</break>
    <case>case <expr><name>SQLITE_CREATE_VIEW</name></expr>:</case>         <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_VIEW"</literal></expr>;</expr_stmt>         <break>break;</break>
    <case>case <expr><name>SQLITE_DELETE</name></expr>:</case>              <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DELETE"</literal></expr>;</expr_stmt>              <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_INDEX</name></expr>:</case>          <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_INDEX"</literal></expr>;</expr_stmt>          <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_TABLE</name></expr>:</case>          <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_TABLE"</literal></expr>;</expr_stmt>          <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_TEMP_INDEX</name></expr>:</case>     <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_TEMP_INDEX"</literal></expr>;</expr_stmt>     <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_TEMP_TABLE</name></expr>:</case>     <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_TEMP_TABLE"</literal></expr>;</expr_stmt>     <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_TEMP_TRIGGER</name></expr>:</case>   <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_TEMP_TRIGGER"</literal></expr>;</expr_stmt>   <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_TEMP_VIEW</name></expr>:</case>      <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_TEMP_VIEW"</literal></expr>;</expr_stmt>      <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_TRIGGER</name></expr>:</case>        <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_TRIGGER"</literal></expr>;</expr_stmt>        <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_VIEW</name></expr>:</case>           <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_VIEW"</literal></expr>;</expr_stmt>           <break>break;</break>
    <case>case <expr><name>SQLITE_INSERT</name></expr>:</case>              <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"INSERT"</literal></expr>;</expr_stmt>              <break>break;</break>
    <case>case <expr><name>SQLITE_PRAGMA</name></expr>:</case>              <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"PRAGMA"</literal></expr>;</expr_stmt>              <break>break;</break>
    <case>case <expr><name>SQLITE_READ</name></expr>:</case>                <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"READ"</literal></expr>;</expr_stmt>                <break>break;</break>
    <case>case <expr><name>SQLITE_SELECT</name></expr>:</case>              <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"SELECT"</literal></expr>;</expr_stmt>              <break>break;</break>
    <case>case <expr><name>SQLITE_TRANSACTION</name></expr>:</case>         <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"TRANSACTION"</literal></expr>;</expr_stmt>         <break>break;</break>
    <case>case <expr><name>SQLITE_UPDATE</name></expr>:</case>              <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"UPDATE"</literal></expr>;</expr_stmt>              <break>break;</break>
    <case>case <expr><name>SQLITE_ATTACH</name></expr>:</case>              <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"ATTACH"</literal></expr>;</expr_stmt>              <break>break;</break>
    <case>case <expr><name>SQLITE_DETACH</name></expr>:</case>              <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DETACH"</literal></expr>;</expr_stmt>              <break>break;</break>
    <case>case <expr><name>SQLITE_ALTER_TABLE</name></expr>:</case>         <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"ALTER_TABLE"</literal></expr>;</expr_stmt>         <break>break;</break>
    <case>case <expr><name>SQLITE_REINDEX</name></expr>:</case>             <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"REINDEX"</literal></expr>;</expr_stmt>             <break>break;</break>
    <case>case <expr><name>SQLITE_ANALYZE</name></expr>:</case>             <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"ANALYZE"</literal></expr>;</expr_stmt>             <break>break;</break>
    <case>case <expr><name>SQLITE_CREATE_VTABLE</name></expr>:</case>       <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"CREATE_VTABLE"</literal></expr>;</expr_stmt>       <break>break;</break>
    <case>case <expr><name>SQLITE_DROP_VTABLE</name></expr>:</case>         <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"DROP_VTABLE"</literal></expr>;</expr_stmt>         <break>break;</break>
    <case>case <expr><name>SQLITE_FUNCTION</name></expr>:</case>            <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"FUNCTION"</literal></expr>;</expr_stmt>            <break>break;</break>
    <case>case <expr><name>SQLITE_SAVEPOINT</name></expr>:</case>           <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"SAVEPOINT"</literal></expr>;</expr_stmt>           <break>break;</break>
    <case>case <expr><name>SQLITE_COPY</name></expr>:</case>                <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"COPY"</literal></expr>;</expr_stmt>                <break>break;</break>
    <case>case <expr><name>SQLITE_RECURSIVE</name></expr>:</case>           <expr_stmt><expr><name>zOp</name> <operator>=</operator> <literal type="string">"RECURSIVE"</literal></expr>;</expr_stmt>           <break>break;</break>


    <default>default:</default> <block>{<block_content>
      <expr_stmt><expr><call><name>sqlite3_snprintf</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>zOpSpace</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>zOpSpace</name></expr></argument>, <argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><name>op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>zOp</name> <operator>=</operator> <name>zOpSpace</name></expr>;</expr_stmt>
      <break>break;</break>
    </block_content>}</block>
  </block_content>}</block></switch>
  <if_stmt><if>if<condition>( <expr><name>z1</name><operator>==</operator><literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>z1</name> <operator>=</operator> <literal type="string">"NULL"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
  <if_stmt><if>if<condition>( <expr><name>z2</name><operator>==</operator><literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>z2</name> <operator>=</operator> <literal type="string">"NULL"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
  <if_stmt><if>if<condition>( <expr><name>z3</name><operator>==</operator><literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>z3</name> <operator>=</operator> <literal type="string">"NULL"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
  <if_stmt><if>if<condition>( <expr><name>z4</name><operator>==</operator><literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>z4</name> <operator>=</operator> <literal type="string">"NULL"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"AUTH: %s,%s,%s,%s,%s\n"</literal></expr></argument>, <argument><expr><name>zOp</name></expr></argument>, <argument><expr><name>z1</name></expr></argument>, <argument><expr><name>z2</name></expr></argument>, <argument><expr><name>z3</name></expr></argument>, <argument><expr><name>z4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>SQLITE_OK</name></expr>;</return>
</block_content>}</block></function>



<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>_WIN32</name></cpp:ifdef>
<macro><name>__declspec</name><argument_list>(<argument>dllexport</argument>)</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><type><name>int</name></type> <name>sqlite3_showauth_init</name><parameter_list>(
  <parameter><decl><type><name>sqlite3</name> <modifier>*</modifier></type><name>db</name></decl></parameter>, 
  <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>pzErrMsg</name></decl></parameter>, 
  <parameter><decl><type><specifier>const</specifier> <name>sqlite3_api_routines</name> <modifier>*</modifier></type><name>pApi</name></decl></parameter>
)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name>int</name></type> <name>rc</name> <init>= <expr><name>SQLITE_OK</name></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>SQLITE_EXTENSION_INIT2</name><argument_list>(<argument><expr><name>pApi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>pzErrMsg</name></expr>;</expr_stmt>  <comment type="block">/* Unused parameter */</comment>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>sqlite3_set_authorizer</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>authCallback</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>rc</name></expr>;</return>
</block_content>}</block></function>
</unit>
