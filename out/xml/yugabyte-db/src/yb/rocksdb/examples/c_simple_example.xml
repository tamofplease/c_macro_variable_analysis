<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/yugabyte-db/src/yb/rocksdb/examples/c_simple_example.c"><comment type="line">//</comment>
<comment type="line">// Copyright (c) YugaByte, Inc.</comment>
<comment type="line">//</comment>
<comment type="line">// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except</comment>
<comment type="line">// in compliance with the License.  You may obtain a copy of the License at</comment>
<comment type="line">//</comment>
<comment type="line">// http://www.apache.org/licenses/LICENSE-2.0</comment>
<comment type="line">//</comment>
<comment type="line">// Unless required by applicable law or agreed to in writing, software distributed under the License</comment>
<comment type="line">// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express</comment>
<comment type="line">// or implied.  See the License for the specific language governing permissions and limitations</comment>
<comment type="line">// under the License.</comment>
<comment type="line">//</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rocksdb/c.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>  <comment type="line">// sysconf() - get CPU count</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>DBPath</name><index>[]</index></name> <init>= <expr><literal type="string">"/tmp/rocksdb_simple_example"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>DBBackupPath</name><index>[]</index></name> <init>= <expr><literal type="string">"/tmp/rocksdb_simple_example_backup"</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>rocksdb_t</name> <modifier>*</modifier></type><name>db</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>rocksdb_backup_engine_t</name> <modifier>*</modifier></type><name>be</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>rocksdb_options_t</name> <modifier>*</modifier></type><name>options</name> <init>= <expr><call><name>rocksdb_options_create</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <comment type="line">// Optimize RocksDB. This is the easiest way to</comment>
  <comment type="line">// get RocksDB to perform well</comment>
  <decl_stmt><decl><type><name>long</name></type> <name>cpus</name> <init>= <expr><call><name>sysconf</name><argument_list>(<argument><expr><name>_SC_NPROCESSORS_ONLN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>  <comment type="line">// get # of online cores</comment>
  <expr_stmt><expr><call><name>rocksdb_options_increase_parallelism</name><argument_list>(<argument><expr><name>options</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><name>cpus</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>rocksdb_options_optimize_level_style_compaction</name><argument_list>(<argument><expr><name>options</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="line">// create the DB if it's not already present</comment>
  <expr_stmt><expr><call><name>rocksdb_options_set_create_if_missing</name><argument_list>(<argument><expr><name>options</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// open DB</comment>
  <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>err</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>db</name> <operator>=</operator> <call><name>rocksdb_open</name><argument_list>(<argument><expr><name>options</name></expr></argument>, <argument><expr><name>DBPath</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// open Backup Engine that we will use for backing up our database</comment>
  <expr_stmt><expr><name>be</name> <operator>=</operator> <call><name>rocksdb_backup_engine_open</name><argument_list>(<argument><expr><name>options</name></expr></argument>, <argument><expr><name>DBBackupPath</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// Put key-value</comment>
  <decl_stmt><decl><type><name>rocksdb_writeoptions_t</name> <modifier>*</modifier></type><name>writeoptions</name> <init>= <expr><call><name>rocksdb_writeoptions_create</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>key</name><index>[]</index></name> <init>= <expr><literal type="string">"key"</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name> <init>= <expr><literal type="string">"value"</literal></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>rocksdb_put</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>writeoptions</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>,
              <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="line">// Get value</comment>
  <decl_stmt><decl><type><name>rocksdb_readoptions_t</name> <modifier>*</modifier></type><name>readoptions</name> <init>= <expr><call><name>rocksdb_readoptions_create</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>returned_value</name> <init>=
      <expr><call><name>rocksdb_get</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>readoptions</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>len</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>strcmp</name><argument_list>(<argument><expr><name>returned_value</name></expr></argument>, <argument><expr><literal type="string">"value"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>returned_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// create new backup in a directory specified by DBBackupPath</comment>
  <expr_stmt><expr><call><name>rocksdb_backup_engine_create_new_backup</name><argument_list>(<argument><expr><name>be</name></expr></argument>, <argument><expr><name>db</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name>rocksdb_close</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// If something is wrong, you might want to restore data from last backup</comment>
  <decl_stmt><decl><type><name>rocksdb_restore_options_t</name> <modifier>*</modifier></type><name>restore_options</name> <init>= <expr><call><name>rocksdb_restore_options_create</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>rocksdb_backup_engine_restore_db_from_latest_backup</name><argument_list>(<argument><expr><name>be</name></expr></argument>, <argument><expr><name>DBPath</name></expr></argument>, <argument><expr><name>DBPath</name></expr></argument>,
                                                      <argument><expr><name>restore_options</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>rocksdb_restore_options_destroy</name><argument_list>(<argument><expr><name>restore_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>db</name> <operator>=</operator> <call><name>rocksdb_open</name><argument_list>(<argument><expr><name>options</name></expr></argument>, <argument><expr><name>DBPath</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// cleanup</comment>
  <expr_stmt><expr><call><name>rocksdb_writeoptions_destroy</name><argument_list>(<argument><expr><name>writeoptions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>rocksdb_readoptions_destroy</name><argument_list>(<argument><expr><name>readoptions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>rocksdb_options_destroy</name><argument_list>(<argument><expr><name>options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>rocksdb_backup_engine_close</name><argument_list>(<argument><expr><name>be</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>rocksdb_close</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
