<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/yugabyte-db/src/postgres/src/port/fseeko.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * fseeko.c
 *	  64-bit versions of fseeko/ftello()
 *
 * Portions Copyright (c) 1996-2018, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/port/fseeko.c
 *
 *-------------------------------------------------------------------------
 */</comment>

<comment type="block">/*
 * We have to use the native defines here because configure hasn't
 * completed yet.
 */</comment>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__NetBSD__</name></cpp:ifdef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"c.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>


<comment type="block">/*
 *	On NetBSD, off_t and fpos_t are the same.  Standards
 *	say off_t is an arithmetic type, but not necessarily integral,
 *	while fpos_t might be neither.
 */</comment>

<function><type><name>int</name></type>
<name>fseeko</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>off_t</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>whence</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>off_t</name></type>		<name>floc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name>struct</name> <name>stat</name></name></type> <name>filestat</name></decl>;</decl_stmt>

	<switch>switch <condition>(<expr><name>whence</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>SEEK_CUR</name></expr>:</case>
			<if_stmt><if>if <condition>(<expr><call><name>fgetpos</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>floc</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
				<goto>goto <name>failure</name>;</goto></block_content></block></if></if_stmt>
			<expr_stmt><expr><name>floc</name> <operator>+=</operator> <name>offset</name></expr>;</expr_stmt>
			<if_stmt><if>if <condition>(<expr><call><name>fsetpos</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>floc</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
				<goto>goto <name>failure</name>;</goto></block_content></block></if></if_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
			<break>break;</break>
		<case>case <expr><name>SEEK_SET</name></expr>:</case>
			<if_stmt><if>if <condition>(<expr><call><name>fsetpos</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>offset</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
				<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
			<break>break;</break>
		<case>case <expr><name>SEEK_END</name></expr>:</case>
			<expr_stmt><expr><call><name>fflush</name><argument_list>(<argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		<comment type="block">/* force writes to fd for stat() */</comment>
			<if_stmt><if>if <condition>(<expr><call><name>fstat</name><argument_list>(<argument><expr><call><name>fileno</name><argument_list>(<argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>filestat</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
				<goto>goto <name>failure</name>;</goto></block_content></block></if></if_stmt>
			<expr_stmt><expr><name>floc</name> <operator>=</operator> <name><name>filestat</name><operator>.</operator><name>st_size</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name>floc</name> <operator>+=</operator> <name>offset</name></expr>;</expr_stmt>
			<if_stmt><if>if <condition>(<expr><call><name>fsetpos</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>floc</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
				<goto>goto <name>failure</name>;</goto></block_content></block></if></if_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
			<break>break;</break>
		<default>default:</default>
			<expr_stmt><expr><name>errno</name> <operator>=</operator> <name>EINVAL</name></expr>;</expr_stmt>
			<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
	</block_content>}</block></switch>

<label><name>failure</name>:</label>
	<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>


<function><type><name>off_t</name></type>
<name>ftello</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>off_t</name></type>		<name>floc</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>fgetpos</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>floc</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
	<return>return <expr><name>floc</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
