<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/yugabyte-db/src/postgres/src/backend/utils/mb/conversion_procs/euc_tw_and_big5/big5.c"><comment type="block">/*
 * conversion between BIG5 and Mule Internal Code(CNS 116643-1992
 * plane 1 and plane 2).
 * This program is partially copied from lv(Multilingual file viewer)
 * and slightly modified. lv is written and copyrighted by NARITA Tomio
 * (nrt@web.ad.jp).
 *
 * 1999/1/15 Tatsuo Ishii
 *
 * src/backend/utils/mb/conversion_procs/euc_tw_and_big5/big5.c
 */</comment>

<comment type="block">/* can be used in either frontend or backend */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres_fe.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mb/pg_wchar.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct
<block>{
	<decl_stmt><decl><type><name>unsigned</name> <name>short</name></type> <name>code</name></decl>,
				<name>peer</name>;</decl_stmt>
}</block></struct></type> <name>codes_t</name>;</typedef>

<comment type="block">/* map Big5 Level 1 to CNS 11643-1992 Plane 1 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>codes_t</name></type> <name><name>big5Level1ToCnsPlane1</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <init>= <expr><block>{	<comment type="block">/* range */</comment>
	<expr><block>{<expr><literal type="number">0xA140</literal></expr>, <expr><literal type="number">0x2121</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xA1F6</literal></expr>, <expr><literal type="number">0x2258</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xA1F7</literal></expr>, <expr><literal type="number">0x2257</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xA1F8</literal></expr>, <expr><literal type="number">0x2259</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xA2AF</literal></expr>, <expr><literal type="number">0x2421</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xA3C0</literal></expr>, <expr><literal type="number">0x4221</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xa3e1</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xA440</literal></expr>, <expr><literal type="number">0x4421</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xACFE</literal></expr>, <expr><literal type="number">0x5753</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xacff</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xAD40</literal></expr>, <expr><literal type="number">0x5323</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xAFD0</literal></expr>, <expr><literal type="number">0x5754</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xBBC8</literal></expr>, <expr><literal type="number">0x6B51</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xBE52</literal></expr>, <expr><literal type="number">0x6B50</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xBE53</literal></expr>, <expr><literal type="number">0x6F5C</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC1AB</literal></expr>, <expr><literal type="number">0x7536</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC2CB</literal></expr>, <expr><literal type="number">0x7535</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC2CC</literal></expr>, <expr><literal type="number">0x7737</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC361</literal></expr>, <expr><literal type="number">0x782E</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC3B9</literal></expr>, <expr><literal type="number">0x7865</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC3BA</literal></expr>, <expr><literal type="number">0x7864</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC3BB</literal></expr>, <expr><literal type="number">0x7866</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC456</literal></expr>, <expr><literal type="number">0x782D</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC457</literal></expr>, <expr><literal type="number">0x7962</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xc67f</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* map CNS 11643-1992 Plane 1 to Big5 Level 1 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>codes_t</name></type> <name><name>cnsPlane1ToBig5Level1</name><index>[<expr><literal type="number">26</literal></expr>]</index></name> <init>= <expr><block>{	<comment type="block">/* range */</comment>
	<expr><block>{<expr><literal type="number">0x2121</literal></expr>, <expr><literal type="number">0xA140</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x2257</literal></expr>, <expr><literal type="number">0xA1F7</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x2258</literal></expr>, <expr><literal type="number">0xA1F6</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x2259</literal></expr>, <expr><literal type="number">0xA1F8</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x234f</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x2421</literal></expr>, <expr><literal type="number">0xA2AF</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x2571</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x4221</literal></expr>, <expr><literal type="number">0xA3C0</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x4242</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x4421</literal></expr>, <expr><literal type="number">0xA440</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5323</literal></expr>, <expr><literal type="number">0xAD40</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5753</literal></expr>, <expr><literal type="number">0xACFE</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5754</literal></expr>, <expr><literal type="number">0xAFD0</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6B50</literal></expr>, <expr><literal type="number">0xBE52</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6B51</literal></expr>, <expr><literal type="number">0xBBC8</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6F5C</literal></expr>, <expr><literal type="number">0xBE53</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7535</literal></expr>, <expr><literal type="number">0xC2CB</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7536</literal></expr>, <expr><literal type="number">0xC1AB</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7737</literal></expr>, <expr><literal type="number">0xC2CC</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x782D</literal></expr>, <expr><literal type="number">0xC456</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x782E</literal></expr>, <expr><literal type="number">0xC361</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7864</literal></expr>, <expr><literal type="number">0xC3BA</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7865</literal></expr>, <expr><literal type="number">0xC3B9</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7866</literal></expr>, <expr><literal type="number">0xC3BB</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7962</literal></expr>, <expr><literal type="number">0xC457</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7d4c</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* map Big5 Level 2 to CNS 11643-1992 Plane 2 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>codes_t</name></type> <name><name>big5Level2ToCnsPlane2</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <init>= <expr><block>{	<comment type="block">/* range */</comment>
	<expr><block>{<expr><literal type="number">0xC940</literal></expr>, <expr><literal type="number">0x2121</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xc94a</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC94B</literal></expr>, <expr><literal type="number">0x212B</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC96C</literal></expr>, <expr><literal type="number">0x214D</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC9BE</literal></expr>, <expr><literal type="number">0x214C</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC9BF</literal></expr>, <expr><literal type="number">0x217D</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC9ED</literal></expr>, <expr><literal type="number">0x224E</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xCAF7</literal></expr>, <expr><literal type="number">0x224D</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xCAF8</literal></expr>, <expr><literal type="number">0x2439</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xD77A</literal></expr>, <expr><literal type="number">0x3F6A</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xD77B</literal></expr>, <expr><literal type="number">0x387E</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xDBA7</literal></expr>, <expr><literal type="number">0x3F6B</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xDDFC</literal></expr>, <expr><literal type="number">0x4176</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xDDFD</literal></expr>, <expr><literal type="number">0x4424</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xE8A3</literal></expr>, <expr><literal type="number">0x554C</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xE976</literal></expr>, <expr><literal type="number">0x5723</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xEB5B</literal></expr>, <expr><literal type="number">0x5A29</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xEBF1</literal></expr>, <expr><literal type="number">0x554B</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xEBF2</literal></expr>, <expr><literal type="number">0x5B3F</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xECDE</literal></expr>, <expr><literal type="number">0x5722</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xECDF</literal></expr>, <expr><literal type="number">0x5C6A</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xEDAA</literal></expr>, <expr><literal type="number">0x5D75</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xEEEB</literal></expr>, <expr><literal type="number">0x642F</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xEEEC</literal></expr>, <expr><literal type="number">0x6039</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF056</literal></expr>, <expr><literal type="number">0x5D74</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF057</literal></expr>, <expr><literal type="number">0x6243</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF0CB</literal></expr>, <expr><literal type="number">0x5A28</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF0CC</literal></expr>, <expr><literal type="number">0x6337</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF163</literal></expr>, <expr><literal type="number">0x6430</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF16B</literal></expr>, <expr><literal type="number">0x6761</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF16C</literal></expr>, <expr><literal type="number">0x6438</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF268</literal></expr>, <expr><literal type="number">0x6934</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF269</literal></expr>, <expr><literal type="number">0x6573</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF2C3</literal></expr>, <expr><literal type="number">0x664E</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF375</literal></expr>, <expr><literal type="number">0x6762</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF466</literal></expr>, <expr><literal type="number">0x6935</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF4B5</literal></expr>, <expr><literal type="number">0x664D</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF4B6</literal></expr>, <expr><literal type="number">0x6962</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF4FD</literal></expr>, <expr><literal type="number">0x6A4C</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF663</literal></expr>, <expr><literal type="number">0x6A4B</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF664</literal></expr>, <expr><literal type="number">0x6C52</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF977</literal></expr>, <expr><literal type="number">0x7167</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9C4</literal></expr>, <expr><literal type="number">0x7166</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9C5</literal></expr>, <expr><literal type="number">0x7234</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9C6</literal></expr>, <expr><literal type="number">0x7240</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9C7</literal></expr>, <expr><literal type="number">0x7235</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9D2</literal></expr>, <expr><literal type="number">0x7241</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xf9d6</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* map CNS 11643-1992 Plane 2 to Big5 Level 2 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>codes_t</name></type> <name><name>cnsPlane2ToBig5Level2</name><index>[<expr><literal type="number">49</literal></expr>]</index></name> <init>= <expr><block>{	<comment type="block">/* range */</comment>
	<expr><block>{<expr><literal type="number">0x2121</literal></expr>, <expr><literal type="number">0xC940</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x212B</literal></expr>, <expr><literal type="number">0xC94B</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x214C</literal></expr>, <expr><literal type="number">0xC9BE</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x214D</literal></expr>, <expr><literal type="number">0xC96C</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x217D</literal></expr>, <expr><literal type="number">0xC9BF</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x224D</literal></expr>, <expr><literal type="number">0xCAF7</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x224E</literal></expr>, <expr><literal type="number">0xC9ED</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x2439</literal></expr>, <expr><literal type="number">0xCAF8</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x387E</literal></expr>, <expr><literal type="number">0xD77B</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x3F6A</literal></expr>, <expr><literal type="number">0xD77A</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x3F6B</literal></expr>, <expr><literal type="number">0xDBA7</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x4424</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x4176</literal></expr>, <expr><literal type="number">0xDDFC</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x4177</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x4424</literal></expr>, <expr><literal type="number">0xDDFD</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x554B</literal></expr>, <expr><literal type="number">0xEBF1</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x554C</literal></expr>, <expr><literal type="number">0xE8A3</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5722</literal></expr>, <expr><literal type="number">0xECDE</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5723</literal></expr>, <expr><literal type="number">0xE976</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5A28</literal></expr>, <expr><literal type="number">0xF0CB</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5A29</literal></expr>, <expr><literal type="number">0xEB5B</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5B3F</literal></expr>, <expr><literal type="number">0xEBF2</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5C6A</literal></expr>, <expr><literal type="number">0xECDF</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5D74</literal></expr>, <expr><literal type="number">0xF056</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5D75</literal></expr>, <expr><literal type="number">0xEDAA</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6039</literal></expr>, <expr><literal type="number">0xEEEC</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6243</literal></expr>, <expr><literal type="number">0xF057</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6337</literal></expr>, <expr><literal type="number">0xF0CC</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x642F</literal></expr>, <expr><literal type="number">0xEEEB</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6430</literal></expr>, <expr><literal type="number">0xF163</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6438</literal></expr>, <expr><literal type="number">0xF16C</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6573</literal></expr>, <expr><literal type="number">0xF269</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x664D</literal></expr>, <expr><literal type="number">0xF4B5</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x664E</literal></expr>, <expr><literal type="number">0xF2C3</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6761</literal></expr>, <expr><literal type="number">0xF16B</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6762</literal></expr>, <expr><literal type="number">0xF375</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6934</literal></expr>, <expr><literal type="number">0xF268</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6935</literal></expr>, <expr><literal type="number">0xF466</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6962</literal></expr>, <expr><literal type="number">0xF4B6</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6A4B</literal></expr>, <expr><literal type="number">0xF663</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6A4C</literal></expr>, <expr><literal type="number">0xF4FD</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x6C52</literal></expr>, <expr><literal type="number">0xF664</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7166</literal></expr>, <expr><literal type="number">0xF9C4</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7167</literal></expr>, <expr><literal type="number">0xF977</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7234</literal></expr>, <expr><literal type="number">0xF9C5</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7235</literal></expr>, <expr><literal type="number">0xF9C7</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7240</literal></expr>, <expr><literal type="number">0xF9C6</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7241</literal></expr>, <expr><literal type="number">0xF9D2</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x7245</literal></expr>, <expr><literal type="number">0x0000</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* Big Five Level 1 Correspondence to CNS 11643-1992 Plane 4 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>short</name></type> <name><name>b1c4</name><index>[]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
	<expr><block>{<expr><literal type="number">0xC879</literal></expr>, <expr><literal type="number">0x2123</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC87B</literal></expr>, <expr><literal type="number">0x2124</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC87D</literal></expr>, <expr><literal type="number">0x212A</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xC8A2</literal></expr>, <expr><literal type="number">0x2152</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* Big Five Level 2 Correspondence to CNS 11643-1992 Plane 3 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>short</name></type> <name><name>b2c3</name><index>[]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
	<expr><block>{<expr><literal type="number">0xF9D6</literal></expr>, <expr><literal type="number">0x4337</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9D7</literal></expr>, <expr><literal type="number">0x4F50</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9D8</literal></expr>, <expr><literal type="number">0x444E</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9D9</literal></expr>, <expr><literal type="number">0x504A</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9DA</literal></expr>, <expr><literal type="number">0x2C5D</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9DB</literal></expr>, <expr><literal type="number">0x3D7E</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0xF9DC</literal></expr>, <expr><literal type="number">0x4B5C</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>unsigned</name> <name>short</name></type> <name>BinarySearchRange</name>
			<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>codes_t</name> <modifier>*</modifier></type><name>array</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>high</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>short</name></type> <name>code</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type>			<name>low</name></decl>,
				<decl><type ref="prev"/><name>mid</name></decl>,
				<decl><type ref="prev"/><name>distance</name></decl>,
				<decl><type ref="prev"/><name>tmp</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>low</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>mid</name> <operator>=</operator> <name>high</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

	<for>for <control>(<init>;</init> <condition><expr><name>low</name> <operator>&lt;=</operator> <name>high</name></expr>;</condition> <incr><expr><name>mid</name> <operator>=</operator> <operator>(</operator><name>low</name> <operator>+</operator> <name>high</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></incr>)</control>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>code</name> <operator>&lt;=</operator> <name>code</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>array</name><index>[<expr><name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>code</name> <operator>&gt;</operator> <name>code</name><operator>)</operator></expr>)</condition>
		<block>{<block_content>
			<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>peer</name></expr>)</condition><block type="pseudo"><block_content>
				<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
			<if_stmt><if>if <condition>(<expr><name>code</name> <operator>&gt;=</operator> <literal type="number">0xa140U</literal></expr>)</condition>
			<block>{<block_content>
				<comment type="block">/* big5 to cns */</comment>
				<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>code</name> <operator>&amp;</operator> <literal type="number">0xff00</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>code</name> <operator>&amp;</operator> <literal type="number">0xff00</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>high</name> <operator>=</operator> <name>code</name> <operator>&amp;</operator> <literal type="number">0x00ff</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>low</name> <operator>=</operator> <name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>code</name> <operator>&amp;</operator> <literal type="number">0x00ff</literal></expr>;</expr_stmt>

				<comment type="block">/*
				 * NOTE: big5 high_byte: 0xa1-0xfe, low_byte: 0x40-0x7e,
				 * 0xa1-0xfe (radicals: 0x00-0x3e, 0x3f-0x9c) big5 radix is
				 * 0x9d.                     [region_low, region_high] We
				 * should remember big5 has two different regions (above).
				 * There is a bias for the distance between these regions.
				 * 0xa1 - 0x7e + bias = 1 (Distance between 0xa1 and 0x7e is
				 * 1.) bias = - 0x22.
				 */</comment>
				<expr_stmt><expr><name>distance</name> <operator>=</operator> <name>tmp</name> <operator>*</operator> <literal type="number">0x9d</literal> <operator>+</operator> <name>high</name> <operator>-</operator> <name>low</name> <operator>+</operator>
					<operator>(</operator><ternary><condition><expr><name>high</name> <operator>&gt;=</operator> <literal type="number">0xa1</literal></expr> ?</condition><then> <expr><operator>(</operator><ternary><condition><expr><name>low</name> <operator>&gt;=</operator> <literal type="number">0xa1</literal></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><operator>-</operator><literal type="number">0x22</literal></expr></else></ternary><operator>)</operator></expr>
					 </then><else>: <expr><operator>(</operator><ternary><condition><expr><name>low</name> <operator>&gt;=</operator> <literal type="number">0xa1</literal></expr> ?</condition><then> <expr><operator>+</operator><literal type="number">0x22</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

				<comment type="block">/*
				 * NOTE: we have to convert the distance into a code point.
				 * The code point's low_byte is 0x21 plus mod_0x5e. In the
				 * first, we extract the mod_0x5e of the starting code point,
				 * subtracting 0x21, and add distance to it. Then we calculate
				 * again mod_0x5e of them, and restore the final codepoint,
				 * adding 0x21.
				 */</comment>
				<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>peer</name> <operator>&amp;</operator> <literal type="number">0x00ff</literal><operator>)</operator> <operator>+</operator> <name>distance</name> <operator>-</operator> <literal type="number">0x21</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>peer</name> <operator>&amp;</operator> <literal type="number">0xff00</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><operator>(</operator><name>tmp</name> <operator>/</operator> <literal type="number">0x5e</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator>
					<operator>+</operator> <literal type="number">0x21</literal> <operator>+</operator> <name>tmp</name> <operator>%</operator> <literal type="number">0x5e</literal></expr>;</expr_stmt>
				<return>return <expr><name>tmp</name></expr>;</return>
			</block_content>}</block></if>
			<else>else
			<block>{<block_content>
				<comment type="block">/* cns to big5 */</comment>
				<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>code</name> <operator>&amp;</operator> <literal type="number">0xff00</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>code</name> <operator>&amp;</operator> <literal type="number">0xff00</literal><operator>)</operator><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

				<comment type="block">/*
				 * NOTE: ISO charsets ranges between 0x21-0xfe (94charset).
				 * Its radix is 0x5e. But there is no distance bias like big5.
				 */</comment>
				<expr_stmt><expr><name>distance</name> <operator>=</operator> <name>tmp</name> <operator>*</operator> <literal type="number">0x5e</literal>
					<operator>+</operator> <operator>(</operator><operator>(</operator><name>int</name><operator>)</operator> <operator>(</operator><name>code</name> <operator>&amp;</operator> <literal type="number">0x00ff</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><name>int</name><operator>)</operator> <operator>(</operator><name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>code</name> <operator>&amp;</operator> <literal type="number">0x00ff</literal><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

				<comment type="block">/*
				 * NOTE: Similar to big5 to cns conversion, we extract
				 * mod_0x9d and restore mod_0x9d into a code point.
				 */</comment>
				<expr_stmt><expr><name>low</name> <operator>=</operator> <name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>peer</name> <operator>&amp;</operator> <literal type="number">0x00ff</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name>low</name> <operator>+</operator> <name>distance</name> <operator>-</operator> <operator>(</operator><ternary><condition><expr><name>low</name> <operator>&gt;=</operator> <literal type="number">0xa1</literal></expr> ?</condition><then> <expr><literal type="number">0x62</literal></expr> </then><else>: <expr><literal type="number">0x40</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>low</name> <operator>=</operator> <name>tmp</name> <operator>%</operator> <literal type="number">0x9d</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>peer</name> <operator>&amp;</operator> <literal type="number">0xff00</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><operator>(</operator><name>tmp</name> <operator>/</operator> <literal type="number">0x9d</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator>
					<operator>+</operator> <operator>(</operator><ternary><condition><expr><name>low</name> <operator>&gt;</operator> <literal type="number">0x3e</literal></expr> ?</condition><then> <expr><literal type="number">0x62</literal></expr> </then><else>: <expr><literal type="number">0x40</literal></expr></else></ternary><operator>)</operator> <operator>+</operator> <name>low</name></expr>;</expr_stmt>
				<return>return <expr><name>tmp</name></expr>;</return>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></if>
		<if type="elseif">else if <condition>(<expr><name><name>array</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>code</name> <operator>&gt;</operator> <name>code</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name>high</name> <operator>=</operator> <name>mid</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
		<else>else<block type="pseudo"><block_content>
			<expr_stmt><expr><name>low</name> <operator>=</operator> <name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
	</block_content>}</block></for>

	<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>


<function><type><name>unsigned</name> <name>short</name></type>
<name>BIG5toCNS</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>short</name></type> <name>big5</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>lc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>short</name></type> <name>cns</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>big5</name> <operator>&lt;</operator> <literal type="number">0xc940U</literal></expr>)</condition>
	<block>{<block_content>
		<comment type="block">/* level 1 */</comment>

		<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>b1c4</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <operator>(</operator>sizeof<operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{<block_content>
			<if_stmt><if>if <condition>(<expr><name><name>b1c4</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <name>big5</name></expr>)</condition>
			<block>{<block_content>
				<expr_stmt><expr><operator>*</operator><name>lc</name> <operator>=</operator> <name>LC_CNS11643_4</name></expr>;</expr_stmt>
				<return>return <expr><operator>(</operator><name><name>b1c4</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>|</operator> <literal type="number">0x8080U</literal><operator>)</operator></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>

		<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>&lt;</operator> <operator>(</operator><name>cns</name> <operator>=</operator> <call><name>BinarySearchRange</name><argument_list>(<argument><expr><name>big5Level1ToCnsPlane1</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>, <argument><expr><name>big5</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><operator>*</operator><name>lc</name> <operator>=</operator> <name>LC_CNS11643_1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	</block_content>}</block></if>
	<if type="elseif">else if <condition>(<expr><name>big5</name> <operator>==</operator> <literal type="number">0xc94aU</literal></expr>)</condition>
	<block>{<block_content>
		<comment type="block">/* level 2 */</comment>
		<expr_stmt><expr><operator>*</operator><name>lc</name> <operator>=</operator> <name>LC_CNS11643_1</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cns</name> <operator>=</operator> <literal type="number">0x4442</literal></expr>;</expr_stmt>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<comment type="block">/* level 2 */</comment>
		<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>b2c3</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <operator>(</operator>sizeof<operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{<block_content>
			<if_stmt><if>if <condition>(<expr><name><name>b2c3</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <name>big5</name></expr>)</condition>
			<block>{<block_content>
				<expr_stmt><expr><operator>*</operator><name>lc</name> <operator>=</operator> <name>LC_CNS11643_3</name></expr>;</expr_stmt>
				<return>return <expr><operator>(</operator><name><name>b2c3</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>|</operator> <literal type="number">0x8080U</literal><operator>)</operator></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>

		<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>&lt;</operator> <operator>(</operator><name>cns</name> <operator>=</operator> <call><name>BinarySearchRange</name><argument_list>(<argument><expr><name>big5Level2ToCnsPlane2</name></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>, <argument><expr><name>big5</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><operator>*</operator><name>lc</name> <operator>=</operator> <name>LC_CNS11643_2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	</block_content>}</block></else></if_stmt>

	<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>cns</name></expr>)</condition>
	<block>{<block_content>							<comment type="block">/* no mapping Big5 to CNS 11643-1992 */</comment>
		<expr_stmt><expr><operator>*</operator><name>lc</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<return>return <expr><operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator> <literal type="char">'?'</literal></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><name>cns</name> <operator>|</operator> <literal type="number">0x8080</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>unsigned</name> <name>short</name></type>
<name>CNStoBIG5</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>short</name></type> <name>cns</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name></type> <name>lc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>big5</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>cns</name> <operator>&amp;=</operator> <literal type="number">0x7f7f</literal></expr>;</expr_stmt>

	<switch>switch <condition>(<expr><name>lc</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>LC_CNS11643_1</name></expr>:</case>
			<expr_stmt><expr><name>big5</name> <operator>=</operator> <call><name>BinarySearchRange</name><argument_list>(<argument><expr><name>cnsPlane1ToBig5Level1</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>cns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>LC_CNS11643_2</name></expr>:</case>
			<expr_stmt><expr><name>big5</name> <operator>=</operator> <call><name>BinarySearchRange</name><argument_list>(<argument><expr><name>cnsPlane2ToBig5Level2</name></expr></argument>, <argument><expr><literal type="number">47</literal></expr></argument>, <argument><expr><name>cns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>LC_CNS11643_3</name></expr>:</case>
			<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>b2c3</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <operator>(</operator>sizeof<operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
			<block>{<block_content>
				<if_stmt><if>if <condition>(<expr><name><name>b2c3</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <name>cns</name></expr>)</condition><block type="pseudo"><block_content>
					<return>return <expr><name><name>b2c3</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
			</block_content>}</block></for>
			<break>break;</break>
		<case>case <expr><name>LC_CNS11643_4</name></expr>:</case>
			<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>b1c4</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <operator>(</operator>sizeof<operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
			<block>{<block_content>
				<if_stmt><if>if <condition>(<expr><name><name>b1c4</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <name>cns</name></expr>)</condition><block type="pseudo"><block_content>
					<return>return <expr><name><name>b1c4</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
			</block_content>}</block></for>
			<expr_stmt><expr><call><name>switch_fallthrough</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<default>default:</default>
			<break>break;</break>
	</block_content>}</block></switch>
	<return>return <expr><name>big5</name></expr>;</return>
</block_content>}</block></function>
</unit>
