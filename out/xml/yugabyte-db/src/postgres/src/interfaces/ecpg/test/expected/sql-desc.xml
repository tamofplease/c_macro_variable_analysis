<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/yugabyte-db/src/postgres/src/interfaces/ecpg/test/expected/sql-desc.c"><comment type="block">/* Processed by ecpg (regression mode) */</comment>
<comment type="block">/* These include files are added by the preprocessor */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ecpglib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ecpgerrno.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sqlca.h&gt;</cpp:file></cpp:include>
<comment type="block">/* End of automatic include section */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ECPGdebug</name><parameter_list>(<parameter><type><name>X</name></type></parameter>,<parameter><type><name>Y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ECPGdebug((X)+100,(Y))</cpp:value></cpp:define>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>1</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>1</cpp:number> <cpp:file>"regression.h"</cpp:file></cpp:line>






<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>1</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<comment type="block">/* exec sql whenever sqlerror  sqlprint ; */</comment>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>2</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


<function><type><name>int</name></type>
<name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/* exec sql begin declare section */</comment>
	   
	   
	   

	   
	      
	      
	   
	  
	   
	
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>8</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type> <name>stmt1</name> <init>= <expr><literal type="string">"INSERT INTO test1 VALUES ($1, $2)"</literal></expr></init></decl> ;</decl_stmt>
 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>9</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type> <name>stmt2</name> <init>= <expr><literal type="string">"SELECT * from test1 where a = $1 and b = $2"</literal></expr></init></decl> ;</decl_stmt>
 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>10</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type> <name>stmt3</name> <init>= <expr><literal type="string">"SELECT * from test1 where :var = a"</literal></expr></init></decl> ;</decl_stmt>
 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>12</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>int</name></type> <name>val1</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> ;</decl_stmt>
 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>13</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>char</name></type> <name><name>val2</name> <index>[ <expr><literal type="number">4</literal></expr> ]</index></name> <init>= <expr><literal type="string">"one"</literal></expr></init></decl> , <decl><type ref="prev"/><name><name>val2output</name> <index>[]</index></name> <init>= <expr><literal type="string">"AAA"</literal></expr></init></decl> ;</decl_stmt>
 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>14</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>int</name></type> <name>val1output</name> <init>= <expr><literal type="number">2</literal></expr></init></decl> , <decl><type ref="prev"/><name>val2i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt>
 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>15</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>int</name></type> <name>val2null</name> <init>= <expr><operator>-</operator> <literal type="number">1</literal></expr></init></decl> ;</decl_stmt>
 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>16</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>int</name></type> <name>ind1</name></decl> , <decl><type ref="prev"/><name>ind2</name></decl> ;</decl_stmt>
 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>17</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>char</name></type> <name><name>desc1</name> <index>[ <expr><literal type="number">8</literal></expr> ]</index></name> <init>= <expr><literal type="string">"outdesc"</literal></expr></init></decl> ;</decl_stmt>
<comment type="block">/* exec sql end declare section */</comment>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>18</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<expr_stmt><expr><call><name>ECPGdebug</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>ECPGallocate_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>22</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>22</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<expr_stmt><expr><call><name>ECPGallocate_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><operator>(</operator><name>desc1</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>23</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>23</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val1</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>25</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>25</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_char</name></expr></argument>,<argument><expr><operator>(</operator><name>val2</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">4</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><literal type="number">4</literal><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_indicator</name></expr></argument>,
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val2i</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>26</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>26</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGconnect</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"ecpg1_regression"</literal></expr></argument> , <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>28</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>28</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"create table test1 ( a int , b text )"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>30</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>30</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGprepare</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"foo1"</literal></expr></argument>, <argument><expr><name>stmt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>31</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>31</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGprepare</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Foo-1"</literal></expr></argument>, <argument><expr><name>stmt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>32</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>32</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGprepare</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"foo2"</literal></expr></argument>, <argument><expr><name>stmt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>33</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>33</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGprepare</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"foo3"</literal></expr></argument>, <argument><expr><name>stmt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>34</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>34</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_execute</name></expr></argument>, <argument><expr><literal type="string">"foo1"</literal></expr></argument>, 
	<argument><expr><name>ECPGt_descriptor</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>36</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>36</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_const</name></expr></argument>,<argument><expr><literal type="string">"2"</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><call><name>strlen</name><argument_list>(<argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>38</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>38</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_char</name></expr></argument>,<argument><expr><operator>(</operator><name>val2</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">4</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><literal type="number">4</literal><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_indicator</name></expr></argument>,
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val2null</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>39</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>39</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_execute</name></expr></argument>, <argument><expr><literal type="string">"foo1"</literal></expr></argument>, 
	<argument><expr><name>ECPGt_descriptor</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>41</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>41</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_const</name></expr></argument>,<argument><expr><literal type="string">"3"</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><call><name>strlen</name><argument_list>(<argument><expr><literal type="string">"3"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>43</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>43</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_const</name></expr></argument>,<argument><expr><literal type="string">"this is a long test"</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">19</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><call><name>strlen</name><argument_list>(<argument><expr><literal type="string">"this is a long test"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ECPGd_indicator</name></expr></argument>,
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val1</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>44</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>44</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_execute</name></expr></argument>, <argument><expr><literal type="string">"Foo-1"</literal></expr></argument>, 
	<argument><expr><name>ECPGt_descriptor</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>46</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>46</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdeallocate</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"Foo-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>48</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>48</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val1</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>50</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>50</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_char</name></expr></argument>,<argument><expr><operator>(</operator><name>val2</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">4</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><literal type="number">4</literal><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_indicator</name></expr></argument>,
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val2i</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>51</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>51</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_execute</name></expr></argument>, <argument><expr><literal type="string">"foo2"</literal></expr></argument>, 
	<argument><expr><name>ECPGt_descriptor</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, 
	<argument><expr><name>ECPGt_descriptor</name></expr></argument>, <argument><expr><operator>(</operator><name>desc1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>53</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>53</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGget_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><operator>(</operator><name>desc1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_char</name></expr></argument>,<argument><expr><operator>(</operator><name>val2output</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"AAA"</literal></expr></argument>)</argument_list></sizeof></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"AAA"</literal></expr></argument>)</argument_list></sizeof><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>55</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>55</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"output = %s\n"</literal></expr></argument>, <argument><expr><name>val2output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* declare c1 cursor for $1 */</comment>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>58</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"declare c1 cursor for $1"</literal></expr></argument>, 
	<argument><expr><name>ECPGt_char_variable</name></expr></argument>,<argument><expr><operator>(</operator><call><name>ECPGprepared_statement</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"foo2"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><literal type="number">1</literal><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_descriptor</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>59</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>59</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"fetch next from c1"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val1output</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>ind1</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_char</name></expr></argument>,<argument><expr><operator>(</operator><name>val2output</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"AAA"</literal></expr></argument>)</argument_list></sizeof></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"AAA"</literal></expr></argument>)</argument_list></sizeof><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>ind2</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>61</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>61</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"val1=%d (ind1: %d) val2=%s (ind2: %d)\n"</literal></expr></argument>,
		<argument><expr><name>val1output</name></expr></argument>, <argument><expr><name>ind1</name></expr></argument>, <argument><expr><name>val2output</name></expr></argument>, <argument><expr><name>ind2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"close c1"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>65</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>65</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc_header</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>67</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>67</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGset_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><name>ECPGd_data</name></expr></argument>,
	<argument><expr><name>ECPGt_const</name></expr></argument>,<argument><expr><literal type="string">"2"</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><call><name>strlen</name><argument_list>(<argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ECPGd_EODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>68</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>68</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<comment type="block">/* declare c2 cursor for $1 */</comment>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>70</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"declare c2 cursor for $1"</literal></expr></argument>, 
	<argument><expr><name>ECPGt_char_variable</name></expr></argument>,<argument><expr><operator>(</operator><call><name>ECPGprepared_statement</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"foo3"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><literal type="number">1</literal><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_descriptor</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>71</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>71</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"fetch next from c2"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val1output</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_char</name></expr></argument>,<argument><expr><operator>(</operator><name>val2output</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"AAA"</literal></expr></argument>)</argument_list></sizeof></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"AAA"</literal></expr></argument>)</argument_list></sizeof><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val2i</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>73</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>73</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"val1=%d val2=%s\n"</literal></expr></argument>, <argument><expr><name>val1output</name></expr></argument>, <argument><expr><ternary><condition><expr><name>val2i</name></expr> ?</condition><then> <expr><literal type="string">"null"</literal></expr> </then><else>: <expr><name>val2output</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"close c2"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>76</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>76</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"select * from test1 where a = 3"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val1output</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_char</name></expr></argument>,<argument><expr><operator>(</operator><name>val2output</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"AAA"</literal></expr></argument>)</argument_list></sizeof></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"AAA"</literal></expr></argument>)</argument_list></sizeof><operator>)</operator><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>val2i</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>78</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>78</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"val1=%d val2=%c%c%c%c warn=%c truncate=%d\n"</literal></expr></argument>, <argument><expr><name>val1output</name></expr></argument>, <argument><expr><name><name>val2output</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>val2output</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>val2output</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>val2output</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>val2i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"drop table test1"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>81</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>81</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdeallocate_all</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>82</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>82</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<block>{<block_content> <expr_stmt><expr><call><name>ECPGdisconnect</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"CURRENT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>83</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>83</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<expr_stmt><expr><call><name>ECPGdeallocate_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"indesc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>85</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>85</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

	<expr_stmt><expr><call><name>ECPGdeallocate_desc</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><operator>(</operator><name>desc1</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>86</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>86</cpp:number> <cpp:file>"desc.pgc"</cpp:file></cpp:line>


	<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
