<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/yugabyte-db/src/postgres/contrib/pgcrypto/blf.c"><comment type="block">/*
 * Butchered version of sshblowf.c from putty-0.59.
 *
 * contrib/pgcrypto/blf.c
 */</comment>

<comment type="block">/*
 * PuTTY is copyright 1997-2007 Simon Tatham.
 *
 * Portions copyright Robert de Bath, Joris van Rantwijk, Delian
 * Delchev, Andreas Schultz, Jeroen Massar, Wez Furlong, Nicolas Barry,
 * Justin Bradford, Ben Harris, Malcolm Smith, Ahmad Khalifa, Markus
 * Kuhn, and CORE SDI S.A.
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */</comment>

<comment type="block">/*
 * Blowfish implementation for PuTTY.
 *
 * Coded from scratch from the algorithm description.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"blf.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GET_32BIT_MSB_FIRST</name><parameter_list>(<parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( \
	((p)[0] &lt;&lt; 24) | ((p)[1] &lt;&lt; 16) | ((p)[2] &lt;&lt; 8) | ((p)[3]) )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PUT_32BIT_MSB_FIRST</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { \
	(p)[0] = v &gt;&gt; 24; \
	(p)[1] = v &gt;&gt; 16; \
	(p)[2] = v &gt;&gt; 8; \
	(p)[3] = v; \
} while (0)</cpp:value></cpp:define>

<comment type="block">/*
 * The Blowfish init data: hex digits of the fractional part of pi.
 * (ie pi as a hex fraction is 3.243F6A8885A308D3...)
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32</name></type> <name><name>parray</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x243F6A88</literal></expr>, <expr><literal type="number">0x85A308D3</literal></expr>, <expr><literal type="number">0x13198A2E</literal></expr>, <expr><literal type="number">0x03707344</literal></expr>, <expr><literal type="number">0xA4093822</literal></expr>, <expr><literal type="number">0x299F31D0</literal></expr>,
	<expr><literal type="number">0x082EFA98</literal></expr>, <expr><literal type="number">0xEC4E6C89</literal></expr>, <expr><literal type="number">0x452821E6</literal></expr>, <expr><literal type="number">0x38D01377</literal></expr>, <expr><literal type="number">0xBE5466CF</literal></expr>, <expr><literal type="number">0x34E90C6C</literal></expr>,
	<expr><literal type="number">0xC0AC29B7</literal></expr>, <expr><literal type="number">0xC97C50DD</literal></expr>, <expr><literal type="number">0x3F84D5B5</literal></expr>, <expr><literal type="number">0xB5470917</literal></expr>, <expr><literal type="number">0x9216D5D9</literal></expr>, <expr><literal type="number">0x8979FB1B</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32</name></type> <name><name>sbox0</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0xD1310BA6</literal></expr>, <expr><literal type="number">0x98DFB5AC</literal></expr>, <expr><literal type="number">0x2FFD72DB</literal></expr>, <expr><literal type="number">0xD01ADFB7</literal></expr>, <expr><literal type="number">0xB8E1AFED</literal></expr>, <expr><literal type="number">0x6A267E96</literal></expr>,
	<expr><literal type="number">0xBA7C9045</literal></expr>, <expr><literal type="number">0xF12C7F99</literal></expr>, <expr><literal type="number">0x24A19947</literal></expr>, <expr><literal type="number">0xB3916CF7</literal></expr>, <expr><literal type="number">0x0801F2E2</literal></expr>, <expr><literal type="number">0x858EFC16</literal></expr>,
	<expr><literal type="number">0x636920D8</literal></expr>, <expr><literal type="number">0x71574E69</literal></expr>, <expr><literal type="number">0xA458FEA3</literal></expr>, <expr><literal type="number">0xF4933D7E</literal></expr>, <expr><literal type="number">0x0D95748F</literal></expr>, <expr><literal type="number">0x728EB658</literal></expr>,
	<expr><literal type="number">0x718BCD58</literal></expr>, <expr><literal type="number">0x82154AEE</literal></expr>, <expr><literal type="number">0x7B54A41D</literal></expr>, <expr><literal type="number">0xC25A59B5</literal></expr>, <expr><literal type="number">0x9C30D539</literal></expr>, <expr><literal type="number">0x2AF26013</literal></expr>,
	<expr><literal type="number">0xC5D1B023</literal></expr>, <expr><literal type="number">0x286085F0</literal></expr>, <expr><literal type="number">0xCA417918</literal></expr>, <expr><literal type="number">0xB8DB38EF</literal></expr>, <expr><literal type="number">0x8E79DCB0</literal></expr>, <expr><literal type="number">0x603A180E</literal></expr>,
	<expr><literal type="number">0x6C9E0E8B</literal></expr>, <expr><literal type="number">0xB01E8A3E</literal></expr>, <expr><literal type="number">0xD71577C1</literal></expr>, <expr><literal type="number">0xBD314B27</literal></expr>, <expr><literal type="number">0x78AF2FDA</literal></expr>, <expr><literal type="number">0x55605C60</literal></expr>,
	<expr><literal type="number">0xE65525F3</literal></expr>, <expr><literal type="number">0xAA55AB94</literal></expr>, <expr><literal type="number">0x57489862</literal></expr>, <expr><literal type="number">0x63E81440</literal></expr>, <expr><literal type="number">0x55CA396A</literal></expr>, <expr><literal type="number">0x2AAB10B6</literal></expr>,
	<expr><literal type="number">0xB4CC5C34</literal></expr>, <expr><literal type="number">0x1141E8CE</literal></expr>, <expr><literal type="number">0xA15486AF</literal></expr>, <expr><literal type="number">0x7C72E993</literal></expr>, <expr><literal type="number">0xB3EE1411</literal></expr>, <expr><literal type="number">0x636FBC2A</literal></expr>,
	<expr><literal type="number">0x2BA9C55D</literal></expr>, <expr><literal type="number">0x741831F6</literal></expr>, <expr><literal type="number">0xCE5C3E16</literal></expr>, <expr><literal type="number">0x9B87931E</literal></expr>, <expr><literal type="number">0xAFD6BA33</literal></expr>, <expr><literal type="number">0x6C24CF5C</literal></expr>,
	<expr><literal type="number">0x7A325381</literal></expr>, <expr><literal type="number">0x28958677</literal></expr>, <expr><literal type="number">0x3B8F4898</literal></expr>, <expr><literal type="number">0x6B4BB9AF</literal></expr>, <expr><literal type="number">0xC4BFE81B</literal></expr>, <expr><literal type="number">0x66282193</literal></expr>,
	<expr><literal type="number">0x61D809CC</literal></expr>, <expr><literal type="number">0xFB21A991</literal></expr>, <expr><literal type="number">0x487CAC60</literal></expr>, <expr><literal type="number">0x5DEC8032</literal></expr>, <expr><literal type="number">0xEF845D5D</literal></expr>, <expr><literal type="number">0xE98575B1</literal></expr>,
	<expr><literal type="number">0xDC262302</literal></expr>, <expr><literal type="number">0xEB651B88</literal></expr>, <expr><literal type="number">0x23893E81</literal></expr>, <expr><literal type="number">0xD396ACC5</literal></expr>, <expr><literal type="number">0x0F6D6FF3</literal></expr>, <expr><literal type="number">0x83F44239</literal></expr>,
	<expr><literal type="number">0x2E0B4482</literal></expr>, <expr><literal type="number">0xA4842004</literal></expr>, <expr><literal type="number">0x69C8F04A</literal></expr>, <expr><literal type="number">0x9E1F9B5E</literal></expr>, <expr><literal type="number">0x21C66842</literal></expr>, <expr><literal type="number">0xF6E96C9A</literal></expr>,
	<expr><literal type="number">0x670C9C61</literal></expr>, <expr><literal type="number">0xABD388F0</literal></expr>, <expr><literal type="number">0x6A51A0D2</literal></expr>, <expr><literal type="number">0xD8542F68</literal></expr>, <expr><literal type="number">0x960FA728</literal></expr>, <expr><literal type="number">0xAB5133A3</literal></expr>,
	<expr><literal type="number">0x6EEF0B6C</literal></expr>, <expr><literal type="number">0x137A3BE4</literal></expr>, <expr><literal type="number">0xBA3BF050</literal></expr>, <expr><literal type="number">0x7EFB2A98</literal></expr>, <expr><literal type="number">0xA1F1651D</literal></expr>, <expr><literal type="number">0x39AF0176</literal></expr>,
	<expr><literal type="number">0x66CA593E</literal></expr>, <expr><literal type="number">0x82430E88</literal></expr>, <expr><literal type="number">0x8CEE8619</literal></expr>, <expr><literal type="number">0x456F9FB4</literal></expr>, <expr><literal type="number">0x7D84A5C3</literal></expr>, <expr><literal type="number">0x3B8B5EBE</literal></expr>,
	<expr><literal type="number">0xE06F75D8</literal></expr>, <expr><literal type="number">0x85C12073</literal></expr>, <expr><literal type="number">0x401A449F</literal></expr>, <expr><literal type="number">0x56C16AA6</literal></expr>, <expr><literal type="number">0x4ED3AA62</literal></expr>, <expr><literal type="number">0x363F7706</literal></expr>,
	<expr><literal type="number">0x1BFEDF72</literal></expr>, <expr><literal type="number">0x429B023D</literal></expr>, <expr><literal type="number">0x37D0D724</literal></expr>, <expr><literal type="number">0xD00A1248</literal></expr>, <expr><literal type="number">0xDB0FEAD3</literal></expr>, <expr><literal type="number">0x49F1C09B</literal></expr>,
	<expr><literal type="number">0x075372C9</literal></expr>, <expr><literal type="number">0x80991B7B</literal></expr>, <expr><literal type="number">0x25D479D8</literal></expr>, <expr><literal type="number">0xF6E8DEF7</literal></expr>, <expr><literal type="number">0xE3FE501A</literal></expr>, <expr><literal type="number">0xB6794C3B</literal></expr>,
	<expr><literal type="number">0x976CE0BD</literal></expr>, <expr><literal type="number">0x04C006BA</literal></expr>, <expr><literal type="number">0xC1A94FB6</literal></expr>, <expr><literal type="number">0x409F60C4</literal></expr>, <expr><literal type="number">0x5E5C9EC2</literal></expr>, <expr><literal type="number">0x196A2463</literal></expr>,
	<expr><literal type="number">0x68FB6FAF</literal></expr>, <expr><literal type="number">0x3E6C53B5</literal></expr>, <expr><literal type="number">0x1339B2EB</literal></expr>, <expr><literal type="number">0x3B52EC6F</literal></expr>, <expr><literal type="number">0x6DFC511F</literal></expr>, <expr><literal type="number">0x9B30952C</literal></expr>,
	<expr><literal type="number">0xCC814544</literal></expr>, <expr><literal type="number">0xAF5EBD09</literal></expr>, <expr><literal type="number">0xBEE3D004</literal></expr>, <expr><literal type="number">0xDE334AFD</literal></expr>, <expr><literal type="number">0x660F2807</literal></expr>, <expr><literal type="number">0x192E4BB3</literal></expr>,
	<expr><literal type="number">0xC0CBA857</literal></expr>, <expr><literal type="number">0x45C8740F</literal></expr>, <expr><literal type="number">0xD20B5F39</literal></expr>, <expr><literal type="number">0xB9D3FBDB</literal></expr>, <expr><literal type="number">0x5579C0BD</literal></expr>, <expr><literal type="number">0x1A60320A</literal></expr>,
	<expr><literal type="number">0xD6A100C6</literal></expr>, <expr><literal type="number">0x402C7279</literal></expr>, <expr><literal type="number">0x679F25FE</literal></expr>, <expr><literal type="number">0xFB1FA3CC</literal></expr>, <expr><literal type="number">0x8EA5E9F8</literal></expr>, <expr><literal type="number">0xDB3222F8</literal></expr>,
	<expr><literal type="number">0x3C7516DF</literal></expr>, <expr><literal type="number">0xFD616B15</literal></expr>, <expr><literal type="number">0x2F501EC8</literal></expr>, <expr><literal type="number">0xAD0552AB</literal></expr>, <expr><literal type="number">0x323DB5FA</literal></expr>, <expr><literal type="number">0xFD238760</literal></expr>,
	<expr><literal type="number">0x53317B48</literal></expr>, <expr><literal type="number">0x3E00DF82</literal></expr>, <expr><literal type="number">0x9E5C57BB</literal></expr>, <expr><literal type="number">0xCA6F8CA0</literal></expr>, <expr><literal type="number">0x1A87562E</literal></expr>, <expr><literal type="number">0xDF1769DB</literal></expr>,
	<expr><literal type="number">0xD542A8F6</literal></expr>, <expr><literal type="number">0x287EFFC3</literal></expr>, <expr><literal type="number">0xAC6732C6</literal></expr>, <expr><literal type="number">0x8C4F5573</literal></expr>, <expr><literal type="number">0x695B27B0</literal></expr>, <expr><literal type="number">0xBBCA58C8</literal></expr>,
	<expr><literal type="number">0xE1FFA35D</literal></expr>, <expr><literal type="number">0xB8F011A0</literal></expr>, <expr><literal type="number">0x10FA3D98</literal></expr>, <expr><literal type="number">0xFD2183B8</literal></expr>, <expr><literal type="number">0x4AFCB56C</literal></expr>, <expr><literal type="number">0x2DD1D35B</literal></expr>,
	<expr><literal type="number">0x9A53E479</literal></expr>, <expr><literal type="number">0xB6F84565</literal></expr>, <expr><literal type="number">0xD28E49BC</literal></expr>, <expr><literal type="number">0x4BFB9790</literal></expr>, <expr><literal type="number">0xE1DDF2DA</literal></expr>, <expr><literal type="number">0xA4CB7E33</literal></expr>,
	<expr><literal type="number">0x62FB1341</literal></expr>, <expr><literal type="number">0xCEE4C6E8</literal></expr>, <expr><literal type="number">0xEF20CADA</literal></expr>, <expr><literal type="number">0x36774C01</literal></expr>, <expr><literal type="number">0xD07E9EFE</literal></expr>, <expr><literal type="number">0x2BF11FB4</literal></expr>,
	<expr><literal type="number">0x95DBDA4D</literal></expr>, <expr><literal type="number">0xAE909198</literal></expr>, <expr><literal type="number">0xEAAD8E71</literal></expr>, <expr><literal type="number">0x6B93D5A0</literal></expr>, <expr><literal type="number">0xD08ED1D0</literal></expr>, <expr><literal type="number">0xAFC725E0</literal></expr>,
	<expr><literal type="number">0x8E3C5B2F</literal></expr>, <expr><literal type="number">0x8E7594B7</literal></expr>, <expr><literal type="number">0x8FF6E2FB</literal></expr>, <expr><literal type="number">0xF2122B64</literal></expr>, <expr><literal type="number">0x8888B812</literal></expr>, <expr><literal type="number">0x900DF01C</literal></expr>,
	<expr><literal type="number">0x4FAD5EA0</literal></expr>, <expr><literal type="number">0x688FC31C</literal></expr>, <expr><literal type="number">0xD1CFF191</literal></expr>, <expr><literal type="number">0xB3A8C1AD</literal></expr>, <expr><literal type="number">0x2F2F2218</literal></expr>, <expr><literal type="number">0xBE0E1777</literal></expr>,
	<expr><literal type="number">0xEA752DFE</literal></expr>, <expr><literal type="number">0x8B021FA1</literal></expr>, <expr><literal type="number">0xE5A0CC0F</literal></expr>, <expr><literal type="number">0xB56F74E8</literal></expr>, <expr><literal type="number">0x18ACF3D6</literal></expr>, <expr><literal type="number">0xCE89E299</literal></expr>,
	<expr><literal type="number">0xB4A84FE0</literal></expr>, <expr><literal type="number">0xFD13E0B7</literal></expr>, <expr><literal type="number">0x7CC43B81</literal></expr>, <expr><literal type="number">0xD2ADA8D9</literal></expr>, <expr><literal type="number">0x165FA266</literal></expr>, <expr><literal type="number">0x80957705</literal></expr>,
	<expr><literal type="number">0x93CC7314</literal></expr>, <expr><literal type="number">0x211A1477</literal></expr>, <expr><literal type="number">0xE6AD2065</literal></expr>, <expr><literal type="number">0x77B5FA86</literal></expr>, <expr><literal type="number">0xC75442F5</literal></expr>, <expr><literal type="number">0xFB9D35CF</literal></expr>,
	<expr><literal type="number">0xEBCDAF0C</literal></expr>, <expr><literal type="number">0x7B3E89A0</literal></expr>, <expr><literal type="number">0xD6411BD3</literal></expr>, <expr><literal type="number">0xAE1E7E49</literal></expr>, <expr><literal type="number">0x00250E2D</literal></expr>, <expr><literal type="number">0x2071B35E</literal></expr>,
	<expr><literal type="number">0x226800BB</literal></expr>, <expr><literal type="number">0x57B8E0AF</literal></expr>, <expr><literal type="number">0x2464369B</literal></expr>, <expr><literal type="number">0xF009B91E</literal></expr>, <expr><literal type="number">0x5563911D</literal></expr>, <expr><literal type="number">0x59DFA6AA</literal></expr>,
	<expr><literal type="number">0x78C14389</literal></expr>, <expr><literal type="number">0xD95A537F</literal></expr>, <expr><literal type="number">0x207D5BA2</literal></expr>, <expr><literal type="number">0x02E5B9C5</literal></expr>, <expr><literal type="number">0x83260376</literal></expr>, <expr><literal type="number">0x6295CFA9</literal></expr>,
	<expr><literal type="number">0x11C81968</literal></expr>, <expr><literal type="number">0x4E734A41</literal></expr>, <expr><literal type="number">0xB3472DCA</literal></expr>, <expr><literal type="number">0x7B14A94A</literal></expr>, <expr><literal type="number">0x1B510052</literal></expr>, <expr><literal type="number">0x9A532915</literal></expr>,
	<expr><literal type="number">0xD60F573F</literal></expr>, <expr><literal type="number">0xBC9BC6E4</literal></expr>, <expr><literal type="number">0x2B60A476</literal></expr>, <expr><literal type="number">0x81E67400</literal></expr>, <expr><literal type="number">0x08BA6FB5</literal></expr>, <expr><literal type="number">0x571BE91F</literal></expr>,
	<expr><literal type="number">0xF296EC6B</literal></expr>, <expr><literal type="number">0x2A0DD915</literal></expr>, <expr><literal type="number">0xB6636521</literal></expr>, <expr><literal type="number">0xE7B9F9B6</literal></expr>, <expr><literal type="number">0xFF34052E</literal></expr>, <expr><literal type="number">0xC5855664</literal></expr>,
	<expr><literal type="number">0x53B02D5D</literal></expr>, <expr><literal type="number">0xA99F8FA1</literal></expr>, <expr><literal type="number">0x08BA4799</literal></expr>, <expr><literal type="number">0x6E85076A</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32</name></type> <name><name>sbox1</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x4B7A70E9</literal></expr>, <expr><literal type="number">0xB5B32944</literal></expr>, <expr><literal type="number">0xDB75092E</literal></expr>, <expr><literal type="number">0xC4192623</literal></expr>, <expr><literal type="number">0xAD6EA6B0</literal></expr>, <expr><literal type="number">0x49A7DF7D</literal></expr>,
	<expr><literal type="number">0x9CEE60B8</literal></expr>, <expr><literal type="number">0x8FEDB266</literal></expr>, <expr><literal type="number">0xECAA8C71</literal></expr>, <expr><literal type="number">0x699A17FF</literal></expr>, <expr><literal type="number">0x5664526C</literal></expr>, <expr><literal type="number">0xC2B19EE1</literal></expr>,
	<expr><literal type="number">0x193602A5</literal></expr>, <expr><literal type="number">0x75094C29</literal></expr>, <expr><literal type="number">0xA0591340</literal></expr>, <expr><literal type="number">0xE4183A3E</literal></expr>, <expr><literal type="number">0x3F54989A</literal></expr>, <expr><literal type="number">0x5B429D65</literal></expr>,
	<expr><literal type="number">0x6B8FE4D6</literal></expr>, <expr><literal type="number">0x99F73FD6</literal></expr>, <expr><literal type="number">0xA1D29C07</literal></expr>, <expr><literal type="number">0xEFE830F5</literal></expr>, <expr><literal type="number">0x4D2D38E6</literal></expr>, <expr><literal type="number">0xF0255DC1</literal></expr>,
	<expr><literal type="number">0x4CDD2086</literal></expr>, <expr><literal type="number">0x8470EB26</literal></expr>, <expr><literal type="number">0x6382E9C6</literal></expr>, <expr><literal type="number">0x021ECC5E</literal></expr>, <expr><literal type="number">0x09686B3F</literal></expr>, <expr><literal type="number">0x3EBAEFC9</literal></expr>,
	<expr><literal type="number">0x3C971814</literal></expr>, <expr><literal type="number">0x6B6A70A1</literal></expr>, <expr><literal type="number">0x687F3584</literal></expr>, <expr><literal type="number">0x52A0E286</literal></expr>, <expr><literal type="number">0xB79C5305</literal></expr>, <expr><literal type="number">0xAA500737</literal></expr>,
	<expr><literal type="number">0x3E07841C</literal></expr>, <expr><literal type="number">0x7FDEAE5C</literal></expr>, <expr><literal type="number">0x8E7D44EC</literal></expr>, <expr><literal type="number">0x5716F2B8</literal></expr>, <expr><literal type="number">0xB03ADA37</literal></expr>, <expr><literal type="number">0xF0500C0D</literal></expr>,
	<expr><literal type="number">0xF01C1F04</literal></expr>, <expr><literal type="number">0x0200B3FF</literal></expr>, <expr><literal type="number">0xAE0CF51A</literal></expr>, <expr><literal type="number">0x3CB574B2</literal></expr>, <expr><literal type="number">0x25837A58</literal></expr>, <expr><literal type="number">0xDC0921BD</literal></expr>,
	<expr><literal type="number">0xD19113F9</literal></expr>, <expr><literal type="number">0x7CA92FF6</literal></expr>, <expr><literal type="number">0x94324773</literal></expr>, <expr><literal type="number">0x22F54701</literal></expr>, <expr><literal type="number">0x3AE5E581</literal></expr>, <expr><literal type="number">0x37C2DADC</literal></expr>,
	<expr><literal type="number">0xC8B57634</literal></expr>, <expr><literal type="number">0x9AF3DDA7</literal></expr>, <expr><literal type="number">0xA9446146</literal></expr>, <expr><literal type="number">0x0FD0030E</literal></expr>, <expr><literal type="number">0xECC8C73E</literal></expr>, <expr><literal type="number">0xA4751E41</literal></expr>,
	<expr><literal type="number">0xE238CD99</literal></expr>, <expr><literal type="number">0x3BEA0E2F</literal></expr>, <expr><literal type="number">0x3280BBA1</literal></expr>, <expr><literal type="number">0x183EB331</literal></expr>, <expr><literal type="number">0x4E548B38</literal></expr>, <expr><literal type="number">0x4F6DB908</literal></expr>,
	<expr><literal type="number">0x6F420D03</literal></expr>, <expr><literal type="number">0xF60A04BF</literal></expr>, <expr><literal type="number">0x2CB81290</literal></expr>, <expr><literal type="number">0x24977C79</literal></expr>, <expr><literal type="number">0x5679B072</literal></expr>, <expr><literal type="number">0xBCAF89AF</literal></expr>,
	<expr><literal type="number">0xDE9A771F</literal></expr>, <expr><literal type="number">0xD9930810</literal></expr>, <expr><literal type="number">0xB38BAE12</literal></expr>, <expr><literal type="number">0xDCCF3F2E</literal></expr>, <expr><literal type="number">0x5512721F</literal></expr>, <expr><literal type="number">0x2E6B7124</literal></expr>,
	<expr><literal type="number">0x501ADDE6</literal></expr>, <expr><literal type="number">0x9F84CD87</literal></expr>, <expr><literal type="number">0x7A584718</literal></expr>, <expr><literal type="number">0x7408DA17</literal></expr>, <expr><literal type="number">0xBC9F9ABC</literal></expr>, <expr><literal type="number">0xE94B7D8C</literal></expr>,
	<expr><literal type="number">0xEC7AEC3A</literal></expr>, <expr><literal type="number">0xDB851DFA</literal></expr>, <expr><literal type="number">0x63094366</literal></expr>, <expr><literal type="number">0xC464C3D2</literal></expr>, <expr><literal type="number">0xEF1C1847</literal></expr>, <expr><literal type="number">0x3215D908</literal></expr>,
	<expr><literal type="number">0xDD433B37</literal></expr>, <expr><literal type="number">0x24C2BA16</literal></expr>, <expr><literal type="number">0x12A14D43</literal></expr>, <expr><literal type="number">0x2A65C451</literal></expr>, <expr><literal type="number">0x50940002</literal></expr>, <expr><literal type="number">0x133AE4DD</literal></expr>,
	<expr><literal type="number">0x71DFF89E</literal></expr>, <expr><literal type="number">0x10314E55</literal></expr>, <expr><literal type="number">0x81AC77D6</literal></expr>, <expr><literal type="number">0x5F11199B</literal></expr>, <expr><literal type="number">0x043556F1</literal></expr>, <expr><literal type="number">0xD7A3C76B</literal></expr>,
	<expr><literal type="number">0x3C11183B</literal></expr>, <expr><literal type="number">0x5924A509</literal></expr>, <expr><literal type="number">0xF28FE6ED</literal></expr>, <expr><literal type="number">0x97F1FBFA</literal></expr>, <expr><literal type="number">0x9EBABF2C</literal></expr>, <expr><literal type="number">0x1E153C6E</literal></expr>,
	<expr><literal type="number">0x86E34570</literal></expr>, <expr><literal type="number">0xEAE96FB1</literal></expr>, <expr><literal type="number">0x860E5E0A</literal></expr>, <expr><literal type="number">0x5A3E2AB3</literal></expr>, <expr><literal type="number">0x771FE71C</literal></expr>, <expr><literal type="number">0x4E3D06FA</literal></expr>,
	<expr><literal type="number">0x2965DCB9</literal></expr>, <expr><literal type="number">0x99E71D0F</literal></expr>, <expr><literal type="number">0x803E89D6</literal></expr>, <expr><literal type="number">0x5266C825</literal></expr>, <expr><literal type="number">0x2E4CC978</literal></expr>, <expr><literal type="number">0x9C10B36A</literal></expr>,
	<expr><literal type="number">0xC6150EBA</literal></expr>, <expr><literal type="number">0x94E2EA78</literal></expr>, <expr><literal type="number">0xA5FC3C53</literal></expr>, <expr><literal type="number">0x1E0A2DF4</literal></expr>, <expr><literal type="number">0xF2F74EA7</literal></expr>, <expr><literal type="number">0x361D2B3D</literal></expr>,
	<expr><literal type="number">0x1939260F</literal></expr>, <expr><literal type="number">0x19C27960</literal></expr>, <expr><literal type="number">0x5223A708</literal></expr>, <expr><literal type="number">0xF71312B6</literal></expr>, <expr><literal type="number">0xEBADFE6E</literal></expr>, <expr><literal type="number">0xEAC31F66</literal></expr>,
	<expr><literal type="number">0xE3BC4595</literal></expr>, <expr><literal type="number">0xA67BC883</literal></expr>, <expr><literal type="number">0xB17F37D1</literal></expr>, <expr><literal type="number">0x018CFF28</literal></expr>, <expr><literal type="number">0xC332DDEF</literal></expr>, <expr><literal type="number">0xBE6C5AA5</literal></expr>,
	<expr><literal type="number">0x65582185</literal></expr>, <expr><literal type="number">0x68AB9802</literal></expr>, <expr><literal type="number">0xEECEA50F</literal></expr>, <expr><literal type="number">0xDB2F953B</literal></expr>, <expr><literal type="number">0x2AEF7DAD</literal></expr>, <expr><literal type="number">0x5B6E2F84</literal></expr>,
	<expr><literal type="number">0x1521B628</literal></expr>, <expr><literal type="number">0x29076170</literal></expr>, <expr><literal type="number">0xECDD4775</literal></expr>, <expr><literal type="number">0x619F1510</literal></expr>, <expr><literal type="number">0x13CCA830</literal></expr>, <expr><literal type="number">0xEB61BD96</literal></expr>,
	<expr><literal type="number">0x0334FE1E</literal></expr>, <expr><literal type="number">0xAA0363CF</literal></expr>, <expr><literal type="number">0xB5735C90</literal></expr>, <expr><literal type="number">0x4C70A239</literal></expr>, <expr><literal type="number">0xD59E9E0B</literal></expr>, <expr><literal type="number">0xCBAADE14</literal></expr>,
	<expr><literal type="number">0xEECC86BC</literal></expr>, <expr><literal type="number">0x60622CA7</literal></expr>, <expr><literal type="number">0x9CAB5CAB</literal></expr>, <expr><literal type="number">0xB2F3846E</literal></expr>, <expr><literal type="number">0x648B1EAF</literal></expr>, <expr><literal type="number">0x19BDF0CA</literal></expr>,
	<expr><literal type="number">0xA02369B9</literal></expr>, <expr><literal type="number">0x655ABB50</literal></expr>, <expr><literal type="number">0x40685A32</literal></expr>, <expr><literal type="number">0x3C2AB4B3</literal></expr>, <expr><literal type="number">0x319EE9D5</literal></expr>, <expr><literal type="number">0xC021B8F7</literal></expr>,
	<expr><literal type="number">0x9B540B19</literal></expr>, <expr><literal type="number">0x875FA099</literal></expr>, <expr><literal type="number">0x95F7997E</literal></expr>, <expr><literal type="number">0x623D7DA8</literal></expr>, <expr><literal type="number">0xF837889A</literal></expr>, <expr><literal type="number">0x97E32D77</literal></expr>,
	<expr><literal type="number">0x11ED935F</literal></expr>, <expr><literal type="number">0x16681281</literal></expr>, <expr><literal type="number">0x0E358829</literal></expr>, <expr><literal type="number">0xC7E61FD6</literal></expr>, <expr><literal type="number">0x96DEDFA1</literal></expr>, <expr><literal type="number">0x7858BA99</literal></expr>,
	<expr><literal type="number">0x57F584A5</literal></expr>, <expr><literal type="number">0x1B227263</literal></expr>, <expr><literal type="number">0x9B83C3FF</literal></expr>, <expr><literal type="number">0x1AC24696</literal></expr>, <expr><literal type="number">0xCDB30AEB</literal></expr>, <expr><literal type="number">0x532E3054</literal></expr>,
	<expr><literal type="number">0x8FD948E4</literal></expr>, <expr><literal type="number">0x6DBC3128</literal></expr>, <expr><literal type="number">0x58EBF2EF</literal></expr>, <expr><literal type="number">0x34C6FFEA</literal></expr>, <expr><literal type="number">0xFE28ED61</literal></expr>, <expr><literal type="number">0xEE7C3C73</literal></expr>,
	<expr><literal type="number">0x5D4A14D9</literal></expr>, <expr><literal type="number">0xE864B7E3</literal></expr>, <expr><literal type="number">0x42105D14</literal></expr>, <expr><literal type="number">0x203E13E0</literal></expr>, <expr><literal type="number">0x45EEE2B6</literal></expr>, <expr><literal type="number">0xA3AAABEA</literal></expr>,
	<expr><literal type="number">0xDB6C4F15</literal></expr>, <expr><literal type="number">0xFACB4FD0</literal></expr>, <expr><literal type="number">0xC742F442</literal></expr>, <expr><literal type="number">0xEF6ABBB5</literal></expr>, <expr><literal type="number">0x654F3B1D</literal></expr>, <expr><literal type="number">0x41CD2105</literal></expr>,
	<expr><literal type="number">0xD81E799E</literal></expr>, <expr><literal type="number">0x86854DC7</literal></expr>, <expr><literal type="number">0xE44B476A</literal></expr>, <expr><literal type="number">0x3D816250</literal></expr>, <expr><literal type="number">0xCF62A1F2</literal></expr>, <expr><literal type="number">0x5B8D2646</literal></expr>,
	<expr><literal type="number">0xFC8883A0</literal></expr>, <expr><literal type="number">0xC1C7B6A3</literal></expr>, <expr><literal type="number">0x7F1524C3</literal></expr>, <expr><literal type="number">0x69CB7492</literal></expr>, <expr><literal type="number">0x47848A0B</literal></expr>, <expr><literal type="number">0x5692B285</literal></expr>,
	<expr><literal type="number">0x095BBF00</literal></expr>, <expr><literal type="number">0xAD19489D</literal></expr>, <expr><literal type="number">0x1462B174</literal></expr>, <expr><literal type="number">0x23820E00</literal></expr>, <expr><literal type="number">0x58428D2A</literal></expr>, <expr><literal type="number">0x0C55F5EA</literal></expr>,
	<expr><literal type="number">0x1DADF43E</literal></expr>, <expr><literal type="number">0x233F7061</literal></expr>, <expr><literal type="number">0x3372F092</literal></expr>, <expr><literal type="number">0x8D937E41</literal></expr>, <expr><literal type="number">0xD65FECF1</literal></expr>, <expr><literal type="number">0x6C223BDB</literal></expr>,
	<expr><literal type="number">0x7CDE3759</literal></expr>, <expr><literal type="number">0xCBEE7460</literal></expr>, <expr><literal type="number">0x4085F2A7</literal></expr>, <expr><literal type="number">0xCE77326E</literal></expr>, <expr><literal type="number">0xA6078084</literal></expr>, <expr><literal type="number">0x19F8509E</literal></expr>,
	<expr><literal type="number">0xE8EFD855</literal></expr>, <expr><literal type="number">0x61D99735</literal></expr>, <expr><literal type="number">0xA969A7AA</literal></expr>, <expr><literal type="number">0xC50C06C2</literal></expr>, <expr><literal type="number">0x5A04ABFC</literal></expr>, <expr><literal type="number">0x800BCADC</literal></expr>,
	<expr><literal type="number">0x9E447A2E</literal></expr>, <expr><literal type="number">0xC3453484</literal></expr>, <expr><literal type="number">0xFDD56705</literal></expr>, <expr><literal type="number">0x0E1E9EC9</literal></expr>, <expr><literal type="number">0xDB73DBD3</literal></expr>, <expr><literal type="number">0x105588CD</literal></expr>,
	<expr><literal type="number">0x675FDA79</literal></expr>, <expr><literal type="number">0xE3674340</literal></expr>, <expr><literal type="number">0xC5C43465</literal></expr>, <expr><literal type="number">0x713E38D8</literal></expr>, <expr><literal type="number">0x3D28F89E</literal></expr>, <expr><literal type="number">0xF16DFF20</literal></expr>,
	<expr><literal type="number">0x153E21E7</literal></expr>, <expr><literal type="number">0x8FB03D4A</literal></expr>, <expr><literal type="number">0xE6E39F2B</literal></expr>, <expr><literal type="number">0xDB83ADF7</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32</name></type> <name><name>sbox2</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0xE93D5A68</literal></expr>, <expr><literal type="number">0x948140F7</literal></expr>, <expr><literal type="number">0xF64C261C</literal></expr>, <expr><literal type="number">0x94692934</literal></expr>, <expr><literal type="number">0x411520F7</literal></expr>, <expr><literal type="number">0x7602D4F7</literal></expr>,
	<expr><literal type="number">0xBCF46B2E</literal></expr>, <expr><literal type="number">0xD4A20068</literal></expr>, <expr><literal type="number">0xD4082471</literal></expr>, <expr><literal type="number">0x3320F46A</literal></expr>, <expr><literal type="number">0x43B7D4B7</literal></expr>, <expr><literal type="number">0x500061AF</literal></expr>,
	<expr><literal type="number">0x1E39F62E</literal></expr>, <expr><literal type="number">0x97244546</literal></expr>, <expr><literal type="number">0x14214F74</literal></expr>, <expr><literal type="number">0xBF8B8840</literal></expr>, <expr><literal type="number">0x4D95FC1D</literal></expr>, <expr><literal type="number">0x96B591AF</literal></expr>,
	<expr><literal type="number">0x70F4DDD3</literal></expr>, <expr><literal type="number">0x66A02F45</literal></expr>, <expr><literal type="number">0xBFBC09EC</literal></expr>, <expr><literal type="number">0x03BD9785</literal></expr>, <expr><literal type="number">0x7FAC6DD0</literal></expr>, <expr><literal type="number">0x31CB8504</literal></expr>,
	<expr><literal type="number">0x96EB27B3</literal></expr>, <expr><literal type="number">0x55FD3941</literal></expr>, <expr><literal type="number">0xDA2547E6</literal></expr>, <expr><literal type="number">0xABCA0A9A</literal></expr>, <expr><literal type="number">0x28507825</literal></expr>, <expr><literal type="number">0x530429F4</literal></expr>,
	<expr><literal type="number">0x0A2C86DA</literal></expr>, <expr><literal type="number">0xE9B66DFB</literal></expr>, <expr><literal type="number">0x68DC1462</literal></expr>, <expr><literal type="number">0xD7486900</literal></expr>, <expr><literal type="number">0x680EC0A4</literal></expr>, <expr><literal type="number">0x27A18DEE</literal></expr>,
	<expr><literal type="number">0x4F3FFEA2</literal></expr>, <expr><literal type="number">0xE887AD8C</literal></expr>, <expr><literal type="number">0xB58CE006</literal></expr>, <expr><literal type="number">0x7AF4D6B6</literal></expr>, <expr><literal type="number">0xAACE1E7C</literal></expr>, <expr><literal type="number">0xD3375FEC</literal></expr>,
	<expr><literal type="number">0xCE78A399</literal></expr>, <expr><literal type="number">0x406B2A42</literal></expr>, <expr><literal type="number">0x20FE9E35</literal></expr>, <expr><literal type="number">0xD9F385B9</literal></expr>, <expr><literal type="number">0xEE39D7AB</literal></expr>, <expr><literal type="number">0x3B124E8B</literal></expr>,
	<expr><literal type="number">0x1DC9FAF7</literal></expr>, <expr><literal type="number">0x4B6D1856</literal></expr>, <expr><literal type="number">0x26A36631</literal></expr>, <expr><literal type="number">0xEAE397B2</literal></expr>, <expr><literal type="number">0x3A6EFA74</literal></expr>, <expr><literal type="number">0xDD5B4332</literal></expr>,
	<expr><literal type="number">0x6841E7F7</literal></expr>, <expr><literal type="number">0xCA7820FB</literal></expr>, <expr><literal type="number">0xFB0AF54E</literal></expr>, <expr><literal type="number">0xD8FEB397</literal></expr>, <expr><literal type="number">0x454056AC</literal></expr>, <expr><literal type="number">0xBA489527</literal></expr>,
	<expr><literal type="number">0x55533A3A</literal></expr>, <expr><literal type="number">0x20838D87</literal></expr>, <expr><literal type="number">0xFE6BA9B7</literal></expr>, <expr><literal type="number">0xD096954B</literal></expr>, <expr><literal type="number">0x55A867BC</literal></expr>, <expr><literal type="number">0xA1159A58</literal></expr>,
	<expr><literal type="number">0xCCA92963</literal></expr>, <expr><literal type="number">0x99E1DB33</literal></expr>, <expr><literal type="number">0xA62A4A56</literal></expr>, <expr><literal type="number">0x3F3125F9</literal></expr>, <expr><literal type="number">0x5EF47E1C</literal></expr>, <expr><literal type="number">0x9029317C</literal></expr>,
	<expr><literal type="number">0xFDF8E802</literal></expr>, <expr><literal type="number">0x04272F70</literal></expr>, <expr><literal type="number">0x80BB155C</literal></expr>, <expr><literal type="number">0x05282CE3</literal></expr>, <expr><literal type="number">0x95C11548</literal></expr>, <expr><literal type="number">0xE4C66D22</literal></expr>,
	<expr><literal type="number">0x48C1133F</literal></expr>, <expr><literal type="number">0xC70F86DC</literal></expr>, <expr><literal type="number">0x07F9C9EE</literal></expr>, <expr><literal type="number">0x41041F0F</literal></expr>, <expr><literal type="number">0x404779A4</literal></expr>, <expr><literal type="number">0x5D886E17</literal></expr>,
	<expr><literal type="number">0x325F51EB</literal></expr>, <expr><literal type="number">0xD59BC0D1</literal></expr>, <expr><literal type="number">0xF2BCC18F</literal></expr>, <expr><literal type="number">0x41113564</literal></expr>, <expr><literal type="number">0x257B7834</literal></expr>, <expr><literal type="number">0x602A9C60</literal></expr>,
	<expr><literal type="number">0xDFF8E8A3</literal></expr>, <expr><literal type="number">0x1F636C1B</literal></expr>, <expr><literal type="number">0x0E12B4C2</literal></expr>, <expr><literal type="number">0x02E1329E</literal></expr>, <expr><literal type="number">0xAF664FD1</literal></expr>, <expr><literal type="number">0xCAD18115</literal></expr>,
	<expr><literal type="number">0x6B2395E0</literal></expr>, <expr><literal type="number">0x333E92E1</literal></expr>, <expr><literal type="number">0x3B240B62</literal></expr>, <expr><literal type="number">0xEEBEB922</literal></expr>, <expr><literal type="number">0x85B2A20E</literal></expr>, <expr><literal type="number">0xE6BA0D99</literal></expr>,
	<expr><literal type="number">0xDE720C8C</literal></expr>, <expr><literal type="number">0x2DA2F728</literal></expr>, <expr><literal type="number">0xD0127845</literal></expr>, <expr><literal type="number">0x95B794FD</literal></expr>, <expr><literal type="number">0x647D0862</literal></expr>, <expr><literal type="number">0xE7CCF5F0</literal></expr>,
	<expr><literal type="number">0x5449A36F</literal></expr>, <expr><literal type="number">0x877D48FA</literal></expr>, <expr><literal type="number">0xC39DFD27</literal></expr>, <expr><literal type="number">0xF33E8D1E</literal></expr>, <expr><literal type="number">0x0A476341</literal></expr>, <expr><literal type="number">0x992EFF74</literal></expr>,
	<expr><literal type="number">0x3A6F6EAB</literal></expr>, <expr><literal type="number">0xF4F8FD37</literal></expr>, <expr><literal type="number">0xA812DC60</literal></expr>, <expr><literal type="number">0xA1EBDDF8</literal></expr>, <expr><literal type="number">0x991BE14C</literal></expr>, <expr><literal type="number">0xDB6E6B0D</literal></expr>,
	<expr><literal type="number">0xC67B5510</literal></expr>, <expr><literal type="number">0x6D672C37</literal></expr>, <expr><literal type="number">0x2765D43B</literal></expr>, <expr><literal type="number">0xDCD0E804</literal></expr>, <expr><literal type="number">0xF1290DC7</literal></expr>, <expr><literal type="number">0xCC00FFA3</literal></expr>,
	<expr><literal type="number">0xB5390F92</literal></expr>, <expr><literal type="number">0x690FED0B</literal></expr>, <expr><literal type="number">0x667B9FFB</literal></expr>, <expr><literal type="number">0xCEDB7D9C</literal></expr>, <expr><literal type="number">0xA091CF0B</literal></expr>, <expr><literal type="number">0xD9155EA3</literal></expr>,
	<expr><literal type="number">0xBB132F88</literal></expr>, <expr><literal type="number">0x515BAD24</literal></expr>, <expr><literal type="number">0x7B9479BF</literal></expr>, <expr><literal type="number">0x763BD6EB</literal></expr>, <expr><literal type="number">0x37392EB3</literal></expr>, <expr><literal type="number">0xCC115979</literal></expr>,
	<expr><literal type="number">0x8026E297</literal></expr>, <expr><literal type="number">0xF42E312D</literal></expr>, <expr><literal type="number">0x6842ADA7</literal></expr>, <expr><literal type="number">0xC66A2B3B</literal></expr>, <expr><literal type="number">0x12754CCC</literal></expr>, <expr><literal type="number">0x782EF11C</literal></expr>,
	<expr><literal type="number">0x6A124237</literal></expr>, <expr><literal type="number">0xB79251E7</literal></expr>, <expr><literal type="number">0x06A1BBE6</literal></expr>, <expr><literal type="number">0x4BFB6350</literal></expr>, <expr><literal type="number">0x1A6B1018</literal></expr>, <expr><literal type="number">0x11CAEDFA</literal></expr>,
	<expr><literal type="number">0x3D25BDD8</literal></expr>, <expr><literal type="number">0xE2E1C3C9</literal></expr>, <expr><literal type="number">0x44421659</literal></expr>, <expr><literal type="number">0x0A121386</literal></expr>, <expr><literal type="number">0xD90CEC6E</literal></expr>, <expr><literal type="number">0xD5ABEA2A</literal></expr>,
	<expr><literal type="number">0x64AF674E</literal></expr>, <expr><literal type="number">0xDA86A85F</literal></expr>, <expr><literal type="number">0xBEBFE988</literal></expr>, <expr><literal type="number">0x64E4C3FE</literal></expr>, <expr><literal type="number">0x9DBC8057</literal></expr>, <expr><literal type="number">0xF0F7C086</literal></expr>,
	<expr><literal type="number">0x60787BF8</literal></expr>, <expr><literal type="number">0x6003604D</literal></expr>, <expr><literal type="number">0xD1FD8346</literal></expr>, <expr><literal type="number">0xF6381FB0</literal></expr>, <expr><literal type="number">0x7745AE04</literal></expr>, <expr><literal type="number">0xD736FCCC</literal></expr>,
	<expr><literal type="number">0x83426B33</literal></expr>, <expr><literal type="number">0xF01EAB71</literal></expr>, <expr><literal type="number">0xB0804187</literal></expr>, <expr><literal type="number">0x3C005E5F</literal></expr>, <expr><literal type="number">0x77A057BE</literal></expr>, <expr><literal type="number">0xBDE8AE24</literal></expr>,
	<expr><literal type="number">0x55464299</literal></expr>, <expr><literal type="number">0xBF582E61</literal></expr>, <expr><literal type="number">0x4E58F48F</literal></expr>, <expr><literal type="number">0xF2DDFDA2</literal></expr>, <expr><literal type="number">0xF474EF38</literal></expr>, <expr><literal type="number">0x8789BDC2</literal></expr>,
	<expr><literal type="number">0x5366F9C3</literal></expr>, <expr><literal type="number">0xC8B38E74</literal></expr>, <expr><literal type="number">0xB475F255</literal></expr>, <expr><literal type="number">0x46FCD9B9</literal></expr>, <expr><literal type="number">0x7AEB2661</literal></expr>, <expr><literal type="number">0x8B1DDF84</literal></expr>,
	<expr><literal type="number">0x846A0E79</literal></expr>, <expr><literal type="number">0x915F95E2</literal></expr>, <expr><literal type="number">0x466E598E</literal></expr>, <expr><literal type="number">0x20B45770</literal></expr>, <expr><literal type="number">0x8CD55591</literal></expr>, <expr><literal type="number">0xC902DE4C</literal></expr>,
	<expr><literal type="number">0xB90BACE1</literal></expr>, <expr><literal type="number">0xBB8205D0</literal></expr>, <expr><literal type="number">0x11A86248</literal></expr>, <expr><literal type="number">0x7574A99E</literal></expr>, <expr><literal type="number">0xB77F19B6</literal></expr>, <expr><literal type="number">0xE0A9DC09</literal></expr>,
	<expr><literal type="number">0x662D09A1</literal></expr>, <expr><literal type="number">0xC4324633</literal></expr>, <expr><literal type="number">0xE85A1F02</literal></expr>, <expr><literal type="number">0x09F0BE8C</literal></expr>, <expr><literal type="number">0x4A99A025</literal></expr>, <expr><literal type="number">0x1D6EFE10</literal></expr>,
	<expr><literal type="number">0x1AB93D1D</literal></expr>, <expr><literal type="number">0x0BA5A4DF</literal></expr>, <expr><literal type="number">0xA186F20F</literal></expr>, <expr><literal type="number">0x2868F169</literal></expr>, <expr><literal type="number">0xDCB7DA83</literal></expr>, <expr><literal type="number">0x573906FE</literal></expr>,
	<expr><literal type="number">0xA1E2CE9B</literal></expr>, <expr><literal type="number">0x4FCD7F52</literal></expr>, <expr><literal type="number">0x50115E01</literal></expr>, <expr><literal type="number">0xA70683FA</literal></expr>, <expr><literal type="number">0xA002B5C4</literal></expr>, <expr><literal type="number">0x0DE6D027</literal></expr>,
	<expr><literal type="number">0x9AF88C27</literal></expr>, <expr><literal type="number">0x773F8641</literal></expr>, <expr><literal type="number">0xC3604C06</literal></expr>, <expr><literal type="number">0x61A806B5</literal></expr>, <expr><literal type="number">0xF0177A28</literal></expr>, <expr><literal type="number">0xC0F586E0</literal></expr>,
	<expr><literal type="number">0x006058AA</literal></expr>, <expr><literal type="number">0x30DC7D62</literal></expr>, <expr><literal type="number">0x11E69ED7</literal></expr>, <expr><literal type="number">0x2338EA63</literal></expr>, <expr><literal type="number">0x53C2DD94</literal></expr>, <expr><literal type="number">0xC2C21634</literal></expr>,
	<expr><literal type="number">0xBBCBEE56</literal></expr>, <expr><literal type="number">0x90BCB6DE</literal></expr>, <expr><literal type="number">0xEBFC7DA1</literal></expr>, <expr><literal type="number">0xCE591D76</literal></expr>, <expr><literal type="number">0x6F05E409</literal></expr>, <expr><literal type="number">0x4B7C0188</literal></expr>,
	<expr><literal type="number">0x39720A3D</literal></expr>, <expr><literal type="number">0x7C927C24</literal></expr>, <expr><literal type="number">0x86E3725F</literal></expr>, <expr><literal type="number">0x724D9DB9</literal></expr>, <expr><literal type="number">0x1AC15BB4</literal></expr>, <expr><literal type="number">0xD39EB8FC</literal></expr>,
	<expr><literal type="number">0xED545578</literal></expr>, <expr><literal type="number">0x08FCA5B5</literal></expr>, <expr><literal type="number">0xD83D7CD3</literal></expr>, <expr><literal type="number">0x4DAD0FC4</literal></expr>, <expr><literal type="number">0x1E50EF5E</literal></expr>, <expr><literal type="number">0xB161E6F8</literal></expr>,
	<expr><literal type="number">0xA28514D9</literal></expr>, <expr><literal type="number">0x6C51133C</literal></expr>, <expr><literal type="number">0x6FD5C7E7</literal></expr>, <expr><literal type="number">0x56E14EC4</literal></expr>, <expr><literal type="number">0x362ABFCE</literal></expr>, <expr><literal type="number">0xDDC6C837</literal></expr>,
	<expr><literal type="number">0xD79A3234</literal></expr>, <expr><literal type="number">0x92638212</literal></expr>, <expr><literal type="number">0x670EFA8E</literal></expr>, <expr><literal type="number">0x406000E0</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32</name></type> <name><name>sbox3</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x3A39CE37</literal></expr>, <expr><literal type="number">0xD3FAF5CF</literal></expr>, <expr><literal type="number">0xABC27737</literal></expr>, <expr><literal type="number">0x5AC52D1B</literal></expr>, <expr><literal type="number">0x5CB0679E</literal></expr>, <expr><literal type="number">0x4FA33742</literal></expr>,
	<expr><literal type="number">0xD3822740</literal></expr>, <expr><literal type="number">0x99BC9BBE</literal></expr>, <expr><literal type="number">0xD5118E9D</literal></expr>, <expr><literal type="number">0xBF0F7315</literal></expr>, <expr><literal type="number">0xD62D1C7E</literal></expr>, <expr><literal type="number">0xC700C47B</literal></expr>,
	<expr><literal type="number">0xB78C1B6B</literal></expr>, <expr><literal type="number">0x21A19045</literal></expr>, <expr><literal type="number">0xB26EB1BE</literal></expr>, <expr><literal type="number">0x6A366EB4</literal></expr>, <expr><literal type="number">0x5748AB2F</literal></expr>, <expr><literal type="number">0xBC946E79</literal></expr>,
	<expr><literal type="number">0xC6A376D2</literal></expr>, <expr><literal type="number">0x6549C2C8</literal></expr>, <expr><literal type="number">0x530FF8EE</literal></expr>, <expr><literal type="number">0x468DDE7D</literal></expr>, <expr><literal type="number">0xD5730A1D</literal></expr>, <expr><literal type="number">0x4CD04DC6</literal></expr>,
	<expr><literal type="number">0x2939BBDB</literal></expr>, <expr><literal type="number">0xA9BA4650</literal></expr>, <expr><literal type="number">0xAC9526E8</literal></expr>, <expr><literal type="number">0xBE5EE304</literal></expr>, <expr><literal type="number">0xA1FAD5F0</literal></expr>, <expr><literal type="number">0x6A2D519A</literal></expr>,
	<expr><literal type="number">0x63EF8CE2</literal></expr>, <expr><literal type="number">0x9A86EE22</literal></expr>, <expr><literal type="number">0xC089C2B8</literal></expr>, <expr><literal type="number">0x43242EF6</literal></expr>, <expr><literal type="number">0xA51E03AA</literal></expr>, <expr><literal type="number">0x9CF2D0A4</literal></expr>,
	<expr><literal type="number">0x83C061BA</literal></expr>, <expr><literal type="number">0x9BE96A4D</literal></expr>, <expr><literal type="number">0x8FE51550</literal></expr>, <expr><literal type="number">0xBA645BD6</literal></expr>, <expr><literal type="number">0x2826A2F9</literal></expr>, <expr><literal type="number">0xA73A3AE1</literal></expr>,
	<expr><literal type="number">0x4BA99586</literal></expr>, <expr><literal type="number">0xEF5562E9</literal></expr>, <expr><literal type="number">0xC72FEFD3</literal></expr>, <expr><literal type="number">0xF752F7DA</literal></expr>, <expr><literal type="number">0x3F046F69</literal></expr>, <expr><literal type="number">0x77FA0A59</literal></expr>,
	<expr><literal type="number">0x80E4A915</literal></expr>, <expr><literal type="number">0x87B08601</literal></expr>, <expr><literal type="number">0x9B09E6AD</literal></expr>, <expr><literal type="number">0x3B3EE593</literal></expr>, <expr><literal type="number">0xE990FD5A</literal></expr>, <expr><literal type="number">0x9E34D797</literal></expr>,
	<expr><literal type="number">0x2CF0B7D9</literal></expr>, <expr><literal type="number">0x022B8B51</literal></expr>, <expr><literal type="number">0x96D5AC3A</literal></expr>, <expr><literal type="number">0x017DA67D</literal></expr>, <expr><literal type="number">0xD1CF3ED6</literal></expr>, <expr><literal type="number">0x7C7D2D28</literal></expr>,
	<expr><literal type="number">0x1F9F25CF</literal></expr>, <expr><literal type="number">0xADF2B89B</literal></expr>, <expr><literal type="number">0x5AD6B472</literal></expr>, <expr><literal type="number">0x5A88F54C</literal></expr>, <expr><literal type="number">0xE029AC71</literal></expr>, <expr><literal type="number">0xE019A5E6</literal></expr>,
	<expr><literal type="number">0x47B0ACFD</literal></expr>, <expr><literal type="number">0xED93FA9B</literal></expr>, <expr><literal type="number">0xE8D3C48D</literal></expr>, <expr><literal type="number">0x283B57CC</literal></expr>, <expr><literal type="number">0xF8D56629</literal></expr>, <expr><literal type="number">0x79132E28</literal></expr>,
	<expr><literal type="number">0x785F0191</literal></expr>, <expr><literal type="number">0xED756055</literal></expr>, <expr><literal type="number">0xF7960E44</literal></expr>, <expr><literal type="number">0xE3D35E8C</literal></expr>, <expr><literal type="number">0x15056DD4</literal></expr>, <expr><literal type="number">0x88F46DBA</literal></expr>,
	<expr><literal type="number">0x03A16125</literal></expr>, <expr><literal type="number">0x0564F0BD</literal></expr>, <expr><literal type="number">0xC3EB9E15</literal></expr>, <expr><literal type="number">0x3C9057A2</literal></expr>, <expr><literal type="number">0x97271AEC</literal></expr>, <expr><literal type="number">0xA93A072A</literal></expr>,
	<expr><literal type="number">0x1B3F6D9B</literal></expr>, <expr><literal type="number">0x1E6321F5</literal></expr>, <expr><literal type="number">0xF59C66FB</literal></expr>, <expr><literal type="number">0x26DCF319</literal></expr>, <expr><literal type="number">0x7533D928</literal></expr>, <expr><literal type="number">0xB155FDF5</literal></expr>,
	<expr><literal type="number">0x03563482</literal></expr>, <expr><literal type="number">0x8ABA3CBB</literal></expr>, <expr><literal type="number">0x28517711</literal></expr>, <expr><literal type="number">0xC20AD9F8</literal></expr>, <expr><literal type="number">0xABCC5167</literal></expr>, <expr><literal type="number">0xCCAD925F</literal></expr>,
	<expr><literal type="number">0x4DE81751</literal></expr>, <expr><literal type="number">0x3830DC8E</literal></expr>, <expr><literal type="number">0x379D5862</literal></expr>, <expr><literal type="number">0x9320F991</literal></expr>, <expr><literal type="number">0xEA7A90C2</literal></expr>, <expr><literal type="number">0xFB3E7BCE</literal></expr>,
	<expr><literal type="number">0x5121CE64</literal></expr>, <expr><literal type="number">0x774FBE32</literal></expr>, <expr><literal type="number">0xA8B6E37E</literal></expr>, <expr><literal type="number">0xC3293D46</literal></expr>, <expr><literal type="number">0x48DE5369</literal></expr>, <expr><literal type="number">0x6413E680</literal></expr>,
	<expr><literal type="number">0xA2AE0810</literal></expr>, <expr><literal type="number">0xDD6DB224</literal></expr>, <expr><literal type="number">0x69852DFD</literal></expr>, <expr><literal type="number">0x09072166</literal></expr>, <expr><literal type="number">0xB39A460A</literal></expr>, <expr><literal type="number">0x6445C0DD</literal></expr>,
	<expr><literal type="number">0x586CDECF</literal></expr>, <expr><literal type="number">0x1C20C8AE</literal></expr>, <expr><literal type="number">0x5BBEF7DD</literal></expr>, <expr><literal type="number">0x1B588D40</literal></expr>, <expr><literal type="number">0xCCD2017F</literal></expr>, <expr><literal type="number">0x6BB4E3BB</literal></expr>,
	<expr><literal type="number">0xDDA26A7E</literal></expr>, <expr><literal type="number">0x3A59FF45</literal></expr>, <expr><literal type="number">0x3E350A44</literal></expr>, <expr><literal type="number">0xBCB4CDD5</literal></expr>, <expr><literal type="number">0x72EACEA8</literal></expr>, <expr><literal type="number">0xFA6484BB</literal></expr>,
	<expr><literal type="number">0x8D6612AE</literal></expr>, <expr><literal type="number">0xBF3C6F47</literal></expr>, <expr><literal type="number">0xD29BE463</literal></expr>, <expr><literal type="number">0x542F5D9E</literal></expr>, <expr><literal type="number">0xAEC2771B</literal></expr>, <expr><literal type="number">0xF64E6370</literal></expr>,
	<expr><literal type="number">0x740E0D8D</literal></expr>, <expr><literal type="number">0xE75B1357</literal></expr>, <expr><literal type="number">0xF8721671</literal></expr>, <expr><literal type="number">0xAF537D5D</literal></expr>, <expr><literal type="number">0x4040CB08</literal></expr>, <expr><literal type="number">0x4EB4E2CC</literal></expr>,
	<expr><literal type="number">0x34D2466A</literal></expr>, <expr><literal type="number">0x0115AF84</literal></expr>, <expr><literal type="number">0xE1B00428</literal></expr>, <expr><literal type="number">0x95983A1D</literal></expr>, <expr><literal type="number">0x06B89FB4</literal></expr>, <expr><literal type="number">0xCE6EA048</literal></expr>,
	<expr><literal type="number">0x6F3F3B82</literal></expr>, <expr><literal type="number">0x3520AB82</literal></expr>, <expr><literal type="number">0x011A1D4B</literal></expr>, <expr><literal type="number">0x277227F8</literal></expr>, <expr><literal type="number">0x611560B1</literal></expr>, <expr><literal type="number">0xE7933FDC</literal></expr>,
	<expr><literal type="number">0xBB3A792B</literal></expr>, <expr><literal type="number">0x344525BD</literal></expr>, <expr><literal type="number">0xA08839E1</literal></expr>, <expr><literal type="number">0x51CE794B</literal></expr>, <expr><literal type="number">0x2F32C9B7</literal></expr>, <expr><literal type="number">0xA01FBAC9</literal></expr>,
	<expr><literal type="number">0xE01CC87E</literal></expr>, <expr><literal type="number">0xBCC7D1F6</literal></expr>, <expr><literal type="number">0xCF0111C3</literal></expr>, <expr><literal type="number">0xA1E8AAC7</literal></expr>, <expr><literal type="number">0x1A908749</literal></expr>, <expr><literal type="number">0xD44FBD9A</literal></expr>,
	<expr><literal type="number">0xD0DADECB</literal></expr>, <expr><literal type="number">0xD50ADA38</literal></expr>, <expr><literal type="number">0x0339C32A</literal></expr>, <expr><literal type="number">0xC6913667</literal></expr>, <expr><literal type="number">0x8DF9317C</literal></expr>, <expr><literal type="number">0xE0B12B4F</literal></expr>,
	<expr><literal type="number">0xF79E59B7</literal></expr>, <expr><literal type="number">0x43F5BB3A</literal></expr>, <expr><literal type="number">0xF2D519FF</literal></expr>, <expr><literal type="number">0x27D9459C</literal></expr>, <expr><literal type="number">0xBF97222C</literal></expr>, <expr><literal type="number">0x15E6FC2A</literal></expr>,
	<expr><literal type="number">0x0F91FC71</literal></expr>, <expr><literal type="number">0x9B941525</literal></expr>, <expr><literal type="number">0xFAE59361</literal></expr>, <expr><literal type="number">0xCEB69CEB</literal></expr>, <expr><literal type="number">0xC2A86459</literal></expr>, <expr><literal type="number">0x12BAA8D1</literal></expr>,
	<expr><literal type="number">0xB6C1075E</literal></expr>, <expr><literal type="number">0xE3056A0C</literal></expr>, <expr><literal type="number">0x10D25065</literal></expr>, <expr><literal type="number">0xCB03A442</literal></expr>, <expr><literal type="number">0xE0EC6E0E</literal></expr>, <expr><literal type="number">0x1698DB3B</literal></expr>,
	<expr><literal type="number">0x4C98A0BE</literal></expr>, <expr><literal type="number">0x3278E964</literal></expr>, <expr><literal type="number">0x9F1F9532</literal></expr>, <expr><literal type="number">0xE0D392DF</literal></expr>, <expr><literal type="number">0xD3A0342B</literal></expr>, <expr><literal type="number">0x8971F21E</literal></expr>,
	<expr><literal type="number">0x1B0A7441</literal></expr>, <expr><literal type="number">0x4BA3348C</literal></expr>, <expr><literal type="number">0xC5BE7120</literal></expr>, <expr><literal type="number">0xC37632D8</literal></expr>, <expr><literal type="number">0xDF359F8D</literal></expr>, <expr><literal type="number">0x9B992F2E</literal></expr>,
	<expr><literal type="number">0xE60B6F47</literal></expr>, <expr><literal type="number">0x0FE3F11D</literal></expr>, <expr><literal type="number">0xE54CDA54</literal></expr>, <expr><literal type="number">0x1EDAD891</literal></expr>, <expr><literal type="number">0xCE6279CF</literal></expr>, <expr><literal type="number">0xCD3E7E6F</literal></expr>,
	<expr><literal type="number">0x1618B166</literal></expr>, <expr><literal type="number">0xFD2C1D05</literal></expr>, <expr><literal type="number">0x848FD2C5</literal></expr>, <expr><literal type="number">0xF6FB2299</literal></expr>, <expr><literal type="number">0xF523F357</literal></expr>, <expr><literal type="number">0xA6327623</literal></expr>,
	<expr><literal type="number">0x93A83531</literal></expr>, <expr><literal type="number">0x56CCCD02</literal></expr>, <expr><literal type="number">0xACF08162</literal></expr>, <expr><literal type="number">0x5A75EBB5</literal></expr>, <expr><literal type="number">0x6E163697</literal></expr>, <expr><literal type="number">0x88D273CC</literal></expr>,
	<expr><literal type="number">0xDE966292</literal></expr>, <expr><literal type="number">0x81B949D0</literal></expr>, <expr><literal type="number">0x4C50901B</literal></expr>, <expr><literal type="number">0x71C65614</literal></expr>, <expr><literal type="number">0xE6C6C7BD</literal></expr>, <expr><literal type="number">0x327A140A</literal></expr>,
	<expr><literal type="number">0x45E1D006</literal></expr>, <expr><literal type="number">0xC3F27B9A</literal></expr>, <expr><literal type="number">0xC9AA53FD</literal></expr>, <expr><literal type="number">0x62A80F00</literal></expr>, <expr><literal type="number">0xBB25BFE2</literal></expr>, <expr><literal type="number">0x35BDD2F6</literal></expr>,
	<expr><literal type="number">0x71126905</literal></expr>, <expr><literal type="number">0xB2040222</literal></expr>, <expr><literal type="number">0xB6CBCF7C</literal></expr>, <expr><literal type="number">0xCD769C2B</literal></expr>, <expr><literal type="number">0x53113EC0</literal></expr>, <expr><literal type="number">0x1640E3D3</literal></expr>,
	<expr><literal type="number">0x38ABBD60</literal></expr>, <expr><literal type="number">0x2547ADF0</literal></expr>, <expr><literal type="number">0xBA38209C</literal></expr>, <expr><literal type="number">0xF746CE76</literal></expr>, <expr><literal type="number">0x77AFA1C5</literal></expr>, <expr><literal type="number">0x20756060</literal></expr>,
	<expr><literal type="number">0x85CBFE4E</literal></expr>, <expr><literal type="number">0x8AE88DD8</literal></expr>, <expr><literal type="number">0x7AAAF9B0</literal></expr>, <expr><literal type="number">0x4CF9AA7E</literal></expr>, <expr><literal type="number">0x1948C25C</literal></expr>, <expr><literal type="number">0x02FB8A8C</literal></expr>,
	<expr><literal type="number">0x01C36AE4</literal></expr>, <expr><literal type="number">0xD6EBE1F9</literal></expr>, <expr><literal type="number">0x90D4F869</literal></expr>, <expr><literal type="number">0xA65CDEA0</literal></expr>, <expr><literal type="number">0x3F09252D</literal></expr>, <expr><literal type="number">0xC208E69F</literal></expr>,
	<expr><literal type="number">0xB74E6132</literal></expr>, <expr><literal type="number">0xCE77E25B</literal></expr>, <expr><literal type="number">0x578FDFE3</literal></expr>, <expr><literal type="number">0x3AC372E6</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Fprime</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( ( (S0[a] + S1[b]) ^ S2[c] ) + S3[d] )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>Fprime( ((x&gt;&gt;24)&amp;0xFF), ((x&gt;&gt;16)&amp;0xFF), ((x&gt;&gt;8)&amp;0xFF), (x&amp;0xFF) )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROUND</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( xL ^= P[n], t = xL, xL = F(xL) ^ xR, xR = t )</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>blowfish_encrypt</name><parameter_list>(<parameter><decl><type><name>uint32</name></type> <name>xL</name></decl></parameter>, <parameter><decl><type><name>uint32</name></type> <name>xR</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,
				 <parameter><decl><type><name>BlowfishContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S0</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S0</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S1</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S1</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S2</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S2</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S3</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S3</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>P</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>P</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>t</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>xL</name> <operator>^=</operator> <name><name>P</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>xR</name> <operator>^=</operator> <name><name>P</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>output</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>xR</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>output</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>xL</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>blowfish_decrypt</name><parameter_list>(<parameter><decl><type><name>uint32</name></type> <name>xL</name></decl></parameter>, <parameter><decl><type><name>uint32</name></type> <name>xR</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>output</name></decl></parameter>,
				 <parameter><decl><type><name>BlowfishContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S0</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S0</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S1</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S1</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S2</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S2</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S3</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S3</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>P</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>P</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>t</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>xL</name> <operator>^=</operator> <name><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>xR</name> <operator>^=</operator> <name><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>output</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>xR</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>output</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>xL</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>blowfish_encrypt_cbc</name><parameter_list>(<parameter><decl><type><name>uint8</name> <modifier>*</modifier></type><name>blk</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>BlowfishContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>xL</name></decl>,
				<decl><type ref="prev"/><name>xR</name></decl>,
				<decl><type ref="prev"/><name><name>out</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>,
				<decl><type ref="prev"/><name>iv0</name></decl>,
				<decl><type ref="prev"/><name>iv1</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>(</operator><name>len</name> <operator>&amp;</operator> <literal type="number">7</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>iv0</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>iv0</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>iv1</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>iv1</name></name></expr>;</expr_stmt>

	<while>while <condition>(<expr><name>len</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>xL</name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>xR</name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>iv0</name> <operator>^=</operator> <name>xL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>iv1</name> <operator>^=</operator> <name>xR</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>blowfish_encrypt</name><argument_list>(<argument><expr><name>iv0</name></expr></argument>, <argument><expr><name>iv1</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>iv0</name> <operator>=</operator> <name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>iv1</name> <operator>=</operator> <name><name>out</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>PUT_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name></expr></argument>, <argument><expr><name>iv0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>PUT_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>iv1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>blk</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>len</name> <operator>-=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	</block_content>}</block></while>

	<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>iv0</name></name> <operator>=</operator> <name>iv0</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>iv1</name></name> <operator>=</operator> <name>iv1</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>blowfish_decrypt_cbc</name><parameter_list>(<parameter><decl><type><name>uint8</name> <modifier>*</modifier></type><name>blk</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>BlowfishContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>xL</name></decl>,
				<decl><type ref="prev"/><name>xR</name></decl>,
				<decl><type ref="prev"/><name><name>out</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>,
				<decl><type ref="prev"/><name>iv0</name></decl>,
				<decl><type ref="prev"/><name>iv1</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>(</operator><name>len</name> <operator>&amp;</operator> <literal type="number">7</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>iv0</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>iv0</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>iv1</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>iv1</name></name></expr>;</expr_stmt>

	<while>while <condition>(<expr><name>len</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>xL</name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>xR</name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>blowfish_decrypt</name><argument_list>(<argument><expr><name>xL</name></expr></argument>, <argument><expr><name>xR</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>iv0</name> <operator>^=</operator> <name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>iv1</name> <operator>^=</operator> <name><name>out</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>PUT_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name></expr></argument>, <argument><expr><name>iv0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>PUT_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>iv1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>iv0</name> <operator>=</operator> <name>xL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>iv1</name> <operator>=</operator> <name>xR</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>blk</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>len</name> <operator>-=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	</block_content>}</block></while>

	<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>iv0</name></name> <operator>=</operator> <name>iv0</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>iv1</name></name> <operator>=</operator> <name>iv1</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>blowfish_encrypt_ecb</name><parameter_list>(<parameter><decl><type><name>uint8</name> <modifier>*</modifier></type><name>blk</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>BlowfishContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>xL</name></decl>,
				<decl><type ref="prev"/><name>xR</name></decl>,
				<decl><type ref="prev"/><name><name>out</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>(</operator><name>len</name> <operator>&amp;</operator> <literal type="number">7</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<while>while <condition>(<expr><name>len</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>xL</name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>xR</name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>blowfish_encrypt</name><argument_list>(<argument><expr><name>xL</name></expr></argument>, <argument><expr><name>xR</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>PUT_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name></expr></argument>, <argument><expr><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>PUT_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>out</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>blk</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>len</name> <operator>-=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	</block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>blowfish_decrypt_ecb</name><parameter_list>(<parameter><decl><type><name>uint8</name> <modifier>*</modifier></type><name>blk</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>BlowfishContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>xL</name></decl>,
				<decl><type ref="prev"/><name>xR</name></decl>,
				<decl><type ref="prev"/><name><name>out</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>(</operator><name>len</name> <operator>&amp;</operator> <literal type="number">7</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<while>while <condition>(<expr><name>len</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>xL</name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>xR</name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>blowfish_decrypt</name><argument_list>(<argument><expr><name>xL</name></expr></argument>, <argument><expr><name>xR</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>PUT_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name></expr></argument>, <argument><expr><name><name>out</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>PUT_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>blk</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>out</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>blk</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>len</name> <operator>-=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	</block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>blowfish_setkey</name><parameter_list>(<parameter><decl><type><name>BlowfishContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
				<parameter><decl><type><specifier>const</specifier> <name>uint8</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>keybytes</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S0</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S0</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S1</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S1</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S2</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S2</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>S3</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>S3</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name>	   <modifier>*</modifier></type><name>P</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>P</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name></type>		<name><name>str</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>keybytes</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>keybytes</name> <operator>&lt;=</operator> <operator>(</operator><literal type="number">448</literal> <operator>/</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">18</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><name><name>P</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>parray</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>P</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^=</operator> <operator>(</operator><operator>(</operator><name>uint32</name><operator>)</operator> <name><name>key</name><index>[<expr><operator>(</operator><name>i</name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">0</literal><operator>)</operator> <operator>%</operator> <name>keybytes</name></expr>]</index></name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>P</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^=</operator> <operator>(</operator><operator>(</operator><name>uint32</name><operator>)</operator> <name><name>key</name><index>[<expr><operator>(</operator><name>i</name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <name>keybytes</name></expr>]</index></name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>P</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^=</operator> <operator>(</operator><operator>(</operator><name>uint32</name><operator>)</operator> <name><name>key</name><index>[<expr><operator>(</operator><name>i</name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">2</literal><operator>)</operator> <operator>%</operator> <name>keybytes</name></expr>]</index></name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>P</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^=</operator> <operator>(</operator><operator>(</operator><name>uint32</name><operator>)</operator> <name><name>key</name><index>[<expr><operator>(</operator><name>i</name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">3</literal><operator>)</operator> <operator>%</operator> <name>keybytes</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
	</block_content>}</block></for>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><name><name>S0</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>sbox0</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>sbox1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>sbox2</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S3</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>sbox3</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>

	<expr_stmt><expr><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">18</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><call><name>blowfish_encrypt</name><argument_list>(<argument><expr><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>str</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>P</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>P</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><call><name>blowfish_encrypt</name><argument_list>(<argument><expr><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>str</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S0</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S0</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><call><name>blowfish_encrypt</name><argument_list>(<argument><expr><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>str</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S1</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><call><name>blowfish_encrypt</name><argument_list>(<argument><expr><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>str</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><call><name>blowfish_encrypt</name><argument_list>(<argument><expr><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>str</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S3</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>S3</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>blowfish_setiv</name><parameter_list>(<parameter><decl><type><name>BlowfishContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>iv0</name></name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>iv1</name></name> <operator>=</operator> <call><name>GET_32BIT_MSB_FIRST</name><argument_list>(<argument><expr><name>iv</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
