<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/yugabyte-db/src/postgres/contrib/pg_stat_monitor/guc.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * guc.c: guc variable handling of pg_stat_monitor
 *
 * Portions Copyright Â© 2018-2020, Percona LLC and/or its affiliates
 *
 * Portions Copyright (c) 1996-2020, PostgreSQL Global Development Group
 *
 * Portions Copyright (c) 1994, The Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  contrib/pg_stat_monitor/guc.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pg_stat_monitor.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>GucVariable</name></type> <name><name>conf</name><index>[<expr><name>MAX_SETTINGS</name></expr>]</index></name></decl>;</decl_stmt>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DefineIntGUC</name><parameter_list>(<parameter><decl><type><name>GucVariable</name> <modifier>*</modifier></type><name>conf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DefineBoolGUC</name><parameter_list>(<parameter><decl><type><name>GucVariable</name> <modifier>*</modifier></type><name>conf</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Define (or redefine) custom GUC variables.
 */</comment>
<function><type><name>void</name></type>
<name>init_guc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_max"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the maximum size of shared memory in (MB) used for statement's metadata tracked by pg_stat_monitor."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">100</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">1000</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <name>GUC_UNIT_MB</name></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_MAX</name></expr>
		}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_query_max_len"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the maximum length of query."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">1024</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">1024</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <name>INT_MAX</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_QUERY_MAX_LEN</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_enable"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Enable/Disable statistics collector."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_ENABLED</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineBoolGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_track_utility"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Selects whether utility commands are tracked."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_TRACK_UTILITY</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineBoolGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_normalized_query"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Selects whether save query in normalized format."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_NORMALIZED_QUERY</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineBoolGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_max_buckets"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the maximum number of buckets."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">10</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">10</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_MAX_BUCKETS</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_bucket_time"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the time in seconds per bucket."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">300</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <name>INT_MAX</name></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_BUCKET_TIME</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_histogram_min"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the time in millisecond."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <name>INT_MAX</name></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_HISTOGRAM_MIN</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_histogram_max"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the time in millisecond."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">100000</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">10</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <name>INT_MAX</name></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_HISTOGRAM_MAX</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_histogram_buckets"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the maximum number of histogram buckets"</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">10</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">2</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <name>INT_MAX</name></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_HISTOGRAM_BUCKETS</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_query_shared_buffer"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the maximum size of shared memory in (MB) used for query tracked by pg_stat_monitor."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">20</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">10000</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <name>GUC_UNIT_MB</name></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_QUERY_SHARED_BUFFER</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_overflow_target"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Sets the overflow target for pg_stat_monitor"</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_OVERFLOW_TARGET</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineIntGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_enable_query_plan"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Enable/Disable query plan monitoring"</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_QUERY_PLAN</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineBoolGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>PG_VERSION_NUM</name> <operator>&gt;=</operator> <literal type="number">130000</literal></expr></cpp:if>
	<expr_stmt><expr><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>GucVariable</name><operator>)</operator> <block>{
		<expr><operator>.</operator><name>guc_name</name> <operator>=</operator> <literal type="string">"pg_stat_monitor.pgsm_track_planning"</literal></expr>,
		<expr><operator>.</operator><name>guc_desc</name> <operator>=</operator> <literal type="string">"Selects whether planning statistics are tracked."</literal></expr>,
		<expr><operator>.</operator><name>guc_default</name> <operator>=</operator> <literal type="number">1</literal></expr>,
		<expr><operator>.</operator><name>guc_min</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_max</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_restart</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>guc_unit</name> <operator>=</operator> <literal type="number">0</literal></expr>,
		<expr><operator>.</operator><name>guc_value</name> <operator>=</operator> <operator>&amp;</operator><name>PGSM_TRACK_PLANNING</name></expr>
	}</block></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DefineBoolGUC</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name><operator>++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>DefineIntGUC</name><parameter_list>(<parameter><decl><type><name>GucVariable</name> <modifier>*</modifier></type><name>conf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>DefineCustomIntVariable</name><argument_list>(<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_name</name></name></expr></argument>,
							<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_desc</name></name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_value</name></name></expr></argument>,
							<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_default</name></name></expr></argument>,
							<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_min</name></name></expr></argument>,
							<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_max</name></name></expr></argument>,
							<argument><expr><ternary><condition><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_restart</name></name></expr> ?</condition><then> <expr><name>PGC_POSTMASTER</name></expr> </then><else>: <expr><name>PGC_USERSET</name></expr></else></ternary></expr></argument>,
							<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_unit</name></name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>DefineBoolGUC</name><parameter_list>(<parameter><decl><type><name>GucVariable</name> <modifier>*</modifier></type><name>conf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_name</name></name></expr></argument>,
							<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_desc</name></name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><operator>(</operator><name>bool</name><operator>*</operator><operator>)</operator><name><name>conf</name><operator>-&gt;</operator><name>guc_value</name></name></expr></argument>,
							<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_default</name></name></expr></argument>,
							<argument><expr><ternary><condition><expr><name><name>conf</name><operator>-&gt;</operator><name>guc_restart</name></name></expr> ?</condition><then> <expr><name>PGC_POSTMASTER</name></expr> </then><else>: <expr><name>PGC_USERSET</name></expr></else></ternary></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>GucVariable</name><modifier>*</modifier></type>
<name>get_conf</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return  <expr><operator>&amp;</operator><name><name>conf</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

</unit>
