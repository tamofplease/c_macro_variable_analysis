<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/libsql/src/mem0.c"><comment type="block">/*
** 2008 October 28
**
** The author disclaims copyright to this source code.  In place of
** a legal notice, here is a blessing:
**
**    May you do good and not evil.
**    May you find forgiveness for yourself and forgive others.
**    May you share freely, never taking more than you give.
**
*************************************************************************
**
** This file contains a no-op memory allocation drivers for use when
** SQLITE_ZERO_MALLOC is defined.  The allocation drivers implemented
** here always fail.  SQLite will not operate with these drivers.  These
** are merely placeholders.  Real drivers must be substituted using
** sqlite3_config() before SQLite will operate.
*/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sqliteInt.h"</cpp:file></cpp:include>

<comment type="block">/*
** This version of the memory allocator is the default.  It is
** used when no other memory allocator is specified using compile-time
** macros.
*/</comment>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>SQLITE_ZERO_MALLOC</name></cpp:ifdef>

<comment type="block">/*
** No-op versions of all memory allocation routines
*/</comment>
<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>sqlite3MemMalloc</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>nByte</name></decl></parameter>)</parameter_list><block>{<block_content> <return>return <expr><literal type="number">0</literal></expr>;</return> </block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>sqlite3MemFree</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pPrior</name></decl></parameter>)</parameter_list><block>{<block_content> <return>return;</return> </block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>sqlite3MemRealloc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pPrior</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nByte</name></decl></parameter>)</parameter_list><block>{<block_content> <return>return <expr><literal type="number">0</literal></expr>;</return> </block_content>}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>sqlite3MemSize</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pPrior</name></decl></parameter>)</parameter_list><block>{<block_content> <return>return <expr><literal type="number">0</literal></expr>;</return> </block_content>}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>sqlite3MemRoundup</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list><block>{<block_content> <return>return <expr><name>n</name></expr>;</return> </block_content>}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>sqlite3MemInit</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>NotUsed</name></decl></parameter>)</parameter_list><block>{<block_content> <return>return <expr><name>SQLITE_OK</name></expr>;</return> </block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>sqlite3MemShutdown</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>NotUsed</name></decl></parameter>)</parameter_list><block>{<block_content> <return>return;</return> </block_content>}</block></function>

<comment type="block">/*
** This routine is the only routine in this file with external linkage.
**
** Populate the low-level memory allocation function pointers in
** sqlite3GlobalConfig.m with pointers to the routines in this file.
*/</comment>
<function><type><name>void</name></type> <name>sqlite3MemSetDefault</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>sqlite3_mem_methods</name></type> <name>defaultMethods</name> <init>= <expr><block>{
     <expr><name>sqlite3MemMalloc</name></expr>,
     <expr><name>sqlite3MemFree</name></expr>,
     <expr><name>sqlite3MemRealloc</name></expr>,
     <expr><name>sqlite3MemSize</name></expr>,
     <expr><name>sqlite3MemRoundup</name></expr>,
     <expr><name>sqlite3MemInit</name></expr>,
     <expr><name>sqlite3MemShutdown</name></expr>,
     <expr><literal type="number">0</literal></expr>
  }</block></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>sqlite3_config</name><argument_list>(<argument><expr><name>SQLITE_CONFIG_MALLOC</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>defaultMethods</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SQLITE_ZERO_MALLOC */</comment>
</unit>
