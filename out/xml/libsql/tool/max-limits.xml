<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/libsql/tool/max-limits.c"><comment type="block">/*
** Link this program against an SQLite library of unknown provenance in order
** to display the compile-time maximum values for various settings.
*/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sqlite3.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
  <decl_stmt><decl><type><name>int</name></type> <name>eCode</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>zName</name></decl>;</decl_stmt>
}</block> <decl><name><name>aLimit</name><index>[]</index></name> <init>= <expr><block>{
  <expr><block>{ <expr><name>SQLITE_LIMIT_LENGTH</name></expr>,                <expr><literal type="string">"SQLITE_MAX_LENGTH"</literal></expr>               }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_SQL_LENGTH</name></expr>,            <expr><literal type="string">"SQLITE_MAX_SQL_LENGTH"</literal></expr>           }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_COLUMN</name></expr>,                <expr><literal type="string">"SQLITE_MAX_COLUMN"</literal></expr>               }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_EXPR_DEPTH</name></expr>,            <expr><literal type="string">"SQLITE_MAX_EXPR_DEPTH"</literal></expr>           }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_COMPOUND_SELECT</name></expr>,       <expr><literal type="string">"SQLITE_MAX_COMPOUND_SELECT"</literal></expr>      }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_VDBE_OP</name></expr>,               <expr><literal type="string">"SQLITE_MAX_VDBE_OP"</literal></expr>              }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_FUNCTION_ARG</name></expr>,          <expr><literal type="string">"SQLITE_MAX_FUNCTION_ARG"</literal></expr>         }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_ATTACHED</name></expr>,              <expr><literal type="string">"SQLITE_MAX_ATTACHED"</literal></expr>             }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_LIKE_PATTERN_LENGTH</name></expr>,   <expr><literal type="string">"SQLITE_MAX_LIKE_PATTERN_LENGTH"</literal></expr>  }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_VARIABLE_NUMBER</name></expr>,       <expr><literal type="string">"SQLITE_MAX_VARIABLE_NUMBER"</literal></expr>      }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_TRIGGER_DEPTH</name></expr>,         <expr><literal type="string">"SQLITE_MAX_TRIGGER_DEPTH"</literal></expr>        }</block></expr>,
  <expr><block>{ <expr><name>SQLITE_LIMIT_WORKER_THREADS</name></expr>,        <expr><literal type="string">"SQLITE_MAX_WORKER_THREADS"</literal></expr>       }</block></expr>,
}</block></expr></init></decl>;</struct>

<function><type><specifier>static</specifier> <name>int</name></type> <name>maxLimit</name><parameter_list>(<parameter><decl><type><name>sqlite3</name> <modifier>*</modifier></type><name>db</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>eCode</name></decl></parameter>)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name>int</name></type> <name>iOrig</name> <init>= <expr><call><name>sqlite3_limit</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>eCode</name></expr></argument>, <argument><expr><literal type="number">0x7fffffff</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <return>return <expr><call><name>sqlite3_limit</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>eCode</name></expr></argument>, <argument><expr><name>iOrig</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name>sqlite3</name> <modifier>*</modifier></type><name>db</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>j</name></decl>, <decl><type ref="prev"/><name>rc</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>sqlite3_open</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if<condition>( <expr><name>rc</name><operator>==</operator><name>SQLITE_OK</name></expr> )</condition><block>{<block_content>
    <for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name><operator>&lt;</operator><sizeof>sizeof<argument_list>(<argument><expr><name>aLimit</name></expr></argument>)</argument_list></sizeof><operator>/</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>aLimit</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
      <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%-35s %10d\n"</literal></expr></argument>, <argument><expr><name><name>aLimit</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>zName</name></expr></argument>, <argument><expr><call><name>maxLimit</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name><name>aLimit</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>eCode</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name>sqlite3_close</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt> 
</block_content>}</block></function>
</unit>
