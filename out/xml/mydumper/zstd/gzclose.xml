<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/mydumper/zstd/gzclose.c"><comment type="block">/* gzclose.c contains minimal changes required to be compiled with zlibWrapper:
 * - gz_statep was converted to union to work with -Wstrict-aliasing=1      */</comment>

<comment type="block">/* gzclose.c -- zlib gzclose() function
 * Copyright (C) 2004, 2010 Mark Adler
 * For conditions of distribution and use, see http://www.zlib.net/zlib_license.html
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gzguts.h"</cpp:file></cpp:include>

<comment type="block">/* gzclose() is in a separate file so that it is linked in only if it is used.
   That way the other gzclose functions can be used instead to avoid linking in
   unneeded compression or decompression routines. */</comment>
<function><type><name>int</name> <name>ZEXPORT</name></type> <name>gzclose</name><parameter_list>(<parameter><decl><type><name>file</name></type></decl></parameter>)</parameter_list>
    <decl_stmt><decl><type><name>gzFile</name></type> <name>file</name></decl>;</decl_stmt>
<block>{<block_content>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>NO_GZCOMPRESS</name></cpp:ifndef>
    <decl_stmt><decl><type><name>gz_statep</name></type> <name>state</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>file</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>Z_STREAM_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><name><name>state</name><operator>.</operator><name>file</name></name> <operator>=</operator> <name>file</name></expr>;</expr_stmt>

    <return>return <expr><ternary><condition><expr><name><name>state</name><operator>.</operator><name>state</name><operator>-&gt;</operator><name>mode</name></name> <operator>==</operator> <name>GZ_READ</name></expr> ?</condition><then> <expr><call><name>gzclose_r</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name>gzclose_w</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
    <return>return <expr><call><name>gzclose_r</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>
</unit>
