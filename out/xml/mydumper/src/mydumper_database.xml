<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/mydumper/src/mydumper_database.c"><comment type="block">/*
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.

        Authors:    David Ducos, Percona (david dot ducos at percona dot com)
*/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;mysql.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;glib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mydumper_common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mydumper_database.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>GHashTable</name> <modifier>*</modifier></type><name>database_hash</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GMutex</name> <modifier>*</modifier></type> <name>database_hash_mutex</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>free_database</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>database</name></name> <modifier>*</modifier></type> <name>d</name></decl></parameter>)</parameter_list><block>{<block_content>
<comment type="line">//  g_free(d-&gt;name);</comment>
  <expr_stmt><expr><call><name>g_mutex_free</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>ad_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>initialize_database</name><parameter_list>()</parameter_list><block>{<block_content>
  <expr_stmt><expr><name>database_hash</name><operator>=</operator><call><name>g_hash_table_new_full</name><argument_list>( <argument><expr><name>g_str_hash</name></expr></argument>, <argument><expr><name>g_str_equal</name></expr></argument>,  <argument><expr><operator>&amp;</operator><name>g_free</name></expr></argument>, <argument><expr><operator>(</operator><name>GDestroyNotify</name><operator>)</operator> <operator>&amp;</operator><name>free_database</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>database_hash_mutex</name><operator>=</operator><call><name>g_mutex_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 
</block_content>}</block></function>

<function><type><name><name>struct</name> <name>database</name></name> <modifier>*</modifier></type> <name>new_database</name><parameter_list>(<parameter><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>database_name</name></decl></parameter>, <parameter><decl><type><name>gboolean</name></type> <name>already_dumped</name></decl></parameter>)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name><name>struct</name> <name>database</name></name> <modifier>*</modifier></type> <name>d</name><init>=<expr><call><name>g_new</name><argument_list>(<argument><expr>struct <name>database</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>name</name></name> <operator>=</operator> <call><name>g_strdup</name><argument_list>(<argument><expr><name>database_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>filename</name></name> <operator>=</operator> <call><name>get_ref_table</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>escaped</name></name> <operator>=</operator> <call><name>escape_string</name><argument_list>(<argument><expr><name>conn</name></expr></argument>,<argument><expr><name><name>d</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>already_dumped</name></name> <operator>=</operator> <name>already_dumped</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>ad_mutex</name></name><operator>=</operator><call><name>g_mutex_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>g_hash_table_insert</name><argument_list>(<argument><expr><name>database_hash</name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>name</name></name></expr></argument>,<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>d</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>free_databases</name><parameter_list>()</parameter_list><block>{<block_content>
  <expr_stmt><expr><call><name>g_mutex_lock</name><argument_list>(<argument><expr><name>database_hash_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>g_hash_table_destroy</name><argument_list>(<argument><expr><name>database_hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="block">/*  GHashTableIter iter;
  gchar * lkey;
  g_hash_table_iter_init ( &amp;iter, database_hash);
  struct database *d=NULL;
  while ( g_hash_table_iter_next ( &amp;iter, (gpointer *) &amp;lkey, (gpointer *) &amp;d ) ) {
    free_database(d);
  }
*/</comment>
  <expr_stmt><expr><call><name>g_mutex_unlock</name><argument_list>(<argument><expr><name>database_hash_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>g_mutex_free</name><argument_list>(<argument><expr><name>database_hash_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>


<function><type><name>gboolean</name></type> <name>get_database</name><parameter_list>(<parameter><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>database_name</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>database</name></name> <modifier>*</modifier><modifier>*</modifier></type> <name>database</name></decl></parameter>)</parameter_list><block>{<block_content>
  <expr_stmt><expr><call><name>g_mutex_lock</name><argument_list>(<argument><expr><name>database_hash_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><operator>*</operator><name>database</name><operator>=</operator><call><name>g_hash_table_lookup</name><argument_list>(<argument><expr><name>database_hash</name></expr></argument>,<argument><expr><name>database_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><operator>*</operator><name>database</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block>{<block_content>
    <expr_stmt><expr><operator>*</operator><name>database</name><operator>=</operator><call><name>new_database</name><argument_list>(<argument><expr><name>conn</name></expr></argument>,<argument><expr><name>database_name</name></expr></argument>,<argument><expr><name>FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>g_mutex_unlock</name><argument_list>(<argument><expr><name>database_hash_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>TRUE</name></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>g_mutex_unlock</name><argument_list>(<argument><expr><name>database_hash_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>FALSE</name></expr>;</return>
</block_content>}</block></function>


</unit>
