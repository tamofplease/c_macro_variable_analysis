<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/mydumper/src/server_detect.c"><comment type="block">/*
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.

    Authors:        Andrew Hutchings, MariaDB Foundation (andrew at mariadb dot org)
*/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;pcre.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;glib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"server_detect.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>detect_server</name><parameter_list>(<parameter><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>pcre</name> <modifier>*</modifier></type><name>re</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>error</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>erroroffset</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name><name>ovector</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>rc</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>db_version</name> <init>= <expr><call><name>mysql_get_server_info</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="line">// debug the version</comment>
  <expr_stmt><expr><call><name>g_message</name><argument_list>(<argument><expr><literal type="string">"Server version reported as: %s"</literal></expr></argument>, <argument><expr><name>db_version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>re</name> <operator>=</operator> <call><name>pcre_compile</name><argument_list>(<argument><expr><name>DETECT_TIDB_REGEX</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>error</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>erroroffset</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><operator>!</operator><name>re</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>g_critical</name><argument_list>(<argument><expr><literal type="string">"Regular expression fail: %s"</literal></expr></argument>, <argument><expr><name>error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>pcre_exec</name><argument_list>(<argument><expr><name>re</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>db_version</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>db_version</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ovector</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>pcre_free</name><argument_list>(<argument><expr><name>re</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <return>return <expr><name>SERVER_TYPE_TIDB</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name>re</name> <operator>=</operator> <call><name>pcre_compile</name><argument_list>(<argument><expr><name>DETECT_MYSQL_REGEX</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>error</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>erroroffset</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><operator>!</operator><name>re</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>g_critical</name><argument_list>(<argument><expr><literal type="string">"Regular expression fail: %s"</literal></expr></argument>, <argument><expr><name>error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>pcre_exec</name><argument_list>(<argument><expr><name>re</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>db_version</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>db_version</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ovector</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>pcre_free</name><argument_list>(<argument><expr><name>re</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <return>return <expr><name>SERVER_TYPE_MYSQL</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name>re</name> <operator>=</operator> <call><name>pcre_compile</name><argument_list>(<argument><expr><name>DETECT_DRIZZLE_REGEX</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>error</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>erroroffset</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><operator>!</operator><name>re</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>g_critical</name><argument_list>(<argument><expr><literal type="string">"Regular expression fail: %s"</literal></expr></argument>, <argument><expr><name>error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>pcre_exec</name><argument_list>(<argument><expr><name>re</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>db_version</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>db_version</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ovector</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>pcre_free</name><argument_list>(<argument><expr><name>re</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <return>return <expr><name>SERVER_TYPE_DRIZZLE</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name>re</name> <operator>=</operator> <call><name>pcre_compile</name><argument_list>(<argument><expr><name>DETECT_MARIADB_REGEX</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>error</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>erroroffset</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><operator>!</operator><name>re</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>g_critical</name><argument_list>(<argument><expr><literal type="string">"Regular expression fail: %s"</literal></expr></argument>, <argument><expr><name>error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>pcre_exec</name><argument_list>(<argument><expr><name>re</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>db_version</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>db_version</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ovector</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>pcre_free</name><argument_list>(<argument><expr><name>re</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt><if>if <condition>(<expr><name>rc</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <return>return <expr><name>SERVER_TYPE_MYSQL</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <return>return <expr><name>SERVER_TYPE_UNKNOWN</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><name>int</name></type> <name>product</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>major</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>secondary</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>revision</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>detect_server_version</name><parameter_list>(<parameter><decl><type><name>MYSQL</name> <modifier>*</modifier></type> <name>conn</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><call><name>mysql_query</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><literal type="string">"SELECT @@version_comment, @@version"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>MYSQL_RES</name> <modifier>*</modifier></type><name>res</name> <init>= <expr><call><name>mysql_store_result</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>MYSQL_ROW</name></type> <name>ver</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>ver</name> <operator>=</operator> <call><name>mysql_fetch_row</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <if_stmt><if>if <condition>(<expr><call><name>g_str_has_prefix</name><argument_list>(<argument><expr><name><name>ver</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"Percona"</literal></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
    <expr_stmt><expr><name>product</name> <operator>=</operator> <name>SERVER_TYPE_PERCONA</name></expr>;</expr_stmt>
  </block_content>}</block></if><if type="elseif">else
  if <condition>(<expr><call><name>g_str_has_prefix</name><argument_list>(<argument><expr><name><name>ver</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"MySQL"</literal></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
    <expr_stmt><expr><name>product</name> <operator>=</operator> <name>SERVER_TYPE_MYSQL</name></expr>;</expr_stmt>    
  </block_content>}</block></if><if type="elseif">else 
  if <condition>(<expr><call><name>g_str_has_prefix</name><argument_list>(<argument><expr><name><name>ver</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"mariadb"</literal></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
    <expr_stmt><expr><name>product</name> <operator>=</operator> <name>SERVER_TYPE_MARIADB</name></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <decl_stmt><decl><type><name>gchar</name> <modifier>*</modifier><modifier>*</modifier></type> <name>sver</name><init>=<expr><call><name>g_strsplit</name><argument_list>(<argument><expr><name><name>ver</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,<argument><expr><literal type="string">"."</literal></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><name>major</name><operator>=</operator><call><name>strtol</name><argument_list>(<argument><expr><name><name>sver</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>secondary</name><operator>=</operator><call><name>strtol</name><argument_list>(<argument><expr><name><name>sver</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>revision</name><operator>=</operator><call><name>strtol</name><argument_list>(<argument><expr><name><name>sver</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>g_strfreev</name><argument_list>(<argument><expr><name>sver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>mysql_free_result</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>get_product</name><parameter_list>()</parameter_list><block>{<block_content>
  <return>return <expr><name>product</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>int</name></type> <name>get_major</name><parameter_list>()</parameter_list><block>{<block_content>
    <return>return <expr><name>major</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>int</name></type> <name>get_secondary</name><parameter_list>()</parameter_list><block>{<block_content>
      <return>return <expr><name>secondary</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>int</name></type> <name>get_revision</name><parameter_list>()</parameter_list><block>{<block_content>
      <return>return <expr><name>revision</name></expr>;</return>
</block_content>}</block></function>
</unit>
