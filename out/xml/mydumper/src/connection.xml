<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/mydumper/src/connection.c"><comment type="block">/*
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.

    Authors:        Aaron Brady, Shopify (insom)
*/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;pcre.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;glib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"connection.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>hostname</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>username</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>password</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>socket_path</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>guint</name></type> <name>port</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>gboolean</name></type> <name>askPassword</name> <init>= <expr><name>FALSE</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GOptionEntry</name></type> <name><name>connection_entries</name><index>[]</index></name> <init>= <expr><block>{
    <expr><block>{<expr><literal type="string">"host"</literal></expr>, <expr><literal type="char">'h'</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>G_OPTION_ARG_STRING</name></expr>, <expr><operator>&amp;</operator><name>hostname</name></expr>, <expr><literal type="string">"The host to connect to"</literal></expr>,
     <expr><name>NULL</name></expr>}</block></expr>,
    <expr><block>{<expr><literal type="string">"user"</literal></expr>, <expr><literal type="char">'u'</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>G_OPTION_ARG_STRING</name></expr>, <expr><operator>&amp;</operator><name>username</name></expr>,
     <expr><literal type="string">"Username with the necessary privileges"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr>,
    <expr><block>{<expr><literal type="string">"password"</literal></expr>, <expr><literal type="char">'p'</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>G_OPTION_ARG_STRING</name></expr>, <expr><operator>&amp;</operator><name>password</name></expr>, <expr><literal type="string">"User password"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr>,
    <expr><block>{<expr><literal type="string">"ask-password"</literal></expr>, <expr><literal type="char">'a'</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>G_OPTION_ARG_NONE</name></expr>, <expr><operator>&amp;</operator><name>askPassword</name></expr>,
     <expr><literal type="string">"Prompt For User password"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr>,
    <expr><block>{<expr><literal type="string">"port"</literal></expr>, <expr><literal type="char">'P'</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>G_OPTION_ARG_INT</name></expr>, <expr><operator>&amp;</operator><name>port</name></expr>, <expr><literal type="string">"TCP/IP port to connect to"</literal></expr>,
     <expr><name>NULL</name></expr>}</block></expr>,
    <expr><block>{<expr><literal type="string">"socket"</literal></expr>, <expr><literal type="char">'S'</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>G_OPTION_ARG_STRING</name></expr>, <expr><operator>&amp;</operator><name>socket_path</name></expr>,
     <expr><literal type="string">"UNIX domain socket file to use for connection"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr>,
    <expr><block>{<expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>G_OPTION_ARG_NONE</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>defaults_file</name></decl>;</decl_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>WITH_SSL</name></cpp:ifdef>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>cert</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>ca</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>capath</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>cipher</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>tls_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>gboolean</name></type> <name>ssl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>gchar</name> <modifier>*</modifier></type><name>ssl_mode</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><specifier>extern</specifier> <name>guint</name></type> <name>compress_protocol</name></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>load_connection_entries</name><parameter_list>(<parameter><decl><type><name>GOptionGroup</name> <modifier>*</modifier></type><name>main_group</name></decl></parameter>)</parameter_list><block>{<block_content>
  <expr_stmt><expr><call><name>g_option_group_add_entries</name><argument_list>(<argument><expr><name>main_group</name></expr></argument>, <argument><expr><name>connection_entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>configure_connection</name><parameter_list>(<parameter><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <if_stmt><if>if <condition>(<expr><name>defaults_file</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_READ_DEFAULT_FILE</name></expr></argument>, <argument><expr><name>defaults_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_READ_DEFAULT_GROUP</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_LOCAL_INFILE</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>compress_protocol</name></expr>)</condition><block type="pseudo"><block_content>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_COMPRESS</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>WITH_SSL</name></cpp:ifdef>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>LIBMARIADB</name></cpp:ifdef>
  <decl_stmt><decl><type><name>my_bool</name></type> <name>enable</name><init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>ssl_mode</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name>g_ascii_strncasecmp</name><argument_list>(<argument><expr><name>ssl_mode</name></expr></argument>, <argument><expr><literal type="string">"REQUIRED"</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_ENFORCE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>enable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if>
      <if type="elseif">else if <condition>(<expr><call><name>g_ascii_strncasecmp</name><argument_list>(<argument><expr><name>ssl_mode</name></expr></argument>, <argument><expr><literal type="string">"VERIFY_IDENTITY"</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_VERIFY_SERVER_CERT</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>enable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if>
      <else>else <block>{<block_content>
        <expr_stmt><expr><call><name>g_critical</name><argument_list>(<argument><expr><literal type="string">"Unsupported ssl-mode specified: %s\n"</literal></expr></argument>, <argument><expr><name>ssl_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
  </block_content>}</block></if></if_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
  <decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>ssl</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>i</name> <operator>=</operator> <name>SSL_MODE_REQUIRED</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_MODE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if> <else>else <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>ssl_mode</name></expr>)</condition> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name>g_ascii_strncasecmp</name><argument_list>(<argument><expr><name>ssl_mode</name></expr></argument>, <argument><expr><literal type="string">"DISABLED"</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>i</name> <operator>=</operator> <name>SSL_MODE_DISABLED</name></expr>;</expr_stmt>
      </block_content>}</block></if>
      <if type="elseif">else if <condition>(<expr><call><name>g_ascii_strncasecmp</name><argument_list>(<argument><expr><name>ssl_mode</name></expr></argument>, <argument><expr><literal type="string">"PREFERRED"</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>i</name> <operator>=</operator> <name>SSL_MODE_PREFERRED</name></expr>;</expr_stmt>
      </block_content>}</block></if>
      <if type="elseif">else if <condition>(<expr><call><name>g_ascii_strncasecmp</name><argument_list>(<argument><expr><name>ssl_mode</name></expr></argument>, <argument><expr><literal type="string">"REQUIRED"</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>i</name> <operator>=</operator> <name>SSL_MODE_REQUIRED</name></expr>;</expr_stmt>
      </block_content>}</block></if>
      <if type="elseif">else if <condition>(<expr><call><name>g_ascii_strncasecmp</name><argument_list>(<argument><expr><name>ssl_mode</name></expr></argument>, <argument><expr><literal type="string">"VERIFY_CA"</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>i</name> <operator>=</operator> <name>SSL_MODE_VERIFY_CA</name></expr>;</expr_stmt>
      </block_content>}</block></if>
      <if type="elseif">else if <condition>(<expr><call><name>g_ascii_strncasecmp</name><argument_list>(<argument><expr><name>ssl_mode</name></expr></argument>, <argument><expr><literal type="string">"VERIFY_IDENTITY"</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name>i</name> <operator>=</operator> <name>SSL_MODE_VERIFY_IDENTITY</name></expr>;</expr_stmt>
      </block_content>}</block></if>
      <else>else <block>{<block_content>
        <expr_stmt><expr><call><name>g_critical</name><argument_list>(<argument><expr><literal type="string">"Unsupported ssl-mode specified: %s\n"</literal></expr></argument>, <argument><expr><name>ssl_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></else></if_stmt>
      <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_MODE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></else></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// LIBMARIADB</comment>
  <if_stmt><if>if <condition>(<expr><name>key</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_KEY</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>cert</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_CERT</name></expr></argument>, <argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>ca</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_CA</name></expr></argument>, <argument><expr><name>ca</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>capath</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_CAPATH</name></expr></argument>, <argument><expr><name>capath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>cipher</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_SSL_CIPHER</name></expr></argument>, <argument><expr><name>cipher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>tls_version</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>mysql_options</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>MYSQL_OPT_TLS_VERSION</name></expr></argument>, <argument><expr><name>tls_version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>m_connect</name><parameter_list>(<parameter><decl><type><name>MYSQL</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>gchar</name> <modifier>*</modifier></type><name>app</name></decl></parameter>, <parameter><decl><type><name>gchar</name> <modifier>*</modifier></type><name>schema</name></decl></parameter>)</parameter_list><block>{<block_content>
  <expr_stmt><expr><call><name>configure_connection</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>app</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>mysql_real_connect</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>hostname</name></expr></argument>, <argument><expr><name>username</name></expr></argument>, <argument><expr><name>password</name></expr></argument>, <argument><expr><name>schema</name></expr></argument>, <argument><expr><name>port</name></expr></argument>,
                          <argument><expr><name>socket_path</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>g_critical</name><argument_list>(<argument><expr><literal type="string">"Error connection to database: %s"</literal></expr></argument>, <argument><expr><call><name>mysql_error</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>hide_password</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list><block>{<block_content>
  <if_stmt><if>if <condition>(<expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>argc</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
      <decl_stmt><decl><type><name>gchar</name> <modifier>*</modifier></type> <name>p</name><init>= <expr><call><name>g_strstr_len</name><argument_list>(<argument><expr><name><name>argv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>p</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block>{<block_content>
        <expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="string">"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"</literal></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
  </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>char</name> <modifier>*</modifier></type><name>passwordPrompt</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>p</name> <operator>=</operator> <call><name>getpass</name><argument_list>(<argument><expr><literal type="string">"Enter MySQL Password: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <return>return <expr><name>p</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ask_password</name><parameter_list>()</parameter_list><block>{<block_content>
  <comment type="line">// prompt for password if it's NULL</comment>
  <if_stmt><if>if <condition>(<expr><sizeof>sizeof<argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></sizeof> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <operator>(</operator><name>password</name> <operator>==</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name>askPassword</name><operator>)</operator></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>password</name> <operator>=</operator> <call><name>passwordPrompt</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

</unit>
