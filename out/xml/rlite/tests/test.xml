<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/rlite/tests/test.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"greatest.h"</cpp:file></cpp:include>

<extern>extern SUITE(btree_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(concurrency_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(db_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(rlite_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(list_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(string_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(multi_string_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(multi_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(key_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(type_string_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(type_list_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(type_set_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(type_zset_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(type_hash_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(skiplist_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(long_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(restore_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(hyperloglog_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(dump_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(sort_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(wal_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(zset_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(hmulti_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(hsort_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(scripting_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(echo_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(hash_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(hlist_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(parser_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(set_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(hstring_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(flock_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(signal_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(pubsub_test</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SUITE(hpubsub_test</extern>)<empty_stmt>;</empty_stmt>

<expr_stmt><expr><call><name>GREATEST_MAIN_DEFS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>GREATEST_MAIN_BEGIN</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>btree_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>concurrency_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>db_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>rlite_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>list_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>string_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>multi_string_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>multi_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>key_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>type_string_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>type_list_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>type_set_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>type_zset_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>type_hash_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>skiplist_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>long_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>restore_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>hyperloglog_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>dump_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>sort_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>wal_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>zset_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>hmulti_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>hsort_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>scripting_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>echo_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>hash_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>hlist_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>parser_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>set_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>hstring_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>flock_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>signal_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>pubsub_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_SUITE</name><argument_list>(<argument><expr><name>hpubsub_test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>GREATEST_MAIN_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
