<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/rlite/tests/db-test.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rlite/hirlite.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util.h"</cpp:file></cpp:include>

<function><type><name>TEST</name></type> <name>test_rlite_connect</name><parameter_list>()</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>unlink</name><argument_list>(<argument><expr><literal type="string">"user.db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">"user.db"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>keys</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><literal type="string">"otherdata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"keys"</literal></expr>, <expr><literal type="string">"*"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_LEN</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name><name>reply</name><operator>-&gt;</operator><name>element</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"key1"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name><name>reply</name><operator>-&gt;</operator><name>element</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"key2"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"keys"</literal></expr>, <expr><literal type="string">"*1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_LEN</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name><name>reply</name><operator>-&gt;</operator><name>element</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"key1"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>dbsize</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"dbsize"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><literal type="string">"otherdata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"dbsize"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>expire</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>command</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>time</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><name>command</name></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>time</name></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"exists"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>test_rename</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"rename"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"get"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NIL</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"get"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"mydata"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>renamenx</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"renamenx"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"get"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NIL</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"get"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"mydata"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata2"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"renamenx"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"get"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"mydata2"</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"get"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"mydata"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>ttl_pttl</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"setex"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"5"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"ttl"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NO_ERROR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER_LTE</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"pttl"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER_LTE</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">5000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>persist</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"persist"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"setex"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"5"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"persist"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"persist"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"ttl"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>test_select</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"select"</literal></expr>, <expr><literal type="string">"1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"exists"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"select"</literal></expr>, <expr><literal type="string">"0"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"get"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"mydata"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>move</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"move"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"exists"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"move"</literal></expr>, <expr><literal type="string">"key2"</literal></expr>, <expr><literal type="string">"1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"move"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>type</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"str"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NO_ERROR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"type"</literal></expr>, <expr><literal type="string">"str"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"string"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"lpush"</literal></expr>, <expr><literal type="string">"list"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NO_ERROR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"type"</literal></expr>, <expr><literal type="string">"list"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"list"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"sadd"</literal></expr>, <expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NO_ERROR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"type"</literal></expr>, <expr><literal type="string">"set"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"set"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"zadd"</literal></expr>, <expr><literal type="string">"zset"</literal></expr>, <expr><literal type="string">"0"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NO_ERROR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"type"</literal></expr>, <expr><literal type="string">"zset"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"zset"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"hset"</literal></expr>, <expr><literal type="string">"hash"</literal></expr>, <expr><literal type="string">"field"</literal></expr>, <expr><literal type="string">"value"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NO_ERROR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"type"</literal></expr>, <expr><literal type="string">"hash"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"hash"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"type"</literal></expr>, <expr><literal type="string">"none"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"none"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>randomkey</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"randomkey"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_NIL</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"randomkey"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STR</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"key1"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>flushdb</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"flushdb"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"dbsize"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"flushdb"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"dbsize"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TEST</name></type> <name>flushdb_multidb</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>rliteContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>rliteConnect</name><argument_list>(<argument><expr><literal type="string">":memory:"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>rliteReply</name><modifier>*</modifier></type> <name>reply</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name><name>argvlen</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"set"</literal></expr>, <expr><literal type="string">"key1"</literal></expr>, <expr><literal type="string">"mydata"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"select"</literal></expr>, <expr><literal type="string">"1"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"flushdb"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"select"</literal></expr>, <expr><literal type="string">"0"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_STATUS</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<block>{<block_content>
		<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name><name>argv</name><index>[<expr><literal type="number">100</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="string">"dbsize"</literal></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>reply</name> <operator>=</operator> <call><name>rliteCommandArgv</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><call><name>populateArgvlen</name><argument_list>(<argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><name>argvlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>EXPECT_REPLY_INTEGER</name><argument_list>(<argument><expr><name>reply</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rliteFreeReplyObject</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block>

	<expr_stmt><expr><call><name>rliteFree</name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PASS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<macro><name>SUITE</name><argument_list>(<argument>db_test</argument>)</argument_list></macro> <block>{<block_content>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>test_rlite_connect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>keys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>dbsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TESTp</name><argument_list>(<argument><expr><name>expire</name></expr></argument>, <argument><expr><literal type="string">"expire"</literal></expr></argument>, <argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TESTp</name><argument_list>(<argument><expr><name>expire</name></expr></argument>, <argument><expr><literal type="string">"pexpire"</literal></expr></argument>, <argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TESTp</name><argument_list>(<argument><expr><name>expire</name></expr></argument>, <argument><expr><literal type="string">"expireat"</literal></expr></argument>, <argument><expr><literal type="string">"1000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TESTp</name><argument_list>(<argument><expr><name>expire</name></expr></argument>, <argument><expr><literal type="string">"pexpireat"</literal></expr></argument>, <argument><expr><literal type="string">"1000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>test_rename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>renamenx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>ttl_pttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>persist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>test_select</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>move</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>randomkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>flushdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RUN_TEST</name><argument_list>(<argument><expr><name>flushdb_multidb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>
</unit>
