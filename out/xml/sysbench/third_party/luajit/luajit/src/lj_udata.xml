<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/sysbench/third_party/luajit/luajit/src/lj_udata.c"><comment type="block">/*
** Userdata handling.
** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
*/</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>lj_udata_c</name></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LUA_CORE</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lj_obj.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lj_gc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lj_udata.h"</cpp:file></cpp:include>

<function><type><name>GCudata</name> <modifier>*</modifier></type><name>lj_udata_new</name><parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>MSize</name></type> <name>sz</name></decl></parameter>, <parameter><decl><type><name>GCtab</name> <modifier>*</modifier></type><name>env</name></decl></parameter>)</parameter_list>
<block>{<block_content>
  <decl_stmt><decl><type><name>GCudata</name> <modifier>*</modifier></type><name>ud</name> <init>= <expr><call><name>lj_mem_newt</name><argument_list>(<argument><expr><name>L</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>GCudata</name></expr></argument>)</argument_list></sizeof> <operator>+</operator> <name>sz</name></expr></argument>, <argument><expr><name>GCudata</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>global_State</name> <modifier>*</modifier></type><name>g</name> <init>= <expr><call><name>G</name><argument_list>(<argument><expr><name>L</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>newwhite</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>ud</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block">/* Not finalized. */</comment>
  <expr_stmt><expr><name><name>ud</name><operator>-&gt;</operator><name>gct</name></name> <operator>=</operator> <operator>~</operator><name>LJ_TUDATA</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>ud</name><operator>-&gt;</operator><name>udtype</name></name> <operator>=</operator> <name>UDTYPE_USERDATA</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>ud</name><operator>-&gt;</operator><name>len</name></name> <operator>=</operator> <name>sz</name></expr>;</expr_stmt>
  <comment type="block">/* NOBARRIER: The GCudata is new (marked white). */</comment>
  <expr_stmt><expr><call><name>setgcrefnull</name><argument_list>(<argument><expr><name><name>ud</name><operator>-&gt;</operator><name>metatable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>setgcref</name><argument_list>(<argument><expr><name><name>ud</name><operator>-&gt;</operator><name>env</name></name></expr></argument>, <argument><expr><call><name>obj2gco</name><argument_list>(<argument><expr><name>env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="block">/* Chain to userdata list (after main thread). */</comment>
  <expr_stmt><expr><call><name>setgcrefr</name><argument_list>(<argument><expr><name><name>ud</name><operator>-&gt;</operator><name>nextgc</name></name></expr></argument>, <argument><expr><call><name>mainthread</name><argument_list>(<argument><expr><name>g</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>nextgc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>setgcref</name><argument_list>(<argument><expr><call><name>mainthread</name><argument_list>(<argument><expr><name>g</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>nextgc</name></expr></argument>, <argument><expr><call><name>obj2gco</name><argument_list>(<argument><expr><name>ud</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>ud</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name> <name>LJ_FASTCALL</name></type> <name>lj_udata_free</name><parameter_list>(<parameter><decl><type><name>global_State</name> <modifier>*</modifier></type><name>g</name></decl></parameter>, <parameter><decl><type><name>GCudata</name> <modifier>*</modifier></type><name>ud</name></decl></parameter>)</parameter_list>
<block>{<block_content>
  <expr_stmt><expr><call><name>lj_mem_free</name><argument_list>(<argument><expr><name>g</name></expr></argument>, <argument><expr><name>ud</name></expr></argument>, <argument><expr><call><name>sizeudata</name><argument_list>(<argument><expr><name>ud</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

</unit>
