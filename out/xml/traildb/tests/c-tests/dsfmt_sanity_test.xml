<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/traildb/tests/c-tests/dsfmt_sanity_test.c">
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;float.h&gt;</cpp:file></cpp:include>

<comment type="line">// explicitly set to non-maximum value</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSFMT_MEXP</name></cpp:macro> <cpp:value>521</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dsfmt/dSFMT.h&gt;</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="line">// we are initializing an array of dsfmt_t 's</comment>
    <comment type="line">// with a few close values and then generating values</comment>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>seed</name> <init>= <expr><literal type="number">4321</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dsfmt_t</name></type> <name>dsfmt</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>dsfmt_init_gen_rand</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dsfmt</name></expr></argument>, <argument><expr><name>seed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>dsfmt_genrand_close_open</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dsfmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
