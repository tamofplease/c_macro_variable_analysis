<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/traildb/tests/c-tests/event_filter_get_time_range.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;traildb.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tdb_test.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>start</name></decl>, <decl><type ref="prev"/><name>end</name></decl>, <decl><type ref="prev"/><name>num_terms</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>tdb_item</name></type> <name>item</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>is_negative</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>tdb_event_filter_term_type</name></type> <name>term_type</name></decl>;</decl_stmt>
    
    <comment type="block">/* EMPTY FILTER */</comment>
    <decl_stmt><decl><type><name><name>struct</name> <name>tdb_event_filter</name></name> <modifier>*</modifier></type><name>f</name> <init>= <expr><call><name>tdb_event_filter_new</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_new_clause</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_new_clause</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_new_clause</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name>tdb_event_filter_free</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* ONE TERM */</comment>
    <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name>tdb_event_filter_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_add_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range - num clauses and terms */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <comment type="block">/* time range - get term type */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>term_type</name> <operator>==</operator> <name>TDB_EVENT_FILTER_TIME_RANGE_TERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range - get item */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_INCORRECT_TERM_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range - get time range */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>start</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>end</name> <operator>==</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>tdb_event_filter_free</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <comment type="block">/* item */</comment>
    <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name>tdb_event_filter_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_add_term</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* item - num clauses and terms */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* item - get term type */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>term_type</name> <operator>==</operator> <name>TDB_EVENT_FILTER_MATCH_TERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* item - get time range */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_INCORRECT_TERM_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* item - get item */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>item</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>is_negative</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>tdb_event_filter_free</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* TWO TERMS */</comment>
        
    <comment type="block">/* time range, item */</comment>
    <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name>tdb_event_filter_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_add_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_add_term</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range, item - num clauses and terms */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range, item - get term types */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>term_type</name> <operator>==</operator> <name>TDB_EVENT_FILTER_TIME_RANGE_TERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>term_type</name> <operator>==</operator> <name>TDB_EVENT_FILTER_MATCH_TERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range, item - get time range, get item */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>start</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>end</name> <operator>==</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_INCORRECT_TERM_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_INCORRECT_TERM_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>item</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>is_negative</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name>tdb_event_filter_free</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <comment type="block">/* item, time range */</comment>
    <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name>tdb_event_filter_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_add_term</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_add_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* item, time range  - num clauses and terms */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* item, time range  - get term types */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>term_type</name> <operator>==</operator> <name>TDB_EVENT_FILTER_MATCH_TERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>term_type</name> <operator>==</operator> <name>TDB_EVENT_FILTER_TIME_RANGE_TERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range, item - get time range, get item */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_INCORRECT_TERM_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>start</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>end</name> <operator>==</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>item</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>is_negative</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_INCORRECT_TERM_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>tdb_event_filter_free</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* TWO CLAUSES */</comment>

    <comment type="block">/* empty, time range */</comment>
    <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name>tdb_event_filter_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_new_clause</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_add_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* empty, time range - num of clauses and terms */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* empty, time range  - get term types */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>term_type</name> <operator>==</operator> <name>TDB_EVENT_FILTER_TIME_RANGE_TERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* empty, time range - get time range, get item */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>start</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>end</name> <operator>==</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_INCORRECT_TERM_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name>tdb_event_filter_free</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range, empty */</comment>
    <expr_stmt><expr><name>f</name> <operator>=</operator> <call><name>tdb_event_filter_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_add_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_new_clause</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range, empty - num of clauses and terms */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_clauses</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>num_terms</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_num_terms</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>num_terms</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range, empty  - get term types */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>term_type</name> <operator>==</operator> <name>TDB_EVENT_FILTER_TIME_RANGE_TERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_term_type</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>term_type</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* time range, empty - get time range, get item */</comment>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>start</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>end</name> <operator>==</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_time_range</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>start</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_INCORRECT_TERM_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_event_filter_get_item</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_negative</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>TDB_ERR_NO_SUCH_ITEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><call><name>tdb_event_filter_free</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
