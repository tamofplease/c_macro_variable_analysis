<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/traildb/tests/c-tests/wide_timestamps.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;traildb.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tdb_test.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>tdb</name> <modifier>*</modifier></type><name>make_tdb</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>root</name></decl></parameter>,
                     <parameter><decl><type><specifier>const</specifier> <name>uint64_t</name> <modifier>*</modifier></type><name>tstamps</name></decl></parameter>,
                     <parameter><decl><type><name>uint32_t</name></type> <name>num</name></decl></parameter>,
                     <parameter><decl><type><name>int</name></type> <name>should_fail</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><specifier>static</specifier> <name>uint8_t</name></type> <name><name>uuid</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>fields</name><index>[]</index></name> <init>= <expr><block>{}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>tdb_cons</name><modifier>*</modifier></type> <name>c</name> <init>= <expr><call><name>tdb_cons_init</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>test_cons_settings</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>zero</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>i</name></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_cons_open</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>root</name></expr></argument>, <argument><expr><name>fields</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>num</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_cons_add</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>uuid</name></expr></argument>, <argument><expr><name><name>tstamps</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>fields</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>zero</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_cons_finalize</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call> <operator>==</operator>
           <operator>(</operator><ternary><condition><expr><name>should_fail</name></expr> ?</condition><then> <expr><name>TDB_ERR_TIMESTAMP_TOO_LARGE</name></expr></then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tdb_cons_close</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>should_fail</name></expr>)</condition><block>{<block_content>
        <decl_stmt><decl><type><name>tdb</name><modifier>*</modifier></type> <name>t</name> <init>= <expr><call><name>tdb_init</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_open</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><name>root</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>t</name></expr>;</return>
    </block_content>}</block></if><else>else<block type="pseudo"><block_content>
        <return>return <expr><name>NULL</name></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier><modifier>*</modifier></type> <name>argv</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="block">/* small min_timestamp, large max_timedelta, sorted */</comment>
    <decl_stmt><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name><name>TSTAMPS1</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="number">1</literal></expr>,
                                 <expr><literal type="number">2</literal></expr>,
                                 <expr><literal type="number">3</literal></expr>,
                                 <expr><name>UINT32_MAX</name></expr>,
                                 <expr><name>UINT32_MAX</name> <operator>+</operator> <literal type="number">1LLU</literal></expr>,
                                 <expr><name>TDB_MAX_TIMEDELTA</name> <operator>-</operator> <literal type="number">10</literal></expr>,
                                 <expr><name>TDB_MAX_TIMEDELTA</name> <operator>-</operator> <literal type="number">9</literal></expr>,
                                 <expr><name>TDB_MAX_TIMEDELTA</name> <operator>-</operator> <literal type="number">8</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <comment type="block">/* large min_timestamp, small max_timedelta, reverse order */</comment>
    <decl_stmt><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name><name>TSTAMPS2</name><index>[]</index></name> <init>= <expr><block>{<expr><name>TDB_MAX_TIMEDELTA</name> <operator>-</operator> <literal type="number">1</literal></expr>,
                                 <expr><name>TDB_MAX_TIMEDELTA</name> <operator>-</operator> <literal type="number">3</literal></expr>,
                                 <expr><name>TDB_MAX_TIMEDELTA</name> <operator>-</operator> <literal type="number">5</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <comment type="block">/* this should not fail */</comment>
    <decl_stmt><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name><name>TSTAMPS3</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="number">10</literal></expr>, <expr><name>TDB_MAX_TIMEDELTA</name> <operator>+</operator> <literal type="number">9</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <comment type="block">/* this should fail */</comment>
    <decl_stmt><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name><name>TSTAMPS4</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="number">10</literal></expr>, <expr><name>TDB_MAX_TIMEDELTA</name> <operator>+</operator> <literal type="number">11</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <comment type="block">/* this should fail */</comment>
    <decl_stmt><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name><name>TSTAMPS5</name><index>[]</index></name> <init>= <expr><block>{<expr><name>TDB_MAX_TIMEDELTA</name> <operator>+</operator> <literal type="number">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>const</specifier> <name>tdb_event</name> <modifier>*</modifier></type><name>event</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>uint64_t</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>num_events</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>TSTAMPS1</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>TSTAMPS1</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>tdb</name> <modifier>*</modifier></type><name>db</name> <init>= <expr><call><name>make_tdb</name><argument_list>(<argument><expr><call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"TDB_TMP_DIR"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TSTAMPS1</name></expr></argument>, <argument><expr><name>num_events</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>tdb_cursor</name> <modifier>*</modifier></type><name>cursor</name> <init>= <expr><call><name>tdb_cursor_new</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_get_trail</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><operator>(</operator><name>event</name> <operator>=</operator> <call><name>tdb_cursor_next</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>event</name><operator>-&gt;</operator><name>timestamp</name></name> <operator>==</operator> <name><name>TSTAMPS1</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i</name> <operator>==</operator> <name>num_events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tdb_close</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tdb_cursor_free</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>num_events</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>TSTAMPS2</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>TSTAMPS2</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <expr_stmt><expr><name>db</name> <operator>=</operator> <call><name>make_tdb</name><argument_list>(<argument><expr><call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"TDB_TMP_DIR"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TSTAMPS2</name></expr></argument>, <argument><expr><name>num_events</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cursor</name> <operator>=</operator> <call><name>tdb_cursor_new</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_get_trail</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><operator>(</operator><name>event</name> <operator>=</operator> <call><name>tdb_cursor_next</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
        <comment type="block">/* reverse order */</comment>
        <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>event</name><operator>-&gt;</operator><name>timestamp</name></name> <operator>==</operator> <name><name>TSTAMPS2</name><index>[<expr><name>num_events</name> <operator>-</operator> <name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i</name> <operator>==</operator> <name>num_events</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tdb_close</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tdb_cursor_free</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>num_events</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>TSTAMPS3</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>TSTAMPS3</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <expr_stmt><expr><name>db</name> <operator>=</operator> <call><name>make_tdb</name><argument_list>(<argument><expr><call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"TDB_TMP_DIR"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TSTAMPS3</name></expr></argument>, <argument><expr><name>num_events</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cursor</name> <operator>=</operator> <call><name>tdb_cursor_new</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>tdb_get_trail</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><operator>(</operator><name>event</name> <operator>=</operator> <call><name>tdb_cursor_next</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>event</name><operator>-&gt;</operator><name>timestamp</name></name> <operator>==</operator> <name><name>TSTAMPS3</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i</name> <operator>==</operator> <name>num_events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tdb_close</name><argument_list>(<argument><expr><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>tdb_cursor_free</name><argument_list>(<argument><expr><name>cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>make_tdb</name><argument_list>(<argument><expr><call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"TDB_TMP_DIR"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TSTAMPS4</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>TSTAMPS4</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>TSTAMPS4</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>make_tdb</name><argument_list>(<argument><expr><call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"TDB_TMP_DIR"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TSTAMPS5</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>TSTAMPS5</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>TSTAMPS5</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
