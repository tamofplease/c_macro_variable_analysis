<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/traildb/src/tdb_queue.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tdb_queue.h"</cpp:file></cpp:include>

<struct>struct <name>tdb_queue</name><block>{
    <decl_stmt><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>q</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>max</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>head</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>tail</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>count</name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><name><name>struct</name> <name>tdb_queue</name></name> <modifier>*</modifier></type><name>tdb_queue_new</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>max_length</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name>struct</name> <name>tdb_queue</name></name> <modifier>*</modifier></type><name>q</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name>max_length</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>q</name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>tdb_queue</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>q</name><operator>-&gt;</operator><name>q</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><name>max_length</name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>void</name><operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><name><name>q</name><operator>-&gt;</operator><name>max</name></name> <operator>=</operator> <name>max_length</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>q</name><operator>-&gt;</operator><name>head</name></name> <operator>=</operator> <name><name>q</name><operator>-&gt;</operator><name>tail</name></name> <operator>=</operator> <name><name>q</name><operator>-&gt;</operator><name>count</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <return>return <expr><name>q</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>tdb_queue_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>tdb_queue</name></name> <modifier>*</modifier></type><name>q</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>q</name><operator>-&gt;</operator><name>q</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>tdb_queue_push</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>tdb_queue</name></name> <modifier>*</modifier></type><name>q</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>e</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>q</name><operator>-&gt;</operator><name>max</name></name> <operator>==</operator> <name><name>q</name><operator>-&gt;</operator><name>count</name></name><operator>++</operator></expr>)</condition><block>{<block_content>
        <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"tdb_queue_push: max=%d, count=%d "</literal>
            <literal type="string">"(this should never happen!)"</literal></expr></argument>, <argument><expr><name><name>q</name><operator>-&gt;</operator><name>max</name></name></expr></argument>, <argument><expr><name><name>q</name><operator>-&gt;</operator><name>count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><name><name>q</name><operator>-&gt;</operator><name>q</name><index>[<expr><name><name>q</name><operator>-&gt;</operator><name>head</name></name><operator>++</operator> <operator>%</operator> <name><name>q</name><operator>-&gt;</operator><name>max</name></name></expr>]</index></name> <operator>=</operator> <name>e</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name> <modifier>*</modifier></type><name>tdb_queue_pop</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>tdb_queue</name></name> <modifier>*</modifier></type><name>q</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>q</name><operator>-&gt;</operator><name>count</name></name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><operator>--</operator><name><name>q</name><operator>-&gt;</operator><name>count</name></name></expr>;</expr_stmt>
    <return>return <expr><name><name>q</name><operator>-&gt;</operator><name>q</name><index>[<expr><name><name>q</name><operator>-&gt;</operator><name>tail</name></name><operator>++</operator> <operator>%</operator> <name><name>q</name><operator>-&gt;</operator><name>max</name></name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint32_t</name></type> <name>tdb_queue_length</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>tdb_queue</name></name> <modifier>*</modifier></type><name>q</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <return>return <expr><name><name>q</name><operator>-&gt;</operator><name>count</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name> <modifier>*</modifier></type><name>tdb_queue_peek</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>tdb_queue</name></name> <modifier>*</modifier></type><name>q</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>q</name><operator>-&gt;</operator><name>count</name></name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
    <return>return <expr><name><name>q</name><operator>-&gt;</operator><name>q</name><index>[<expr><name><name>q</name><operator>-&gt;</operator><name>tail</name></name> <operator>%</operator> <name><name>q</name><operator>-&gt;</operator><name>max</name></name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

</unit>
