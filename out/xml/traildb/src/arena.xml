<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/traildb/src/arena.c">
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"arena.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tdb_io.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>arena_flush</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>arena</name></name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>fd</name></name> <operator>&amp;&amp;</operator> <name><name>a</name><operator>-&gt;</operator><name>next</name></name></expr>)</condition><block>{<block_content>
        <decl_stmt><decl><type><name>uint64_t</name></type> <name>size</name> <init>= <expr><operator>(</operator><operator>(</operator><operator>(</operator><name><name>a</name><operator>-&gt;</operator><name>next</name></name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><name>ARENA_DISK_BUFFER</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator>
                        <operator>(</operator><name>uint64_t</name><operator>)</operator><name><name>a</name><operator>-&gt;</operator><name>item_size</name></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TDB_WRITE</name><argument_list>(<argument><expr><name><name>a</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name><name>a</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<label><name>done</name>:</label>
    <return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name> <modifier>*</modifier></type><name>arena_add_item</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>arena</name></name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>failed</name></name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>fd</name></name></expr>)</condition><block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>size</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content>
            <expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <name>ARENA_DISK_BUFFER</name></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>a</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><name><name>a</name><operator>-&gt;</operator><name>item_size</name></name> <operator>*</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><name><name>a</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block>{<block_content>
                <expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>failed</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                <return>return <expr><name>NULL</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if><if type="elseif">else if <condition>(<expr><operator>(</operator><name><name>a</name><operator>-&gt;</operator><name>next</name></name> <operator>&amp;</operator> <operator>(</operator><name>ARENA_DISK_BUFFER</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name>arena_flush</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
                <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><name><name>a</name><operator>-&gt;</operator><name>data</name></name> <operator>+</operator> <name><name>a</name><operator>-&gt;</operator><name>item_size</name></name> <operator>*</operator> <operator>(</operator><name><name>a</name><operator>-&gt;</operator><name>next</name></name><operator>++</operator> <operator>&amp;</operator> <operator>(</operator><name>ARENA_DISK_BUFFER</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator></expr>;</return>
    </block_content>}</block></if><else>else<block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name><name>a</name><operator>-&gt;</operator><name>next</name></name> <operator>&gt;=</operator> <name><name>a</name><operator>-&gt;</operator><name>size</name></name></expr>)</condition><block>{<block_content>
            <expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>size</name></name> <operator>+=</operator> <ternary><condition><expr><name><name>a</name><operator>-&gt;</operator><name>arena_increment</name></name></expr> ?</condition><then> <expr><name><name>a</name><operator>-&gt;</operator><name>arena_increment</name></name></expr></then><else>: <expr><name>ARENA_INCREMENT</name></expr></else></ternary></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>a</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <call><name>realloc</name><argument_list>(<argument><expr><name><name>a</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>a</name><operator>-&gt;</operator><name>item_size</name></name> <operator>*</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><name><name>a</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block>{<block_content>
                <expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>failed</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                <return>return <expr><name>NULL</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><name><name>a</name><operator>-&gt;</operator><name>data</name></name> <operator>+</operator> <name><name>a</name><operator>-&gt;</operator><name>item_size</name></name> <operator>*</operator> <name><name>a</name><operator>-&gt;</operator><name>next</name></name><operator>++</operator></expr>;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

</unit>
