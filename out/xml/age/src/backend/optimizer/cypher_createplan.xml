<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/workspace/age/src/backend/optimizer/cypher_createplan.c"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/sysattr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_type_d.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/extensible.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/nodes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/pg_list.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/plannodes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/relation.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"executor/cypher_executor.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"optimizer/cypher_createplan.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>CustomScanMethods</name></type> <name>cypher_create_plan_methods</name> <init>= <expr><block>{
    <expr><literal type="string">"Cypher Create"</literal></expr>, <expr><name>create_cypher_create_plan_state</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>CustomScanMethods</name></type> <name>cypher_set_plan_methods</name> <init>= <expr><block>{
    <expr><literal type="string">"Cypher Set"</literal></expr>, <expr><name>create_cypher_set_plan_state</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>CustomScanMethods</name></type> <name>cypher_delete_plan_methods</name> <init>= <expr><block>{
    <expr><literal type="string">"Cypher Delete"</literal></expr>, <expr><name>create_cypher_delete_plan_state</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>CustomScanMethods</name></type> <name>cypher_merge_plan_methods</name> <init>= <expr><block>{
    <expr><literal type="string">"Cypher Merge"</literal></expr>, <expr><name>create_cypher_merge_plan_state</name></expr>}</block></expr></init></decl>;</decl_stmt>

<function><type><name>Plan</name> <modifier>*</modifier></type><name>plan_cypher_create_path</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>RelOptInfo</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>,
                              <parameter><decl><type><name>CustomPath</name> <modifier>*</modifier></type><name>best_path</name></decl></parameter>, <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>tlist</name></decl></parameter>,
                              <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>clauses</name></decl></parameter>, <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>custom_plans</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CustomScan</name> <modifier>*</modifier></type><name>cs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Plan</name> <modifier>*</modifier></type><name>subplan</name> <init>= <expr><call><name>linitial</name><argument_list>(<argument><expr><name>custom_plans</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name>cs</name> <operator>=</operator> <call><name>makeNode</name><argument_list>(<argument><expr><name>CustomScan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>startup_cost</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>startup_cost</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>total_cost</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>total_cost</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_rows</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>rows</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>parallel_aware</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_aware</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>parallel_safe</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_safe</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_node_id</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="line">// Set later in set_plan_refs</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>targetlist</name></name> <operator>=</operator> <name>tlist</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>qual</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>lefttree</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>righttree</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>initPlan</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>extParam</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>allParam</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>scanrelid</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>flags</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_plans</name></name> <operator>=</operator> <name>custom_plans</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_exprs</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_private</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>custom_private</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_scan_tlist</name></name> <operator>=</operator> <name><name>subplan</name><operator>-&gt;</operator><name>targetlist</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_relids</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>methods</name></name> <operator>=</operator> <operator>&amp;</operator><name>cypher_create_plan_methods</name></expr>;</expr_stmt>

    <return>return <expr><operator>(</operator><name>Plan</name> <operator>*</operator><operator>)</operator><name>cs</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>Plan</name> <modifier>*</modifier></type><name>plan_cypher_set_path</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>RelOptInfo</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>,
                           <parameter><decl><type><name>CustomPath</name> <modifier>*</modifier></type><name>best_path</name></decl></parameter>, <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>tlist</name></decl></parameter>,
                           <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>clauses</name></decl></parameter>, <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>custom_plans</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CustomScan</name> <modifier>*</modifier></type><name>cs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Plan</name> <modifier>*</modifier></type><name>subplan</name> <init>= <expr><call><name>linitial</name><argument_list>(<argument><expr><name>custom_plans</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name>cs</name> <operator>=</operator> <call><name>makeNode</name><argument_list>(<argument><expr><name>CustomScan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>startup_cost</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>startup_cost</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>total_cost</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>total_cost</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_rows</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>rows</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>parallel_aware</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_aware</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>parallel_safe</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_safe</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_node_id</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="line">// Set later in set_plan_refs</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>targetlist</name></name> <operator>=</operator> <name>tlist</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>qual</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>lefttree</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>righttree</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>initPlan</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>extParam</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>allParam</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>scanrelid</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>flags</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_plans</name></name> <operator>=</operator> <name>custom_plans</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_exprs</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_private</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>custom_private</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_scan_tlist</name></name> <operator>=</operator> <name><name>subplan</name><operator>-&gt;</operator><name>targetlist</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_relids</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>methods</name></name> <operator>=</operator> <operator>&amp;</operator><name>cypher_set_plan_methods</name></expr>;</expr_stmt>

    <return>return <expr><operator>(</operator><name>Plan</name> <operator>*</operator><operator>)</operator><name>cs</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Coverts the Scan node representing the delete clause
 * to the delete Plan node
 */</comment>
<function><type><name>Plan</name> <modifier>*</modifier></type><name>plan_cypher_delete_path</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>RelOptInfo</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>,
                           <parameter><decl><type><name>CustomPath</name> <modifier>*</modifier></type><name>best_path</name></decl></parameter>, <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>tlist</name></decl></parameter>,
                           <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>clauses</name></decl></parameter>, <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>custom_plans</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CustomScan</name> <modifier>*</modifier></type><name>cs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Plan</name> <modifier>*</modifier></type><name>subplan</name> <init>= <expr><call><name>linitial</name><argument_list>(<argument><expr><name>custom_plans</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name>cs</name> <operator>=</operator> <call><name>makeNode</name><argument_list>(<argument><expr><name>CustomScan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>startup_cost</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>startup_cost</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>total_cost</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>total_cost</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_rows</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>rows</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>parallel_aware</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_aware</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>parallel_safe</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_safe</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_node_id</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="line">// Set later in set_plan_refs</comment>
    <comment type="block">/*
     * the scan list of the delete node, used for its ScanTupleSlot used
     * by its parent in the execution phase.
     */</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>targetlist</name></name> <operator>=</operator> <name>tlist</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>qual</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>lefttree</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>righttree</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>initPlan</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>extParam</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>allParam</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="block">/*
     * We do not want Postgres to assume we are scanning a table, postgres'
     * optimizer will make assumptions about our targetlist that are false
     */</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>scanrelid</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>flags</name></name></expr>;</expr_stmt>

    <comment type="line">// child plan nodes are here, Postgres processed them for us.</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_plans</name></name> <operator>=</operator> <name>custom_plans</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_exprs</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>
    <comment type="line">// transfer delete metadata needed by the delete clause.</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_private</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>custom_private</name></name></expr>;</expr_stmt>
    <comment type="block">/*
     * the scan list of the delete node's children, used for ScanTupleSlot
     * in execution.
     */</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_scan_tlist</name></name> <operator>=</operator> <name><name>subplan</name><operator>-&gt;</operator><name>targetlist</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_relids</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>methods</name></name> <operator>=</operator> <operator>&amp;</operator><name>cypher_delete_plan_methods</name></expr>;</expr_stmt>

    <return>return <expr><operator>(</operator><name>Plan</name> <operator>*</operator><operator>)</operator><name>cs</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Coverts the Scan node representing the delete clause
 * to the merge Plan node
 */</comment>
<function><type><name>Plan</name> <modifier>*</modifier></type><name>plan_cypher_merge_path</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>RelOptInfo</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>,
                           <parameter><decl><type><name>CustomPath</name> <modifier>*</modifier></type><name>best_path</name></decl></parameter>, <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>tlist</name></decl></parameter>,
                           <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>clauses</name></decl></parameter>, <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>custom_plans</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CustomScan</name> <modifier>*</modifier></type><name>cs</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Plan</name> <modifier>*</modifier></type><name>subplan</name> <init>= <expr><call><name>linitial</name><argument_list>(<argument><expr><name>custom_plans</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name>cs</name> <operator>=</operator> <call><name>makeNode</name><argument_list>(<argument><expr><name>CustomScan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>startup_cost</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>startup_cost</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>total_cost</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>total_cost</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_rows</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>rows</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>parallel_aware</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_aware</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>parallel_safe</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_safe</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>plan_node_id</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="line">// Set later in set_plan_refs</comment>
    <comment type="block">/*
     * the scan list of the delete node, used for its ScanTupleSlot used
     * by its parent in the execution phase.
     */</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>targetlist</name></name> <operator>=</operator> <name>tlist</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>qual</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>lefttree</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>righttree</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>initPlan</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>extParam</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>plan</name><operator>.</operator><name>allParam</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="block">/*
     * We do not want Postgres to assume we are scanning a table, postgres'
     * optimizer will make assumptions about our targetlist that are false
     */</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>scan</name><operator>.</operator><name>scanrelid</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>flags</name></name></expr>;</expr_stmt>

    <comment type="line">// child plan nodes are here, Postgres processed them for us.</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_plans</name></name> <operator>=</operator> <name>custom_plans</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_exprs</name></name> <operator>=</operator> <name>NIL</name></expr>;</expr_stmt>
    <comment type="line">// transfer delete metadata needed by the delete clause.</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_private</name></name> <operator>=</operator> <name><name>best_path</name><operator>-&gt;</operator><name>custom_private</name></name></expr>;</expr_stmt>
    <comment type="block">/*
     * the scan list of the merge node's children, used for ScanTupleSlot
     * in execution.
     */</comment>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_scan_tlist</name></name> <operator>=</operator> <name><name>subplan</name><operator>-&gt;</operator><name>targetlist</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>custom_relids</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cs</name><operator>-&gt;</operator><name>methods</name></name> <operator>=</operator> <operator>&amp;</operator><name>cypher_merge_plan_methods</name></expr>;</expr_stmt>

    <return>return <expr><operator>(</operator><name>Plan</name> <operator>*</operator><operator>)</operator><name>cs</name></expr>;</return>
</block_content>}</block></function>
</unit>
