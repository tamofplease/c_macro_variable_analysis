<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/age/src/backend/optimizer/cypher_pathnode.c"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/extensible.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/nodes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/pg_list.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/relation.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"optimizer/cypher_createplan.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"optimizer/cypher_pathnode.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>CustomPathMethods</name></type> <name>cypher_create_path_methods</name> <init>= <expr><block>{
    <expr><name>CREATE_PATH_NAME</name></expr>, <expr><name>plan_cypher_create_path</name></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>CustomPathMethods</name></type> <name>cypher_set_path_methods</name> <init>= <expr><block>{
    <expr><name>SET_PATH_NAME</name></expr>, <expr><name>plan_cypher_set_path</name></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>CustomPathMethods</name></type> <name>cypher_delete_path_methods</name> <init>= <expr><block>{
    <expr><name>DELETE_PATH_NAME</name></expr>, <expr><name>plan_cypher_delete_path</name></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>CustomPathMethods</name></type> <name>cypher_merge_path_methods</name> <init>= <expr><block>{
    <expr><name>MERGE_PATH_NAME</name></expr>, <expr><name>plan_cypher_merge_path</name></expr>, <expr><name>NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>

<function><type><name>CustomPath</name> <modifier>*</modifier></type><name>create_cypher_create_path</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>RelOptInfo</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>,
                                      <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>custom_private</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CustomPath</name> <modifier>*</modifier></type><name>cp</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>cp</name> <operator>=</operator> <call><name>makeNode</name><argument_list>(<argument><expr><name>CustomPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathtype</name></name> <operator>=</operator> <name>T_CustomScan</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parent</name></name> <operator>=</operator> <name>rel</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathtarget</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>reltarget</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>param_info</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="line">// Do not allow parallel methods</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_aware</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_safe</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_workers</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>rows</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="line">// Basic CREATE will not return rows</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>startup_cost</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="line">// Basic CREATE will not fetch any pages</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>total_cost</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <comment type="line">// No output ordering for basic CREATE</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathkeys</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="line">// Disable all custom flags for now</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>custom_paths</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>pathlist</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>custom_private</name></name> <operator>=</operator> <name>custom_private</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>methods</name></name> <operator>=</operator> <operator>&amp;</operator><name>cypher_create_path_methods</name></expr>;</expr_stmt>

    <return>return <expr><name>cp</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>CustomPath</name> <modifier>*</modifier></type><name>create_cypher_set_path</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>RelOptInfo</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>,
                                   <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>custom_private</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CustomPath</name> <modifier>*</modifier></type><name>cp</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>cp</name> <operator>=</operator> <call><name>makeNode</name><argument_list>(<argument><expr><name>CustomPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathtype</name></name> <operator>=</operator> <name>T_CustomScan</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parent</name></name> <operator>=</operator> <name>rel</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathtarget</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>reltarget</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>param_info</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="line">// Do not allow parallel methods</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_aware</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_safe</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_workers</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>rows</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="line">// Basic SET will not return rows</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>startup_cost</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> <comment type="line">// Basic SET will not fetch any pages</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>total_cost</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <comment type="line">// No output ordering for basic SET</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathkeys</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="line">// Disable all custom flags for now</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>custom_paths</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>pathlist</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>custom_private</name></name> <operator>=</operator> <name>custom_private</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>methods</name></name> <operator>=</operator> <operator>&amp;</operator><name>cypher_set_path_methods</name></expr>;</expr_stmt>

    <return>return <expr><name>cp</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Creates a Delete Path. Makes the original path a child of the new
 * path. We leave it to the caller to replace the pathlist of the rel.
 */</comment>
<function><type><name>CustomPath</name> <modifier>*</modifier></type><name>create_cypher_delete_path</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>RelOptInfo</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>,
                                   <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>custom_private</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CustomPath</name> <modifier>*</modifier></type><name>cp</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>cp</name> <operator>=</operator> <call><name>makeNode</name><argument_list>(<argument><expr><name>CustomPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathtype</name></name> <operator>=</operator> <name>T_CustomScan</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parent</name></name> <operator>=</operator> <name>rel</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathtarget</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>reltarget</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>param_info</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="line">// Do not allow parallel methods</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_aware</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_safe</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_workers</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>rows</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>startup_cost</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>total_cost</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <comment type="line">// No output ordering for basic SET</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathkeys</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="line">// Disable all custom flags for now</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <comment type="line">// Make the original paths the children of the new path</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>custom_paths</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>pathlist</name></name></expr>;</expr_stmt>
    <comment type="line">// Store the metadata Delete will need in the execution phase.</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>custom_private</name></name> <operator>=</operator> <name>custom_private</name></expr>;</expr_stmt>
    <comment type="line">// Tells Postgres how to turn this path to the correct CustomScan</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>methods</name></name> <operator>=</operator> <operator>&amp;</operator><name>cypher_delete_path_methods</name></expr>;</expr_stmt>

    <return>return <expr><name>cp</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Creates a Delete Path. Makes the original path a child of the new
 * path. We leave it to the caller to replace the pathlist of the rel.
 */</comment>
<function><type><name>CustomPath</name> <modifier>*</modifier></type><name>create_cypher_merge_path</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>RelOptInfo</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>,
                                   <parameter><decl><type><name>List</name> <modifier>*</modifier></type><name>custom_private</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>CustomPath</name> <modifier>*</modifier></type><name>cp</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>cp</name> <operator>=</operator> <call><name>makeNode</name><argument_list>(<argument><expr><name>CustomPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathtype</name></name> <operator>=</operator> <name>T_CustomScan</name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parent</name></name> <operator>=</operator> <name>rel</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathtarget</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>reltarget</name></name></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>param_info</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="line">// Do not allow parallel methods</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_aware</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_safe</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>parallel_workers</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>rows</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>startup_cost</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>total_cost</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <comment type="line">// No output ordering for basic SET</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>path</name><operator>.</operator><name>pathkeys</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

    <comment type="line">// Disable all custom flags for now</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <comment type="line">// Make the original paths the children of the new path</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>custom_paths</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>pathlist</name></name></expr>;</expr_stmt>
    <comment type="line">// Store the metadata Delete will need in the execution phase.</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>custom_private</name></name> <operator>=</operator> <name>custom_private</name></expr>;</expr_stmt>
    <comment type="line">// Tells Postgres how to turn this path to the correct CustomScan</comment>
    <expr_stmt><expr><name><name>cp</name><operator>-&gt;</operator><name>methods</name></name> <operator>=</operator> <operator>&amp;</operator><name>cypher_merge_path_methods</name></expr>;</expr_stmt>

    <return>return <expr><name>cp</name></expr>;</return>
</block_content>}</block></function>
</unit>
