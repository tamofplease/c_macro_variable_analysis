<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/agensgraph/src/backend/access/rmgrdesc/hashdesc.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * hashdesc.c
 *	  rmgr descriptor routines for access/hash/hash.c
 *
 * Portions Copyright (c) 1996-2020, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/access/rmgrdesc/hashdesc.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/hash_xlog.h"</cpp:file></cpp:include>

<function><type><name>void</name></type>
<name>hash_desc</name><parameter_list>(<parameter><decl><type><name>StringInfo</name></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>XLogReaderState</name> <modifier>*</modifier></type><name>record</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>char</name>	   <modifier>*</modifier></type><name>rec</name> <init>= <expr><call><name>XLogRecGetData</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint8</name></type>		<name>info</name> <init>= <expr><call><name>XLogRecGetInfo</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name></expr></init></decl>;</decl_stmt>

	<switch>switch <condition>(<expr><name>info</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>XLOG_HASH_INIT_META_PAGE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_init_meta_page</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_init_meta_page</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"num_tuples %g, fillfactor %d"</literal></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>num_tuples</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>ffactor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_INIT_BITMAP_PAGE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_init_bitmap_page</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_init_bitmap_page</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"bmsize %d"</literal></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bmsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_INSERT</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_insert</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_insert</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"off %u"</literal></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>offnum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_ADD_OVFL_PAGE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_add_ovfl_page</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_add_ovfl_page</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"bmsize %d, bmpage_found %c"</literal></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bmsize</name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>bmpage_found</name></name><operator>)</operator></expr> ?</condition><then> <expr><literal type="char">'T'</literal></expr> </then><else>: <expr><literal type="char">'F'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_SPLIT_ALLOCATE_PAGE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_split_allocate_page</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_split_allocate_page</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"new_bucket %u, meta_page_masks_updated %c, issplitpoint_changed %c"</literal></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>new_bucket</name></name></expr></argument>,
								 <argument><expr><ternary><condition><expr><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>XLH_SPLIT_META_UPDATE_MASKS</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="char">'T'</literal></expr> </then><else>: <expr><literal type="char">'F'</literal></expr></else></ternary></expr></argument>,
								 <argument><expr><ternary><condition><expr><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>XLH_SPLIT_META_UPDATE_SPLITPOINT</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="char">'T'</literal></expr> </then><else>: <expr><literal type="char">'F'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_SPLIT_COMPLETE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_split_complete</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_split_complete</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"old_bucket_flag %u, new_bucket_flag %u"</literal></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>old_bucket_flag</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>new_bucket_flag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_MOVE_PAGE_CONTENTS</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_move_page_contents</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_move_page_contents</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"ntups %d, is_primary %c"</literal></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>ntups</name></name></expr></argument>,
								 <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>is_prim_bucket_same_wrt</name></name></expr> ?</condition><then> <expr><literal type="char">'T'</literal></expr> </then><else>: <expr><literal type="char">'F'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_SQUEEZE_PAGE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_squeeze_page</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_squeeze_page</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"prevblkno %u, nextblkno %u, ntups %d, is_primary %c"</literal></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>prevblkno</name></name></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>nextblkno</name></name></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>ntups</name></name></expr></argument>,
								 <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>is_prim_bucket_same_wrt</name></name></expr> ?</condition><then> <expr><literal type="char">'T'</literal></expr> </then><else>: <expr><literal type="char">'F'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_DELETE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_delete</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_delete</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"clear_dead_marking %c, is_primary %c"</literal></expr></argument>,
								 <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>clear_dead_marking</name></name></expr> ?</condition><then> <expr><literal type="char">'T'</literal></expr> </then><else>: <expr><literal type="char">'F'</literal></expr></else></ternary></expr></argument>,
								 <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>is_primary_bucket_page</name></name></expr> ?</condition><then> <expr><literal type="char">'T'</literal></expr> </then><else>: <expr><literal type="char">'F'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_UPDATE_META_PAGE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_update_meta_page</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_update_meta_page</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"ntuples %g"</literal></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>ntuples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
		<case>case <expr><name>XLOG_HASH_VACUUM_ONE_PAGE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_hash_vacuum_one_page</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_hash_vacuum_one_page</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"ntuples %d, latest removed xid %u"</literal></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>ntuples</name></name></expr></argument>,
								 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>latestRemovedXid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>hash_identify</name><parameter_list>(<parameter><decl><type><name>uint8</name></type> <name>info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

	<switch>switch <condition>(<expr><name>info</name> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>XLOG_HASH_INIT_META_PAGE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"INIT_META_PAGE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_INIT_BITMAP_PAGE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"INIT_BITMAP_PAGE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_INSERT</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"INSERT"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_ADD_OVFL_PAGE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"ADD_OVFL_PAGE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_SPLIT_ALLOCATE_PAGE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"SPLIT_ALLOCATE_PAGE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_SPLIT_PAGE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"SPLIT_PAGE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_SPLIT_COMPLETE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"SPLIT_COMPLETE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_MOVE_PAGE_CONTENTS</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"MOVE_PAGE_CONTENTS"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_SQUEEZE_PAGE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"SQUEEZE_PAGE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_DELETE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"DELETE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_SPLIT_CLEANUP</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"SPLIT_CLEANUP"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_UPDATE_META_PAGE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"UPDATE_META_PAGE"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_HASH_VACUUM_ONE_PAGE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"VACUUM_ONE_PAGE"</literal></expr>;</expr_stmt>
	</block_content>}</block></switch>

	<return>return <expr><name>id</name></expr>;</return>
</block_content>}</block></function>
</unit>
