<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/agensgraph/src/interfaces/ecpg/test/expected/sql-insupd.c"><comment type="block">/* Processed by ecpg (regression mode) */</comment>
<comment type="block">/* These include files are added by the preprocessor */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ecpglib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ecpgerrno.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sqlca.h&gt;</cpp:file></cpp:include>
<comment type="block">/* End of automatic include section */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ECPGdebug</name><parameter_list>(<parameter><type><name>X</name></type></parameter>,<parameter><type><name>Y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ECPGdebug((X)+100,(Y))</cpp:value></cpp:define>

<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>1</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>


<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>1</cpp:number> <cpp:file>"regression.h"</cpp:file></cpp:line>






<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>5</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>


<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{<block_content>
  <comment type="block">/* exec sql begin declare section */</comment>
	    
  
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>9</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>
 <decl_stmt><decl><type><name>int</name></type> <name><name>i1</name> <index>[ <expr><literal type="number">3</literal></expr> ]</index></name></decl> , <decl><type ref="prev"/><name><name>i2</name> <index>[ <expr><literal type="number">3</literal></expr> ]</index></name></decl> , <decl><type ref="prev"/><name><name>i3</name> <index>[ <expr><literal type="number">3</literal></expr> ]</index></name></decl> , <decl><type ref="prev"/><name>i4</name></decl> ;</decl_stmt>
<comment type="block">/* exec sql end declare section */</comment>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>10</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>


  <expr_stmt><expr><call><name>ECPGdebug</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <block>{<block_content> <expr_stmt><expr><call><name>ECPGconnect</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"ecpg1_regression"</literal></expr></argument> , <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>13</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>


  <comment type="block">/* exec sql whenever sql_warning  sqlprint ; */</comment>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>15</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

  <comment type="block">/* exec sql whenever sqlerror  sqlprint ; */</comment>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>16</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>


  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"create table insupd_test ( a int , b int )"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>18</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>18</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>18</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>


  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"insert into insupd_test ( a , b ) values ( 1 , 1 )"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>20</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>20</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>20</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"insert into insupd_test ( a , b ) values ( 2 , 2 )"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>21</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>21</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>21</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"insert into insupd_test ( a , b ) values ( 3 , 3 ) returning a"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>&amp;</operator><operator>(</operator><name>i4</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>22</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>22</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>22</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>


  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"update insupd_test set a = a + 1 returning a"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>(</operator><name>i3</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">3</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>24</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>24</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>24</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"update insupd_test set ( a , b ) = ( 5 , 5 ) where a = 4"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>25</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>25</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>25</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"update insupd_test set a = 4 where a = 3"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>26</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>26</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>26</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>
<empty_stmt>;</empty_stmt>

  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdo</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ECPGst_normal</name></expr></argument>, <argument><expr><literal type="string">"select a , b from insupd_test order by a"</literal></expr></argument>, <argument><expr><name>ECPGt_EOIT</name></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>(</operator><name>i1</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">3</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, 
	<argument><expr><name>ECPGt_int</name></expr></argument>,<argument><expr><operator>(</operator><name>i2</name><operator>)</operator></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">1</literal></expr></argument>,<argument><expr><operator>(</operator><name>long</name><operator>)</operator><literal type="number">3</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>, 
	<argument><expr><name>ECPGt_NO_INDICATOR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> , <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>, <argument><expr><name>ECPGt_EORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>28</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>28</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>28</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>


  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"changes\n%d %d %d %d\n"</literal></expr></argument>, <argument><expr><name><name>i3</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>i3</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>i3</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name>i4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"test\na b\n%d %d\n%d %d\n%d %d\n"</literal></expr></argument>, <argument><expr><name><name>i1</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>i2</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>i1</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>i2</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>i1</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>i2</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <block>{<block_content> <expr_stmt><expr><call><name>ECPGdisconnect</name><argument_list>(<argument><expr><name>__LINE__</name></expr></argument>, <argument><expr><literal type="string">"ALL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>33</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlwarn</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>33</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>

<if_stmt><if>if <condition>(<expr><name><name>sqlca</name><operator>.</operator><name>sqlcode</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>sqlprint</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content>}</block>
<cpp:line>#<cpp:directive>line</cpp:directive> <cpp:number>33</cpp:number> <cpp:file>"insupd.pgc"</cpp:file></cpp:line>


  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
