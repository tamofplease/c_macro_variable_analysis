<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/agensgraph/src/bin/pgevent/pgevent.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * pgevent.c
 *		Defines the entry point for pgevent dll.
 *		The DLL defines event source for backend
 *
 *
 * IDENTIFICATION
 *	  src/bin/pgevent/pgevent.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres_fe.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;olectl.h&gt;</cpp:file></cpp:include>

<comment type="block">/* Global variables */</comment>
<decl_stmt><decl><type><name>HANDLE</name></type>		<name>g_module</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>	<comment type="block">/* hModule of DLL */</comment>

<comment type="block">/*
 * The event source is stored as a registry key.
 * The maximum length of a registry key is 255 characters.
 * http://msdn.microsoft.com/en-us/library/ms724872(v=vs.85).aspx
 */</comment>
<decl_stmt><decl><type><name>char</name></type>		<name><name>event_source</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><name>DEFAULT_EVENT_SOURCE</name></expr></init></decl>;</decl_stmt>

<comment type="block">/* Prototypes */</comment>
<function_decl><type><name>HRESULT</name></type>		<name>DllInstall</name><parameter_list>(<parameter><decl><type><name>BOOL</name></type> <name>bInstall</name></decl></parameter>, <parameter><decl><type><name>LPCWSTR</name></type> <name>pszCmdLine</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>STDAPI</name></type>		<name>DllRegisterServer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>STDAPI</name></type>		<name>DllUnregisterServer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>BOOL</name>		<name>WINAPI</name></type> <name>DllMain</name><parameter_list>(<parameter><decl><type><name>HANDLE</name></type> <name>hModule</name></decl></parameter>, <parameter><decl><type><name>DWORD</name></type> <name>ul_reason_for_call</name></decl></parameter>, <parameter><decl><type><name>LPVOID</name></type> <name>lpReserved</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * DllInstall --- Passes the command line argument to DLL
 */</comment>

<function><type><name>HRESULT</name></type>
<name>DllInstall</name><parameter_list>(<parameter><decl><type><name>BOOL</name></type> <name>bInstall</name></decl></parameter>,
		   <parameter><decl><type><name>LPCWSTR</name></type> <name>pszCmdLine</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name>pszCmdLine</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>pszCmdLine</name> <operator>!=</operator> <literal type="char">'\0'</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>wcstombs</name><argument_list>(<argument><expr><name>event_source</name></expr></argument>, <argument><expr><name>pszCmdLine</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>event_source</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/*
	 * This is an ugly hack due to the strange behavior of "regsvr32 /i".
	 *
	 * When installing, regsvr32 calls DllRegisterServer before DllInstall.
	 * When uninstalling (i.e. "regsvr32 /u /i"), on the other hand, regsvr32
	 * calls DllInstall and then DllUnregisterServer as expected.
	 *
	 * This strange behavior forces us to specify -n (i.e. "regsvr32 /n /i").
	 * Without -n, DllRegisterServer called before DllInstall would mistakenly
	 * overwrite the default "PostgreSQL" event source registration.
	 */</comment>
	<if_stmt><if>if <condition>(<expr><name>bInstall</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>DllRegisterServer</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<return>return <expr><name>S_OK</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * DllRegisterServer --- Instructs DLL to create its registry entries
 */</comment>

<function><type><name>STDAPI</name></type>
<name>DllRegisterServer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>HKEY</name></type>		<name>key</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>DWORD</name></type>		<name>data</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type>		<name><name>buffer</name><index>[<expr><name>_MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type>		<name><name>key_name</name><index>[<expr><literal type="number">400</literal></expr>]</index></name></decl>;</decl_stmt>

	<comment type="block">/* Set the name of DLL full path name. */</comment>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>GetModuleFileName</name><argument_list>(<argument><expr><operator>(</operator><name>HMODULE</name><operator>)</operator> <name>g_module</name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>MessageBox</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"Could not retrieve DLL filename"</literal></expr></argument>, <argument><expr><literal type="string">"PostgreSQL error"</literal></expr></argument>, <argument><expr><name>MB_OK</name> <operator>|</operator> <name>MB_ICONSTOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>SELFREG_E_TYPELIB</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/*
	 * Add PostgreSQL source name as a subkey under the Application key in the
	 * EventLog registry key.
	 */</comment>
	<expr_stmt><expr><call><name>_snprintf</name><argument_list>(<argument><expr><name>key_name</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>key_name</name></expr></argument>)</argument_list></sizeof></expr></argument>,
			  <argument><expr><literal type="string">"SYSTEM\\CurrentControlSet\\Services\\EventLog\\Application\\%s"</literal></expr></argument>,
			  <argument><expr><name>event_source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><call><name>RegCreateKey</name><argument_list>(<argument><expr><name>HKEY_LOCAL_MACHINE</name></expr></argument>, <argument><expr><name>key_name</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>MessageBox</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"Could not create the registry key."</literal></expr></argument>, <argument><expr><literal type="string">"PostgreSQL error"</literal></expr></argument>, <argument><expr><name>MB_OK</name> <operator>|</operator> <name>MB_ICONSTOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>SELFREG_E_TYPELIB</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/* Add the name to the EventMessageFile subkey. */</comment>
	<if_stmt><if>if <condition>(<expr><call><name>RegSetValueEx</name><argument_list>(<argument><expr><name>key</name></expr></argument>,
					  <argument><expr><literal type="string">"EventMessageFile"</literal></expr></argument>,
					  <argument><expr><literal type="number">0</literal></expr></argument>,
					  <argument><expr><name>REG_EXPAND_SZ</name></expr></argument>,
					  <argument><expr><operator>(</operator><name>LPBYTE</name><operator>)</operator> <name>buffer</name></expr></argument>,
					  <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>MessageBox</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"Could not set the event message file."</literal></expr></argument>, <argument><expr><literal type="string">"PostgreSQL error"</literal></expr></argument>, <argument><expr><name>MB_OK</name> <operator>|</operator> <name>MB_ICONSTOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>SELFREG_E_TYPELIB</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/* Set the supported event types in the TypesSupported subkey. */</comment>
	<expr_stmt><expr><name>data</name> <operator>=</operator> <name>EVENTLOG_ERROR_TYPE</name> <operator>|</operator> <name>EVENTLOG_WARNING_TYPE</name> <operator>|</operator> <name>EVENTLOG_INFORMATION_TYPE</name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>RegSetValueEx</name><argument_list>(<argument><expr><name>key</name></expr></argument>,
					  <argument><expr><literal type="string">"TypesSupported"</literal></expr></argument>,
					  <argument><expr><literal type="number">0</literal></expr></argument>,
					  <argument><expr><name>REG_DWORD</name></expr></argument>,
					  <argument><expr><operator>(</operator><name>LPBYTE</name><operator>)</operator> <operator>&amp;</operator><name>data</name></expr></argument>,
					  <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>DWORD</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>MessageBox</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"Could not set the supported types."</literal></expr></argument>, <argument><expr><literal type="string">"PostgreSQL error"</literal></expr></argument>, <argument><expr><name>MB_OK</name> <operator>|</operator> <name>MB_ICONSTOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>SELFREG_E_TYPELIB</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>RegCloseKey</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>S_OK</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * DllUnregisterServer --- Instructs DLL to remove only those entries created through DllRegisterServer
 */</comment>

<function><type><name>STDAPI</name></type>
<name>DllUnregisterServer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>char</name></type>		<name><name>key_name</name><index>[<expr><literal type="number">400</literal></expr>]</index></name></decl>;</decl_stmt>

	<comment type="block">/*
	 * Remove PostgreSQL source name as a subkey under the Application key in
	 * the EventLog registry key.
	 */</comment>

	<expr_stmt><expr><call><name>_snprintf</name><argument_list>(<argument><expr><name>key_name</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>key_name</name></expr></argument>)</argument_list></sizeof></expr></argument>,
			  <argument><expr><literal type="string">"SYSTEM\\CurrentControlSet\\Services\\EventLog\\Application\\%s"</literal></expr></argument>,
			  <argument><expr><name>event_source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><call><name>RegDeleteKey</name><argument_list>(<argument><expr><name>HKEY_LOCAL_MACHINE</name></expr></argument>, <argument><expr><name>key_name</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>MessageBox</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"Could not delete the registry key."</literal></expr></argument>, <argument><expr><literal type="string">"PostgreSQL error"</literal></expr></argument>, <argument><expr><name>MB_OK</name> <operator>|</operator> <name>MB_ICONSTOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>SELFREG_E_TYPELIB</name></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>S_OK</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * DllMain --- is an optional entry point into a DLL.
 */</comment>

<function><type><name>BOOL</name>		<name>WINAPI</name></type>
<name>DllMain</name><parameter_list>(<parameter><decl><type><name>HANDLE</name></type> <name>hModule</name></decl></parameter>,
		<parameter><decl><type><name>DWORD</name></type> <name>ul_reason_for_call</name></decl></parameter>,
		<parameter><decl><type><name>LPVOID</name></type> <name>lpReserved</name></decl></parameter>
)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name>ul_reason_for_call</name> <operator>==</operator> <name>DLL_PROCESS_ATTACH</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name>g_module</name> <operator>=</operator> <name>hModule</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<return>return <expr><name>TRUE</name></expr>;</return>
</block_content>}</block></function>
</unit>
