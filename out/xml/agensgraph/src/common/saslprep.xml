<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/agensgraph/src/common/saslprep.c"><comment type="block">/*-------------------------------------------------------------------------
 * saslprep.c
 *		SASLprep normalization, for SCRAM authentication
 *
 * The SASLprep algorithm is used to process a user-supplied password into
 * canonical form.  For more details, see:
 *
 * [RFC3454] Preparation of Internationalized Strings ("stringprep"),
 *	  http://www.ietf.org/rfc/rfc3454.txt
 *
 * [RFC4013] SASLprep: Stringprep Profile for User Names and Passwords
 *	  http://www.ietf.org/rfc/rfc4013.txt
 *
 *
 * Portions Copyright (c) 2017-2020, PostgreSQL Global Development Group
 *
 * IDENTIFICATION
 *	  src/common/saslprep.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>FRONTEND</name></cpp:ifndef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres_fe.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/saslprep.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/unicode_norm.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mb/pg_wchar.h"</cpp:file></cpp:include>

<comment type="block">/*
 * Limit on how large password's we will try to process.  A password
 * larger than this will be treated the same as out-of-memory.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_PASSWORD_LENGTH</name></cpp:macro>		<cpp:value>1024</cpp:value></cpp:define>

<comment type="block">/*
 * In backend, we will use palloc/pfree.  In frontend, use malloc, and
 * return SASLPREP_OOM on out-of-memory.
 */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>FRONTEND</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRDUP</name><parameter_list>(<parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>pstrdup(s)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLOC</name><parameter_list>(<parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>palloc(size)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FREE</name><parameter_list>(<parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>pfree(size)</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRDUP</name><parameter_list>(<parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>strdup(s)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLOC</name><parameter_list>(<parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>malloc(size)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FREE</name><parameter_list>(<parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>free(size)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Prototypes for local functions */</comment>
<function_decl><type><specifier>static</specifier> <name>int</name></type>	<name>codepoint_range_cmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>is_code_in_table</name><parameter_list>(<parameter><decl><type><name>pg_wchar</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>pg_wchar</name> <modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mapsize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type>	<name>pg_utf8_string_len</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>pg_is_ascii_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/*
 * Stringprep Mapping Tables.
 *
 * The stringprep specification includes a number of tables of Unicode
 * codepoints, used in different parts of the algorithm.  They are below,
 * as arrays of codepoint ranges.  Each range is a pair of codepoints,
 * for the first and last codepoint included the range (inclusive!).
 */</comment>

<comment type="block">/*
 * C.1.2 Non-ASCII space characters
 *
 * These are all mapped to the ASCII space character (U+00A0).
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>pg_wchar</name></type> <name><name>non_ascii_space_ranges</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><literal type="number">0x00A0</literal></expr>, <expr><literal type="number">0x00A0</literal></expr>,
	<expr><literal type="number">0x1680</literal></expr>, <expr><literal type="number">0x1680</literal></expr>,
	<expr><literal type="number">0x2000</literal></expr>, <expr><literal type="number">0x200B</literal></expr>,
	<expr><literal type="number">0x202F</literal></expr>, <expr><literal type="number">0x202F</literal></expr>,
	<expr><literal type="number">0x205F</literal></expr>, <expr><literal type="number">0x205F</literal></expr>,
	<expr><literal type="number">0x3000</literal></expr>, <expr><literal type="number">0x3000</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * B.1 Commonly mapped to nothing
 *
 * If any of these appear in the input, they are removed.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>pg_wchar</name></type> <name><name>commonly_mapped_to_nothing_ranges</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><literal type="number">0x00AD</literal></expr>, <expr><literal type="number">0x00AD</literal></expr>,
	<expr><literal type="number">0x034F</literal></expr>, <expr><literal type="number">0x034F</literal></expr>,
	<expr><literal type="number">0x1806</literal></expr>, <expr><literal type="number">0x1806</literal></expr>,
	<expr><literal type="number">0x180B</literal></expr>, <expr><literal type="number">0x180D</literal></expr>,
	<expr><literal type="number">0x200B</literal></expr>, <expr><literal type="number">0x200D</literal></expr>,
	<expr><literal type="number">0x2060</literal></expr>, <expr><literal type="number">0x2060</literal></expr>,
	<expr><literal type="number">0xFE00</literal></expr>, <expr><literal type="number">0xFE0F</literal></expr>,
	<expr><literal type="number">0xFEFF</literal></expr>, <expr><literal type="number">0xFEFF</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * prohibited_output_ranges is a union of all the characters from
 * the following tables:
 *
 * C.1.2 Non-ASCII space characters
 * C.2.1 ASCII control characters
 * C.2.2 Non-ASCII control characters
 * C.3 Private Use characters
 * C.4 Non-character code points
 * C.5 Surrogate code points
 * C.6 Inappropriate for plain text characters
 * C.7 Inappropriate for canonical representation characters
 * C.7 Change display properties or deprecated characters
 * C.8 Tagging characters
 *
 * These are the tables that are listed as "prohibited output"
 * characters in the SASLprep profile.
 *
 * The comment after each code range indicates which source table
 * the code came from.  Note that there is some overlap in the source
 * tables, so one code might originate from multiple source tables.
 * Adjacent ranges have also been merged together, to save space.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>pg_wchar</name></type> <name><name>prohibited_output_ranges</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x001F</literal></expr>,				<comment type="block">/* C.2.1 */</comment>
	<expr><literal type="number">0x007F</literal></expr>, <expr><literal type="number">0x00A0</literal></expr>,				<comment type="block">/* C.1.2, C.2.1, C.2.2 */</comment>
	<expr><literal type="number">0x0340</literal></expr>, <expr><literal type="number">0x0341</literal></expr>,				<comment type="block">/* C.8 */</comment>
	<expr><literal type="number">0x06DD</literal></expr>, <expr><literal type="number">0x06DD</literal></expr>,				<comment type="block">/* C.2.2 */</comment>
	<expr><literal type="number">0x070F</literal></expr>, <expr><literal type="number">0x070F</literal></expr>,				<comment type="block">/* C.2.2 */</comment>
	<expr><literal type="number">0x1680</literal></expr>, <expr><literal type="number">0x1680</literal></expr>,				<comment type="block">/* C.1.2 */</comment>
	<expr><literal type="number">0x180E</literal></expr>, <expr><literal type="number">0x180E</literal></expr>,				<comment type="block">/* C.2.2 */</comment>
	<expr><literal type="number">0x2000</literal></expr>, <expr><literal type="number">0x200F</literal></expr>,				<comment type="block">/* C.1.2, C.2.2, C.8 */</comment>
	<expr><literal type="number">0x2028</literal></expr>, <expr><literal type="number">0x202F</literal></expr>,				<comment type="block">/* C.1.2, C.2.2, C.8 */</comment>
	<expr><literal type="number">0x205F</literal></expr>, <expr><literal type="number">0x2063</literal></expr>,				<comment type="block">/* C.1.2, C.2.2 */</comment>
	<expr><literal type="number">0x206A</literal></expr>, <expr><literal type="number">0x206F</literal></expr>,				<comment type="block">/* C.2.2, C.8 */</comment>
	<expr><literal type="number">0x2FF0</literal></expr>, <expr><literal type="number">0x2FFB</literal></expr>,				<comment type="block">/* C.7 */</comment>
	<expr><literal type="number">0x3000</literal></expr>, <expr><literal type="number">0x3000</literal></expr>,				<comment type="block">/* C.1.2 */</comment>
	<expr><literal type="number">0xD800</literal></expr>, <expr><literal type="number">0xF8FF</literal></expr>,				<comment type="block">/* C.3, C.5 */</comment>
	<expr><literal type="number">0xFDD0</literal></expr>, <expr><literal type="number">0xFDEF</literal></expr>,				<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0xFEFF</literal></expr>, <expr><literal type="number">0xFEFF</literal></expr>,				<comment type="block">/* C.2.2 */</comment>
	<expr><literal type="number">0xFFF9</literal></expr>, <expr><literal type="number">0xFFFF</literal></expr>,				<comment type="block">/* C.2.2, C.4, C.6 */</comment>
	<expr><literal type="number">0x1D173</literal></expr>, <expr><literal type="number">0x1D17A</literal></expr>,			<comment type="block">/* C.2.2 */</comment>
	<expr><literal type="number">0x1FFFE</literal></expr>, <expr><literal type="number">0x1FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0x2FFFE</literal></expr>, <expr><literal type="number">0x2FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0x3FFFE</literal></expr>, <expr><literal type="number">0x3FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0x4FFFE</literal></expr>, <expr><literal type="number">0x4FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0x5FFFE</literal></expr>, <expr><literal type="number">0x5FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0x6FFFE</literal></expr>, <expr><literal type="number">0x6FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0x7FFFE</literal></expr>, <expr><literal type="number">0x7FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0x8FFFE</literal></expr>, <expr><literal type="number">0x8FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0x9FFFE</literal></expr>, <expr><literal type="number">0x9FFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0xAFFFE</literal></expr>, <expr><literal type="number">0xAFFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0xBFFFE</literal></expr>, <expr><literal type="number">0xBFFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0xCFFFE</literal></expr>, <expr><literal type="number">0xCFFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0xDFFFE</literal></expr>, <expr><literal type="number">0xDFFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0xE0001</literal></expr>, <expr><literal type="number">0xE0001</literal></expr>,			<comment type="block">/* C.9 */</comment>
	<expr><literal type="number">0xE0020</literal></expr>, <expr><literal type="number">0xE007F</literal></expr>,			<comment type="block">/* C.9 */</comment>
	<expr><literal type="number">0xEFFFE</literal></expr>, <expr><literal type="number">0xEFFFF</literal></expr>,			<comment type="block">/* C.4 */</comment>
	<expr><literal type="number">0xF0000</literal></expr>, <expr><literal type="number">0xFFFFF</literal></expr>,			<comment type="block">/* C.3, C.4 */</comment>
	<expr><literal type="number">0x100000</literal></expr>, <expr><literal type="number">0x10FFFF</literal></expr>			<comment type="block">/* C.3, C.4 */</comment>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* A.1 Unassigned code points in Unicode 3.2 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>pg_wchar</name></type> <name><name>unassigned_codepoint_ranges</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><literal type="number">0x0221</literal></expr>, <expr><literal type="number">0x0221</literal></expr>,
	<expr><literal type="number">0x0234</literal></expr>, <expr><literal type="number">0x024F</literal></expr>,
	<expr><literal type="number">0x02AE</literal></expr>, <expr><literal type="number">0x02AF</literal></expr>,
	<expr><literal type="number">0x02EF</literal></expr>, <expr><literal type="number">0x02FF</literal></expr>,
	<expr><literal type="number">0x0350</literal></expr>, <expr><literal type="number">0x035F</literal></expr>,
	<expr><literal type="number">0x0370</literal></expr>, <expr><literal type="number">0x0373</literal></expr>,
	<expr><literal type="number">0x0376</literal></expr>, <expr><literal type="number">0x0379</literal></expr>,
	<expr><literal type="number">0x037B</literal></expr>, <expr><literal type="number">0x037D</literal></expr>,
	<expr><literal type="number">0x037F</literal></expr>, <expr><literal type="number">0x0383</literal></expr>,
	<expr><literal type="number">0x038B</literal></expr>, <expr><literal type="number">0x038B</literal></expr>,
	<expr><literal type="number">0x038D</literal></expr>, <expr><literal type="number">0x038D</literal></expr>,
	<expr><literal type="number">0x03A2</literal></expr>, <expr><literal type="number">0x03A2</literal></expr>,
	<expr><literal type="number">0x03CF</literal></expr>, <expr><literal type="number">0x03CF</literal></expr>,
	<expr><literal type="number">0x03F7</literal></expr>, <expr><literal type="number">0x03FF</literal></expr>,
	<expr><literal type="number">0x0487</literal></expr>, <expr><literal type="number">0x0487</literal></expr>,
	<expr><literal type="number">0x04CF</literal></expr>, <expr><literal type="number">0x04CF</literal></expr>,
	<expr><literal type="number">0x04F6</literal></expr>, <expr><literal type="number">0x04F7</literal></expr>,
	<expr><literal type="number">0x04FA</literal></expr>, <expr><literal type="number">0x04FF</literal></expr>,
	<expr><literal type="number">0x0510</literal></expr>, <expr><literal type="number">0x0530</literal></expr>,
	<expr><literal type="number">0x0557</literal></expr>, <expr><literal type="number">0x0558</literal></expr>,
	<expr><literal type="number">0x0560</literal></expr>, <expr><literal type="number">0x0560</literal></expr>,
	<expr><literal type="number">0x0588</literal></expr>, <expr><literal type="number">0x0588</literal></expr>,
	<expr><literal type="number">0x058B</literal></expr>, <expr><literal type="number">0x0590</literal></expr>,
	<expr><literal type="number">0x05A2</literal></expr>, <expr><literal type="number">0x05A2</literal></expr>,
	<expr><literal type="number">0x05BA</literal></expr>, <expr><literal type="number">0x05BA</literal></expr>,
	<expr><literal type="number">0x05C5</literal></expr>, <expr><literal type="number">0x05CF</literal></expr>,
	<expr><literal type="number">0x05EB</literal></expr>, <expr><literal type="number">0x05EF</literal></expr>,
	<expr><literal type="number">0x05F5</literal></expr>, <expr><literal type="number">0x060B</literal></expr>,
	<expr><literal type="number">0x060D</literal></expr>, <expr><literal type="number">0x061A</literal></expr>,
	<expr><literal type="number">0x061C</literal></expr>, <expr><literal type="number">0x061E</literal></expr>,
	<expr><literal type="number">0x0620</literal></expr>, <expr><literal type="number">0x0620</literal></expr>,
	<expr><literal type="number">0x063B</literal></expr>, <expr><literal type="number">0x063F</literal></expr>,
	<expr><literal type="number">0x0656</literal></expr>, <expr><literal type="number">0x065F</literal></expr>,
	<expr><literal type="number">0x06EE</literal></expr>, <expr><literal type="number">0x06EF</literal></expr>,
	<expr><literal type="number">0x06FF</literal></expr>, <expr><literal type="number">0x06FF</literal></expr>,
	<expr><literal type="number">0x070E</literal></expr>, <expr><literal type="number">0x070E</literal></expr>,
	<expr><literal type="number">0x072D</literal></expr>, <expr><literal type="number">0x072F</literal></expr>,
	<expr><literal type="number">0x074B</literal></expr>, <expr><literal type="number">0x077F</literal></expr>,
	<expr><literal type="number">0x07B2</literal></expr>, <expr><literal type="number">0x0900</literal></expr>,
	<expr><literal type="number">0x0904</literal></expr>, <expr><literal type="number">0x0904</literal></expr>,
	<expr><literal type="number">0x093A</literal></expr>, <expr><literal type="number">0x093B</literal></expr>,
	<expr><literal type="number">0x094E</literal></expr>, <expr><literal type="number">0x094F</literal></expr>,
	<expr><literal type="number">0x0955</literal></expr>, <expr><literal type="number">0x0957</literal></expr>,
	<expr><literal type="number">0x0971</literal></expr>, <expr><literal type="number">0x0980</literal></expr>,
	<expr><literal type="number">0x0984</literal></expr>, <expr><literal type="number">0x0984</literal></expr>,
	<expr><literal type="number">0x098D</literal></expr>, <expr><literal type="number">0x098E</literal></expr>,
	<expr><literal type="number">0x0991</literal></expr>, <expr><literal type="number">0x0992</literal></expr>,
	<expr><literal type="number">0x09A9</literal></expr>, <expr><literal type="number">0x09A9</literal></expr>,
	<expr><literal type="number">0x09B1</literal></expr>, <expr><literal type="number">0x09B1</literal></expr>,
	<expr><literal type="number">0x09B3</literal></expr>, <expr><literal type="number">0x09B5</literal></expr>,
	<expr><literal type="number">0x09BA</literal></expr>, <expr><literal type="number">0x09BB</literal></expr>,
	<expr><literal type="number">0x09BD</literal></expr>, <expr><literal type="number">0x09BD</literal></expr>,
	<expr><literal type="number">0x09C5</literal></expr>, <expr><literal type="number">0x09C6</literal></expr>,
	<expr><literal type="number">0x09C9</literal></expr>, <expr><literal type="number">0x09CA</literal></expr>,
	<expr><literal type="number">0x09CE</literal></expr>, <expr><literal type="number">0x09D6</literal></expr>,
	<expr><literal type="number">0x09D8</literal></expr>, <expr><literal type="number">0x09DB</literal></expr>,
	<expr><literal type="number">0x09DE</literal></expr>, <expr><literal type="number">0x09DE</literal></expr>,
	<expr><literal type="number">0x09E4</literal></expr>, <expr><literal type="number">0x09E5</literal></expr>,
	<expr><literal type="number">0x09FB</literal></expr>, <expr><literal type="number">0x0A01</literal></expr>,
	<expr><literal type="number">0x0A03</literal></expr>, <expr><literal type="number">0x0A04</literal></expr>,
	<expr><literal type="number">0x0A0B</literal></expr>, <expr><literal type="number">0x0A0E</literal></expr>,
	<expr><literal type="number">0x0A11</literal></expr>, <expr><literal type="number">0x0A12</literal></expr>,
	<expr><literal type="number">0x0A29</literal></expr>, <expr><literal type="number">0x0A29</literal></expr>,
	<expr><literal type="number">0x0A31</literal></expr>, <expr><literal type="number">0x0A31</literal></expr>,
	<expr><literal type="number">0x0A34</literal></expr>, <expr><literal type="number">0x0A34</literal></expr>,
	<expr><literal type="number">0x0A37</literal></expr>, <expr><literal type="number">0x0A37</literal></expr>,
	<expr><literal type="number">0x0A3A</literal></expr>, <expr><literal type="number">0x0A3B</literal></expr>,
	<expr><literal type="number">0x0A3D</literal></expr>, <expr><literal type="number">0x0A3D</literal></expr>,
	<expr><literal type="number">0x0A43</literal></expr>, <expr><literal type="number">0x0A46</literal></expr>,
	<expr><literal type="number">0x0A49</literal></expr>, <expr><literal type="number">0x0A4A</literal></expr>,
	<expr><literal type="number">0x0A4E</literal></expr>, <expr><literal type="number">0x0A58</literal></expr>,
	<expr><literal type="number">0x0A5D</literal></expr>, <expr><literal type="number">0x0A5D</literal></expr>,
	<expr><literal type="number">0x0A5F</literal></expr>, <expr><literal type="number">0x0A65</literal></expr>,
	<expr><literal type="number">0x0A75</literal></expr>, <expr><literal type="number">0x0A80</literal></expr>,
	<expr><literal type="number">0x0A84</literal></expr>, <expr><literal type="number">0x0A84</literal></expr>,
	<expr><literal type="number">0x0A8C</literal></expr>, <expr><literal type="number">0x0A8C</literal></expr>,
	<expr><literal type="number">0x0A8E</literal></expr>, <expr><literal type="number">0x0A8E</literal></expr>,
	<expr><literal type="number">0x0A92</literal></expr>, <expr><literal type="number">0x0A92</literal></expr>,
	<expr><literal type="number">0x0AA9</literal></expr>, <expr><literal type="number">0x0AA9</literal></expr>,
	<expr><literal type="number">0x0AB1</literal></expr>, <expr><literal type="number">0x0AB1</literal></expr>,
	<expr><literal type="number">0x0AB4</literal></expr>, <expr><literal type="number">0x0AB4</literal></expr>,
	<expr><literal type="number">0x0ABA</literal></expr>, <expr><literal type="number">0x0ABB</literal></expr>,
	<expr><literal type="number">0x0AC6</literal></expr>, <expr><literal type="number">0x0AC6</literal></expr>,
	<expr><literal type="number">0x0ACA</literal></expr>, <expr><literal type="number">0x0ACA</literal></expr>,
	<expr><literal type="number">0x0ACE</literal></expr>, <expr><literal type="number">0x0ACF</literal></expr>,
	<expr><literal type="number">0x0AD1</literal></expr>, <expr><literal type="number">0x0ADF</literal></expr>,
	<expr><literal type="number">0x0AE1</literal></expr>, <expr><literal type="number">0x0AE5</literal></expr>,
	<expr><literal type="number">0x0AF0</literal></expr>, <expr><literal type="number">0x0B00</literal></expr>,
	<expr><literal type="number">0x0B04</literal></expr>, <expr><literal type="number">0x0B04</literal></expr>,
	<expr><literal type="number">0x0B0D</literal></expr>, <expr><literal type="number">0x0B0E</literal></expr>,
	<expr><literal type="number">0x0B11</literal></expr>, <expr><literal type="number">0x0B12</literal></expr>,
	<expr><literal type="number">0x0B29</literal></expr>, <expr><literal type="number">0x0B29</literal></expr>,
	<expr><literal type="number">0x0B31</literal></expr>, <expr><literal type="number">0x0B31</literal></expr>,
	<expr><literal type="number">0x0B34</literal></expr>, <expr><literal type="number">0x0B35</literal></expr>,
	<expr><literal type="number">0x0B3A</literal></expr>, <expr><literal type="number">0x0B3B</literal></expr>,
	<expr><literal type="number">0x0B44</literal></expr>, <expr><literal type="number">0x0B46</literal></expr>,
	<expr><literal type="number">0x0B49</literal></expr>, <expr><literal type="number">0x0B4A</literal></expr>,
	<expr><literal type="number">0x0B4E</literal></expr>, <expr><literal type="number">0x0B55</literal></expr>,
	<expr><literal type="number">0x0B58</literal></expr>, <expr><literal type="number">0x0B5B</literal></expr>,
	<expr><literal type="number">0x0B5E</literal></expr>, <expr><literal type="number">0x0B5E</literal></expr>,
	<expr><literal type="number">0x0B62</literal></expr>, <expr><literal type="number">0x0B65</literal></expr>,
	<expr><literal type="number">0x0B71</literal></expr>, <expr><literal type="number">0x0B81</literal></expr>,
	<expr><literal type="number">0x0B84</literal></expr>, <expr><literal type="number">0x0B84</literal></expr>,
	<expr><literal type="number">0x0B8B</literal></expr>, <expr><literal type="number">0x0B8D</literal></expr>,
	<expr><literal type="number">0x0B91</literal></expr>, <expr><literal type="number">0x0B91</literal></expr>,
	<expr><literal type="number">0x0B96</literal></expr>, <expr><literal type="number">0x0B98</literal></expr>,
	<expr><literal type="number">0x0B9B</literal></expr>, <expr><literal type="number">0x0B9B</literal></expr>,
	<expr><literal type="number">0x0B9D</literal></expr>, <expr><literal type="number">0x0B9D</literal></expr>,
	<expr><literal type="number">0x0BA0</literal></expr>, <expr><literal type="number">0x0BA2</literal></expr>,
	<expr><literal type="number">0x0BA5</literal></expr>, <expr><literal type="number">0x0BA7</literal></expr>,
	<expr><literal type="number">0x0BAB</literal></expr>, <expr><literal type="number">0x0BAD</literal></expr>,
	<expr><literal type="number">0x0BB6</literal></expr>, <expr><literal type="number">0x0BB6</literal></expr>,
	<expr><literal type="number">0x0BBA</literal></expr>, <expr><literal type="number">0x0BBD</literal></expr>,
	<expr><literal type="number">0x0BC3</literal></expr>, <expr><literal type="number">0x0BC5</literal></expr>,
	<expr><literal type="number">0x0BC9</literal></expr>, <expr><literal type="number">0x0BC9</literal></expr>,
	<expr><literal type="number">0x0BCE</literal></expr>, <expr><literal type="number">0x0BD6</literal></expr>,
	<expr><literal type="number">0x0BD8</literal></expr>, <expr><literal type="number">0x0BE6</literal></expr>,
	<expr><literal type="number">0x0BF3</literal></expr>, <expr><literal type="number">0x0C00</literal></expr>,
	<expr><literal type="number">0x0C04</literal></expr>, <expr><literal type="number">0x0C04</literal></expr>,
	<expr><literal type="number">0x0C0D</literal></expr>, <expr><literal type="number">0x0C0D</literal></expr>,
	<expr><literal type="number">0x0C11</literal></expr>, <expr><literal type="number">0x0C11</literal></expr>,
	<expr><literal type="number">0x0C29</literal></expr>, <expr><literal type="number">0x0C29</literal></expr>,
	<expr><literal type="number">0x0C34</literal></expr>, <expr><literal type="number">0x0C34</literal></expr>,
	<expr><literal type="number">0x0C3A</literal></expr>, <expr><literal type="number">0x0C3D</literal></expr>,
	<expr><literal type="number">0x0C45</literal></expr>, <expr><literal type="number">0x0C45</literal></expr>,
	<expr><literal type="number">0x0C49</literal></expr>, <expr><literal type="number">0x0C49</literal></expr>,
	<expr><literal type="number">0x0C4E</literal></expr>, <expr><literal type="number">0x0C54</literal></expr>,
	<expr><literal type="number">0x0C57</literal></expr>, <expr><literal type="number">0x0C5F</literal></expr>,
	<expr><literal type="number">0x0C62</literal></expr>, <expr><literal type="number">0x0C65</literal></expr>,
	<expr><literal type="number">0x0C70</literal></expr>, <expr><literal type="number">0x0C81</literal></expr>,
	<expr><literal type="number">0x0C84</literal></expr>, <expr><literal type="number">0x0C84</literal></expr>,
	<expr><literal type="number">0x0C8D</literal></expr>, <expr><literal type="number">0x0C8D</literal></expr>,
	<expr><literal type="number">0x0C91</literal></expr>, <expr><literal type="number">0x0C91</literal></expr>,
	<expr><literal type="number">0x0CA9</literal></expr>, <expr><literal type="number">0x0CA9</literal></expr>,
	<expr><literal type="number">0x0CB4</literal></expr>, <expr><literal type="number">0x0CB4</literal></expr>,
	<expr><literal type="number">0x0CBA</literal></expr>, <expr><literal type="number">0x0CBD</literal></expr>,
	<expr><literal type="number">0x0CC5</literal></expr>, <expr><literal type="number">0x0CC5</literal></expr>,
	<expr><literal type="number">0x0CC9</literal></expr>, <expr><literal type="number">0x0CC9</literal></expr>,
	<expr><literal type="number">0x0CCE</literal></expr>, <expr><literal type="number">0x0CD4</literal></expr>,
	<expr><literal type="number">0x0CD7</literal></expr>, <expr><literal type="number">0x0CDD</literal></expr>,
	<expr><literal type="number">0x0CDF</literal></expr>, <expr><literal type="number">0x0CDF</literal></expr>,
	<expr><literal type="number">0x0CE2</literal></expr>, <expr><literal type="number">0x0CE5</literal></expr>,
	<expr><literal type="number">0x0CF0</literal></expr>, <expr><literal type="number">0x0D01</literal></expr>,
	<expr><literal type="number">0x0D04</literal></expr>, <expr><literal type="number">0x0D04</literal></expr>,
	<expr><literal type="number">0x0D0D</literal></expr>, <expr><literal type="number">0x0D0D</literal></expr>,
	<expr><literal type="number">0x0D11</literal></expr>, <expr><literal type="number">0x0D11</literal></expr>,
	<expr><literal type="number">0x0D29</literal></expr>, <expr><literal type="number">0x0D29</literal></expr>,
	<expr><literal type="number">0x0D3A</literal></expr>, <expr><literal type="number">0x0D3D</literal></expr>,
	<expr><literal type="number">0x0D44</literal></expr>, <expr><literal type="number">0x0D45</literal></expr>,
	<expr><literal type="number">0x0D49</literal></expr>, <expr><literal type="number">0x0D49</literal></expr>,
	<expr><literal type="number">0x0D4E</literal></expr>, <expr><literal type="number">0x0D56</literal></expr>,
	<expr><literal type="number">0x0D58</literal></expr>, <expr><literal type="number">0x0D5F</literal></expr>,
	<expr><literal type="number">0x0D62</literal></expr>, <expr><literal type="number">0x0D65</literal></expr>,
	<expr><literal type="number">0x0D70</literal></expr>, <expr><literal type="number">0x0D81</literal></expr>,
	<expr><literal type="number">0x0D84</literal></expr>, <expr><literal type="number">0x0D84</literal></expr>,
	<expr><literal type="number">0x0D97</literal></expr>, <expr><literal type="number">0x0D99</literal></expr>,
	<expr><literal type="number">0x0DB2</literal></expr>, <expr><literal type="number">0x0DB2</literal></expr>,
	<expr><literal type="number">0x0DBC</literal></expr>, <expr><literal type="number">0x0DBC</literal></expr>,
	<expr><literal type="number">0x0DBE</literal></expr>, <expr><literal type="number">0x0DBF</literal></expr>,
	<expr><literal type="number">0x0DC7</literal></expr>, <expr><literal type="number">0x0DC9</literal></expr>,
	<expr><literal type="number">0x0DCB</literal></expr>, <expr><literal type="number">0x0DCE</literal></expr>,
	<expr><literal type="number">0x0DD5</literal></expr>, <expr><literal type="number">0x0DD5</literal></expr>,
	<expr><literal type="number">0x0DD7</literal></expr>, <expr><literal type="number">0x0DD7</literal></expr>,
	<expr><literal type="number">0x0DE0</literal></expr>, <expr><literal type="number">0x0DF1</literal></expr>,
	<expr><literal type="number">0x0DF5</literal></expr>, <expr><literal type="number">0x0E00</literal></expr>,
	<expr><literal type="number">0x0E3B</literal></expr>, <expr><literal type="number">0x0E3E</literal></expr>,
	<expr><literal type="number">0x0E5C</literal></expr>, <expr><literal type="number">0x0E80</literal></expr>,
	<expr><literal type="number">0x0E83</literal></expr>, <expr><literal type="number">0x0E83</literal></expr>,
	<expr><literal type="number">0x0E85</literal></expr>, <expr><literal type="number">0x0E86</literal></expr>,
	<expr><literal type="number">0x0E89</literal></expr>, <expr><literal type="number">0x0E89</literal></expr>,
	<expr><literal type="number">0x0E8B</literal></expr>, <expr><literal type="number">0x0E8C</literal></expr>,
	<expr><literal type="number">0x0E8E</literal></expr>, <expr><literal type="number">0x0E93</literal></expr>,
	<expr><literal type="number">0x0E98</literal></expr>, <expr><literal type="number">0x0E98</literal></expr>,
	<expr><literal type="number">0x0EA0</literal></expr>, <expr><literal type="number">0x0EA0</literal></expr>,
	<expr><literal type="number">0x0EA4</literal></expr>, <expr><literal type="number">0x0EA4</literal></expr>,
	<expr><literal type="number">0x0EA6</literal></expr>, <expr><literal type="number">0x0EA6</literal></expr>,
	<expr><literal type="number">0x0EA8</literal></expr>, <expr><literal type="number">0x0EA9</literal></expr>,
	<expr><literal type="number">0x0EAC</literal></expr>, <expr><literal type="number">0x0EAC</literal></expr>,
	<expr><literal type="number">0x0EBA</literal></expr>, <expr><literal type="number">0x0EBA</literal></expr>,
	<expr><literal type="number">0x0EBE</literal></expr>, <expr><literal type="number">0x0EBF</literal></expr>,
	<expr><literal type="number">0x0EC5</literal></expr>, <expr><literal type="number">0x0EC5</literal></expr>,
	<expr><literal type="number">0x0EC7</literal></expr>, <expr><literal type="number">0x0EC7</literal></expr>,
	<expr><literal type="number">0x0ECE</literal></expr>, <expr><literal type="number">0x0ECF</literal></expr>,
	<expr><literal type="number">0x0EDA</literal></expr>, <expr><literal type="number">0x0EDB</literal></expr>,
	<expr><literal type="number">0x0EDE</literal></expr>, <expr><literal type="number">0x0EFF</literal></expr>,
	<expr><literal type="number">0x0F48</literal></expr>, <expr><literal type="number">0x0F48</literal></expr>,
	<expr><literal type="number">0x0F6B</literal></expr>, <expr><literal type="number">0x0F70</literal></expr>,
	<expr><literal type="number">0x0F8C</literal></expr>, <expr><literal type="number">0x0F8F</literal></expr>,
	<expr><literal type="number">0x0F98</literal></expr>, <expr><literal type="number">0x0F98</literal></expr>,
	<expr><literal type="number">0x0FBD</literal></expr>, <expr><literal type="number">0x0FBD</literal></expr>,
	<expr><literal type="number">0x0FCD</literal></expr>, <expr><literal type="number">0x0FCE</literal></expr>,
	<expr><literal type="number">0x0FD0</literal></expr>, <expr><literal type="number">0x0FFF</literal></expr>,
	<expr><literal type="number">0x1022</literal></expr>, <expr><literal type="number">0x1022</literal></expr>,
	<expr><literal type="number">0x1028</literal></expr>, <expr><literal type="number">0x1028</literal></expr>,
	<expr><literal type="number">0x102B</literal></expr>, <expr><literal type="number">0x102B</literal></expr>,
	<expr><literal type="number">0x1033</literal></expr>, <expr><literal type="number">0x1035</literal></expr>,
	<expr><literal type="number">0x103A</literal></expr>, <expr><literal type="number">0x103F</literal></expr>,
	<expr><literal type="number">0x105A</literal></expr>, <expr><literal type="number">0x109F</literal></expr>,
	<expr><literal type="number">0x10C6</literal></expr>, <expr><literal type="number">0x10CF</literal></expr>,
	<expr><literal type="number">0x10F9</literal></expr>, <expr><literal type="number">0x10FA</literal></expr>,
	<expr><literal type="number">0x10FC</literal></expr>, <expr><literal type="number">0x10FF</literal></expr>,
	<expr><literal type="number">0x115A</literal></expr>, <expr><literal type="number">0x115E</literal></expr>,
	<expr><literal type="number">0x11A3</literal></expr>, <expr><literal type="number">0x11A7</literal></expr>,
	<expr><literal type="number">0x11FA</literal></expr>, <expr><literal type="number">0x11FF</literal></expr>,
	<expr><literal type="number">0x1207</literal></expr>, <expr><literal type="number">0x1207</literal></expr>,
	<expr><literal type="number">0x1247</literal></expr>, <expr><literal type="number">0x1247</literal></expr>,
	<expr><literal type="number">0x1249</literal></expr>, <expr><literal type="number">0x1249</literal></expr>,
	<expr><literal type="number">0x124E</literal></expr>, <expr><literal type="number">0x124F</literal></expr>,
	<expr><literal type="number">0x1257</literal></expr>, <expr><literal type="number">0x1257</literal></expr>,
	<expr><literal type="number">0x1259</literal></expr>, <expr><literal type="number">0x1259</literal></expr>,
	<expr><literal type="number">0x125E</literal></expr>, <expr><literal type="number">0x125F</literal></expr>,
	<expr><literal type="number">0x1287</literal></expr>, <expr><literal type="number">0x1287</literal></expr>,
	<expr><literal type="number">0x1289</literal></expr>, <expr><literal type="number">0x1289</literal></expr>,
	<expr><literal type="number">0x128E</literal></expr>, <expr><literal type="number">0x128F</literal></expr>,
	<expr><literal type="number">0x12AF</literal></expr>, <expr><literal type="number">0x12AF</literal></expr>,
	<expr><literal type="number">0x12B1</literal></expr>, <expr><literal type="number">0x12B1</literal></expr>,
	<expr><literal type="number">0x12B6</literal></expr>, <expr><literal type="number">0x12B7</literal></expr>,
	<expr><literal type="number">0x12BF</literal></expr>, <expr><literal type="number">0x12BF</literal></expr>,
	<expr><literal type="number">0x12C1</literal></expr>, <expr><literal type="number">0x12C1</literal></expr>,
	<expr><literal type="number">0x12C6</literal></expr>, <expr><literal type="number">0x12C7</literal></expr>,
	<expr><literal type="number">0x12CF</literal></expr>, <expr><literal type="number">0x12CF</literal></expr>,
	<expr><literal type="number">0x12D7</literal></expr>, <expr><literal type="number">0x12D7</literal></expr>,
	<expr><literal type="number">0x12EF</literal></expr>, <expr><literal type="number">0x12EF</literal></expr>,
	<expr><literal type="number">0x130F</literal></expr>, <expr><literal type="number">0x130F</literal></expr>,
	<expr><literal type="number">0x1311</literal></expr>, <expr><literal type="number">0x1311</literal></expr>,
	<expr><literal type="number">0x1316</literal></expr>, <expr><literal type="number">0x1317</literal></expr>,
	<expr><literal type="number">0x131F</literal></expr>, <expr><literal type="number">0x131F</literal></expr>,
	<expr><literal type="number">0x1347</literal></expr>, <expr><literal type="number">0x1347</literal></expr>,
	<expr><literal type="number">0x135B</literal></expr>, <expr><literal type="number">0x1360</literal></expr>,
	<expr><literal type="number">0x137D</literal></expr>, <expr><literal type="number">0x139F</literal></expr>,
	<expr><literal type="number">0x13F5</literal></expr>, <expr><literal type="number">0x1400</literal></expr>,
	<expr><literal type="number">0x1677</literal></expr>, <expr><literal type="number">0x167F</literal></expr>,
	<expr><literal type="number">0x169D</literal></expr>, <expr><literal type="number">0x169F</literal></expr>,
	<expr><literal type="number">0x16F1</literal></expr>, <expr><literal type="number">0x16FF</literal></expr>,
	<expr><literal type="number">0x170D</literal></expr>, <expr><literal type="number">0x170D</literal></expr>,
	<expr><literal type="number">0x1715</literal></expr>, <expr><literal type="number">0x171F</literal></expr>,
	<expr><literal type="number">0x1737</literal></expr>, <expr><literal type="number">0x173F</literal></expr>,
	<expr><literal type="number">0x1754</literal></expr>, <expr><literal type="number">0x175F</literal></expr>,
	<expr><literal type="number">0x176D</literal></expr>, <expr><literal type="number">0x176D</literal></expr>,
	<expr><literal type="number">0x1771</literal></expr>, <expr><literal type="number">0x1771</literal></expr>,
	<expr><literal type="number">0x1774</literal></expr>, <expr><literal type="number">0x177F</literal></expr>,
	<expr><literal type="number">0x17DD</literal></expr>, <expr><literal type="number">0x17DF</literal></expr>,
	<expr><literal type="number">0x17EA</literal></expr>, <expr><literal type="number">0x17FF</literal></expr>,
	<expr><literal type="number">0x180F</literal></expr>, <expr><literal type="number">0x180F</literal></expr>,
	<expr><literal type="number">0x181A</literal></expr>, <expr><literal type="number">0x181F</literal></expr>,
	<expr><literal type="number">0x1878</literal></expr>, <expr><literal type="number">0x187F</literal></expr>,
	<expr><literal type="number">0x18AA</literal></expr>, <expr><literal type="number">0x1DFF</literal></expr>,
	<expr><literal type="number">0x1E9C</literal></expr>, <expr><literal type="number">0x1E9F</literal></expr>,
	<expr><literal type="number">0x1EFA</literal></expr>, <expr><literal type="number">0x1EFF</literal></expr>,
	<expr><literal type="number">0x1F16</literal></expr>, <expr><literal type="number">0x1F17</literal></expr>,
	<expr><literal type="number">0x1F1E</literal></expr>, <expr><literal type="number">0x1F1F</literal></expr>,
	<expr><literal type="number">0x1F46</literal></expr>, <expr><literal type="number">0x1F47</literal></expr>,
	<expr><literal type="number">0x1F4E</literal></expr>, <expr><literal type="number">0x1F4F</literal></expr>,
	<expr><literal type="number">0x1F58</literal></expr>, <expr><literal type="number">0x1F58</literal></expr>,
	<expr><literal type="number">0x1F5A</literal></expr>, <expr><literal type="number">0x1F5A</literal></expr>,
	<expr><literal type="number">0x1F5C</literal></expr>, <expr><literal type="number">0x1F5C</literal></expr>,
	<expr><literal type="number">0x1F5E</literal></expr>, <expr><literal type="number">0x1F5E</literal></expr>,
	<expr><literal type="number">0x1F7E</literal></expr>, <expr><literal type="number">0x1F7F</literal></expr>,
	<expr><literal type="number">0x1FB5</literal></expr>, <expr><literal type="number">0x1FB5</literal></expr>,
	<expr><literal type="number">0x1FC5</literal></expr>, <expr><literal type="number">0x1FC5</literal></expr>,
	<expr><literal type="number">0x1FD4</literal></expr>, <expr><literal type="number">0x1FD5</literal></expr>,
	<expr><literal type="number">0x1FDC</literal></expr>, <expr><literal type="number">0x1FDC</literal></expr>,
	<expr><literal type="number">0x1FF0</literal></expr>, <expr><literal type="number">0x1FF1</literal></expr>,
	<expr><literal type="number">0x1FF5</literal></expr>, <expr><literal type="number">0x1FF5</literal></expr>,
	<expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x1FFF</literal></expr>,
	<expr><literal type="number">0x2053</literal></expr>, <expr><literal type="number">0x2056</literal></expr>,
	<expr><literal type="number">0x2058</literal></expr>, <expr><literal type="number">0x205E</literal></expr>,
	<expr><literal type="number">0x2064</literal></expr>, <expr><literal type="number">0x2069</literal></expr>,
	<expr><literal type="number">0x2072</literal></expr>, <expr><literal type="number">0x2073</literal></expr>,
	<expr><literal type="number">0x208F</literal></expr>, <expr><literal type="number">0x209F</literal></expr>,
	<expr><literal type="number">0x20B2</literal></expr>, <expr><literal type="number">0x20CF</literal></expr>,
	<expr><literal type="number">0x20EB</literal></expr>, <expr><literal type="number">0x20FF</literal></expr>,
	<expr><literal type="number">0x213B</literal></expr>, <expr><literal type="number">0x213C</literal></expr>,
	<expr><literal type="number">0x214C</literal></expr>, <expr><literal type="number">0x2152</literal></expr>,
	<expr><literal type="number">0x2184</literal></expr>, <expr><literal type="number">0x218F</literal></expr>,
	<expr><literal type="number">0x23CF</literal></expr>, <expr><literal type="number">0x23FF</literal></expr>,
	<expr><literal type="number">0x2427</literal></expr>, <expr><literal type="number">0x243F</literal></expr>,
	<expr><literal type="number">0x244B</literal></expr>, <expr><literal type="number">0x245F</literal></expr>,
	<expr><literal type="number">0x24FF</literal></expr>, <expr><literal type="number">0x24FF</literal></expr>,
	<expr><literal type="number">0x2614</literal></expr>, <expr><literal type="number">0x2615</literal></expr>,
	<expr><literal type="number">0x2618</literal></expr>, <expr><literal type="number">0x2618</literal></expr>,
	<expr><literal type="number">0x267E</literal></expr>, <expr><literal type="number">0x267F</literal></expr>,
	<expr><literal type="number">0x268A</literal></expr>, <expr><literal type="number">0x2700</literal></expr>,
	<expr><literal type="number">0x2705</literal></expr>, <expr><literal type="number">0x2705</literal></expr>,
	<expr><literal type="number">0x270A</literal></expr>, <expr><literal type="number">0x270B</literal></expr>,
	<expr><literal type="number">0x2728</literal></expr>, <expr><literal type="number">0x2728</literal></expr>,
	<expr><literal type="number">0x274C</literal></expr>, <expr><literal type="number">0x274C</literal></expr>,
	<expr><literal type="number">0x274E</literal></expr>, <expr><literal type="number">0x274E</literal></expr>,
	<expr><literal type="number">0x2753</literal></expr>, <expr><literal type="number">0x2755</literal></expr>,
	<expr><literal type="number">0x2757</literal></expr>, <expr><literal type="number">0x2757</literal></expr>,
	<expr><literal type="number">0x275F</literal></expr>, <expr><literal type="number">0x2760</literal></expr>,
	<expr><literal type="number">0x2795</literal></expr>, <expr><literal type="number">0x2797</literal></expr>,
	<expr><literal type="number">0x27B0</literal></expr>, <expr><literal type="number">0x27B0</literal></expr>,
	<expr><literal type="number">0x27BF</literal></expr>, <expr><literal type="number">0x27CF</literal></expr>,
	<expr><literal type="number">0x27EC</literal></expr>, <expr><literal type="number">0x27EF</literal></expr>,
	<expr><literal type="number">0x2B00</literal></expr>, <expr><literal type="number">0x2E7F</literal></expr>,
	<expr><literal type="number">0x2E9A</literal></expr>, <expr><literal type="number">0x2E9A</literal></expr>,
	<expr><literal type="number">0x2EF4</literal></expr>, <expr><literal type="number">0x2EFF</literal></expr>,
	<expr><literal type="number">0x2FD6</literal></expr>, <expr><literal type="number">0x2FEF</literal></expr>,
	<expr><literal type="number">0x2FFC</literal></expr>, <expr><literal type="number">0x2FFF</literal></expr>,
	<expr><literal type="number">0x3040</literal></expr>, <expr><literal type="number">0x3040</literal></expr>,
	<expr><literal type="number">0x3097</literal></expr>, <expr><literal type="number">0x3098</literal></expr>,
	<expr><literal type="number">0x3100</literal></expr>, <expr><literal type="number">0x3104</literal></expr>,
	<expr><literal type="number">0x312D</literal></expr>, <expr><literal type="number">0x3130</literal></expr>,
	<expr><literal type="number">0x318F</literal></expr>, <expr><literal type="number">0x318F</literal></expr>,
	<expr><literal type="number">0x31B8</literal></expr>, <expr><literal type="number">0x31EF</literal></expr>,
	<expr><literal type="number">0x321D</literal></expr>, <expr><literal type="number">0x321F</literal></expr>,
	<expr><literal type="number">0x3244</literal></expr>, <expr><literal type="number">0x3250</literal></expr>,
	<expr><literal type="number">0x327C</literal></expr>, <expr><literal type="number">0x327E</literal></expr>,
	<expr><literal type="number">0x32CC</literal></expr>, <expr><literal type="number">0x32CF</literal></expr>,
	<expr><literal type="number">0x32FF</literal></expr>, <expr><literal type="number">0x32FF</literal></expr>,
	<expr><literal type="number">0x3377</literal></expr>, <expr><literal type="number">0x337A</literal></expr>,
	<expr><literal type="number">0x33DE</literal></expr>, <expr><literal type="number">0x33DF</literal></expr>,
	<expr><literal type="number">0x33FF</literal></expr>, <expr><literal type="number">0x33FF</literal></expr>,
	<expr><literal type="number">0x4DB6</literal></expr>, <expr><literal type="number">0x4DFF</literal></expr>,
	<expr><literal type="number">0x9FA6</literal></expr>, <expr><literal type="number">0x9FFF</literal></expr>,
	<expr><literal type="number">0xA48D</literal></expr>, <expr><literal type="number">0xA48F</literal></expr>,
	<expr><literal type="number">0xA4C7</literal></expr>, <expr><literal type="number">0xABFF</literal></expr>,
	<expr><literal type="number">0xD7A4</literal></expr>, <expr><literal type="number">0xD7FF</literal></expr>,
	<expr><literal type="number">0xFA2E</literal></expr>, <expr><literal type="number">0xFA2F</literal></expr>,
	<expr><literal type="number">0xFA6B</literal></expr>, <expr><literal type="number">0xFAFF</literal></expr>,
	<expr><literal type="number">0xFB07</literal></expr>, <expr><literal type="number">0xFB12</literal></expr>,
	<expr><literal type="number">0xFB18</literal></expr>, <expr><literal type="number">0xFB1C</literal></expr>,
	<expr><literal type="number">0xFB37</literal></expr>, <expr><literal type="number">0xFB37</literal></expr>,
	<expr><literal type="number">0xFB3D</literal></expr>, <expr><literal type="number">0xFB3D</literal></expr>,
	<expr><literal type="number">0xFB3F</literal></expr>, <expr><literal type="number">0xFB3F</literal></expr>,
	<expr><literal type="number">0xFB42</literal></expr>, <expr><literal type="number">0xFB42</literal></expr>,
	<expr><literal type="number">0xFB45</literal></expr>, <expr><literal type="number">0xFB45</literal></expr>,
	<expr><literal type="number">0xFBB2</literal></expr>, <expr><literal type="number">0xFBD2</literal></expr>,
	<expr><literal type="number">0xFD40</literal></expr>, <expr><literal type="number">0xFD4F</literal></expr>,
	<expr><literal type="number">0xFD90</literal></expr>, <expr><literal type="number">0xFD91</literal></expr>,
	<expr><literal type="number">0xFDC8</literal></expr>, <expr><literal type="number">0xFDCF</literal></expr>,
	<expr><literal type="number">0xFDFD</literal></expr>, <expr><literal type="number">0xFDFF</literal></expr>,
	<expr><literal type="number">0xFE10</literal></expr>, <expr><literal type="number">0xFE1F</literal></expr>,
	<expr><literal type="number">0xFE24</literal></expr>, <expr><literal type="number">0xFE2F</literal></expr>,
	<expr><literal type="number">0xFE47</literal></expr>, <expr><literal type="number">0xFE48</literal></expr>,
	<expr><literal type="number">0xFE53</literal></expr>, <expr><literal type="number">0xFE53</literal></expr>,
	<expr><literal type="number">0xFE67</literal></expr>, <expr><literal type="number">0xFE67</literal></expr>,
	<expr><literal type="number">0xFE6C</literal></expr>, <expr><literal type="number">0xFE6F</literal></expr>,
	<expr><literal type="number">0xFE75</literal></expr>, <expr><literal type="number">0xFE75</literal></expr>,
	<expr><literal type="number">0xFEFD</literal></expr>, <expr><literal type="number">0xFEFE</literal></expr>,
	<expr><literal type="number">0xFF00</literal></expr>, <expr><literal type="number">0xFF00</literal></expr>,
	<expr><literal type="number">0xFFBF</literal></expr>, <expr><literal type="number">0xFFC1</literal></expr>,
	<expr><literal type="number">0xFFC8</literal></expr>, <expr><literal type="number">0xFFC9</literal></expr>,
	<expr><literal type="number">0xFFD0</literal></expr>, <expr><literal type="number">0xFFD1</literal></expr>,
	<expr><literal type="number">0xFFD8</literal></expr>, <expr><literal type="number">0xFFD9</literal></expr>,
	<expr><literal type="number">0xFFDD</literal></expr>, <expr><literal type="number">0xFFDF</literal></expr>,
	<expr><literal type="number">0xFFE7</literal></expr>, <expr><literal type="number">0xFFE7</literal></expr>,
	<expr><literal type="number">0xFFEF</literal></expr>, <expr><literal type="number">0xFFF8</literal></expr>,
	<expr><literal type="number">0x10000</literal></expr>, <expr><literal type="number">0x102FF</literal></expr>,
	<expr><literal type="number">0x1031F</literal></expr>, <expr><literal type="number">0x1031F</literal></expr>,
	<expr><literal type="number">0x10324</literal></expr>, <expr><literal type="number">0x1032F</literal></expr>,
	<expr><literal type="number">0x1034B</literal></expr>, <expr><literal type="number">0x103FF</literal></expr>,
	<expr><literal type="number">0x10426</literal></expr>, <expr><literal type="number">0x10427</literal></expr>,
	<expr><literal type="number">0x1044E</literal></expr>, <expr><literal type="number">0x1CFFF</literal></expr>,
	<expr><literal type="number">0x1D0F6</literal></expr>, <expr><literal type="number">0x1D0FF</literal></expr>,
	<expr><literal type="number">0x1D127</literal></expr>, <expr><literal type="number">0x1D129</literal></expr>,
	<expr><literal type="number">0x1D1DE</literal></expr>, <expr><literal type="number">0x1D3FF</literal></expr>,
	<expr><literal type="number">0x1D455</literal></expr>, <expr><literal type="number">0x1D455</literal></expr>,
	<expr><literal type="number">0x1D49D</literal></expr>, <expr><literal type="number">0x1D49D</literal></expr>,
	<expr><literal type="number">0x1D4A0</literal></expr>, <expr><literal type="number">0x1D4A1</literal></expr>,
	<expr><literal type="number">0x1D4A3</literal></expr>, <expr><literal type="number">0x1D4A4</literal></expr>,
	<expr><literal type="number">0x1D4A7</literal></expr>, <expr><literal type="number">0x1D4A8</literal></expr>,
	<expr><literal type="number">0x1D4AD</literal></expr>, <expr><literal type="number">0x1D4AD</literal></expr>,
	<expr><literal type="number">0x1D4BA</literal></expr>, <expr><literal type="number">0x1D4BA</literal></expr>,
	<expr><literal type="number">0x1D4BC</literal></expr>, <expr><literal type="number">0x1D4BC</literal></expr>,
	<expr><literal type="number">0x1D4C1</literal></expr>, <expr><literal type="number">0x1D4C1</literal></expr>,
	<expr><literal type="number">0x1D4C4</literal></expr>, <expr><literal type="number">0x1D4C4</literal></expr>,
	<expr><literal type="number">0x1D506</literal></expr>, <expr><literal type="number">0x1D506</literal></expr>,
	<expr><literal type="number">0x1D50B</literal></expr>, <expr><literal type="number">0x1D50C</literal></expr>,
	<expr><literal type="number">0x1D515</literal></expr>, <expr><literal type="number">0x1D515</literal></expr>,
	<expr><literal type="number">0x1D51D</literal></expr>, <expr><literal type="number">0x1D51D</literal></expr>,
	<expr><literal type="number">0x1D53A</literal></expr>, <expr><literal type="number">0x1D53A</literal></expr>,
	<expr><literal type="number">0x1D53F</literal></expr>, <expr><literal type="number">0x1D53F</literal></expr>,
	<expr><literal type="number">0x1D545</literal></expr>, <expr><literal type="number">0x1D545</literal></expr>,
	<expr><literal type="number">0x1D547</literal></expr>, <expr><literal type="number">0x1D549</literal></expr>,
	<expr><literal type="number">0x1D551</literal></expr>, <expr><literal type="number">0x1D551</literal></expr>,
	<expr><literal type="number">0x1D6A4</literal></expr>, <expr><literal type="number">0x1D6A7</literal></expr>,
	<expr><literal type="number">0x1D7CA</literal></expr>, <expr><literal type="number">0x1D7CD</literal></expr>,
	<expr><literal type="number">0x1D800</literal></expr>, <expr><literal type="number">0x1FFFD</literal></expr>,
	<expr><literal type="number">0x2A6D7</literal></expr>, <expr><literal type="number">0x2F7FF</literal></expr>,
	<expr><literal type="number">0x2FA1E</literal></expr>, <expr><literal type="number">0x2FFFD</literal></expr>,
	<expr><literal type="number">0x30000</literal></expr>, <expr><literal type="number">0x3FFFD</literal></expr>,
	<expr><literal type="number">0x40000</literal></expr>, <expr><literal type="number">0x4FFFD</literal></expr>,
	<expr><literal type="number">0x50000</literal></expr>, <expr><literal type="number">0x5FFFD</literal></expr>,
	<expr><literal type="number">0x60000</literal></expr>, <expr><literal type="number">0x6FFFD</literal></expr>,
	<expr><literal type="number">0x70000</literal></expr>, <expr><literal type="number">0x7FFFD</literal></expr>,
	<expr><literal type="number">0x80000</literal></expr>, <expr><literal type="number">0x8FFFD</literal></expr>,
	<expr><literal type="number">0x90000</literal></expr>, <expr><literal type="number">0x9FFFD</literal></expr>,
	<expr><literal type="number">0xA0000</literal></expr>, <expr><literal type="number">0xAFFFD</literal></expr>,
	<expr><literal type="number">0xB0000</literal></expr>, <expr><literal type="number">0xBFFFD</literal></expr>,
	<expr><literal type="number">0xC0000</literal></expr>, <expr><literal type="number">0xCFFFD</literal></expr>,
	<expr><literal type="number">0xD0000</literal></expr>, <expr><literal type="number">0xDFFFD</literal></expr>,
	<expr><literal type="number">0xE0000</literal></expr>, <expr><literal type="number">0xE0000</literal></expr>,
	<expr><literal type="number">0xE0002</literal></expr>, <expr><literal type="number">0xE001F</literal></expr>,
	<expr><literal type="number">0xE0080</literal></expr>, <expr><literal type="number">0xEFFFD</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* D.1 Characters with bidirectional property "R" or "AL" */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>pg_wchar</name></type> <name><name>RandALCat_codepoint_ranges</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><literal type="number">0x05BE</literal></expr>, <expr><literal type="number">0x05BE</literal></expr>,
	<expr><literal type="number">0x05C0</literal></expr>, <expr><literal type="number">0x05C0</literal></expr>,
	<expr><literal type="number">0x05C3</literal></expr>, <expr><literal type="number">0x05C3</literal></expr>,
	<expr><literal type="number">0x05D0</literal></expr>, <expr><literal type="number">0x05EA</literal></expr>,
	<expr><literal type="number">0x05F0</literal></expr>, <expr><literal type="number">0x05F4</literal></expr>,
	<expr><literal type="number">0x061B</literal></expr>, <expr><literal type="number">0x061B</literal></expr>,
	<expr><literal type="number">0x061F</literal></expr>, <expr><literal type="number">0x061F</literal></expr>,
	<expr><literal type="number">0x0621</literal></expr>, <expr><literal type="number">0x063A</literal></expr>,
	<expr><literal type="number">0x0640</literal></expr>, <expr><literal type="number">0x064A</literal></expr>,
	<expr><literal type="number">0x066D</literal></expr>, <expr><literal type="number">0x066F</literal></expr>,
	<expr><literal type="number">0x0671</literal></expr>, <expr><literal type="number">0x06D5</literal></expr>,
	<expr><literal type="number">0x06DD</literal></expr>, <expr><literal type="number">0x06DD</literal></expr>,
	<expr><literal type="number">0x06E5</literal></expr>, <expr><literal type="number">0x06E6</literal></expr>,
	<expr><literal type="number">0x06FA</literal></expr>, <expr><literal type="number">0x06FE</literal></expr>,
	<expr><literal type="number">0x0700</literal></expr>, <expr><literal type="number">0x070D</literal></expr>,
	<expr><literal type="number">0x0710</literal></expr>, <expr><literal type="number">0x0710</literal></expr>,
	<expr><literal type="number">0x0712</literal></expr>, <expr><literal type="number">0x072C</literal></expr>,
	<expr><literal type="number">0x0780</literal></expr>, <expr><literal type="number">0x07A5</literal></expr>,
	<expr><literal type="number">0x07B1</literal></expr>, <expr><literal type="number">0x07B1</literal></expr>,
	<expr><literal type="number">0x200F</literal></expr>, <expr><literal type="number">0x200F</literal></expr>,
	<expr><literal type="number">0xFB1D</literal></expr>, <expr><literal type="number">0xFB1D</literal></expr>,
	<expr><literal type="number">0xFB1F</literal></expr>, <expr><literal type="number">0xFB28</literal></expr>,
	<expr><literal type="number">0xFB2A</literal></expr>, <expr><literal type="number">0xFB36</literal></expr>,
	<expr><literal type="number">0xFB38</literal></expr>, <expr><literal type="number">0xFB3C</literal></expr>,
	<expr><literal type="number">0xFB3E</literal></expr>, <expr><literal type="number">0xFB3E</literal></expr>,
	<expr><literal type="number">0xFB40</literal></expr>, <expr><literal type="number">0xFB41</literal></expr>,
	<expr><literal type="number">0xFB43</literal></expr>, <expr><literal type="number">0xFB44</literal></expr>,
	<expr><literal type="number">0xFB46</literal></expr>, <expr><literal type="number">0xFBB1</literal></expr>,
	<expr><literal type="number">0xFBD3</literal></expr>, <expr><literal type="number">0xFD3D</literal></expr>,
	<expr><literal type="number">0xFD50</literal></expr>, <expr><literal type="number">0xFD8F</literal></expr>,
	<expr><literal type="number">0xFD92</literal></expr>, <expr><literal type="number">0xFDC7</literal></expr>,
	<expr><literal type="number">0xFDF0</literal></expr>, <expr><literal type="number">0xFDFC</literal></expr>,
	<expr><literal type="number">0xFE70</literal></expr>, <expr><literal type="number">0xFE74</literal></expr>,
	<expr><literal type="number">0xFE76</literal></expr>, <expr><literal type="number">0xFEFC</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* D.2 Characters with bidirectional property "L" */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>pg_wchar</name></type> <name><name>LCat_codepoint_ranges</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><literal type="number">0x0041</literal></expr>, <expr><literal type="number">0x005A</literal></expr>,
	<expr><literal type="number">0x0061</literal></expr>, <expr><literal type="number">0x007A</literal></expr>,
	<expr><literal type="number">0x00AA</literal></expr>, <expr><literal type="number">0x00AA</literal></expr>,
	<expr><literal type="number">0x00B5</literal></expr>, <expr><literal type="number">0x00B5</literal></expr>,
	<expr><literal type="number">0x00BA</literal></expr>, <expr><literal type="number">0x00BA</literal></expr>,
	<expr><literal type="number">0x00C0</literal></expr>, <expr><literal type="number">0x00D6</literal></expr>,
	<expr><literal type="number">0x00D8</literal></expr>, <expr><literal type="number">0x00F6</literal></expr>,
	<expr><literal type="number">0x00F8</literal></expr>, <expr><literal type="number">0x0220</literal></expr>,
	<expr><literal type="number">0x0222</literal></expr>, <expr><literal type="number">0x0233</literal></expr>,
	<expr><literal type="number">0x0250</literal></expr>, <expr><literal type="number">0x02AD</literal></expr>,
	<expr><literal type="number">0x02B0</literal></expr>, <expr><literal type="number">0x02B8</literal></expr>,
	<expr><literal type="number">0x02BB</literal></expr>, <expr><literal type="number">0x02C1</literal></expr>,
	<expr><literal type="number">0x02D0</literal></expr>, <expr><literal type="number">0x02D1</literal></expr>,
	<expr><literal type="number">0x02E0</literal></expr>, <expr><literal type="number">0x02E4</literal></expr>,
	<expr><literal type="number">0x02EE</literal></expr>, <expr><literal type="number">0x02EE</literal></expr>,
	<expr><literal type="number">0x037A</literal></expr>, <expr><literal type="number">0x037A</literal></expr>,
	<expr><literal type="number">0x0386</literal></expr>, <expr><literal type="number">0x0386</literal></expr>,
	<expr><literal type="number">0x0388</literal></expr>, <expr><literal type="number">0x038A</literal></expr>,
	<expr><literal type="number">0x038C</literal></expr>, <expr><literal type="number">0x038C</literal></expr>,
	<expr><literal type="number">0x038E</literal></expr>, <expr><literal type="number">0x03A1</literal></expr>,
	<expr><literal type="number">0x03A3</literal></expr>, <expr><literal type="number">0x03CE</literal></expr>,
	<expr><literal type="number">0x03D0</literal></expr>, <expr><literal type="number">0x03F5</literal></expr>,
	<expr><literal type="number">0x0400</literal></expr>, <expr><literal type="number">0x0482</literal></expr>,
	<expr><literal type="number">0x048A</literal></expr>, <expr><literal type="number">0x04CE</literal></expr>,
	<expr><literal type="number">0x04D0</literal></expr>, <expr><literal type="number">0x04F5</literal></expr>,
	<expr><literal type="number">0x04F8</literal></expr>, <expr><literal type="number">0x04F9</literal></expr>,
	<expr><literal type="number">0x0500</literal></expr>, <expr><literal type="number">0x050F</literal></expr>,
	<expr><literal type="number">0x0531</literal></expr>, <expr><literal type="number">0x0556</literal></expr>,
	<expr><literal type="number">0x0559</literal></expr>, <expr><literal type="number">0x055F</literal></expr>,
	<expr><literal type="number">0x0561</literal></expr>, <expr><literal type="number">0x0587</literal></expr>,
	<expr><literal type="number">0x0589</literal></expr>, <expr><literal type="number">0x0589</literal></expr>,
	<expr><literal type="number">0x0903</literal></expr>, <expr><literal type="number">0x0903</literal></expr>,
	<expr><literal type="number">0x0905</literal></expr>, <expr><literal type="number">0x0939</literal></expr>,
	<expr><literal type="number">0x093D</literal></expr>, <expr><literal type="number">0x0940</literal></expr>,
	<expr><literal type="number">0x0949</literal></expr>, <expr><literal type="number">0x094C</literal></expr>,
	<expr><literal type="number">0x0950</literal></expr>, <expr><literal type="number">0x0950</literal></expr>,
	<expr><literal type="number">0x0958</literal></expr>, <expr><literal type="number">0x0961</literal></expr>,
	<expr><literal type="number">0x0964</literal></expr>, <expr><literal type="number">0x0970</literal></expr>,
	<expr><literal type="number">0x0982</literal></expr>, <expr><literal type="number">0x0983</literal></expr>,
	<expr><literal type="number">0x0985</literal></expr>, <expr><literal type="number">0x098C</literal></expr>,
	<expr><literal type="number">0x098F</literal></expr>, <expr><literal type="number">0x0990</literal></expr>,
	<expr><literal type="number">0x0993</literal></expr>, <expr><literal type="number">0x09A8</literal></expr>,
	<expr><literal type="number">0x09AA</literal></expr>, <expr><literal type="number">0x09B0</literal></expr>,
	<expr><literal type="number">0x09B2</literal></expr>, <expr><literal type="number">0x09B2</literal></expr>,
	<expr><literal type="number">0x09B6</literal></expr>, <expr><literal type="number">0x09B9</literal></expr>,
	<expr><literal type="number">0x09BE</literal></expr>, <expr><literal type="number">0x09C0</literal></expr>,
	<expr><literal type="number">0x09C7</literal></expr>, <expr><literal type="number">0x09C8</literal></expr>,
	<expr><literal type="number">0x09CB</literal></expr>, <expr><literal type="number">0x09CC</literal></expr>,
	<expr><literal type="number">0x09D7</literal></expr>, <expr><literal type="number">0x09D7</literal></expr>,
	<expr><literal type="number">0x09DC</literal></expr>, <expr><literal type="number">0x09DD</literal></expr>,
	<expr><literal type="number">0x09DF</literal></expr>, <expr><literal type="number">0x09E1</literal></expr>,
	<expr><literal type="number">0x09E6</literal></expr>, <expr><literal type="number">0x09F1</literal></expr>,
	<expr><literal type="number">0x09F4</literal></expr>, <expr><literal type="number">0x09FA</literal></expr>,
	<expr><literal type="number">0x0A05</literal></expr>, <expr><literal type="number">0x0A0A</literal></expr>,
	<expr><literal type="number">0x0A0F</literal></expr>, <expr><literal type="number">0x0A10</literal></expr>,
	<expr><literal type="number">0x0A13</literal></expr>, <expr><literal type="number">0x0A28</literal></expr>,
	<expr><literal type="number">0x0A2A</literal></expr>, <expr><literal type="number">0x0A30</literal></expr>,
	<expr><literal type="number">0x0A32</literal></expr>, <expr><literal type="number">0x0A33</literal></expr>,
	<expr><literal type="number">0x0A35</literal></expr>, <expr><literal type="number">0x0A36</literal></expr>,
	<expr><literal type="number">0x0A38</literal></expr>, <expr><literal type="number">0x0A39</literal></expr>,
	<expr><literal type="number">0x0A3E</literal></expr>, <expr><literal type="number">0x0A40</literal></expr>,
	<expr><literal type="number">0x0A59</literal></expr>, <expr><literal type="number">0x0A5C</literal></expr>,
	<expr><literal type="number">0x0A5E</literal></expr>, <expr><literal type="number">0x0A5E</literal></expr>,
	<expr><literal type="number">0x0A66</literal></expr>, <expr><literal type="number">0x0A6F</literal></expr>,
	<expr><literal type="number">0x0A72</literal></expr>, <expr><literal type="number">0x0A74</literal></expr>,
	<expr><literal type="number">0x0A83</literal></expr>, <expr><literal type="number">0x0A83</literal></expr>,
	<expr><literal type="number">0x0A85</literal></expr>, <expr><literal type="number">0x0A8B</literal></expr>,
	<expr><literal type="number">0x0A8D</literal></expr>, <expr><literal type="number">0x0A8D</literal></expr>,
	<expr><literal type="number">0x0A8F</literal></expr>, <expr><literal type="number">0x0A91</literal></expr>,
	<expr><literal type="number">0x0A93</literal></expr>, <expr><literal type="number">0x0AA8</literal></expr>,
	<expr><literal type="number">0x0AAA</literal></expr>, <expr><literal type="number">0x0AB0</literal></expr>,
	<expr><literal type="number">0x0AB2</literal></expr>, <expr><literal type="number">0x0AB3</literal></expr>,
	<expr><literal type="number">0x0AB5</literal></expr>, <expr><literal type="number">0x0AB9</literal></expr>,
	<expr><literal type="number">0x0ABD</literal></expr>, <expr><literal type="number">0x0AC0</literal></expr>,
	<expr><literal type="number">0x0AC9</literal></expr>, <expr><literal type="number">0x0AC9</literal></expr>,
	<expr><literal type="number">0x0ACB</literal></expr>, <expr><literal type="number">0x0ACC</literal></expr>,
	<expr><literal type="number">0x0AD0</literal></expr>, <expr><literal type="number">0x0AD0</literal></expr>,
	<expr><literal type="number">0x0AE0</literal></expr>, <expr><literal type="number">0x0AE0</literal></expr>,
	<expr><literal type="number">0x0AE6</literal></expr>, <expr><literal type="number">0x0AEF</literal></expr>,
	<expr><literal type="number">0x0B02</literal></expr>, <expr><literal type="number">0x0B03</literal></expr>,
	<expr><literal type="number">0x0B05</literal></expr>, <expr><literal type="number">0x0B0C</literal></expr>,
	<expr><literal type="number">0x0B0F</literal></expr>, <expr><literal type="number">0x0B10</literal></expr>,
	<expr><literal type="number">0x0B13</literal></expr>, <expr><literal type="number">0x0B28</literal></expr>,
	<expr><literal type="number">0x0B2A</literal></expr>, <expr><literal type="number">0x0B30</literal></expr>,
	<expr><literal type="number">0x0B32</literal></expr>, <expr><literal type="number">0x0B33</literal></expr>,
	<expr><literal type="number">0x0B36</literal></expr>, <expr><literal type="number">0x0B39</literal></expr>,
	<expr><literal type="number">0x0B3D</literal></expr>, <expr><literal type="number">0x0B3E</literal></expr>,
	<expr><literal type="number">0x0B40</literal></expr>, <expr><literal type="number">0x0B40</literal></expr>,
	<expr><literal type="number">0x0B47</literal></expr>, <expr><literal type="number">0x0B48</literal></expr>,
	<expr><literal type="number">0x0B4B</literal></expr>, <expr><literal type="number">0x0B4C</literal></expr>,
	<expr><literal type="number">0x0B57</literal></expr>, <expr><literal type="number">0x0B57</literal></expr>,
	<expr><literal type="number">0x0B5C</literal></expr>, <expr><literal type="number">0x0B5D</literal></expr>,
	<expr><literal type="number">0x0B5F</literal></expr>, <expr><literal type="number">0x0B61</literal></expr>,
	<expr><literal type="number">0x0B66</literal></expr>, <expr><literal type="number">0x0B70</literal></expr>,
	<expr><literal type="number">0x0B83</literal></expr>, <expr><literal type="number">0x0B83</literal></expr>,
	<expr><literal type="number">0x0B85</literal></expr>, <expr><literal type="number">0x0B8A</literal></expr>,
	<expr><literal type="number">0x0B8E</literal></expr>, <expr><literal type="number">0x0B90</literal></expr>,
	<expr><literal type="number">0x0B92</literal></expr>, <expr><literal type="number">0x0B95</literal></expr>,
	<expr><literal type="number">0x0B99</literal></expr>, <expr><literal type="number">0x0B9A</literal></expr>,
	<expr><literal type="number">0x0B9C</literal></expr>, <expr><literal type="number">0x0B9C</literal></expr>,
	<expr><literal type="number">0x0B9E</literal></expr>, <expr><literal type="number">0x0B9F</literal></expr>,
	<expr><literal type="number">0x0BA3</literal></expr>, <expr><literal type="number">0x0BA4</literal></expr>,
	<expr><literal type="number">0x0BA8</literal></expr>, <expr><literal type="number">0x0BAA</literal></expr>,
	<expr><literal type="number">0x0BAE</literal></expr>, <expr><literal type="number">0x0BB5</literal></expr>,
	<expr><literal type="number">0x0BB7</literal></expr>, <expr><literal type="number">0x0BB9</literal></expr>,
	<expr><literal type="number">0x0BBE</literal></expr>, <expr><literal type="number">0x0BBF</literal></expr>,
	<expr><literal type="number">0x0BC1</literal></expr>, <expr><literal type="number">0x0BC2</literal></expr>,
	<expr><literal type="number">0x0BC6</literal></expr>, <expr><literal type="number">0x0BC8</literal></expr>,
	<expr><literal type="number">0x0BCA</literal></expr>, <expr><literal type="number">0x0BCC</literal></expr>,
	<expr><literal type="number">0x0BD7</literal></expr>, <expr><literal type="number">0x0BD7</literal></expr>,
	<expr><literal type="number">0x0BE7</literal></expr>, <expr><literal type="number">0x0BF2</literal></expr>,
	<expr><literal type="number">0x0C01</literal></expr>, <expr><literal type="number">0x0C03</literal></expr>,
	<expr><literal type="number">0x0C05</literal></expr>, <expr><literal type="number">0x0C0C</literal></expr>,
	<expr><literal type="number">0x0C0E</literal></expr>, <expr><literal type="number">0x0C10</literal></expr>,
	<expr><literal type="number">0x0C12</literal></expr>, <expr><literal type="number">0x0C28</literal></expr>,
	<expr><literal type="number">0x0C2A</literal></expr>, <expr><literal type="number">0x0C33</literal></expr>,
	<expr><literal type="number">0x0C35</literal></expr>, <expr><literal type="number">0x0C39</literal></expr>,
	<expr><literal type="number">0x0C41</literal></expr>, <expr><literal type="number">0x0C44</literal></expr>,
	<expr><literal type="number">0x0C60</literal></expr>, <expr><literal type="number">0x0C61</literal></expr>,
	<expr><literal type="number">0x0C66</literal></expr>, <expr><literal type="number">0x0C6F</literal></expr>,
	<expr><literal type="number">0x0C82</literal></expr>, <expr><literal type="number">0x0C83</literal></expr>,
	<expr><literal type="number">0x0C85</literal></expr>, <expr><literal type="number">0x0C8C</literal></expr>,
	<expr><literal type="number">0x0C8E</literal></expr>, <expr><literal type="number">0x0C90</literal></expr>,
	<expr><literal type="number">0x0C92</literal></expr>, <expr><literal type="number">0x0CA8</literal></expr>,
	<expr><literal type="number">0x0CAA</literal></expr>, <expr><literal type="number">0x0CB3</literal></expr>,
	<expr><literal type="number">0x0CB5</literal></expr>, <expr><literal type="number">0x0CB9</literal></expr>,
	<expr><literal type="number">0x0CBE</literal></expr>, <expr><literal type="number">0x0CBE</literal></expr>,
	<expr><literal type="number">0x0CC0</literal></expr>, <expr><literal type="number">0x0CC4</literal></expr>,
	<expr><literal type="number">0x0CC7</literal></expr>, <expr><literal type="number">0x0CC8</literal></expr>,
	<expr><literal type="number">0x0CCA</literal></expr>, <expr><literal type="number">0x0CCB</literal></expr>,
	<expr><literal type="number">0x0CD5</literal></expr>, <expr><literal type="number">0x0CD6</literal></expr>,
	<expr><literal type="number">0x0CDE</literal></expr>, <expr><literal type="number">0x0CDE</literal></expr>,
	<expr><literal type="number">0x0CE0</literal></expr>, <expr><literal type="number">0x0CE1</literal></expr>,
	<expr><literal type="number">0x0CE6</literal></expr>, <expr><literal type="number">0x0CEF</literal></expr>,
	<expr><literal type="number">0x0D02</literal></expr>, <expr><literal type="number">0x0D03</literal></expr>,
	<expr><literal type="number">0x0D05</literal></expr>, <expr><literal type="number">0x0D0C</literal></expr>,
	<expr><literal type="number">0x0D0E</literal></expr>, <expr><literal type="number">0x0D10</literal></expr>,
	<expr><literal type="number">0x0D12</literal></expr>, <expr><literal type="number">0x0D28</literal></expr>,
	<expr><literal type="number">0x0D2A</literal></expr>, <expr><literal type="number">0x0D39</literal></expr>,
	<expr><literal type="number">0x0D3E</literal></expr>, <expr><literal type="number">0x0D40</literal></expr>,
	<expr><literal type="number">0x0D46</literal></expr>, <expr><literal type="number">0x0D48</literal></expr>,
	<expr><literal type="number">0x0D4A</literal></expr>, <expr><literal type="number">0x0D4C</literal></expr>,
	<expr><literal type="number">0x0D57</literal></expr>, <expr><literal type="number">0x0D57</literal></expr>,
	<expr><literal type="number">0x0D60</literal></expr>, <expr><literal type="number">0x0D61</literal></expr>,
	<expr><literal type="number">0x0D66</literal></expr>, <expr><literal type="number">0x0D6F</literal></expr>,
	<expr><literal type="number">0x0D82</literal></expr>, <expr><literal type="number">0x0D83</literal></expr>,
	<expr><literal type="number">0x0D85</literal></expr>, <expr><literal type="number">0x0D96</literal></expr>,
	<expr><literal type="number">0x0D9A</literal></expr>, <expr><literal type="number">0x0DB1</literal></expr>,
	<expr><literal type="number">0x0DB3</literal></expr>, <expr><literal type="number">0x0DBB</literal></expr>,
	<expr><literal type="number">0x0DBD</literal></expr>, <expr><literal type="number">0x0DBD</literal></expr>,
	<expr><literal type="number">0x0DC0</literal></expr>, <expr><literal type="number">0x0DC6</literal></expr>,
	<expr><literal type="number">0x0DCF</literal></expr>, <expr><literal type="number">0x0DD1</literal></expr>,
	<expr><literal type="number">0x0DD8</literal></expr>, <expr><literal type="number">0x0DDF</literal></expr>,
	<expr><literal type="number">0x0DF2</literal></expr>, <expr><literal type="number">0x0DF4</literal></expr>,
	<expr><literal type="number">0x0E01</literal></expr>, <expr><literal type="number">0x0E30</literal></expr>,
	<expr><literal type="number">0x0E32</literal></expr>, <expr><literal type="number">0x0E33</literal></expr>,
	<expr><literal type="number">0x0E40</literal></expr>, <expr><literal type="number">0x0E46</literal></expr>,
	<expr><literal type="number">0x0E4F</literal></expr>, <expr><literal type="number">0x0E5B</literal></expr>,
	<expr><literal type="number">0x0E81</literal></expr>, <expr><literal type="number">0x0E82</literal></expr>,
	<expr><literal type="number">0x0E84</literal></expr>, <expr><literal type="number">0x0E84</literal></expr>,
	<expr><literal type="number">0x0E87</literal></expr>, <expr><literal type="number">0x0E88</literal></expr>,
	<expr><literal type="number">0x0E8A</literal></expr>, <expr><literal type="number">0x0E8A</literal></expr>,
	<expr><literal type="number">0x0E8D</literal></expr>, <expr><literal type="number">0x0E8D</literal></expr>,
	<expr><literal type="number">0x0E94</literal></expr>, <expr><literal type="number">0x0E97</literal></expr>,
	<expr><literal type="number">0x0E99</literal></expr>, <expr><literal type="number">0x0E9F</literal></expr>,
	<expr><literal type="number">0x0EA1</literal></expr>, <expr><literal type="number">0x0EA3</literal></expr>,
	<expr><literal type="number">0x0EA5</literal></expr>, <expr><literal type="number">0x0EA5</literal></expr>,
	<expr><literal type="number">0x0EA7</literal></expr>, <expr><literal type="number">0x0EA7</literal></expr>,
	<expr><literal type="number">0x0EAA</literal></expr>, <expr><literal type="number">0x0EAB</literal></expr>,
	<expr><literal type="number">0x0EAD</literal></expr>, <expr><literal type="number">0x0EB0</literal></expr>,
	<expr><literal type="number">0x0EB2</literal></expr>, <expr><literal type="number">0x0EB3</literal></expr>,
	<expr><literal type="number">0x0EBD</literal></expr>, <expr><literal type="number">0x0EBD</literal></expr>,
	<expr><literal type="number">0x0EC0</literal></expr>, <expr><literal type="number">0x0EC4</literal></expr>,
	<expr><literal type="number">0x0EC6</literal></expr>, <expr><literal type="number">0x0EC6</literal></expr>,
	<expr><literal type="number">0x0ED0</literal></expr>, <expr><literal type="number">0x0ED9</literal></expr>,
	<expr><literal type="number">0x0EDC</literal></expr>, <expr><literal type="number">0x0EDD</literal></expr>,
	<expr><literal type="number">0x0F00</literal></expr>, <expr><literal type="number">0x0F17</literal></expr>,
	<expr><literal type="number">0x0F1A</literal></expr>, <expr><literal type="number">0x0F34</literal></expr>,
	<expr><literal type="number">0x0F36</literal></expr>, <expr><literal type="number">0x0F36</literal></expr>,
	<expr><literal type="number">0x0F38</literal></expr>, <expr><literal type="number">0x0F38</literal></expr>,
	<expr><literal type="number">0x0F3E</literal></expr>, <expr><literal type="number">0x0F47</literal></expr>,
	<expr><literal type="number">0x0F49</literal></expr>, <expr><literal type="number">0x0F6A</literal></expr>,
	<expr><literal type="number">0x0F7F</literal></expr>, <expr><literal type="number">0x0F7F</literal></expr>,
	<expr><literal type="number">0x0F85</literal></expr>, <expr><literal type="number">0x0F85</literal></expr>,
	<expr><literal type="number">0x0F88</literal></expr>, <expr><literal type="number">0x0F8B</literal></expr>,
	<expr><literal type="number">0x0FBE</literal></expr>, <expr><literal type="number">0x0FC5</literal></expr>,
	<expr><literal type="number">0x0FC7</literal></expr>, <expr><literal type="number">0x0FCC</literal></expr>,
	<expr><literal type="number">0x0FCF</literal></expr>, <expr><literal type="number">0x0FCF</literal></expr>,
	<expr><literal type="number">0x1000</literal></expr>, <expr><literal type="number">0x1021</literal></expr>,
	<expr><literal type="number">0x1023</literal></expr>, <expr><literal type="number">0x1027</literal></expr>,
	<expr><literal type="number">0x1029</literal></expr>, <expr><literal type="number">0x102A</literal></expr>,
	<expr><literal type="number">0x102C</literal></expr>, <expr><literal type="number">0x102C</literal></expr>,
	<expr><literal type="number">0x1031</literal></expr>, <expr><literal type="number">0x1031</literal></expr>,
	<expr><literal type="number">0x1038</literal></expr>, <expr><literal type="number">0x1038</literal></expr>,
	<expr><literal type="number">0x1040</literal></expr>, <expr><literal type="number">0x1057</literal></expr>,
	<expr><literal type="number">0x10A0</literal></expr>, <expr><literal type="number">0x10C5</literal></expr>,
	<expr><literal type="number">0x10D0</literal></expr>, <expr><literal type="number">0x10F8</literal></expr>,
	<expr><literal type="number">0x10FB</literal></expr>, <expr><literal type="number">0x10FB</literal></expr>,
	<expr><literal type="number">0x1100</literal></expr>, <expr><literal type="number">0x1159</literal></expr>,
	<expr><literal type="number">0x115F</literal></expr>, <expr><literal type="number">0x11A2</literal></expr>,
	<expr><literal type="number">0x11A8</literal></expr>, <expr><literal type="number">0x11F9</literal></expr>,
	<expr><literal type="number">0x1200</literal></expr>, <expr><literal type="number">0x1206</literal></expr>,
	<expr><literal type="number">0x1208</literal></expr>, <expr><literal type="number">0x1246</literal></expr>,
	<expr><literal type="number">0x1248</literal></expr>, <expr><literal type="number">0x1248</literal></expr>,
	<expr><literal type="number">0x124A</literal></expr>, <expr><literal type="number">0x124D</literal></expr>,
	<expr><literal type="number">0x1250</literal></expr>, <expr><literal type="number">0x1256</literal></expr>,
	<expr><literal type="number">0x1258</literal></expr>, <expr><literal type="number">0x1258</literal></expr>,
	<expr><literal type="number">0x125A</literal></expr>, <expr><literal type="number">0x125D</literal></expr>,
	<expr><literal type="number">0x1260</literal></expr>, <expr><literal type="number">0x1286</literal></expr>,
	<expr><literal type="number">0x1288</literal></expr>, <expr><literal type="number">0x1288</literal></expr>,
	<expr><literal type="number">0x128A</literal></expr>, <expr><literal type="number">0x128D</literal></expr>,
	<expr><literal type="number">0x1290</literal></expr>, <expr><literal type="number">0x12AE</literal></expr>,
	<expr><literal type="number">0x12B0</literal></expr>, <expr><literal type="number">0x12B0</literal></expr>,
	<expr><literal type="number">0x12B2</literal></expr>, <expr><literal type="number">0x12B5</literal></expr>,
	<expr><literal type="number">0x12B8</literal></expr>, <expr><literal type="number">0x12BE</literal></expr>,
	<expr><literal type="number">0x12C0</literal></expr>, <expr><literal type="number">0x12C0</literal></expr>,
	<expr><literal type="number">0x12C2</literal></expr>, <expr><literal type="number">0x12C5</literal></expr>,
	<expr><literal type="number">0x12C8</literal></expr>, <expr><literal type="number">0x12CE</literal></expr>,
	<expr><literal type="number">0x12D0</literal></expr>, <expr><literal type="number">0x12D6</literal></expr>,
	<expr><literal type="number">0x12D8</literal></expr>, <expr><literal type="number">0x12EE</literal></expr>,
	<expr><literal type="number">0x12F0</literal></expr>, <expr><literal type="number">0x130E</literal></expr>,
	<expr><literal type="number">0x1310</literal></expr>, <expr><literal type="number">0x1310</literal></expr>,
	<expr><literal type="number">0x1312</literal></expr>, <expr><literal type="number">0x1315</literal></expr>,
	<expr><literal type="number">0x1318</literal></expr>, <expr><literal type="number">0x131E</literal></expr>,
	<expr><literal type="number">0x1320</literal></expr>, <expr><literal type="number">0x1346</literal></expr>,
	<expr><literal type="number">0x1348</literal></expr>, <expr><literal type="number">0x135A</literal></expr>,
	<expr><literal type="number">0x1361</literal></expr>, <expr><literal type="number">0x137C</literal></expr>,
	<expr><literal type="number">0x13A0</literal></expr>, <expr><literal type="number">0x13F4</literal></expr>,
	<expr><literal type="number">0x1401</literal></expr>, <expr><literal type="number">0x1676</literal></expr>,
	<expr><literal type="number">0x1681</literal></expr>, <expr><literal type="number">0x169A</literal></expr>,
	<expr><literal type="number">0x16A0</literal></expr>, <expr><literal type="number">0x16F0</literal></expr>,
	<expr><literal type="number">0x1700</literal></expr>, <expr><literal type="number">0x170C</literal></expr>,
	<expr><literal type="number">0x170E</literal></expr>, <expr><literal type="number">0x1711</literal></expr>,
	<expr><literal type="number">0x1720</literal></expr>, <expr><literal type="number">0x1731</literal></expr>,
	<expr><literal type="number">0x1735</literal></expr>, <expr><literal type="number">0x1736</literal></expr>,
	<expr><literal type="number">0x1740</literal></expr>, <expr><literal type="number">0x1751</literal></expr>,
	<expr><literal type="number">0x1760</literal></expr>, <expr><literal type="number">0x176C</literal></expr>,
	<expr><literal type="number">0x176E</literal></expr>, <expr><literal type="number">0x1770</literal></expr>,
	<expr><literal type="number">0x1780</literal></expr>, <expr><literal type="number">0x17B6</literal></expr>,
	<expr><literal type="number">0x17BE</literal></expr>, <expr><literal type="number">0x17C5</literal></expr>,
	<expr><literal type="number">0x17C7</literal></expr>, <expr><literal type="number">0x17C8</literal></expr>,
	<expr><literal type="number">0x17D4</literal></expr>, <expr><literal type="number">0x17DA</literal></expr>,
	<expr><literal type="number">0x17DC</literal></expr>, <expr><literal type="number">0x17DC</literal></expr>,
	<expr><literal type="number">0x17E0</literal></expr>, <expr><literal type="number">0x17E9</literal></expr>,
	<expr><literal type="number">0x1810</literal></expr>, <expr><literal type="number">0x1819</literal></expr>,
	<expr><literal type="number">0x1820</literal></expr>, <expr><literal type="number">0x1877</literal></expr>,
	<expr><literal type="number">0x1880</literal></expr>, <expr><literal type="number">0x18A8</literal></expr>,
	<expr><literal type="number">0x1E00</literal></expr>, <expr><literal type="number">0x1E9B</literal></expr>,
	<expr><literal type="number">0x1EA0</literal></expr>, <expr><literal type="number">0x1EF9</literal></expr>,
	<expr><literal type="number">0x1F00</literal></expr>, <expr><literal type="number">0x1F15</literal></expr>,
	<expr><literal type="number">0x1F18</literal></expr>, <expr><literal type="number">0x1F1D</literal></expr>,
	<expr><literal type="number">0x1F20</literal></expr>, <expr><literal type="number">0x1F45</literal></expr>,
	<expr><literal type="number">0x1F48</literal></expr>, <expr><literal type="number">0x1F4D</literal></expr>,
	<expr><literal type="number">0x1F50</literal></expr>, <expr><literal type="number">0x1F57</literal></expr>,
	<expr><literal type="number">0x1F59</literal></expr>, <expr><literal type="number">0x1F59</literal></expr>,
	<expr><literal type="number">0x1F5B</literal></expr>, <expr><literal type="number">0x1F5B</literal></expr>,
	<expr><literal type="number">0x1F5D</literal></expr>, <expr><literal type="number">0x1F5D</literal></expr>,
	<expr><literal type="number">0x1F5F</literal></expr>, <expr><literal type="number">0x1F7D</literal></expr>,
	<expr><literal type="number">0x1F80</literal></expr>, <expr><literal type="number">0x1FB4</literal></expr>,
	<expr><literal type="number">0x1FB6</literal></expr>, <expr><literal type="number">0x1FBC</literal></expr>,
	<expr><literal type="number">0x1FBE</literal></expr>, <expr><literal type="number">0x1FBE</literal></expr>,
	<expr><literal type="number">0x1FC2</literal></expr>, <expr><literal type="number">0x1FC4</literal></expr>,
	<expr><literal type="number">0x1FC6</literal></expr>, <expr><literal type="number">0x1FCC</literal></expr>,
	<expr><literal type="number">0x1FD0</literal></expr>, <expr><literal type="number">0x1FD3</literal></expr>,
	<expr><literal type="number">0x1FD6</literal></expr>, <expr><literal type="number">0x1FDB</literal></expr>,
	<expr><literal type="number">0x1FE0</literal></expr>, <expr><literal type="number">0x1FEC</literal></expr>,
	<expr><literal type="number">0x1FF2</literal></expr>, <expr><literal type="number">0x1FF4</literal></expr>,
	<expr><literal type="number">0x1FF6</literal></expr>, <expr><literal type="number">0x1FFC</literal></expr>,
	<expr><literal type="number">0x200E</literal></expr>, <expr><literal type="number">0x200E</literal></expr>,
	<expr><literal type="number">0x2071</literal></expr>, <expr><literal type="number">0x2071</literal></expr>,
	<expr><literal type="number">0x207F</literal></expr>, <expr><literal type="number">0x207F</literal></expr>,
	<expr><literal type="number">0x2102</literal></expr>, <expr><literal type="number">0x2102</literal></expr>,
	<expr><literal type="number">0x2107</literal></expr>, <expr><literal type="number">0x2107</literal></expr>,
	<expr><literal type="number">0x210A</literal></expr>, <expr><literal type="number">0x2113</literal></expr>,
	<expr><literal type="number">0x2115</literal></expr>, <expr><literal type="number">0x2115</literal></expr>,
	<expr><literal type="number">0x2119</literal></expr>, <expr><literal type="number">0x211D</literal></expr>,
	<expr><literal type="number">0x2124</literal></expr>, <expr><literal type="number">0x2124</literal></expr>,
	<expr><literal type="number">0x2126</literal></expr>, <expr><literal type="number">0x2126</literal></expr>,
	<expr><literal type="number">0x2128</literal></expr>, <expr><literal type="number">0x2128</literal></expr>,
	<expr><literal type="number">0x212A</literal></expr>, <expr><literal type="number">0x212D</literal></expr>,
	<expr><literal type="number">0x212F</literal></expr>, <expr><literal type="number">0x2131</literal></expr>,
	<expr><literal type="number">0x2133</literal></expr>, <expr><literal type="number">0x2139</literal></expr>,
	<expr><literal type="number">0x213D</literal></expr>, <expr><literal type="number">0x213F</literal></expr>,
	<expr><literal type="number">0x2145</literal></expr>, <expr><literal type="number">0x2149</literal></expr>,
	<expr><literal type="number">0x2160</literal></expr>, <expr><literal type="number">0x2183</literal></expr>,
	<expr><literal type="number">0x2336</literal></expr>, <expr><literal type="number">0x237A</literal></expr>,
	<expr><literal type="number">0x2395</literal></expr>, <expr><literal type="number">0x2395</literal></expr>,
	<expr><literal type="number">0x249C</literal></expr>, <expr><literal type="number">0x24E9</literal></expr>,
	<expr><literal type="number">0x3005</literal></expr>, <expr><literal type="number">0x3007</literal></expr>,
	<expr><literal type="number">0x3021</literal></expr>, <expr><literal type="number">0x3029</literal></expr>,
	<expr><literal type="number">0x3031</literal></expr>, <expr><literal type="number">0x3035</literal></expr>,
	<expr><literal type="number">0x3038</literal></expr>, <expr><literal type="number">0x303C</literal></expr>,
	<expr><literal type="number">0x3041</literal></expr>, <expr><literal type="number">0x3096</literal></expr>,
	<expr><literal type="number">0x309D</literal></expr>, <expr><literal type="number">0x309F</literal></expr>,
	<expr><literal type="number">0x30A1</literal></expr>, <expr><literal type="number">0x30FA</literal></expr>,
	<expr><literal type="number">0x30FC</literal></expr>, <expr><literal type="number">0x30FF</literal></expr>,
	<expr><literal type="number">0x3105</literal></expr>, <expr><literal type="number">0x312C</literal></expr>,
	<expr><literal type="number">0x3131</literal></expr>, <expr><literal type="number">0x318E</literal></expr>,
	<expr><literal type="number">0x3190</literal></expr>, <expr><literal type="number">0x31B7</literal></expr>,
	<expr><literal type="number">0x31F0</literal></expr>, <expr><literal type="number">0x321C</literal></expr>,
	<expr><literal type="number">0x3220</literal></expr>, <expr><literal type="number">0x3243</literal></expr>,
	<expr><literal type="number">0x3260</literal></expr>, <expr><literal type="number">0x327B</literal></expr>,
	<expr><literal type="number">0x327F</literal></expr>, <expr><literal type="number">0x32B0</literal></expr>,
	<expr><literal type="number">0x32C0</literal></expr>, <expr><literal type="number">0x32CB</literal></expr>,
	<expr><literal type="number">0x32D0</literal></expr>, <expr><literal type="number">0x32FE</literal></expr>,
	<expr><literal type="number">0x3300</literal></expr>, <expr><literal type="number">0x3376</literal></expr>,
	<expr><literal type="number">0x337B</literal></expr>, <expr><literal type="number">0x33DD</literal></expr>,
	<expr><literal type="number">0x33E0</literal></expr>, <expr><literal type="number">0x33FE</literal></expr>,
	<expr><literal type="number">0x3400</literal></expr>, <expr><literal type="number">0x4DB5</literal></expr>,
	<expr><literal type="number">0x4E00</literal></expr>, <expr><literal type="number">0x9FA5</literal></expr>,
	<expr><literal type="number">0xA000</literal></expr>, <expr><literal type="number">0xA48C</literal></expr>,
	<expr><literal type="number">0xAC00</literal></expr>, <expr><literal type="number">0xD7A3</literal></expr>,
	<expr><literal type="number">0xD800</literal></expr>, <expr><literal type="number">0xFA2D</literal></expr>,
	<expr><literal type="number">0xFA30</literal></expr>, <expr><literal type="number">0xFA6A</literal></expr>,
	<expr><literal type="number">0xFB00</literal></expr>, <expr><literal type="number">0xFB06</literal></expr>,
	<expr><literal type="number">0xFB13</literal></expr>, <expr><literal type="number">0xFB17</literal></expr>,
	<expr><literal type="number">0xFF21</literal></expr>, <expr><literal type="number">0xFF3A</literal></expr>,
	<expr><literal type="number">0xFF41</literal></expr>, <expr><literal type="number">0xFF5A</literal></expr>,
	<expr><literal type="number">0xFF66</literal></expr>, <expr><literal type="number">0xFFBE</literal></expr>,
	<expr><literal type="number">0xFFC2</literal></expr>, <expr><literal type="number">0xFFC7</literal></expr>,
	<expr><literal type="number">0xFFCA</literal></expr>, <expr><literal type="number">0xFFCF</literal></expr>,
	<expr><literal type="number">0xFFD2</literal></expr>, <expr><literal type="number">0xFFD7</literal></expr>,
	<expr><literal type="number">0xFFDA</literal></expr>, <expr><literal type="number">0xFFDC</literal></expr>,
	<expr><literal type="number">0x10300</literal></expr>, <expr><literal type="number">0x1031E</literal></expr>,
	<expr><literal type="number">0x10320</literal></expr>, <expr><literal type="number">0x10323</literal></expr>,
	<expr><literal type="number">0x10330</literal></expr>, <expr><literal type="number">0x1034A</literal></expr>,
	<expr><literal type="number">0x10400</literal></expr>, <expr><literal type="number">0x10425</literal></expr>,
	<expr><literal type="number">0x10428</literal></expr>, <expr><literal type="number">0x1044D</literal></expr>,
	<expr><literal type="number">0x1D000</literal></expr>, <expr><literal type="number">0x1D0F5</literal></expr>,
	<expr><literal type="number">0x1D100</literal></expr>, <expr><literal type="number">0x1D126</literal></expr>,
	<expr><literal type="number">0x1D12A</literal></expr>, <expr><literal type="number">0x1D166</literal></expr>,
	<expr><literal type="number">0x1D16A</literal></expr>, <expr><literal type="number">0x1D172</literal></expr>,
	<expr><literal type="number">0x1D183</literal></expr>, <expr><literal type="number">0x1D184</literal></expr>,
	<expr><literal type="number">0x1D18C</literal></expr>, <expr><literal type="number">0x1D1A9</literal></expr>,
	<expr><literal type="number">0x1D1AE</literal></expr>, <expr><literal type="number">0x1D1DD</literal></expr>,
	<expr><literal type="number">0x1D400</literal></expr>, <expr><literal type="number">0x1D454</literal></expr>,
	<expr><literal type="number">0x1D456</literal></expr>, <expr><literal type="number">0x1D49C</literal></expr>,
	<expr><literal type="number">0x1D49E</literal></expr>, <expr><literal type="number">0x1D49F</literal></expr>,
	<expr><literal type="number">0x1D4A2</literal></expr>, <expr><literal type="number">0x1D4A2</literal></expr>,
	<expr><literal type="number">0x1D4A5</literal></expr>, <expr><literal type="number">0x1D4A6</literal></expr>,
	<expr><literal type="number">0x1D4A9</literal></expr>, <expr><literal type="number">0x1D4AC</literal></expr>,
	<expr><literal type="number">0x1D4AE</literal></expr>, <expr><literal type="number">0x1D4B9</literal></expr>,
	<expr><literal type="number">0x1D4BB</literal></expr>, <expr><literal type="number">0x1D4BB</literal></expr>,
	<expr><literal type="number">0x1D4BD</literal></expr>, <expr><literal type="number">0x1D4C0</literal></expr>,
	<expr><literal type="number">0x1D4C2</literal></expr>, <expr><literal type="number">0x1D4C3</literal></expr>,
	<expr><literal type="number">0x1D4C5</literal></expr>, <expr><literal type="number">0x1D505</literal></expr>,
	<expr><literal type="number">0x1D507</literal></expr>, <expr><literal type="number">0x1D50A</literal></expr>,
	<expr><literal type="number">0x1D50D</literal></expr>, <expr><literal type="number">0x1D514</literal></expr>,
	<expr><literal type="number">0x1D516</literal></expr>, <expr><literal type="number">0x1D51C</literal></expr>,
	<expr><literal type="number">0x1D51E</literal></expr>, <expr><literal type="number">0x1D539</literal></expr>,
	<expr><literal type="number">0x1D53B</literal></expr>, <expr><literal type="number">0x1D53E</literal></expr>,
	<expr><literal type="number">0x1D540</literal></expr>, <expr><literal type="number">0x1D544</literal></expr>,
	<expr><literal type="number">0x1D546</literal></expr>, <expr><literal type="number">0x1D546</literal></expr>,
	<expr><literal type="number">0x1D54A</literal></expr>, <expr><literal type="number">0x1D550</literal></expr>,
	<expr><literal type="number">0x1D552</literal></expr>, <expr><literal type="number">0x1D6A3</literal></expr>,
	<expr><literal type="number">0x1D6A8</literal></expr>, <expr><literal type="number">0x1D7C9</literal></expr>,
	<expr><literal type="number">0x20000</literal></expr>, <expr><literal type="number">0x2A6D6</literal></expr>,
	<expr><literal type="number">0x2F800</literal></expr>, <expr><literal type="number">0x2FA1D</literal></expr>,
	<expr><literal type="number">0xF0000</literal></expr>, <expr><literal type="number">0xFFFFD</literal></expr>,
	<expr><literal type="number">0x100000</literal></expr>, <expr><literal type="number">0x10FFFD</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* End of stringprep tables */</comment>


<comment type="block">/* Is the given Unicode codepoint in the given table of ranges? */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IS_CODE_IN_TABLE</name><parameter_list>(<parameter><type><name>code</name></type></parameter>, <parameter><type><name>map</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>is_code_in_table(code, map, lengthof(map))</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>codepoint_range_cmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>pg_wchar</name> <modifier>*</modifier></type><name>key</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>pg_wchar</name> <operator>*</operator><operator>)</operator> <name>a</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>pg_wchar</name> <modifier>*</modifier></type><name>range</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>pg_wchar</name> <operator>*</operator><operator>)</operator> <name>b</name></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><operator>*</operator><name>key</name> <operator>&lt;</operator> <name><name>range</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>				<comment type="block">/* less than lower bound */</comment>
	<if_stmt><if>if <condition>(<expr><operator>*</operator><name>key</name> <operator>&gt;</operator> <name><name>range</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>				<comment type="block">/* greater than upper bound */</comment>

	<return>return <expr><literal type="number">0</literal></expr>;</return>					<comment type="block">/* within range */</comment>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type>
<name>is_code_in_table</name><parameter_list>(<parameter><decl><type><name>pg_wchar</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>pg_wchar</name> <modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mapsize</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>mapsize</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>code</name> <argument_list type="generic">&lt; <argument><expr><name><name>map</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>||</operator> <name>code</name></expr></argument> &gt;</argument_list></name> <name><name>map</name><index>[<expr><name>mapsize</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>bsearch</name><argument_list>(<argument><expr><operator>&amp;</operator><name>code</name></expr></argument>, <argument><expr><name>map</name></expr></argument>, <argument><expr><name>mapsize</name> <operator>/</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>pg_wchar</name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <literal type="number">2</literal></expr></argument>,
				<argument><expr><name>codepoint_range_cmp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>true</name></expr>;</return></block_content></block></if>
	<else>else<block type="pseudo"><block_content>
		<return>return <expr><name>false</name></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Calculate the length in characters of a null-terminated UTF-8 string.
 *
 * Returns -1 if the input is not valid UTF-8.
 */</comment>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>pg_utf8_string_len</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>source</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>l</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>num_chars</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

	<while>while <condition>(<expr><operator>*</operator><name>p</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>l</name> <operator>=</operator> <call><name>pg_utf_mblen</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>pg_utf8_islegal</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

		<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>l</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>num_chars</name><operator>++</operator></expr>;</expr_stmt>
	</block_content>}</block></while>

	<return>return <expr><name>num_chars</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Returns true if the input string is pure ASCII.
 */</comment>
<function><type><specifier>static</specifier> <name>bool</name></type>
<name>pg_is_ascii_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<while>while <condition>(<expr><operator>*</operator><name>p</name></expr>)</condition>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><call><name>IS_HIGHBIT_SET</name><argument_list>(<argument><expr><operator>*</operator><name>p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>
		<expr_stmt><expr><name>p</name><operator>++</operator></expr>;</expr_stmt>
	</block_content>}</block></while>
	<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>


<comment type="block">/*
 * pg_saslprep - Normalize a password with SASLprep.
 *
 * SASLprep requires the input to be in UTF-8 encoding, but PostgreSQL
 * supports many encodings, so we don't blindly assume that.  pg_saslprep
 * will check if the input looks like valid UTF-8, and returns
 * SASLPREP_INVALID_UTF8 if not.
 *
 * If the string contains prohibited characters (or more precisely, if the
 * output string would contain prohibited characters after normalization),
 * returns SASLPREP_PROHIBITED.
 *
 * On success, returns SASLPREP_SUCCESS, and the normalized string in
 * *output.
 *
 * In frontend, the normalized string is malloc'd, and the caller is
 * responsible for freeing it.  If an allocation fails, returns
 * SASLPREP_OOM.  In backend, the normalized string is palloc'd instead,
 * and a failed allocation leads to ereport(ERROR).
 */</comment>
<function><type><name>pg_saslprep_rc</name></type>
<name>pg_saslprep</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>pg_wchar</name>   <modifier>*</modifier></type><name>input_chars</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>pg_wchar</name>   <modifier>*</modifier></type><name>output_chars</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>input_size</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name>	   <modifier>*</modifier></type><name>result</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>result_size</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>count</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>contains_RandALCat</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>pg_wchar</name>   <modifier>*</modifier></type><name>wp</name></decl>;</decl_stmt>

	<comment type="block">/* Ensure we return *output as NULL on failure */</comment>
	<expr_stmt><expr><operator>*</operator><name>output</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

	<comment type="block">/* Check that the password isn't stupendously long */</comment>
	<if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <name>MAX_PASSWORD_LENGTH</name></expr>)</condition>
	<block>{<block_content>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>FRONTEND</name></cpp:ifndef>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_PROGRAM_LIMIT_EXCEEDED</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"password too long"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
		<return>return <expr><name>SASLPREP_OOM</name></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/*
	 * Quick check if the input is pure ASCII.  An ASCII string requires no
	 * further processing.
	 */</comment>
	<if_stmt><if>if <condition>(<expr><call><name>pg_is_ascii_string</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><operator>*</operator><name>output</name> <operator>=</operator> <call><name>STRDUP</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><operator>*</operator><name>output</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
			<goto>goto <name>oom</name>;</goto></block_content></block></if></if_stmt>
		<return>return <expr><name>SASLPREP_SUCCESS</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/*
	 * Convert the input from UTF-8 to an array of Unicode codepoints.
	 *
	 * This also checks that the input is a legal UTF-8 string.
	 */</comment>
	<expr_stmt><expr><name>input_size</name> <operator>=</operator> <call><name>pg_utf8_string_len</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>input_size</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>SASLPREP_INVALID_UTF8</name></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>input_chars</name> <operator>=</operator> <call><name>ALLOC</name><argument_list>(<argument><expr><operator>(</operator><name>input_size</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>pg_wchar</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><name>input_chars</name></expr>)</condition><block type="pseudo"><block_content>
		<goto>goto <name>oom</name>;</goto></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>p</name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>input</name></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>input_size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><name><name>input_chars</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>utf8_to_unicode</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>p</name> <operator>+=</operator> <call><name>pg_utf_mblen</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><name><name>input_chars</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>pg_wchar</name><operator>)</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

	<comment type="block">/*
	 * The steps below correspond to the steps listed in [RFC3454], Section
	 * "2. Preparation Overview"
	 */</comment>

	<comment type="block">/*
	 * 1) Map -- For each character in the input, check if it has a mapping
	 * and, if so, replace it with its mapping.
	 */</comment>
	<expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>input_size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<decl_stmt><decl><type><name>pg_wchar</name></type>	<name>code</name> <init>= <expr><name><name>input_chars</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><call><name>IS_CODE_IN_TABLE</name><argument_list>(<argument><expr><name>code</name></expr></argument>, <argument><expr><name>non_ascii_space_ranges</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name><name>input_chars</name><index>[<expr><name>count</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <literal type="number">0x0020</literal></expr>;</expr_stmt></block_content></block></if>
		<if type="elseif">else if <condition>(<expr><call><name>IS_CODE_IN_TABLE</name><argument_list>(<argument><expr><name>code</name></expr></argument>, <argument><expr><name>commonly_mapped_to_nothing_ranges</name></expr></argument>)</argument_list></call></expr>)</condition>
		<block>{<block_content>
			<comment type="block">/* map to nothing */</comment>
		</block_content>}</block></if>
		<else>else<block type="pseudo"><block_content>
			<expr_stmt><expr><name><name>input_chars</name><index>[<expr><name>count</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>code</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><name><name>input_chars</name><index>[<expr><name>count</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>pg_wchar</name><operator>)</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>input_size</name> <operator>=</operator> <name>count</name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>input_size</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<goto>goto <name>prohibited</name>;</goto></block_content></block></if></if_stmt>		<comment type="block">/* don't allow empty password */</comment>

	<comment type="block">/*
	 * 2) Normalize -- Normalize the result of step 1 using Unicode
	 * normalization.
	 */</comment>
	<expr_stmt><expr><name>output_chars</name> <operator>=</operator> <call><name>unicode_normalize</name><argument_list>(<argument><expr><name>UNICODE_NFKC</name></expr></argument>, <argument><expr><name>input_chars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><name>output_chars</name></expr>)</condition><block type="pseudo"><block_content>
		<goto>goto <name>oom</name>;</goto></block_content></block></if></if_stmt>

	<comment type="block">/*
	 * 3) Prohibit -- Check for any characters that are not allowed in the
	 * output.  If any are found, return an error.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>input_size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<decl_stmt><decl><type><name>pg_wchar</name></type>	<name>code</name> <init>= <expr><name><name>input_chars</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><call><name>IS_CODE_IN_TABLE</name><argument_list>(<argument><expr><name>code</name></expr></argument>, <argument><expr><name>prohibited_output_ranges</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<goto>goto <name>prohibited</name>;</goto></block_content></block></if></if_stmt>
		<if_stmt><if>if <condition>(<expr><call><name>IS_CODE_IN_TABLE</name><argument_list>(<argument><expr><name>code</name></expr></argument>, <argument><expr><name>unassigned_codepoint_ranges</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<goto>goto <name>prohibited</name>;</goto></block_content></block></if></if_stmt>
	</block_content>}</block></for>

	<comment type="block">/*
	 * 4) Check bidi -- Possibly check for right-to-left characters, and if
	 * any are found, make sure that the whole string satisfies the
	 * requirements for bidirectional strings.  If the string does not satisfy
	 * the requirements for bidirectional strings, return an error.
	 *
	 * [RFC3454], Section "6. Bidirectional Characters" explains in more
	 * detail what that means:
	 *
	 * "In any profile that specifies bidirectional character handling, all
	 * three of the following requirements MUST be met:
	 *
	 * 1) The characters in section 5.8 MUST be prohibited.
	 *
	 * 2) If a string contains any RandALCat character, the string MUST NOT
	 * contain any LCat character.
	 *
	 * 3) If a string contains any RandALCat character, a RandALCat character
	 * MUST be the first character of the string, and a RandALCat character
	 * MUST be the last character of the string."
	 */</comment>
	<expr_stmt><expr><name>contains_RandALCat</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>input_size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<decl_stmt><decl><type><name>pg_wchar</name></type>	<name>code</name> <init>= <expr><name><name>input_chars</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><call><name>IS_CODE_IN_TABLE</name><argument_list>(<argument><expr><name>code</name></expr></argument>, <argument><expr><name>RandALCat_codepoint_ranges</name></expr></argument>)</argument_list></call></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><name>contains_RandALCat</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></for>

	<if_stmt><if>if <condition>(<expr><name>contains_RandALCat</name></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>pg_wchar</name></type>	<name>first</name> <init>= <expr><name><name>input_chars</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>pg_wchar</name></type>	<name>last</name> <init>= <expr><name><name>input_chars</name><index>[<expr><name>input_size</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>input_size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{<block_content>
			<decl_stmt><decl><type><name>pg_wchar</name></type>	<name>code</name> <init>= <expr><name><name>input_chars</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

			<if_stmt><if>if <condition>(<expr><call><name>IS_CODE_IN_TABLE</name><argument_list>(<argument><expr><name>code</name></expr></argument>, <argument><expr><name>LCat_codepoint_ranges</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
				<goto>goto <name>prohibited</name>;</goto></block_content></block></if></if_stmt>
		</block_content>}</block></for>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>IS_CODE_IN_TABLE</name><argument_list>(<argument><expr><name>first</name></expr></argument>, <argument><expr><name>RandALCat_codepoint_ranges</name></expr></argument>)</argument_list></call> <operator>||</operator>
			<operator>!</operator><call><name>IS_CODE_IN_TABLE</name><argument_list>(<argument><expr><name>last</name></expr></argument>, <argument><expr><name>RandALCat_codepoint_ranges</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<goto>goto <name>prohibited</name>;</goto></block_content></block></if></if_stmt>
	</block_content>}</block></if></if_stmt>

	<comment type="block">/*
	 * Finally, convert the result back to UTF-8.
	 */</comment>
	<expr_stmt><expr><name>result_size</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>wp</name> <operator>=</operator> <name>output_chars</name></expr>;</init> <condition><expr><operator>*</operator><name>wp</name></expr>;</condition> <incr><expr><name>wp</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>buf</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

		<expr_stmt><expr><call><name>unicode_to_utf8</name><argument_list>(<argument><expr><operator>*</operator><name>wp</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>result_size</name> <operator>+=</operator> <call><name>pg_utf_mblen</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>

	<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ALLOC</name><argument_list>(<argument><expr><name>result_size</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><name>result</name></expr>)</condition><block type="pseudo"><block_content>
		<goto>goto <name>oom</name>;</goto></block_content></block></if></if_stmt>

	<comment type="block">/*
	 * There are no error exits below here, so the error exit paths don't need
	 * to worry about possibly freeing "result".
	 */</comment>
	<expr_stmt><expr><name>p</name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>result</name></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>wp</name> <operator>=</operator> <name>output_chars</name></expr>;</init> <condition><expr><operator>*</operator><name>wp</name></expr>;</condition> <incr><expr><name>wp</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><call><name>unicode_to_utf8</name><argument_list>(<argument><expr><operator>*</operator><name>wp</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>p</name> <operator>+=</operator> <call><name>pg_utf_mblen</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator> <name>p</name> <operator>==</operator> <name>result</name> <operator>+</operator> <name>result_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>p</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>FREE</name><argument_list>(<argument><expr><name>input_chars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>FREE</name><argument_list>(<argument><expr><name>output_chars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><operator>*</operator><name>output</name> <operator>=</operator> <name>result</name></expr>;</expr_stmt>
	<return>return <expr><name>SASLPREP_SUCCESS</name></expr>;</return>

<label><name>prohibited</name>:</label>
	<if_stmt><if>if <condition>(<expr><name>input_chars</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>FREE</name><argument_list>(<argument><expr><name>input_chars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>output_chars</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>FREE</name><argument_list>(<argument><expr><name>output_chars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return>return <expr><name>SASLPREP_PROHIBITED</name></expr>;</return>

<label><name>oom</name>:</label>
	<if_stmt><if>if <condition>(<expr><name>input_chars</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>FREE</name><argument_list>(<argument><expr><name>input_chars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name>output_chars</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>FREE</name><argument_list>(<argument><expr><name>output_chars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return>return <expr><name>SASLPREP_OOM</name></expr>;</return>
</block_content>}</block></function>
</unit>
