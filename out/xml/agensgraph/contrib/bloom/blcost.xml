<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/agensgraph/contrib/bloom/blcost.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * blcost.c
 *		Cost estimate function for bloom indexes.
 *
 * Copyright (c) 2016-2020, PostgreSQL Global Development Group
 *
 * IDENTIFICATION
 *	  contrib/bloom/blcost.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bloom.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fmgr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/selfuncs.h"</cpp:file></cpp:include>

<comment type="block">/*
 * Estimate cost of bloom index scan.
 */</comment>
<function><type><name>void</name></type>
<name>blcostestimate</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>IndexPath</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>loop_count</name></decl></parameter>,
			   <parameter><decl><type><name>Cost</name> <modifier>*</modifier></type><name>indexStartupCost</name></decl></parameter>, <parameter><decl><type><name>Cost</name> <modifier>*</modifier></type><name>indexTotalCost</name></decl></parameter>,
			   <parameter><decl><type><name>Selectivity</name> <modifier>*</modifier></type><name>indexSelectivity</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>indexCorrelation</name></decl></parameter>,
			   <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>indexPages</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>IndexOptInfo</name> <modifier>*</modifier></type><name>index</name> <init>= <expr><name><name>path</name><operator>-&gt;</operator><name>indexinfo</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GenericCosts</name></type> <name>costs</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>MemSet</name><argument_list>(<argument><expr><operator>&amp;</operator><name>costs</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>costs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* We have to visit all index tuples anyway */</comment>
	<expr_stmt><expr><name><name>costs</name><operator>.</operator><name>numIndexTuples</name></name> <operator>=</operator> <name><name>index</name><operator>-&gt;</operator><name>tuples</name></name></expr>;</expr_stmt>

	<comment type="block">/* Use generic estimate */</comment>
	<expr_stmt><expr><call><name>genericcostestimate</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>loop_count</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>costs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><operator>*</operator><name>indexStartupCost</name> <operator>=</operator> <name><name>costs</name><operator>.</operator><name>indexStartupCost</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>indexTotalCost</name> <operator>=</operator> <name><name>costs</name><operator>.</operator><name>indexTotalCost</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>indexSelectivity</name> <operator>=</operator> <name><name>costs</name><operator>.</operator><name>indexSelectivity</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>indexCorrelation</name> <operator>=</operator> <name><name>costs</name><operator>.</operator><name>indexCorrelation</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>indexPages</name> <operator>=</operator> <name><name>costs</name><operator>.</operator><name>numIndexPages</name></name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
