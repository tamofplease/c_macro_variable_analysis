<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/Ditto/QRCode/qrspec.c"><comment type="block">/*
 * qrencode - QR Code encoder
 *
 * QR Code specification in convenient format. 
 * Copyright (C) 2006-2013 Kentaro Fukuchi &lt;kentaro@fukuchi.org&gt;
 *
 * The following data / specifications are taken from
 * "Two dimensional symbol -- QR-code -- Basic Specification" (JIS X0510:2004)
 *  or
 * "Automatic identification and data capture techniques -- 
 *  QR Code 2005 bar code symbology specification" (ISO/IEC 18004:2006)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 */</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_CONFIG_H</name></expr></cpp:if>
<cpp:include># <cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"qrspec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"qrinput.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/******************************************************************************
 * Version and capacity
 *****************************************************************************/</comment>

<typedef>typedef <type><struct>struct <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt> <comment type="line">//&lt; Edge length of the symbol</comment>
	<decl_stmt><decl><type><name>int</name></type> <name>words</name></decl>;</decl_stmt>  <comment type="line">//&lt; Data capacity (bytes)</comment>
	<decl_stmt><decl><type><name>int</name></type> <name>remainder</name></decl>;</decl_stmt> <comment type="line">//&lt; Remainder bit (bits)</comment>
	<decl_stmt><decl><type><name>int</name></type> <name><name>ec</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>  <comment type="line">//&lt; Number of ECC code (bytes)</comment>
}</block></struct></type> <name>QRspec_Capacity</name>;</typedef>

<comment type="block" format="doxygen">/**
 * Table of the capacity of symbols
 * See Table 1 (pp.13) and Table 12-16 (pp.30-36), JIS X0510:2004.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>QRspec_Capacity</name></type> <name><name>qrspecCapacity</name><index>[<expr><name>QRSPEC_VERSION_MAX</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <init>= <expr><block>{
	<expr><block>{  <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{   <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">21</literal></expr>,   <expr><literal type="number">26</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{   <expr><literal type="number">7</literal></expr>,   <expr><literal type="number">10</literal></expr>,   <expr><literal type="number">13</literal></expr>,   <expr><literal type="number">17</literal></expr>}</block></expr>}</block></expr>, <comment type="line">// 1</comment>
	<expr><block>{ <expr><literal type="number">25</literal></expr>,   <expr><literal type="number">44</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><block>{  <expr><literal type="number">10</literal></expr>,   <expr><literal type="number">16</literal></expr>,   <expr><literal type="number">22</literal></expr>,   <expr><literal type="number">28</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">29</literal></expr>,   <expr><literal type="number">70</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><block>{  <expr><literal type="number">15</literal></expr>,   <expr><literal type="number">26</literal></expr>,   <expr><literal type="number">36</literal></expr>,   <expr><literal type="number">44</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">33</literal></expr>,  <expr><literal type="number">100</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><block>{  <expr><literal type="number">20</literal></expr>,   <expr><literal type="number">36</literal></expr>,   <expr><literal type="number">52</literal></expr>,   <expr><literal type="number">64</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">37</literal></expr>,  <expr><literal type="number">134</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><block>{  <expr><literal type="number">26</literal></expr>,   <expr><literal type="number">48</literal></expr>,   <expr><literal type="number">72</literal></expr>,   <expr><literal type="number">88</literal></expr>}</block></expr>}</block></expr>, <comment type="line">// 5</comment>
	<expr><block>{ <expr><literal type="number">41</literal></expr>,  <expr><literal type="number">172</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><block>{  <expr><literal type="number">36</literal></expr>,   <expr><literal type="number">64</literal></expr>,   <expr><literal type="number">96</literal></expr>,  <expr><literal type="number">112</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">45</literal></expr>,  <expr><literal type="number">196</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{  <expr><literal type="number">40</literal></expr>,   <expr><literal type="number">72</literal></expr>,  <expr><literal type="number">108</literal></expr>,  <expr><literal type="number">130</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">49</literal></expr>,  <expr><literal type="number">242</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{  <expr><literal type="number">48</literal></expr>,   <expr><literal type="number">88</literal></expr>,  <expr><literal type="number">132</literal></expr>,  <expr><literal type="number">156</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">53</literal></expr>,  <expr><literal type="number">292</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{  <expr><literal type="number">60</literal></expr>,  <expr><literal type="number">110</literal></expr>,  <expr><literal type="number">160</literal></expr>,  <expr><literal type="number">192</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">57</literal></expr>,  <expr><literal type="number">346</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{  <expr><literal type="number">72</literal></expr>,  <expr><literal type="number">130</literal></expr>,  <expr><literal type="number">192</literal></expr>,  <expr><literal type="number">224</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//10</comment>
	<expr><block>{ <expr><literal type="number">61</literal></expr>,  <expr><literal type="number">404</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{  <expr><literal type="number">80</literal></expr>,  <expr><literal type="number">150</literal></expr>,  <expr><literal type="number">224</literal></expr>,  <expr><literal type="number">264</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">65</literal></expr>,  <expr><literal type="number">466</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{  <expr><literal type="number">96</literal></expr>,  <expr><literal type="number">176</literal></expr>,  <expr><literal type="number">260</literal></expr>,  <expr><literal type="number">308</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">69</literal></expr>,  <expr><literal type="number">532</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{ <expr><literal type="number">104</literal></expr>,  <expr><literal type="number">198</literal></expr>,  <expr><literal type="number">288</literal></expr>,  <expr><literal type="number">352</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">73</literal></expr>,  <expr><literal type="number">581</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">120</literal></expr>,  <expr><literal type="number">216</literal></expr>,  <expr><literal type="number">320</literal></expr>,  <expr><literal type="number">384</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">77</literal></expr>,  <expr><literal type="number">655</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">132</literal></expr>,  <expr><literal type="number">240</literal></expr>,  <expr><literal type="number">360</literal></expr>,  <expr><literal type="number">432</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//15</comment>
	<expr><block>{ <expr><literal type="number">81</literal></expr>,  <expr><literal type="number">733</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">144</literal></expr>,  <expr><literal type="number">280</literal></expr>,  <expr><literal type="number">408</literal></expr>,  <expr><literal type="number">480</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">85</literal></expr>,  <expr><literal type="number">815</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">168</literal></expr>,  <expr><literal type="number">308</literal></expr>,  <expr><literal type="number">448</literal></expr>,  <expr><literal type="number">532</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">89</literal></expr>,  <expr><literal type="number">901</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">180</literal></expr>,  <expr><literal type="number">338</literal></expr>,  <expr><literal type="number">504</literal></expr>,  <expr><literal type="number">588</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">93</literal></expr>,  <expr><literal type="number">991</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">196</literal></expr>,  <expr><literal type="number">364</literal></expr>,  <expr><literal type="number">546</literal></expr>,  <expr><literal type="number">650</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">97</literal></expr>, <expr><literal type="number">1085</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">224</literal></expr>,  <expr><literal type="number">416</literal></expr>,  <expr><literal type="number">600</literal></expr>,  <expr><literal type="number">700</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//20</comment>
	<expr><block>{<expr><literal type="number">101</literal></expr>, <expr><literal type="number">1156</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{ <expr><literal type="number">224</literal></expr>,  <expr><literal type="number">442</literal></expr>,  <expr><literal type="number">644</literal></expr>,  <expr><literal type="number">750</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">105</literal></expr>, <expr><literal type="number">1258</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{ <expr><literal type="number">252</literal></expr>,  <expr><literal type="number">476</literal></expr>,  <expr><literal type="number">690</literal></expr>,  <expr><literal type="number">816</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">109</literal></expr>, <expr><literal type="number">1364</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{ <expr><literal type="number">270</literal></expr>,  <expr><literal type="number">504</literal></expr>,  <expr><literal type="number">750</literal></expr>,  <expr><literal type="number">900</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">113</literal></expr>, <expr><literal type="number">1474</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{ <expr><literal type="number">300</literal></expr>,  <expr><literal type="number">560</literal></expr>,  <expr><literal type="number">810</literal></expr>,  <expr><literal type="number">960</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">117</literal></expr>, <expr><literal type="number">1588</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{ <expr><literal type="number">312</literal></expr>,  <expr><literal type="number">588</literal></expr>,  <expr><literal type="number">870</literal></expr>, <expr><literal type="number">1050</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//25</comment>
	<expr><block>{<expr><literal type="number">121</literal></expr>, <expr><literal type="number">1706</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{ <expr><literal type="number">336</literal></expr>,  <expr><literal type="number">644</literal></expr>,  <expr><literal type="number">952</literal></expr>, <expr><literal type="number">1110</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">125</literal></expr>, <expr><literal type="number">1828</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><block>{ <expr><literal type="number">360</literal></expr>,  <expr><literal type="number">700</literal></expr>, <expr><literal type="number">1020</literal></expr>, <expr><literal type="number">1200</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">129</literal></expr>, <expr><literal type="number">1921</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">390</literal></expr>,  <expr><literal type="number">728</literal></expr>, <expr><literal type="number">1050</literal></expr>, <expr><literal type="number">1260</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">133</literal></expr>, <expr><literal type="number">2051</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">420</literal></expr>,  <expr><literal type="number">784</literal></expr>, <expr><literal type="number">1140</literal></expr>, <expr><literal type="number">1350</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">137</literal></expr>, <expr><literal type="number">2185</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">450</literal></expr>,  <expr><literal type="number">812</literal></expr>, <expr><literal type="number">1200</literal></expr>, <expr><literal type="number">1440</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//30</comment>
	<expr><block>{<expr><literal type="number">141</literal></expr>, <expr><literal type="number">2323</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">480</literal></expr>,  <expr><literal type="number">868</literal></expr>, <expr><literal type="number">1290</literal></expr>, <expr><literal type="number">1530</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">145</literal></expr>, <expr><literal type="number">2465</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">510</literal></expr>,  <expr><literal type="number">924</literal></expr>, <expr><literal type="number">1350</literal></expr>, <expr><literal type="number">1620</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">149</literal></expr>, <expr><literal type="number">2611</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">540</literal></expr>,  <expr><literal type="number">980</literal></expr>, <expr><literal type="number">1440</literal></expr>, <expr><literal type="number">1710</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">153</literal></expr>, <expr><literal type="number">2761</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><block>{ <expr><literal type="number">570</literal></expr>, <expr><literal type="number">1036</literal></expr>, <expr><literal type="number">1530</literal></expr>, <expr><literal type="number">1800</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">157</literal></expr>, <expr><literal type="number">2876</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{ <expr><literal type="number">570</literal></expr>, <expr><literal type="number">1064</literal></expr>, <expr><literal type="number">1590</literal></expr>, <expr><literal type="number">1890</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//35</comment>
	<expr><block>{<expr><literal type="number">161</literal></expr>, <expr><literal type="number">3034</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{ <expr><literal type="number">600</literal></expr>, <expr><literal type="number">1120</literal></expr>, <expr><literal type="number">1680</literal></expr>, <expr><literal type="number">1980</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">165</literal></expr>, <expr><literal type="number">3196</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{ <expr><literal type="number">630</literal></expr>, <expr><literal type="number">1204</literal></expr>, <expr><literal type="number">1770</literal></expr>, <expr><literal type="number">2100</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">169</literal></expr>, <expr><literal type="number">3362</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{ <expr><literal type="number">660</literal></expr>, <expr><literal type="number">1260</literal></expr>, <expr><literal type="number">1860</literal></expr>, <expr><literal type="number">2220</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">173</literal></expr>, <expr><literal type="number">3532</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{ <expr><literal type="number">720</literal></expr>, <expr><literal type="number">1316</literal></expr>, <expr><literal type="number">1950</literal></expr>, <expr><literal type="number">2310</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">177</literal></expr>, <expr><literal type="number">3706</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{ <expr><literal type="number">750</literal></expr>, <expr><literal type="number">1372</literal></expr>, <expr><literal type="number">2040</literal></expr>, <expr><literal type="number">2430</literal></expr>}</block></expr>}</block></expr> <comment type="line">//40</comment>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>QRspec_getDataLength</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>, <parameter><decl><type><name>QRecLevel</name></type> <name>level</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><name><name>qrspecCapacity</name><index>[<expr><name>version</name></expr>]</index></name><operator>.</operator><name>words</name> <operator>-</operator> <name><name>qrspecCapacity</name><index>[<expr><name>version</name></expr>]</index></name><operator>.</operator><name><name>ec</name><index>[<expr><name>level</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>QRspec_getECCLength</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>, <parameter><decl><type><name>QRecLevel</name></type> <name>level</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><name><name>qrspecCapacity</name><index>[<expr><name>version</name></expr>]</index></name><operator>.</operator><name><name>ec</name><index>[<expr><name>level</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>QRspec_getMinimumVersion</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>QRecLevel</name></type> <name>level</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>words</name></decl>;</decl_stmt>

	<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;=</operator> <name>QRSPEC_VERSION_MAX</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>words</name>  <operator>=</operator> <name><name>qrspecCapacity</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>words</name> <operator>-</operator> <name><name>qrspecCapacity</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>ec</name><index>[<expr><name>level</name></expr>]</index></name></expr>;</expr_stmt>
		<if_stmt><if>if<condition>(<expr><name>words</name> <operator>&gt;=</operator> <name>size</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>
	</block_content>}</block></for>

	<return>return <expr><name>QRSPEC_VERSION_MAX</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>QRspec_getWidth</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><name><name>qrspecCapacity</name><index>[<expr><name>version</name></expr>]</index></name><operator>.</operator><name>width</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>QRspec_getRemainder</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><name><name>qrspecCapacity</name><index>[<expr><name>version</name></expr>]</index></name><operator>.</operator><name>remainder</name></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/******************************************************************************
 * Length indicator
 *****************************************************************************/</comment>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>lengthTableBits</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{
	<expr><block>{<expr><literal type="number">10</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">13</literal></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">12</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>QRspec_lengthIndicator</name><parameter_list>(<parameter><decl><type><name>QRencodeMode</name></type> <name>mode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>l</name></decl>;</decl_stmt>

	<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>QRinput_isSplittableMode</name><argument_list>(<argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name>version</name> <operator>&lt;=</operator> <literal type="number">9</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>l</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>version</name> <operator>&lt;=</operator> <literal type="number">26</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>l</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name>l</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<return>return <expr><name><name>lengthTableBits</name><index>[<expr><name>mode</name></expr>]</index><index>[<expr><name>l</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>QRspec_maximumWords</name><parameter_list>(<parameter><decl><type><name>QRencodeMode</name></type> <name>mode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>l</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>bits</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>words</name></decl>;</decl_stmt>

	<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>QRinput_isSplittableMode</name><argument_list>(<argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name>version</name> <operator>&lt;=</operator> <literal type="number">9</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>l</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>version</name> <operator>&lt;=</operator> <literal type="number">26</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>l</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name>l</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<expr_stmt><expr><name>bits</name> <operator>=</operator> <name><name>lengthTableBits</name><index>[<expr><name>mode</name></expr>]</index><index>[<expr><name>l</name></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>words</name> <operator>=</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>bits</name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<if_stmt><if>if<condition>(<expr><name>mode</name> <operator>==</operator> <name>QR_MODE_KANJI</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>words</name> <operator>*=</operator> <literal type="number">2</literal></expr>;</expr_stmt> <comment type="line">// the number of bytes is required</comment>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><name>words</name></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/******************************************************************************
 * Error correction code
 *****************************************************************************/</comment>

<comment type="block" format="doxygen">/**
 * Table of the error correction code (Reed-Solomon block)
 * See Table 12-16 (pp.30-36), JIS X0510:2004.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>eccTable</name><index>[<expr><name>QRSPEC_VERSION_MAX</name><operator>+</operator><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
	<expr><block>{<expr><block>{ <expr><literal type="number">0</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">0</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">0</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">0</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr>, <comment type="line">// 1</comment>
	<expr><block>{<expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>}</block></expr>, <comment type="line">// 5</comment>
	<expr><block>{<expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//10</comment>
	<expr><block>{<expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>,  <expr><literal type="number">8</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">6</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">12</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">3</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">5</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">11</literal></expr>,  <expr><literal type="number">5</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">11</literal></expr>,  <expr><literal type="number">5</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">5</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>,  <expr><literal type="number">5</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>,  <expr><literal type="number">7</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">11</literal></expr>,  <expr><literal type="number">7</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//15</comment>
	<expr><block>{<expr><block>{ <expr><literal type="number">5</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>,  <expr><literal type="number">3</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">15</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">13</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">1</literal></expr>,  <expr><literal type="number">5</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">10</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">17</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">5</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">17</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">19</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">3</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">11</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">17</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">16</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">3</literal></expr>,  <expr><literal type="number">5</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">13</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">15</literal></expr>,  <expr><literal type="number">5</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">15</literal></expr>, <expr><literal type="number">10</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//20</comment>
	<expr><block>{<expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">17</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">17</literal></expr>,  <expr><literal type="number">6</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">19</literal></expr>,  <expr><literal type="number">6</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">2</literal></expr>,  <expr><literal type="number">7</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">17</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">16</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">34</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">4</literal></expr>,  <expr><literal type="number">5</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">11</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">16</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">6</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">11</literal></expr>, <expr><literal type="number">16</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">8</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">13</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">22</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">22</literal></expr>, <expr><literal type="number">13</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//25</comment>
	<expr><block>{<expr><block>{<expr><literal type="number">10</literal></expr>,  <expr><literal type="number">2</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">19</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">28</literal></expr>,  <expr><literal type="number">6</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">33</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">8</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">22</literal></expr>,  <expr><literal type="number">3</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">26</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">12</literal></expr>, <expr><literal type="number">28</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">10</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">23</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">31</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">11</literal></expr>, <expr><literal type="number">31</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">7</literal></expr>,  <expr><literal type="number">7</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">21</literal></expr>,  <expr><literal type="number">7</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">37</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">19</literal></expr>, <expr><literal type="number">26</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">10</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">19</literal></expr>, <expr><literal type="number">10</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">15</literal></expr>, <expr><literal type="number">25</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">23</literal></expr>, <expr><literal type="number">25</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//30</comment>
	<expr><block>{<expr><block>{<expr><literal type="number">13</literal></expr>,  <expr><literal type="number">3</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">29</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">42</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">23</literal></expr>, <expr><literal type="number">28</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{<expr><literal type="number">17</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">10</literal></expr>, <expr><literal type="number">23</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">10</literal></expr>, <expr><literal type="number">35</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">19</literal></expr>, <expr><literal type="number">35</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{<expr><literal type="number">17</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">14</literal></expr>, <expr><literal type="number">21</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">29</literal></expr>, <expr><literal type="number">19</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">11</literal></expr>, <expr><literal type="number">46</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{<expr><literal type="number">13</literal></expr>,  <expr><literal type="number">6</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">14</literal></expr>, <expr><literal type="number">23</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">44</literal></expr>,  <expr><literal type="number">7</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">59</literal></expr>,  <expr><literal type="number">1</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{<expr><literal type="number">12</literal></expr>,  <expr><literal type="number">7</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">12</literal></expr>, <expr><literal type="number">26</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">39</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">22</literal></expr>, <expr><literal type="number">41</literal></expr>}</block></expr>}</block></expr>, <comment type="line">//35</comment>
	<expr><block>{<expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">34</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">46</literal></expr>, <expr><literal type="number">10</literal></expr>}</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">64</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{<expr><literal type="number">17</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">29</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">49</literal></expr>, <expr><literal type="number">10</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">24</literal></expr>, <expr><literal type="number">46</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">18</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">13</literal></expr>, <expr><literal type="number">32</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">48</literal></expr>, <expr><literal type="number">14</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">42</literal></expr>, <expr><literal type="number">32</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{<expr><literal type="number">20</literal></expr>,  <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">40</literal></expr>,  <expr><literal type="number">7</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">43</literal></expr>, <expr><literal type="number">22</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">10</literal></expr>, <expr><literal type="number">67</literal></expr>}</block></expr>}</block></expr>,
	<expr><block>{<expr><block>{<expr><literal type="number">19</literal></expr>,  <expr><literal type="number">6</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">18</literal></expr>, <expr><literal type="number">31</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">34</literal></expr>, <expr><literal type="number">34</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">20</literal></expr>, <expr><literal type="number">61</literal></expr>}</block></expr>}</block></expr>,<comment type="line">//40</comment>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>QRspec_getEccSpec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>, <parameter><decl><type><name>QRecLevel</name></type> <name>level</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name><name>spec</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>b1</name></decl>, <decl><type ref="prev"/><name>b2</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>data</name></decl>, <decl><type ref="prev"/><name>ecc</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>b1</name> <operator>=</operator> <name><name>eccTable</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><name>level</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>b2</name> <operator>=</operator> <name><name>eccTable</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><name>level</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>data</name> <operator>=</operator> <call><name>QRspec_getDataLength</name><argument_list>(<argument><expr><name>version</name></expr></argument>, <argument><expr><name>level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>ecc</name>  <operator>=</operator> <call><name>QRspec_getECCLength</name><argument_list>(<argument><expr><name>version</name></expr></argument>, <argument><expr><name>level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if<condition>(<expr><name>b2</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>b1</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>data</name> <operator>/</operator> <name>b1</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ecc</name> <operator>/</operator> <name>b1</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>spec</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>b1</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>data</name> <operator>/</operator> <operator>(</operator><name>b1</name> <operator>+</operator> <name>b2</name><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ecc</name>  <operator>/</operator> <operator>(</operator><name>b1</name> <operator>+</operator> <name>b2</name><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>b2</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>spec</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>spec</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<comment type="block" format="doxygen">/******************************************************************************
 * Alignment pattern
 *****************************************************************************/</comment>

<comment type="block" format="doxygen">/**
 * Positions of alignment patterns.
 * This array includes only the second and the third position of the alignment
 * patterns. Rest of them can be calculated from the distance between them.
 *
 * See Table 1 in Appendix E (pp.71) of JIS X0510:2004.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>alignmentPattern</name><index>[<expr><name>QRSPEC_VERSION_MAX</name><operator>+</operator><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><literal type="number">0</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>,
	<expr><block>{ <expr><literal type="number">0</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">18</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">22</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">26</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <comment type="line">// 1- 5</comment>
	<expr><block>{<expr><literal type="number">34</literal></expr>,  <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">22</literal></expr>, <expr><literal type="number">38</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">24</literal></expr>, <expr><literal type="number">42</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="number">46</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">28</literal></expr>, <expr><literal type="number">50</literal></expr>}</block></expr>, <comment type="line">// 6-10</comment>
	<expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">54</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">32</literal></expr>, <expr><literal type="number">58</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">34</literal></expr>, <expr><literal type="number">62</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="number">46</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="number">48</literal></expr>}</block></expr>, <comment type="line">//11-15</comment>
	<expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="number">50</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">54</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">56</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">58</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">34</literal></expr>, <expr><literal type="number">62</literal></expr>}</block></expr>, <comment type="line">//16-20</comment>
	<expr><block>{<expr><literal type="number">28</literal></expr>, <expr><literal type="number">50</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="number">50</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">54</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">28</literal></expr>, <expr><literal type="number">54</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">32</literal></expr>, <expr><literal type="number">58</literal></expr>}</block></expr>, <comment type="line">//21-25</comment>
	<expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">58</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">34</literal></expr>, <expr><literal type="number">62</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="number">50</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">54</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="number">52</literal></expr>}</block></expr>, <comment type="line">//26-30</comment>
	<expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">56</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">34</literal></expr>, <expr><literal type="number">60</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">58</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">34</literal></expr>, <expr><literal type="number">62</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">54</literal></expr>}</block></expr>, <comment type="line">//31-35</comment>
	<expr><block>{<expr><literal type="number">24</literal></expr>, <expr><literal type="number">50</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">28</literal></expr>, <expr><literal type="number">54</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">32</literal></expr>, <expr><literal type="number">58</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="number">54</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">30</literal></expr>, <expr><literal type="number">58</literal></expr>}</block></expr>, <comment type="line">//35-40</comment>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block" format="doxygen">/**
 * Put an alignment marker.
 * @param frame
 * @param width
 * @param ox,oy center coordinate of the pattern
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>QRspec_putAlignmentMarker</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ox</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>oy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>finder</name><index>[]</index></name> <init>= <expr><block>{
		<expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>,
		<expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xa1</literal></expr>,
		<expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xa1</literal></expr>,
		<expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0xa1</literal></expr>,
		<expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>,
	}</block></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>s</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>frame</name> <operator>+=</operator> <operator>(</operator><name>oy</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <name>width</name> <operator>+</operator> <name>ox</name> <operator>-</operator> <literal type="number">2</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>s</name> <operator>=</operator> <name>finder</name></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name><operator>&lt;</operator><literal type="number">5</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<for>for<control>(<init><expr><name>x</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name><operator>&lt;</operator><literal type="number">5</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<expr_stmt><expr><name><name>frame</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>s</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt><expr><name>frame</name> <operator>+=</operator> <name>width</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s</name> <operator>+=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>QRspec_putAlignmentPattern</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>d</name></decl>, <decl><type ref="prev"/><name>w</name></decl>, <decl><type ref="prev"/><name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>, <decl><type ref="prev"/><name>cx</name></decl>, <decl><type ref="prev"/><name>cy</name></decl>;</decl_stmt>

	<if_stmt><if>if<condition>(<expr><name>version</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>d</name> <operator>=</operator> <name><name>alignmentPattern</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name><name>alignmentPattern</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
	<if_stmt><if>if<condition>(<expr><name>d</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>w</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name>w</name> <operator>=</operator> <operator>(</operator><name>width</name> <operator>-</operator> <name><name>alignmentPattern</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator> <operator>/</operator> <name>d</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<if_stmt><if>if<condition>(<expr><name>w</name> <operator>*</operator> <name>w</name> <operator>-</operator> <literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>alignmentPattern</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>y</name> <operator>=</operator> <name><name>alignmentPattern</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>QRspec_putAlignmentMarker</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>cx</name> <operator>=</operator> <name><name>alignmentPattern</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>x</name><operator>=</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>x</name><operator>&lt;</operator><name>w</name> <operator>-</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><call><name>QRspec_putAlignmentMarker</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>width</name></expr></argument>,  <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>cx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>QRspec_putAlignmentMarker</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>cx</name></expr></argument>,  <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>cx</name> <operator>+=</operator> <name>d</name></expr>;</expr_stmt>
	</block_content>}</block></for>

	<expr_stmt><expr><name>cy</name> <operator>=</operator> <name><name>alignmentPattern</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name><operator>&lt;</operator><name>w</name><operator>-</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>cx</name> <operator>=</operator> <name><name>alignmentPattern</name><index>[<expr><name>version</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<for>for<control>(<init><expr><name>x</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name><operator>&lt;</operator><name>w</name><operator>-</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<expr_stmt><expr><call><name>QRspec_putAlignmentMarker</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>cx</name></expr></argument>, <argument><expr><name>cy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>cx</name> <operator>+=</operator> <name>d</name></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt><expr><name>cy</name> <operator>+=</operator> <name>d</name></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<comment type="block" format="doxygen">/******************************************************************************
 * Version information pattern
 *****************************************************************************/</comment>

<comment type="block" format="doxygen">/**
 * Version information pattern (BCH coded).
 * See Table 1 in Appendix D (pp.68) of JIS X0510:2004.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name><name>versionPattern</name><index>[<expr><name>QRSPEC_VERSION_MAX</name> <operator>-</operator> <literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x07c94</literal></expr>, <expr><literal type="number">0x085bc</literal></expr>, <expr><literal type="number">0x09a99</literal></expr>, <expr><literal type="number">0x0a4d3</literal></expr>, <expr><literal type="number">0x0bbf6</literal></expr>, <expr><literal type="number">0x0c762</literal></expr>, <expr><literal type="number">0x0d847</literal></expr>, <expr><literal type="number">0x0e60d</literal></expr>,
	<expr><literal type="number">0x0f928</literal></expr>, <expr><literal type="number">0x10b78</literal></expr>, <expr><literal type="number">0x1145d</literal></expr>, <expr><literal type="number">0x12a17</literal></expr>, <expr><literal type="number">0x13532</literal></expr>, <expr><literal type="number">0x149a6</literal></expr>, <expr><literal type="number">0x15683</literal></expr>, <expr><literal type="number">0x168c9</literal></expr>,
	<expr><literal type="number">0x177ec</literal></expr>, <expr><literal type="number">0x18ec4</literal></expr>, <expr><literal type="number">0x191e1</literal></expr>, <expr><literal type="number">0x1afab</literal></expr>, <expr><literal type="number">0x1b08e</literal></expr>, <expr><literal type="number">0x1cc1a</literal></expr>, <expr><literal type="number">0x1d33f</literal></expr>, <expr><literal type="number">0x1ed75</literal></expr>,
	<expr><literal type="number">0x1f250</literal></expr>, <expr><literal type="number">0x209d5</literal></expr>, <expr><literal type="number">0x216f0</literal></expr>, <expr><literal type="number">0x228ba</literal></expr>, <expr><literal type="number">0x2379f</literal></expr>, <expr><literal type="number">0x24b0b</literal></expr>, <expr><literal type="number">0x2542e</literal></expr>, <expr><literal type="number">0x26a64</literal></expr>,
	<expr><literal type="number">0x27541</literal></expr>, <expr><literal type="number">0x28c69</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>unsigned</name> <name>int</name></type> <name>QRspec_getVersionPattern</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if<condition>(<expr><name><name>version</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">7</literal> <operator>||</operator> <name>version</name></expr></argument> &gt;</argument_list></name> <name>QRSPEC_VERSION_MAX</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

	<return>return <expr><name><name>versionPattern</name><index>[<expr><name>version</name> <operator>-</operator> <literal type="number">7</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/******************************************************************************
 * Format information
 *****************************************************************************/</comment>

<comment type="block">/* See calcFormatInfo in tests/test_qrspec.c */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name><name>formatInfo</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{
	<expr><block>{<expr><literal type="number">0x77c4</literal></expr>, <expr><literal type="number">0x72f3</literal></expr>, <expr><literal type="number">0x7daa</literal></expr>, <expr><literal type="number">0x789d</literal></expr>, <expr><literal type="number">0x662f</literal></expr>, <expr><literal type="number">0x6318</literal></expr>, <expr><literal type="number">0x6c41</literal></expr>, <expr><literal type="number">0x6976</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x5412</literal></expr>, <expr><literal type="number">0x5125</literal></expr>, <expr><literal type="number">0x5e7c</literal></expr>, <expr><literal type="number">0x5b4b</literal></expr>, <expr><literal type="number">0x45f9</literal></expr>, <expr><literal type="number">0x40ce</literal></expr>, <expr><literal type="number">0x4f97</literal></expr>, <expr><literal type="number">0x4aa0</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x355f</literal></expr>, <expr><literal type="number">0x3068</literal></expr>, <expr><literal type="number">0x3f31</literal></expr>, <expr><literal type="number">0x3a06</literal></expr>, <expr><literal type="number">0x24b4</literal></expr>, <expr><literal type="number">0x2183</literal></expr>, <expr><literal type="number">0x2eda</literal></expr>, <expr><literal type="number">0x2bed</literal></expr>}</block></expr>,
	<expr><block>{<expr><literal type="number">0x1689</literal></expr>, <expr><literal type="number">0x13be</literal></expr>, <expr><literal type="number">0x1ce7</literal></expr>, <expr><literal type="number">0x19d0</literal></expr>, <expr><literal type="number">0x0762</literal></expr>, <expr><literal type="number">0x0255</literal></expr>, <expr><literal type="number">0x0d0c</literal></expr>, <expr><literal type="number">0x083b</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>unsigned</name> <name>int</name></type> <name>QRspec_getFormatInfo</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>QRecLevel</name></type> <name>level</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if<condition>(<expr><name><name>mask</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">0</literal> <operator>||</operator> <name>mask</name></expr></argument> &gt;</argument_list></name> <literal type="number">7</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

	<return>return <expr><name><name>formatInfo</name><index>[<expr><name>level</name></expr>]</index><index>[<expr><name>mask</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/******************************************************************************
 * Frame
 *****************************************************************************/</comment>

<comment type="block" format="doxygen">/**
 * Put a finder pattern.
 * @param frame
 * @param width
 * @param ox,oy upper-left coordinate of the pattern
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type> <name>putFinderPattern</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ox</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>oy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>finder</name><index>[]</index></name> <init>= <expr><block>{
		<expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>,
		<expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc1</literal></expr>,
		<expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc1</literal></expr>,
		<expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc1</literal></expr>,
		<expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc1</literal></expr>,
		<expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xc1</literal></expr>,
		<expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xc1</literal></expr>,
	}</block></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>s</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>frame</name> <operator>+=</operator> <name>oy</name> <operator>*</operator> <name>width</name> <operator>+</operator> <name>ox</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s</name> <operator>=</operator> <name>finder</name></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name><operator>&lt;</operator><literal type="number">7</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<for>for<control>(<init><expr><name>x</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name><operator>&lt;</operator><literal type="number">7</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<expr_stmt><expr><name><name>frame</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>s</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt><expr><name>frame</name> <operator>+=</operator> <name>width</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s</name> <operator>+=</operator> <literal type="number">7</literal></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>QRspec_createFrame</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>frame</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>p</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>q</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>verinfo</name></decl>, <decl><type ref="prev"/><name>v</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>width</name> <operator>=</operator> <name><name>qrspecCapacity</name><index>[<expr><name>version</name></expr>]</index></name><operator>.</operator><name>width</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>frame</name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator><call><name>malloc</name><argument_list>(<argument><expr><name>width</name> <operator>*</operator> <name>width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if<condition>(<expr><name>frame</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>width</name> <operator>*</operator> <name>width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* Finder pattern */</comment>
	<expr_stmt><expr><call><name>putFinderPattern</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>putFinderPattern</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>width</name> <operator>-</operator> <literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>putFinderPattern</name><argument_list>(<argument><expr><name>frame</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>width</name> <operator>-</operator> <literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* Separator */</comment>
	<expr_stmt><expr><name>p</name> <operator>=</operator> <name>frame</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>q</name> <operator>=</operator> <name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <operator>(</operator><name>width</name> <operator>-</operator> <literal type="number">7</literal><operator>)</operator></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name><operator>&lt;</operator><literal type="number">7</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>p</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xc0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>p</name><index>[<expr><name>width</name> <operator>-</operator> <literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xc0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>q</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xc0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>width</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>q</name> <operator>+=</operator> <name>width</name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">0xc0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <literal type="number">8</literal> <operator>-</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0xc0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <operator>(</operator><name>width</name> <operator>-</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><literal type="number">0xc0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* Mask format information area */</comment>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0x84</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <literal type="number">9</literal> <operator>-</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0x84</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>p</name> <operator>=</operator> <name>frame</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name><operator>&lt;</operator><literal type="number">8</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><operator>*</operator><name>p</name> <operator>=</operator> <literal type="number">0x84</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>width</name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><name>p</name> <operator>=</operator> <name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <operator>(</operator><name>width</name> <operator>-</operator> <literal type="number">7</literal><operator>)</operator> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name><operator>&lt;</operator><literal type="number">7</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><operator>*</operator><name>p</name> <operator>=</operator> <literal type="number">0x84</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>width</name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<comment type="block">/* Timing pattern */</comment>
	<expr_stmt><expr><name>p</name> <operator>=</operator> <name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <literal type="number">6</literal> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>q</name> <operator>=</operator> <name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <literal type="number">8</literal> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>x</name><operator>=</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>x</name><operator>&lt;</operator><name>width</name><operator>-</operator><literal type="number">15</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><operator>*</operator><name>p</name> <operator>=</operator>  <literal type="number">0x90</literal> <operator>|</operator> <operator>(</operator><name>x</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><operator>*</operator><name>q</name> <operator>=</operator>  <literal type="number">0x90</literal> <operator>|</operator> <operator>(</operator><name>x</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>p</name><operator>++</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>q</name> <operator>+=</operator> <name>width</name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<comment type="block">/* Alignment pattern */</comment>
	<expr_stmt><expr><call><name>QRspec_putAlignmentPattern</name><argument_list>(<argument><expr><name>version</name></expr></argument>, <argument><expr><name>frame</name></expr></argument>, <argument><expr><name>width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Version information */</comment>
	<if_stmt><if>if<condition>(<expr><name>version</name> <operator>&gt;=</operator> <literal type="number">7</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>verinfo</name> <operator>=</operator> <call><name>QRspec_getVersionPattern</name><argument_list>(<argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name>p</name> <operator>=</operator> <name>frame</name> <operator>+</operator> <name>width</name> <operator>*</operator> <operator>(</operator><name>width</name> <operator>-</operator> <literal type="number">11</literal><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>v</name> <operator>=</operator> <name>verinfo</name></expr>;</expr_stmt>
		<for>for<control>(<init><expr><name>x</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name><operator>&lt;</operator><literal type="number">6</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<for>for<control>(<init><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name><operator>&lt;</operator><literal type="number">3</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
				<expr_stmt><expr><name><name>p</name><index>[<expr><name>width</name> <operator>*</operator> <name>y</name> <operator>+</operator> <name>x</name></expr>]</index></name> <operator>=</operator> <literal type="number">0x88</literal> <operator>|</operator> <operator>(</operator><name>v</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>v</name> <operator>=</operator> <name>v</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></for>

		<expr_stmt><expr><name>p</name> <operator>=</operator> <name>frame</name> <operator>+</operator> <name>width</name> <operator>-</operator> <literal type="number">11</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>v</name> <operator>=</operator> <name>verinfo</name></expr>;</expr_stmt>
		<for>for<control>(<init><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name><operator>&lt;</operator><literal type="number">6</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<for>for<control>(<init><expr><name>x</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name><operator>&lt;</operator><literal type="number">3</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
				<expr_stmt><expr><name><name>p</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <literal type="number">0x88</literal> <operator>|</operator> <operator>(</operator><name>v</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>v</name> <operator>=</operator> <name>v</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
			</block_content>}</block></for>
			<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>width</name></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></if></if_stmt>
	<comment type="block">/* and a little bit... */</comment>
	<expr_stmt><expr><name><name>frame</name><index>[<expr><name>width</name> <operator>*</operator> <operator>(</operator><name>width</name> <operator>-</operator> <literal type="number">8</literal><operator>)</operator> <operator>+</operator> <literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x81</literal></expr>;</expr_stmt>

	<return>return <expr><name>frame</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>QRspec_newFrame</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if<condition>(<expr><name><name>version</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">1</literal> <operator>||</operator> <name>version</name></expr></argument> &gt;</argument_list></name> <name>QRSPEC_VERSION_MAX</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

	<return>return <expr><call><name>QRspec_createFrame</name><argument_list>(<argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
