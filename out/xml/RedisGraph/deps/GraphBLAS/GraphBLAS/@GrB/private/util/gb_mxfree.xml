<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/GraphBLAS/@GrB/private/util/gb_mxfree.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// gb_mxfree: mxFree wrapper</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// Usage:</comment>

<comment type="line">//  void *p = mxMalloc ( ... ) ;</comment>
<comment type="line">//  gb_mxfree (&amp;p) ;                // frees p and sets p to NULL</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gb_interface.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>gb_mxfree</name>              <comment type="line">// mxFree wrapper</comment>
<parameter_list>(
    <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>p_handle</name></decl></parameter>         <comment type="line">// handle to pointer to be freed</comment>
)</parameter_list>
<block>{<block_content>

    <if_stmt><if>if <condition>(<expr><name>p_handle</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>*</operator><name>p_handle</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
        <block>{<block_content> 
            <expr_stmt><expr><call><name>mxFree</name> <argument_list>(<argument><expr><operator>*</operator><name>p_handle</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><operator>(</operator><operator>*</operator><name>p_handle</name><operator>)</operator> <operator>=</operator> <name>NULL</name></expr> ;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

</unit>
