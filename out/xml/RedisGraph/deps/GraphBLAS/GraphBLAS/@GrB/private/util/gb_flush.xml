<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/GraphBLAS/@GrB/private/util/gb_flush.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// gb_flush: flush mexPrintf output to Command Window</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// When GraphBLAS is under development, it is essential that output from</comment>
<comment type="line">// mexPrintf be flushed to the Command Window as soon as possible.  This</comment>
<comment type="line">// function ensures that this is done.  The function is also used in</comment>
<comment type="line">// production, when a built-in function wishes to display the contents of a GrB</comment>
<comment type="line">// object, via disp or display.  This ensures that all output from GraphBLAS is</comment>
<comment type="line">// immediately visible in the Command Window.</comment>

<comment type="line">// gb_flush ( ) returns 0 if successful, or any nonzero value on failure.  This</comment>
<comment type="line">// matches the behavior of the ANSI C fflush.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gb_interface.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>gb_flush</name> <parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>       <comment type="line">// flush mexPrintf output to Command Window</comment>
<block>{<block_content>
    <comment type="line">// 'drawnow' is slow when logging in remotely: disable it.</comment>
    <comment type="line">// return (mexEvalString ("drawnow ; pause (1e-8) ;")) ;</comment>
    <return>return <expr><operator>(</operator><call><name>mexEvalString</name> <argument_list>(<argument><expr><literal type="string">"pause (1e-8) ;"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
