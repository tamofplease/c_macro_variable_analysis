<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/GraphBLAS/@GrB/private/util/gb_error.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// gb_error: return a string from a GraphBLAS GrB_info</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gb_interface.h"</cpp:file></cpp:include>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>gb_error</name>        <comment type="line">// return an error message from a GrB_Info value</comment>
<parameter_list>(
    <parameter><decl><type><name>GrB_Info</name></type> <name>info</name></decl></parameter>
)</parameter_list>
<block>{<block_content>
    <switch>switch <condition>(<expr><name>info</name></expr>)</condition>
    <block>{<block_content>

        <case>case <expr><name>GrB_SUCCESS</name></expr> :</case>              <return>return <expr><operator>(</operator><literal type="string">"success"</literal><operator>)</operator></expr> ;</return>

        <comment type="line">//----------------------------------------------------------------------</comment>
        <comment type="line">// informational codes, not an error:</comment>
        <comment type="line">//----------------------------------------------------------------------</comment>

        <case>case <expr><name>GrB_NO_VALUE</name></expr> :</case>             <return>return <expr><operator>(</operator><literal type="string">"no entry present"</literal><operator>)</operator></expr> ;</return> 
        <case>case <expr><name>GxB_EXHAUSTED</name></expr> :</case>            <return>return <expr><operator>(</operator><literal type="string">"iterator is exhausted"</literal><operator>)</operator></expr> ;</return>

        <comment type="line">//----------------------------------------------------------------------</comment>
        <comment type="line">// errors:</comment>
        <comment type="line">//----------------------------------------------------------------------</comment>

        <case>case <expr><name>GrB_UNINITIALIZED_OBJECT</name></expr> :</case> <return>return <expr><operator>(</operator><literal type="string">"uninitialized object"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_NULL_POINTER</name></expr> :</case>         <return>return <expr><operator>(</operator><literal type="string">"input pointer is NULL"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_INVALID_VALUE</name></expr> :</case>        <return>return <expr><operator>(</operator><literal type="string">"invalid value"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_INVALID_INDEX</name></expr> :</case>        <return>return <expr><operator>(</operator><literal type="string">"row or column index out of bounds"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_DOMAIN_MISMATCH</name></expr> :</case>      <return>return <expr><operator>(</operator><literal type="string">"object domains are not compatible"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_DIMENSION_MISMATCH</name></expr> :</case>   <return>return <expr><operator>(</operator><literal type="string">"matrix dimensions are invalid"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_OUTPUT_NOT_EMPTY</name></expr> :</case>     <return>return <expr><operator>(</operator><literal type="string">"output matrix already has values"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_NOT_IMPLEMENTED</name></expr> :</case>      <return>return <expr><operator>(</operator><literal type="string">"method not implemented"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_OUT_OF_MEMORY</name></expr> :</case>        <return>return <expr><operator>(</operator><literal type="string">"out of memory"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_INSUFFICIENT_SPACE</name></expr> :</case>   <return>return <expr><operator>(</operator><literal type="string">"output array not large enough"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_INVALID_OBJECT</name></expr> :</case>       <return>return <expr><operator>(</operator><literal type="string">"object is corrupted"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_INDEX_OUT_OF_BOUNDS</name></expr> :</case>  <return>return <expr><operator>(</operator><literal type="string">"row or column index out of bounds"</literal><operator>)</operator></expr> ;</return>
        <case>case <expr><name>GrB_EMPTY_OBJECT</name></expr> :</case>         <return>return <expr><operator>(</operator><literal type="string">"an object does not contain a value"</literal><operator>)</operator></expr> ;</return>
        <default>default :</default>
        <case>case <expr><name>GrB_PANIC</name></expr> :</case>                <break>break ;</break>
    </block_content>}</block></switch>

    <return>return <expr><operator>(</operator><literal type="string">"unknown error"</literal><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
