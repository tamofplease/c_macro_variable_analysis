<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/GraphBLAS/@GrB/private/util/gb_binop_to_monoid.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// gb_binop_to_monoid: convert a binary operator to the corresponding monoid</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gb_interface.h"</cpp:file></cpp:include>

<function><type><name>GrB_Monoid</name></type> <name>gb_binop_to_monoid</name>           <comment type="line">// return monoid from a binary op</comment>
<parameter_list>(
    <parameter><decl><type><name>GrB_BinaryOp</name></type> <name>op</name></decl></parameter>
)</parameter_list>
<block>{<block_content> 

    <decl_stmt><decl><type><name>GrB_Monoid</name></type> <name>monoid</name></decl> ;</decl_stmt>

    <comment type="line">// MIN monoids:</comment>
         <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_INT8</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_INT8</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_INT16</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_INT16</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_INT32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_INT32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_INT64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_INT64</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_UINT8</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_UINT8</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_UINT16</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_UINT16</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_UINT32</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_UINT32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_UINT64</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_UINT64</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_FP32</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_FP32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_FP64</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MIN_MONOID_FP64</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// MAX monoids:</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_INT8</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_INT8</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_INT16</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_INT16</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_INT32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_INT32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_INT64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_INT64</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_UINT8</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_UINT8</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_UINT16</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_UINT16</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_UINT32</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_UINT32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_UINT64</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_UINT64</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_FP32</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_FP32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_FP64</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_MAX_MONOID_FP64</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// PLUS monoids:</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_INT8</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_INT8</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_INT16</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_INT16</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_INT32</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_INT32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_INT64</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_INT64</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_UINT8</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_UINT8</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_UINT16</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_UINT16</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_UINT32</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_UINT32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_UINT64</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_UINT64</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_FP32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_FP32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_PLUS_FP64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_PLUS_MONOID_FP64</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// PLUS monoids for complex:</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_PLUS_FC32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_PLUS_FC32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_PLUS_FC64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_PLUS_FC64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// TIMES monoids:</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_INT8</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_INT8</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_INT16</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_INT16</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_INT32</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_INT32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_INT64</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_INT64</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_UINT8</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_UINT8</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_UINT16</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_UINT16</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_UINT32</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_UINT32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_UINT64</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_UINT64</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_FP32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_FP32</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_TIMES_FP64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_TIMES_MONOID_FP64</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// TIMES monoids for complex:</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_TIMES_FC32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_TIMES_FC32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_TIMES_FC64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_TIMES_FC64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// ANY monoids:</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_BOOL</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_BOOL_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_INT8</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_INT8_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_INT16</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_INT16_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_INT32</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_INT32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_INT64</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_INT64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_UINT8</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_UINT8_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_UINT16</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_UINT16_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_UINT32</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_UINT32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_UINT64</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_UINT64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_FP32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_FP32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_FP64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_FP64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_FC32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_FC32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ANY_FC64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_ANY_FC64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// Boolean monoids:</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_LOR</name></expr>         )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_LOR_MONOID_BOOL</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_LAND</name></expr>        )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_LAND_MONOID_BOOL</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_LXOR</name></expr>        )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_LXOR_MONOID_BOOL</name></expr> ;</expr_stmt></block_content></block></if>
    <comment type="line">// these two operators are identical:</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_EQ_BOOL</name>     <operator>||</operator>
             <name>op</name> <operator>==</operator> <name>GrB_LXNOR</name></expr>       )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GrB_LXNOR_MONOID_BOOL</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// BOR monoids (bitwise or):</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BOR_UINT8</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BOR_UINT8_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BOR_UINT16</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BOR_UINT16_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BOR_UINT32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BOR_UINT32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BOR_UINT64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BOR_UINT64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// BAND monoids (bitwise and):</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BAND_UINT8</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BAND_UINT8_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BAND_UINT16</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BAND_UINT16_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BAND_UINT32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BAND_UINT32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BAND_UINT64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BAND_UINT64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// BXOR monoids (bitwise xor):</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BXOR_UINT8</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BXOR_UINT8_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BXOR_UINT16</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BXOR_UINT16_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BXOR_UINT32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BXOR_UINT32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BXOR_UINT64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BXOR_UINT64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>

    <comment type="line">// BXNOR monoids (bitwise xnor):</comment>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BXNOR_UINT8</name></expr>   )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BXNOR_UINT8_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BXNOR_UINT16</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BXNOR_UINT16_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BXNOR_UINT32</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BXNOR_UINT32_MONOID</name></expr> ;</expr_stmt></block_content></block></if>
    <if type="elseif">else if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_BXNOR_UINT64</name></expr>  )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>monoid</name> <operator>=</operator> <name>GxB_BXNOR_UINT64_MONOID</name></expr> ;</expr_stmt></block_content></block></if>

    <else>else
    <block>{<block_content> 
        <expr_stmt><expr><call><name>ERROR</name> <argument_list>(<argument><expr><literal type="string">"not a valid monoid"</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <return>return <expr><operator>(</operator><name>monoid</name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
