<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/cpu_features/src/impl_x86_freebsd.c"><comment type="line">// Copyright 2017 Google LLC</comment>
<comment type="line">//</comment>
<comment type="line">// Licensed under the Apache License, Version 2.0 (the "License");</comment>
<comment type="line">// you may not use this file except in compliance with the License.</comment>
<comment type="line">// You may obtain a copy of the License at</comment>
<comment type="line">//</comment>
<comment type="line">//    http://www.apache.org/licenses/LICENSE-2.0</comment>
<comment type="line">//</comment>
<comment type="line">// Unless required by applicable law or agreed to in writing, software</comment>
<comment type="line">// distributed under the License is distributed on an "AS IS" BASIS,</comment>
<comment type="line">// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</comment>
<comment type="line">// See the License for the specific language governing permissions and</comment>
<comment type="line">// limitations under the License.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cpu_features_macros.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>CPU_FEATURES_ARCH_X86</name></cpp:ifdef>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>CPU_FEATURES_OS_FREEBSD</name></cpp:ifdef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"impl_x86__base_implementation.inl"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>OverrideOsPreserves</name><parameter_list>(<parameter><decl><type><name>OsPreserves</name><modifier>*</modifier></type> <name>os_preserves</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>os_preserves</name></expr>;</expr_stmt>
  <comment type="line">// No override</comment>
</block_content>}</block></function>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal/filesystem.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal/stack_line_reader.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal/string_view.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DetectFeaturesFromOs</name><parameter_list>(<parameter><decl><type><name>X86Features</name><modifier>*</modifier></type> <name>features</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <comment type="line">// Handling FreeBSD platform through parsing /var/run/dmesg.boot.</comment>
  <decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>fd</name> <init>= <expr><call><name>CpuFeatures_OpenFile</name><argument_list>(<argument><expr><literal type="string">"/var/run/dmesg.boot"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><name>fd</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
    <decl_stmt><decl><type><name>StackLineReader</name></type> <name>reader</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>StackLineReader_Initialize</name><argument_list>(<argument><expr><operator>&amp;</operator><name>reader</name></expr></argument>, <argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>bool</name></type> <name>stop</name> <init>= <expr><name>false</name></expr></init></decl>;</init> <condition><expr><operator>!</operator><name>stop</name></expr>;</condition><incr/>)</control> <block>{<block_content>
      <decl_stmt><decl><type><specifier>const</specifier> <name>LineResult</name></type> <name>result</name> <init>= <expr><call><name>StackLineReader_NextLine</name><argument_list>(<argument><expr><operator>&amp;</operator><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>result</name><operator>.</operator><name>eof</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>stop</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <decl_stmt><decl><type><specifier>const</specifier> <name>StringView</name></type> <name>line</name> <init>= <expr><name><name>result</name><operator>.</operator><name>line</name></name></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>CpuFeatures_StringView_StartsWith</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><call><name>str</name><argument_list>(<argument><expr><literal type="string">"  Features"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
      <comment type="line">// Lines of interests are of the following form:</comment>
      <comment type="line">// "  Features=0x1783fbff&lt;PSE36,MMX,FXSR,SSE,SSE2,HTT&gt;"</comment>
      <comment type="line">// We first extract the comma separated values between angle brackets.</comment>
      <decl_stmt><decl><type><name>StringView</name></type> <name>csv</name> <init>= <expr><name><name>result</name><operator>.</operator><name>line</name></name></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>int</name></type> <name>index</name> <init>= <expr><call><name>CpuFeatures_StringView_IndexOfChar</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><literal type="char">'&lt;'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name>index</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>csv</name> <operator>=</operator> <call><name>CpuFeatures_StringView_PopFront</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><name>index</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>csv</name><operator>.</operator><name>size</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name>CpuFeatures_StringView_Back</name><argument_list>(<argument><expr><name>csv</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="char">'&gt;'</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>csv</name> <operator>=</operator> <call><name>CpuFeatures_StringView_PopBack</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>CpuFeatures_StringView_HasWord</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><literal type="string">"SSE"</literal></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>features</name><operator>-&gt;</operator><name>sse</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>CpuFeatures_StringView_HasWord</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><literal type="string">"SSE2"</literal></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>features</name><operator>-&gt;</operator><name>sse2</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>CpuFeatures_StringView_HasWord</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><literal type="string">"SSE3"</literal></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>features</name><operator>-&gt;</operator><name>sse3</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>CpuFeatures_StringView_HasWord</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><literal type="string">"SSSE3"</literal></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>features</name><operator>-&gt;</operator><name>ssse3</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>CpuFeatures_StringView_HasWord</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><literal type="string">"SSE4.1"</literal></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>features</name><operator>-&gt;</operator><name>sse4_1</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
      <if_stmt><if>if <condition>(<expr><call><name>CpuFeatures_StringView_HasWord</name><argument_list>(<argument><expr><name>csv</name></expr></argument>, <argument><expr><literal type="string">"SSE4.2"</literal></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>features</name><operator>-&gt;</operator><name>sse4_2</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><call><name>CpuFeatures_CloseFile</name><argument_list>(<argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// CPU_FEATURES_OS_FREEBSD</comment>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// CPU_FEATURES_ARCH_X86</comment>
</unit>
