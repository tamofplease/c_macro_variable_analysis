<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:omp="http://www.srcML.org/srcML/openmp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GrB_getVersion.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GrB_getVersion: get the version number of the GraphBLAS C API standard</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// For compile-time access, use GRB_VERSION and GRB_SUBVERSION.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<function><type><name>GrB_Info</name></type> <name>GrB_getVersion</name>         <comment type="line">// runtime access to C API version number</comment>
<parameter_list>(
    <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>version</name></decl></parameter>,      <comment type="line">// returns GRB_VERSION</comment>
    <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>subversion</name></decl></parameter>    <comment type="line">// returns GRB_SUBVERSION</comment>
)</parameter_list>
<block>{<block_content> 

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// get the version number</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <if_stmt><if>if <condition>(<expr><name>version</name>    <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>(</operator><operator>*</operator><name>version</name>   <operator>)</operator> <operator>=</operator> <name>GRB_VERSION</name></expr> ;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>subversion</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>(</operator><operator>*</operator><name>subversion</name><operator>)</operator> <operator>=</operator> <name>GRB_SUBVERSION</name></expr> ;</expr_stmt></block_content></block></if></if_stmt>

    <cpp:pragma>#<cpp:directive>pragma</cpp:directive> <omp:directive>omp <omp:name>flush</omp:name></omp:directive></cpp:pragma>
    <return>return <expr><operator>(</operator><name>GrB_SUCCESS</name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
