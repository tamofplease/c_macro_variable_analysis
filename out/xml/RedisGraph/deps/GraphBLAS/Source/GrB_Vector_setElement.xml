<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GrB_Vector_setElement.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GrB_Vector_setElement: set an entry in a vector, w (row) = x</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// Set a single scalar, w(row) = x, typecasting from the type of x to</comment>
<comment type="line">// the type of w as needed.</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GB_FREE_ALL</name></cpp:macro> <cpp:value>;</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GB_SET</name><parameter_list>(<parameter><type><name>prefix</name></type></parameter>,<parameter><type><name>type</name></type></parameter>,<parameter><type><name>T</name></type></parameter>,<parameter><type><name>ampersand</name></type></parameter>)</parameter_list></cpp:macro>                                     \
<cpp:value>GrB_Info GB_EVAL3 (prefix, _Vector_setElement_, T)    <comment type="block">/* w(row) = x */</comment>      \
(                                                                           \
    GrB_Vector w,                       <comment type="block">/* vector to modify           */</comment>    \
    type x,                             <comment type="block">/* scalar to assign to w(row) */</comment>    \
    GrB_Index row                       <comment type="block">/* row index                  */</comment>    \
)                                                                           \
{                                                                           \
    GB_WHERE (w, "GrB_Vector_setElement_" GB_STR(T) " (w, x, row)") ;       \
    GB_RETURN_IF_NULL_OR_FAULTY (w) ;                                       \
    ASSERT (GB_VECTOR_OK (w)) ;                                             \
    return (GB_setElement ((GrB_Matrix) w, NULL, ampersand x, row, 0,       \
        GB_ ## T ## _code, Context)) ;                                      \
}</cpp:value></cpp:define>

<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>bool</argument>      , <argument>BOOL</argument>   , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>int8_t</argument>    , <argument>INT8</argument>   , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>int16_t</argument>   , <argument>INT16</argument>  , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>int32_t</argument>   , <argument>INT32</argument>  , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>int64_t</argument>   , <argument>INT64</argument>  , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>uint8_t</argument>   , <argument>UINT8</argument>  , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>uint16_t</argument>  , <argument>UINT16</argument> , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>uint32_t</argument>  , <argument>UINT32</argument> , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>uint64_t</argument>  , <argument>UINT64</argument> , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>float</argument>     , <argument>FP32</argument>   , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>double</argument>    , <argument>FP64</argument>   , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GxB</argument>, <argument>GxB_FC32_t</argument>, <argument>FC32</argument>   , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GxB</argument>, <argument>GxB_FC64_t</argument>, <argument>FC64</argument>   , <argument>&amp;</argument>)</argument_list></macro>
<macro><name>GB_SET</name> <argument_list>(<argument>GrB</argument>, <argument>void *</argument>    , <argument>UDT</argument>    ,  )</argument_list></macro>

<comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GrB_Vector_setElement_Scalar: set an entry in a vector from a GrB_Scalar</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// When the GrB_Scalar has a single entry, this method is just like the</comment>
<comment type="line">// setElement methods defined above.  If the GrB_Scalar has no entry, then it</comment>
<comment type="line">// acts like GrB_Vector_removeElement.</comment>

<function><type><name>GrB_Info</name></type> <name>GrB_Vector_setElement_Scalar</name>
<parameter_list>(
    <parameter><decl><type><name>GrB_Vector</name></type> <name>w</name></decl></parameter>,                       <comment type="line">// vector to modify</comment>
    <parameter><decl><type><name>GrB_Scalar</name></type> <name>scalar</name></decl></parameter>,                  <comment type="line">// scalar to assign to w(row)</comment>
    <parameter><decl><type><name>GrB_Index</name></type> <name>row</name></decl></parameter>                       <comment type="line">// row index</comment>
)</parameter_list>
<block>{<block_content>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// check inputs</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <expr_stmt><expr><call><name>GB_WHERE</name> <argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="string">"GrB_Vector_setElement_Scalar (w, x, row)"</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>GB_RETURN_IF_NULL_OR_FAULTY</name> <argument_list>(<argument><expr><name>w</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>GB_RETURN_IF_NULL_OR_FAULTY</name> <argument_list>(<argument><expr><name>scalar</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>ASSERT</name> <argument_list>(<argument><expr><call><name>GB_VECTOR_OK</name> <argument_list>(<argument><expr><name>w</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// set or remove the element</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <decl_stmt><decl><type><name>GrB_Info</name></type> <name>info</name></decl> ;</decl_stmt>
    <expr_stmt><expr><call><name>GB_MATRIX_WAIT</name> <argument_list>(<argument><expr><name>scalar</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>GB_nnz</name> <argument_list>(<argument><expr><operator>(</operator><name>GrB_Matrix</name><operator>)</operator> <name>scalar</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// set the element: w(row) = scalar</comment>
        <return>return <expr><operator>(</operator><call><name>GB_setElement</name> <argument_list>(<argument><expr><operator>(</operator><name>GrB_Matrix</name><operator>)</operator> <name>w</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>scalar</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>row</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
            <argument><expr><name><name>scalar</name><operator>-&gt;</operator><name>type</name><operator>-&gt;</operator><name>code</name></name></expr></argument>, <argument><expr><name>Context</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
    </block_content>}</block></if>
    <else>else
    <block>{<block_content> 
        <comment type="line">// delete the w(row) element</comment>
        <return>return <expr><operator>(</operator><call><name>GB_Vector_removeElement</name> <argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><name>row</name></expr></argument>, <argument><expr><name>Context</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

</unit>
