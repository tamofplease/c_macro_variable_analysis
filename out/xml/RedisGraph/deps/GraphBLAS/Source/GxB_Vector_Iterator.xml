<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GxB_Vector_Iterator.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GxB_Vector_Iterator: iterate over the entries of a vector</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_Vector_Iterator_getpmax</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_Vector_Iterator_seek</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_Vector_Iterator_next</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_Vector_Iterator_getp</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_Vector_Iterator_getIndex</name></cpp:undef>

<function><type><name>GrB_Info</name></type> <name>GxB_Vector_Iterator_attach</name>
<parameter_list>(
    <comment type="line">// input/output:</comment>
    <parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>,      <comment type="line">// iterator to attach to the vector v</comment>
    <comment type="line">// input</comment>
    <parameter><decl><type><name>GrB_Vector</name></type> <name>v</name></decl></parameter>,               <comment type="line">// vector to attach</comment>
    <parameter><decl><type><name>GrB_Descriptor</name></type> <name>desc</name></decl></parameter>
)</parameter_list>
<block>{<block_content> 
    <return>return <expr><operator>(</operator><call><name>GB_Iterator_attach</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>, <argument><expr><operator>(</operator><name>GrB_Matrix</name><operator>)</operator> <name>v</name></expr></argument>, <argument><expr><name>GxB_NO_FORMAT</name></expr></argument>,
        <argument><expr><name>desc</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Info</name></type> <name>GB_Vector_Iterator_bitmap_seek</name>
<parameter_list>(
    <parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>,
    <parameter><decl><type><name>GrB_Index</name></type> <name>unused</name></decl></parameter> <comment type="line">// note: unused parameter to be removed in v8.x</comment>
)</parameter_list>
<block>{<block_content>
    <for>for <control>( <init>;</init> <condition><expr><name><name>iterator</name><operator>-&gt;</operator><name>p</name></name> <operator>&lt;</operator> <name><name>iterator</name><operator>-&gt;</operator><name>pmax</name></name></expr> ;</condition> <incr><expr><name><name>iterator</name><operator>-&gt;</operator><name>p</name></name><operator>++</operator></expr></incr>)</control>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name><name>iterator</name><operator>-&gt;</operator><name>Ab</name> <index>[<expr><name><name>iterator</name><operator>-&gt;</operator><name>p</name></name></expr>]</index></name></expr>)</condition>
        <block>{<block_content> 
            <comment type="line">// found next entry</comment>
            <return>return <expr><operator>(</operator><name>GrB_SUCCESS</name><operator>)</operator></expr> ;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return>return <expr><operator>(</operator><name>GxB_EXHAUSTED</name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Index</name></type> <name>GxB_Vector_Iterator_getpmax</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// return the range of the vector iterator</comment>
    <return>return <expr><operator>(</operator><name><name>iterator</name><operator>-&gt;</operator><name>pmax</name></name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Info</name></type> <name>GxB_Vector_Iterator_seek</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>, <parameter><decl><type><name>GrB_Index</name></type> <name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// seek to a specific entry in the vector</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Vector_Iterator_seek</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Info</name></type> <name>GxB_Vector_Iterator_next</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// move to the next entry of a vector</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Vector_Iterator_next</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Index</name></type> <name>GxB_Vector_Iterator_getp</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// get the current position of a vector iterator</comment>
    <return>return <expr><operator>(</operator><name><name>iterator</name><operator>-&gt;</operator><name>p</name></name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Index</name></type> <name>GxB_Vector_Iterator_getIndex</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// get the index of a vector entry</comment>
    <return>return <expr><operator>(</operator><ternary><condition><expr><operator>(</operator><name><name>iterator</name><operator>-&gt;</operator><name>Ai</name></name> <operator>!=</operator> <name>NULL</name><operator>)</operator></expr> ?</condition><then> <expr><name><name>iterator</name><operator>-&gt;</operator><name>Ai</name> <index>[<expr><name><name>iterator</name><operator>-&gt;</operator><name>p</name></name></expr>]</index></name></expr> </then><else>: <expr><name><name>iterator</name><operator>-&gt;</operator><name>p</name></name></expr></else></ternary><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
