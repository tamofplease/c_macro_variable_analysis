<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GxB_colIterator.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GxB_colIterator_*: iterate over columns of a matrix</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_colIterator_attach</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_colIterator_kount</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_colIterator_seekCol</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_colIterator_kseek</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_colIterator_nextCol</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_colIterator_nextRow</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_colIterator_getColIndex</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>GxB_colIterator_getRowIndex</name></cpp:undef>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// The column iterator is analoguous to the row iterator.</comment>

<function><type><name>GrB_Info</name></type> <name>GxB_colIterator_attach</name>
<parameter_list>(
    <parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>,
    <parameter><decl><type><name>GrB_Matrix</name></type> <name>A</name></decl></parameter>,
    <parameter><decl><type><name>GrB_Descriptor</name></type> <name>desc</name></decl></parameter>
)</parameter_list>
<block>{<block_content> 
    <comment type="line">// attach a column iterator to a matrix</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Iterator_attach</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>GxB_BY_COL</name></expr></argument>, <argument><expr><name>desc</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Index</name></type> <name>GxB_colIterator_kount</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// return # of nonempty columns of the matrix</comment>
    <return>return <expr><operator>(</operator><name><name>iterator</name><operator>-&gt;</operator><name>anvec</name></name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Info</name></type> <name>GxB_colIterator_seekCol</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>, <parameter><decl><type><name>GrB_Index</name></type> <name>col</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// move a column iterator that is already attached to A, to the first</comment>
    <comment type="line">// entry of A(:,col)</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Iterator_rc_seek</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Info</name></type> <name>GxB_colIterator_kseek</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>, <parameter><decl><type><name>GrB_Index</name></type> <name>k</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// move a column iterator that is already attached to A, to the first</comment>
    <comment type="line">// entry of the kth non-empty column of A</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Iterator_rc_seek</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>, <argument><expr><name>k</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Info</name></type> <name>GxB_colIterator_nextCol</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// move a column iterator to the first entry of the next column</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Iterator_rc_knext</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Info</name></type> <name>GxB_colIterator_nextRow</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// move a column iterator to the next row in the same column</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Iterator_rc_inext</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Index</name></type> <name>GxB_colIterator_getColIndex</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// return the column index of the current entry for a column iterator</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Iterator_rc_getj</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

<function><type><name>GrB_Index</name></type> <name>GxB_colIterator_getRowIndex</name> <parameter_list>(<parameter><decl><type><name>GxB_Iterator</name></type> <name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content> 
    <comment type="line">// return the row index of the current entry for a column iterator</comment>
    <return>return <expr><operator>(</operator><call><name>GB_Iterator_rc_geti</name> <argument_list>(<argument><expr><name>iterator</name></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
