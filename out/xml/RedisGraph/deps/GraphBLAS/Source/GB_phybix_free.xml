<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_phybix_free.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_phybix_free: free all content of a matrix</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// Frees all allocatable content of a matrix, except for the header itself.</comment>
<comment type="line">// A-&gt;magic becomes GB_MAGIC2.  If this matrix is given to a user-callable</comment>
<comment type="line">// GraphBLAS function, it will generate a GrB_INVALID_OBJECT error.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>GB_phybix_free</name>             <comment type="line">// free all content of a matrix</comment>
<parameter_list>(
    <parameter><decl><type><name>GrB_Matrix</name></type> <name>A</name></decl></parameter>                <comment type="line">// handle of matrix with content to free</comment>
)</parameter_list>
<block>{<block_content>

    <if_stmt><if>if <condition>(<expr><name>A</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
    <block>{<block_content> 
        <expr_stmt><expr><call><name>GB_phy_free</name> <argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>           <comment type="line">// free A-&gt;p, A-&gt;h, and A-&gt;Y</comment>
        <expr_stmt><expr><call><name>GB_bix_free</name> <argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>           <comment type="line">// free A-&gt;b, A-&gt;i, and A-&gt;x</comment>
        <expr_stmt><expr><call><name>GB_FREE</name> <argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name><name>A</name><operator>-&gt;</operator><name>logger</name></name><operator>)</operator></expr></argument>, <argument><expr><name><name>A</name><operator>-&gt;</operator><name>logger_size</name></name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>        <comment type="line">// free the error logger</comment>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

</unit>
