<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GxB_Matrix_pending.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GxB_Matrix_Pending: checks to see if matrix has pending operations</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB_Pending.h"</cpp:file></cpp:include>

<function><type><name>GrB_Info</name></type> <name>GxB_Matrix_Pending</name>     <comment type="line">// does matrix has pending operations</comment>
<parameter_list>(
	<parameter><decl><type><name>GrB_Matrix</name></type> <name>A</name></decl></parameter>,           <comment type="line">// matrix to query</comment>
	<parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>pending</name></decl></parameter>           <comment type="line">// are there any pending operations</comment>
)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>GB_WHERE1</name> <argument_list>(<argument><expr><literal type="string">"GxB_Matrix_Pending (A)"</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
	<comment type="line">//--------------------------------------------------------------------------</comment>
	<comment type="line">// check inputs</comment>
	<comment type="line">//--------------------------------------------------------------------------</comment>
	<expr_stmt><expr><call><name>GB_RETURN_IF_NULL_OR_FAULTY</name><argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
	<expr_stmt><expr><call><name>GB_RETURN_IF_NULL</name><argument_list>(<argument><expr><name>pending</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

	<expr_stmt><expr><operator>(</operator><operator>*</operator><name>pending</name><operator>)</operator> <operator>=</operator> <operator>(</operator><call><name>GB_ANY_PENDING_WORK</name> <argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>GB_NEED_HYPER_HASH</name> <argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator><name>GrB_SUCCESS</name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
