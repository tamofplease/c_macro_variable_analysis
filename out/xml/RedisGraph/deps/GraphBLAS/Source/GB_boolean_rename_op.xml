<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_boolean_rename_op.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_boolean_rename_op: rename a boolean operator</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// If the user requests the creation of a monoid based on a duplicate</comment>
<comment type="line">// built-in binary operator, the unique boolean operator is used instead.</comment>
<comment type="line">// See also GB_boolean_rename, which does this for opcodes, not operators.</comment>
<comment type="line">// This is done before the operator is checked, so that any error messages</comment>
<comment type="line">// reflect the renaming.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB_binop.h"</cpp:file></cpp:include>

<function><type><name>GrB_BinaryOp</name></type> <name>GB_boolean_rename_op</name>   <comment type="line">// return renamed op</comment>
<parameter_list>(
    <parameter><decl><type><specifier>const</specifier> <name>GrB_BinaryOp</name></type> <name>op</name></decl></parameter>           <comment type="line">// op to rename</comment>
)</parameter_list>
<block>{<block_content>

    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_DIV_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// FIRST and DIV are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_FIRST_BOOL</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_RDIV_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// SECOND and RDIV are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_SECOND_BOOL</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MIN_BOOL</name> <operator>||</operator> <name>op</name> <operator>==</operator> <name>GrB_TIMES_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// MIN, TIMES, and LAND are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_LAND</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GrB_MAX_BOOL</name> <operator>||</operator> <name>op</name> <operator>==</operator> <name>GrB_PLUS_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// MAX, PLUS, and OR are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_LOR</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ISNE_BOOL</name> <operator>||</operator> <name>op</name> <operator>==</operator> <name>GrB_NE_BOOL</name> <operator>||</operator> <name>op</name> <operator>==</operator> <name>GrB_MINUS_BOOL</name>
        <operator>||</operator> <name>op</name> <operator>==</operator> <name>GxB_RMINUS_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// ISNE, NE, MINUS, RMINUS, and XOR are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_LXOR</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ISEQ_BOOL</name> <operator>||</operator> <name>op</name> <operator>==</operator> <name>GrB_LXNOR</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// LXNOR, ISEQ, EQ are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_EQ_BOOL</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ISGT_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// ISGT, GT are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_GT_BOOL</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ISLT_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// ISLT, LT are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_LT_BOOL</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ISGE_BOOL</name> <operator>||</operator> <name>op</name> <operator>==</operator> <name>GxB_POW_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// POW, ISGE, GE are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_GE_BOOL</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>op</name> <operator>==</operator> <name>GxB_ISLE_BOOL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// ISLE, LE are the same for boolean:</comment>
        <return>return <expr><operator>(</operator><name>GrB_LE_BOOL</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// operator is not changed</comment>
    <return>return <expr><operator>(</operator><name>op</name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
