<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_eslice.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_eslice: equal partition of e items to each task </comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// There are e items to split between ntasks.  Task tid will own items</comment>
<comment type="line">// Slice [tid] to Slice [tid+1]-1.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>GB_eslice</name>
<parameter_list>(
    <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>Slice</name></decl></parameter>,         <comment type="line">// array of size ntasks+1</comment>
    <parameter><decl><type><name>int64_t</name></type> <name>e</name></decl></parameter>,              <comment type="line">// number items to partition amongst the tasks</comment>
    <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>ntasks</name></decl></parameter>        <comment type="line">// # of tasks</comment>
)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>Slice</name> <index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr> ;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>tid</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> ;</init> <condition><expr><name>tid</name> <operator>&lt;</operator> <name>ntasks</name></expr> ;</condition> <incr><expr><name>tid</name><operator>++</operator></expr></incr>)</control>
    <block>{<block_content> 
        <expr_stmt><expr><name><name>Slice</name> <index>[<expr><name>tid</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator> <call><name>GB_PART</name> <argument_list>(<argument><expr><name>tid</name></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><name>ntasks</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt><expr><name><name>Slice</name> <index>[<expr><name>ntasks</name></expr>]</index></name> <operator>=</operator> <name>e</name></expr> ;</expr_stmt>
</block_content>}</block></function>

</unit>
