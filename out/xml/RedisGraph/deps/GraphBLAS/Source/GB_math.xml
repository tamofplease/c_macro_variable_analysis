<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_math.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_math.c: declaring functions from GB_math.h</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<comment type="line">// integer division</comment>
<function_decl><type><specifier>extern</specifier> <name>int8_t</name></type>   <name>GB_idiv_int8</name>   <parameter_list>(<parameter><decl><type><name>int8_t</name></type>   <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type>   <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int16_t</name></type>  <name>GB_idiv_int16</name>  <parameter_list>(<parameter><decl><type><name>int16_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type>  <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int32_t</name></type>  <name>GB_idiv_int32</name>  <parameter_list>(<parameter><decl><type><name>int32_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type>  <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int64_t</name></type>  <name>GB_idiv_int64</name>  <parameter_list>(<parameter><decl><type><name>int64_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type>  <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint8_t</name></type>  <name>GB_idiv_uint8</name>  <parameter_list>(<parameter><decl><type><name>uint8_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type>  <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint16_t</name></type> <name>GB_idiv_uint16</name> <parameter_list>(<parameter><decl><type><name>uint16_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint32_t</name></type> <name>GB_idiv_uint32</name> <parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint64_t</name></type> <name>GB_idiv_uint64</name> <parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>

<comment type="line">// complex division</comment>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>GB_divcomplex</name> <parameter_list>(<parameter><decl><type><name>double</name></type> <name>xr</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>xi</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>yr</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>yi</name></decl></parameter>,
    <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>zr</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>zi</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_FC32_div</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>GxB_FC32_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_FC64_div</name> <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>GxB_FC64_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>

<comment type="line">// complex unary functions that return complex</comment>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_cceilf</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_cceil</name>   <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_cfloorf</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_cfloor</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_croundf</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_cround</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_ctruncf</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_ctrunc</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_cexp2f</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_cexp2</name>   <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_cexpm1f</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_cexpm1</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_clog1pf</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_clog1p</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_clog10f</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_clog10</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_clog2f</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_clog2</name>   <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>

<comment type="line">// complex unary functions that return bool</comment>
<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>GB_cisinff</name>    <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>GB_cisinf</name>     <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>GB_cisnanf</name>    <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>GB_cisnan</name>     <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>GB_cisfinitef</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>bool</name></type> <name>GB_cisfinite</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>

<comment type="line">// z = pow (x,y) for floating-point types</comment>
<function_decl><type><specifier>extern</specifier> <name>float</name></type>      <name>GB_powf</name>  <parameter_list>(<parameter><decl><type><name>float</name></type>      <name>x</name></decl></parameter>, <parameter><decl><type><name>float</name></type>      <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>double</name></type>     <name>GB_pow</name>   <parameter_list>(<parameter><decl><type><name>double</name></type>     <name>x</name></decl></parameter>, <parameter><decl><type><name>double</name></type>     <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_cpowf</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>GxB_FC32_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_cpow</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>GxB_FC64_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>

<comment type="line">// z = pow (x,y) for integers</comment>
<function_decl><type><specifier>extern</specifier> <name>int8_t</name></type>   <name>GB_pow_int8</name>   <parameter_list>(<parameter><decl><type><name>int8_t</name></type>   <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type>   <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int16_t</name></type>  <name>GB_pow_int16</name>  <parameter_list>(<parameter><decl><type><name>int16_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type>  <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int32_t</name></type>  <name>GB_pow_int32</name>  <parameter_list>(<parameter><decl><type><name>int32_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type>  <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int64_t</name></type>  <name>GB_pow_int64</name>  <parameter_list>(<parameter><decl><type><name>int64_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type>  <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint8_t</name></type>  <name>GB_pow_uint8</name>  <parameter_list>(<parameter><decl><type><name>uint8_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type>  <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint16_t</name></type> <name>GB_pow_uint16</name> <parameter_list>(<parameter><decl><type><name>uint16_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint32_t</name></type> <name>GB_pow_uint32</name> <parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint64_t</name></type> <name>GB_pow_uint64</name> <parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>y</name></decl></parameter>)</parameter_list> ;</function_decl>

<comment type="line">// z = frexp* (x) for float and double</comment>
<function_decl><type><specifier>extern</specifier> <name>float</name></type>  <name>GB_frexpxf</name> <parameter_list>(<parameter><decl><type><name>float</name></type>  <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>double</name></type> <name>GB_frexpx</name>  <parameter_list>(<parameter><decl><type><name>double</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>float</name></type>  <name>GB_frexpef</name> <parameter_list>(<parameter><decl><type><name>float</name></type>  <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>double</name></type> <name>GB_frexpe</name>  <parameter_list>(<parameter><decl><type><name>double</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>

<comment type="line">// z = signum (x) for floating-point types</comment>
<function_decl><type><specifier>extern</specifier> <name>float</name></type>      <name>GB_signumf</name>  <parameter_list>(<parameter><decl><type><name>float</name></type>      <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>double</name></type>     <name>GB_signum</name>   <parameter_list>(<parameter><decl><type><name>double</name></type>     <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC32_t</name></type> <name>GB_csignumf</name> <parameter_list>(<parameter><decl><type><name>GxB_FC32_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>GxB_FC64_t</name></type> <name>GB_csignum</name>  <parameter_list>(<parameter><decl><type><name>GxB_FC64_t</name></type> <name>x</name></decl></parameter>)</parameter_list> ;</function_decl>

</unit>
