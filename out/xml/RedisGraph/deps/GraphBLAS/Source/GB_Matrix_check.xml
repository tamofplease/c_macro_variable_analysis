<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_Matrix_check.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_Matrix_check: print a GraphBLAS matrix and check if it is valid</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<function><type><name>GB_PUBLIC</name>
<name>GrB_Info</name></type> <name>GB_Matrix_check</name>    <comment type="line">// check a GraphBLAS matrix</comment>
<parameter_list>(
    <parameter><decl><type><specifier>const</specifier> <name>GrB_Matrix</name></type> <name>A</name></decl></parameter>,     <comment type="line">// GraphBLAS matrix to print and check</comment>
    <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,       <comment type="line">// name of the matrix</comment>
    <parameter><decl><type><name>int</name></type> <name>pr</name></decl></parameter>,                 <comment type="line">// print level</comment>
    <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>f</name></decl></parameter>                 <comment type="line">// file for output</comment>
)</parameter_list>
<block>{<block_content> 
    <return>return <expr><operator>(</operator><call><name>GB_matvec_check</name> <argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>pr</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><literal type="string">"matrix"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
