<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_Type_compatible.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_Type_compatible: return true if domains are compatible</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// Two domains are compatible for typecasting between them if both are built-in</comment>
<comment type="line">// types (of any kind) or if both are the same user-defined type.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<function><type><name>GB_PUBLIC</name>
<name>bool</name></type> <name>GB_Type_compatible</name>             <comment type="line">// check if two types can be typecast</comment>
<parameter_list>(
    <parameter><decl><type><specifier>const</specifier> <name>GrB_Type</name></type> <name>atype</name></decl></parameter>,
    <parameter><decl><type><specifier>const</specifier> <name>GrB_Type</name></type> <name>btype</name></decl></parameter>
)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>atype</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>btype</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// the op ignores its inputs</comment>
        <return>return <expr><operator>(</operator><name>true</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if>
    <if type="elseif">else if <condition>(<expr><name><name>atype</name><operator>-&gt;</operator><name>code</name></name> <operator>==</operator> <name>GB_UDT_code</name> <operator>||</operator> <name><name>btype</name><operator>-&gt;</operator><name>code</name></name> <operator>==</operator> <name>GB_UDT_code</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// two user types must be identical to be compatible</comment>
        <return>return <expr><operator>(</operator><name>atype</name> <operator>==</operator> <name>btype</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></if>
    <else>else
    <block>{<block_content> 
        <comment type="line">// any built-in domain is compatible with any other built-in domain</comment>
        <return>return <expr><operator>(</operator><name>true</name><operator>)</operator></expr> ;</return>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

</unit>
