<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_bitwise.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_bitwise.c: declaring functions from GB_bitwise.h</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<comment type="line">// z = bitshift (x,k)</comment>
<function_decl><type><specifier>extern</specifier> <name>int8_t</name></type>   <name>GB_bitshift_int8</name>   <parameter_list>(<parameter><decl><type><name>int8_t</name></type>   <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>k</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int16_t</name></type>  <name>GB_bitshift_int16</name>  <parameter_list>(<parameter><decl><type><name>int16_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>k</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int32_t</name></type>  <name>GB_bitshift_int32</name>  <parameter_list>(<parameter><decl><type><name>int32_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>k</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int64_t</name></type>  <name>GB_bitshift_int64</name>  <parameter_list>(<parameter><decl><type><name>int64_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>k</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint8_t</name></type>  <name>GB_bitshift_uint8</name>  <parameter_list>(<parameter><decl><type><name>uint8_t</name></type>  <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>k</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint16_t</name></type> <name>GB_bitshift_uint16</name> <parameter_list>(<parameter><decl><type><name>uint16_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>k</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint32_t</name></type> <name>GB_bitshift_uint32</name> <parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>k</name></decl></parameter>)</parameter_list> ;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint64_t</name></type> <name>GB_bitshift_uint64</name> <parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>k</name></decl></parameter>)</parameter_list> ;</function_decl>

</unit>
