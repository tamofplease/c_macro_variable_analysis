<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_sparsity_control.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_sparsity_control: ensure the sparsity_control is in the proper range</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>GB_sparsity_control</name>     <comment type="line">// revised sparsity_control</comment>
<parameter_list>(
    <parameter><decl><type><name>int</name></type> <name>sparsity_control</name></decl></parameter>,   <comment type="line">// sparsity_control to be modified</comment>
    <parameter><decl><type><name>int64_t</name></type> <name>vdim</name></decl></parameter>            <comment type="line">// A-&gt;vdim, or -1 to ignore this condition</comment>
)</parameter_list>
<block>{<block_content> 

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// ensure the sparsity control is in range 1 to 15</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <expr_stmt><expr><name>sparsity_control</name> <operator>=</operator> <name>sparsity_control</name> <operator>&amp;</operator> <name>GxB_ANY_SPARSITY</name></expr> ;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>sparsity_control</name> <operator>==</operator> <name>GxB_DEFAULT</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// if zero, set to auto sparsity_control</comment>
        <expr_stmt><expr><name>sparsity_control</name> <operator>=</operator> <name>GxB_AUTO_SPARSITY</name></expr> ;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// ensure vectors and scalars cannot become hypersparse</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <if_stmt><if>if <condition>(<expr><operator>(</operator><name>vdim</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>vdim</name> <operator>==</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>sparsity_control</name> <operator>&amp;</operator> <name>GxB_HYPERSPARSE</name><operator>)</operator></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// a GrB_Scalar, GrB_Vector, or a GrB_Matrix with a single vector,</comment>
        <comment type="line">// cannot be converted to hypersparse.  If the sparsity_control allows</comment>
        <comment type="line">// for the hypersparse case, disable it and enable the sparse case</comment>
        <comment type="line">// instead.</comment>
        <expr_stmt><expr><name>sparsity_control</name> <operator>=</operator> <name>sparsity_control</name> <operator>&amp;</operator> <operator>(</operator><operator>~</operator><name>GxB_HYPERSPARSE</name><operator>)</operator></expr> ;</expr_stmt>
        <expr_stmt><expr><name>sparsity_control</name> <operator>=</operator> <name>sparsity_control</name> <operator>|</operator> <name>GxB_SPARSE</name></expr> ;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// return revised sparsity_control</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <return>return <expr><operator>(</operator><name>sparsity_control</name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
