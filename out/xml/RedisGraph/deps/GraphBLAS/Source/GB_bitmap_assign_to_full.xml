<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_bitmap_assign_to_full.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_bitmap_assign_to_full:  make a full bitmap</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// All entries in C are now present.  Either set all of C-&gt;b to 1, or free it</comment>
<comment type="line">// and make C full.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB_bitmap_assign_methods.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>GB_bitmap_assign_to_full</name>   <comment type="line">// set all C-&gt;b to 1, or free it and make C full</comment>
<parameter_list>(
    <parameter><decl><type><name>GrB_Matrix</name></type> <name>C</name></decl></parameter>,
    <parameter><decl><type><name>int</name></type> <name>nthreads_max</name></decl></parameter>
)</parameter_list>
<block>{<block_content>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// check inputs</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <expr_stmt><expr><call><name>ASSERT</name> <argument_list>(<argument><expr><call><name>GB_IS_BITMAP</name> <argument_list>(<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// free the bitmap or set it to all ones</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <if_stmt><if>if <condition>(<expr><call><name>GB_sparsity_control</name> <argument_list>(<argument><expr><name><name>C</name><operator>-&gt;</operator><name>sparsity_control</name></name></expr></argument>, <argument><expr><name><name>C</name><operator>-&gt;</operator><name>vdim</name></name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>GxB_FULL</name></expr>)</condition>
    <block>{<block_content> 
        <comment type="line">// C is bitmap but can become full; convert it to full</comment>
        <expr_stmt><expr><call><name>GB_FREE</name> <argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name><name>C</name><operator>-&gt;</operator><name>b</name></name><operator>)</operator></expr></argument>, <argument><expr><name><name>C</name><operator>-&gt;</operator><name>b_size</name></name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
        <expr_stmt><expr><name><name>C</name><operator>-&gt;</operator><name>nvals</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> ;</expr_stmt>
    </block_content>}</block></if>
    <else>else
    <block>{<block_content> 
        <comment type="line">// all entries in C are now present; C remains bitmap</comment>
        <decl_stmt><decl><type><name>int64_t</name></type> <name>cnzmax</name> <init>= <expr><name><name>C</name><operator>-&gt;</operator><name>vlen</name></name> <operator>*</operator> <name><name>C</name><operator>-&gt;</operator><name>vdim</name></name></expr></init></decl> ;</decl_stmt>
        <expr_stmt><expr><call><name>GB_memset</name> <argument_list>(<argument><expr><name><name>C</name><operator>-&gt;</operator><name>b</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>cnzmax</name></expr></argument>, <argument><expr><name>nthreads_max</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
        <expr_stmt><expr><name><name>C</name><operator>-&gt;</operator><name>nvals</name></name> <operator>=</operator> <name>cnzmax</name></expr> ;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

</unit>
