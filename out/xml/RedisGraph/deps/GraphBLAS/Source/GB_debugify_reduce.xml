<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GB_debugify_reduce.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_debugify_reduce: create the header file for a reduction problem</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2021, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB_stringify.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>GB_debugify_reduce</name>     <comment type="line">// enumerate and macrofy a GrB_reduce problem</comment>
<parameter_list>(
    <comment type="line">// input:</comment>
    <parameter><decl><type><name>GrB_Monoid</name></type> <name>monoid</name></decl></parameter>,      <comment type="line">// the monoid to enumify</comment>
    <parameter><decl><type><name>GrB_Matrix</name></type> <name>A</name></decl></parameter>
)</parameter_list>
<block>{<block_content>

    <decl_stmt><decl><type><name>uint64_t</name></type> <name>rcode</name></decl> ;</decl_stmt>        <comment type="line">// unique encoding of the entire problem</comment>

    <expr_stmt><expr><call><name>GB_enumify_reduce</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>rcode</name></expr></argument>, <argument><expr><name>monoid</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <decl_stmt><decl><type><name>char</name></type> <name><name>reduce_name</name> <index>[<expr><literal type="number">256</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>GxB_MAX_NAME_LEN</name></expr>]</index></name></decl> ;</decl_stmt>
    <expr_stmt><expr><call><name>GB_namify_problem</name> <argument_list>(<argument><expr><name>reduce_name</name></expr></argument>, <argument><expr><name>rcode</name></expr></argument>,
        <argument><expr><name><name>monoid</name><operator>-&gt;</operator><name>op</name><operator>-&gt;</operator><name>name</name></name></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>,
        <argument><expr><name><name>monoid</name><operator>-&gt;</operator><name>op</name><operator>-&gt;</operator><name>ztype</name><operator>-&gt;</operator><name>name</name></name></expr></argument>,
        <argument><expr><name><name>A</name><operator>-&gt;</operator><name>type</name><operator>-&gt;</operator><name>name</name></name></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <decl_stmt><decl><type><name>char</name></type> <name><name>filename</name> <index>[<expr><literal type="number">512</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>GxB_MAX_NAME_LEN</name></expr>]</index></name></decl> ;</decl_stmt>
    <expr_stmt><expr><call><name>sprintf</name> <argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><literal type="string">"/tmp/GB_reduce_%s.h"</literal></expr></argument>, <argument><expr><name>reduce_name</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name> <init>= <expr><call><name>fopen</name> <argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><literal type="string">"w"</literal></expr></argument>)</argument_list></call></expr></init></decl> ;</decl_stmt>

    <expr_stmt><expr><call><name>GB_macrofy_reduce</name> <argument_list>(<argument><expr><name>fp</name></expr></argument>, <argument><expr><name>rcode</name></expr></argument>, <argument><expr><name>monoid</name></expr></argument>, <argument><expr><name><name>A</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>fclose</name> <argument_list>(<argument><expr><name>fp</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
</block_content>}</block></function> 

</unit>
