<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GrB_Matrix_deserialize.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GrB_Matrix_deserialize: create a matrix from a serialized array of bytes</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// deserialize: create a GrB_Matrix from a blob of bytes</comment>

<comment type="line">// Identical to GxB_Matrix_deserialize, except that this method does not take</comment>
<comment type="line">// a descriptor as the last parameter.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB_serialize.h"</cpp:file></cpp:include>

<function><type><name>GrB_Info</name></type> <name>GrB_Matrix_deserialize</name>     <comment type="line">// deserialize blob into a GrB_Matrix</comment>
<parameter_list>(
    <comment type="line">// output:</comment>
    <parameter><decl><type><name>GrB_Matrix</name> <modifier>*</modifier></type><name>C</name></decl></parameter>,      <comment type="line">// output matrix created from the blob</comment>
    <comment type="line">// input:</comment>
    <parameter><decl><type><name>GrB_Type</name></type> <name>type</name></decl></parameter>,      <comment type="line">// type of the matrix C.  Required if the blob holds a</comment>
                        <comment type="line">// matrix of user-defined type.  May be NULL if blob</comment>
                        <comment type="line">// holds a built-in type; otherwise must match the</comment>
                        <comment type="line">// type of C.</comment>
    <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>blob</name></decl></parameter>,       <comment type="line">// the blob</comment>
    <parameter><decl><type><name>GrB_Index</name></type> <name>blob_size</name></decl></parameter>    <comment type="line">// size of the blob</comment>
)</parameter_list>
<block>{<block_content> 

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// check inputs</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <expr_stmt><expr><call><name>GB_WHERE1</name> <argument_list>(<argument><expr><literal type="string">"GrB_Matrix_deserialize (&amp;C, type, blob, blob_size)"</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>GB_BURBLE_START</name> <argument_list>(<argument><expr><literal type="string">"GrB_Matrix_deserialize"</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>GB_RETURN_IF_NULL</name> <argument_list>(<argument><expr><name>blob</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>GB_RETURN_IF_NULL</name> <argument_list>(<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// deserialize the blob into a matrix</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <decl_stmt><decl><type><name>GrB_Info</name></type> <name>info</name> <init>= <expr><call><name>GB_deserialize</name> <argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>GB_void</name> <operator>*</operator><operator>)</operator> <name>blob</name></expr></argument>,
        <argument><expr><operator>(</operator><name>size_t</name><operator>)</operator> <name>blob_size</name></expr></argument>, <argument><expr><name>Context</name></expr></argument>)</argument_list></call></expr></init></decl> ;</decl_stmt>
    <expr_stmt><expr><name>GB_BURBLE_END</name></expr> ;</expr_stmt>
    <return>return <expr><operator>(</operator><name>info</name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
