<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Source/GxB_Matrix_sort.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GxB_Matrix_sort: sort the values in each vector of a matrix</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB_sort.h"</cpp:file></cpp:include>

<function><type><name>GrB_Info</name></type> <name>GxB_Matrix_sort</name>
<parameter_list>(
    <comment type="line">// output:</comment>
    <parameter><decl><type><name>GrB_Matrix</name></type> <name>C</name></decl></parameter>,           <comment type="line">// matrix of sorted values</comment>
    <parameter><decl><type><name>GrB_Matrix</name></type> <name>P</name></decl></parameter>,           <comment type="line">// matrix containing the permutations</comment>
    <comment type="line">// input</comment>
    <parameter><decl><type><name>GrB_BinaryOp</name></type> <name>op</name></decl></parameter>,        <comment type="line">// comparator op</comment>
    <parameter><decl><type><name>GrB_Matrix</name></type> <name>A</name></decl></parameter>,           <comment type="line">// matrix to sort</comment>
    <parameter><decl><type><specifier>const</specifier> <name>GrB_Descriptor</name></type> <name>desc</name></decl></parameter>
)</parameter_list>
<block>{<block_content>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// check inputs</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <expr_stmt><expr><call><name>GB_WHERE1</name> <argument_list>(<argument><expr><literal type="string">"GxB_Matrix_sort (C, P, op, A, desc)"</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>GB_BURBLE_START</name> <argument_list>(<argument><expr><literal type="string">"GxB_Matrix_sort"</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>GB_RETURN_IF_NULL_OR_FAULTY</name> <argument_list>(<argument><expr><name>op</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name>GB_RETURN_IF_NULL_OR_FAULTY</name> <argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <comment type="line">// get the descriptor</comment>
    <expr_stmt><expr><call><name>GB_GET_DESCRIPTOR</name> <argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name>xx0</name></expr></argument>, <argument><expr><name>xx1</name></expr></argument>, <argument><expr><name>xx2</name></expr></argument>, <argument><expr><name>A_transpose</name></expr></argument>, <argument><expr><name>xx3</name></expr></argument>, <argument><expr><name>xx4</name></expr></argument>, <argument><expr><name>xx5</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <comment type="line">//--------------------------------------------------------------------------</comment>
    <comment type="line">// sort the matrix</comment>
    <comment type="line">//--------------------------------------------------------------------------</comment>

    <expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GB_sort</name> <argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>P</name></expr></argument>, <argument><expr><name>op</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>A_transpose</name></expr></argument>, <argument><expr><name>Context</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><name>GB_BURBLE_END</name></expr> ;</expr_stmt>
    <return>return <expr><operator>(</operator><name>info</name><operator>)</operator></expr> ;</return>
</block_content>}</block></function>

</unit>
