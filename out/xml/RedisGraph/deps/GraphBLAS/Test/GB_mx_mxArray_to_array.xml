<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/deps/GraphBLAS/Test/GB_mx_mxArray_to_array.c"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// GB_mx_mxArray_to_array: get a dense numerical built-in array</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<comment type="line">// SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2022, All Rights Reserved.</comment>
<comment type="line">// SPDX-License-Identifier: Apache-2.0</comment>

<comment type="line">//------------------------------------------------------------------------------</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"GB_mex.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>GB_mx_mxArray_to_array</name>     <comment type="line">// convert mxArray to array</comment>
<parameter_list>(
    <parameter><decl><type><specifier>const</specifier> <name>mxArray</name> <modifier>*</modifier></type><name>Xbuiltin</name></decl></parameter>,    <comment type="line">// input built-in array</comment>
    <comment type="line">// output:</comment>
    <parameter><decl><type><name>GB_void</name> <modifier>*</modifier><modifier>*</modifier></type><name>X</name></decl></parameter>,                <comment type="line">// pointer to numerical values (shallow)</comment>
    <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>nrows</name></decl></parameter>,             <comment type="line">// number of rows of X</comment>
    <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>ncols</name></decl></parameter>,             <comment type="line">// number of columns of X</comment>
    <parameter><decl><type><name>GrB_Type</name> <modifier>*</modifier></type><name>xtype</name></decl></parameter>             <comment type="line">// GraphBLAS type of X, NULL if error</comment>
)</parameter_list>
<block>{<block_content>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>mxIsNumeric</name> <argument_list>(<argument><expr><name>Xbuiltin</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>mxIsLogical</name> <argument_list>(<argument><expr><name>Xbuiltin</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>mexWarnMsgIdAndTxt</name> <argument_list>(<argument><expr><literal type="string">"GB:warn"</literal></expr></argument>,<argument><expr><literal type="string">"input must be numeric or logical array"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>mxIsSparse</name> <argument_list>(<argument><expr><name>Xbuiltin</name></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>mexWarnMsgIdAndTxt</name> <argument_list>(<argument><expr><literal type="string">"GB:warn"</literal></expr></argument>,<argument><expr><literal type="string">"input cannot be sparse"</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><operator>(</operator><operator>*</operator><name>X</name><operator>)</operator> <operator>=</operator> <call><name>mxGetData</name> <argument_list>(<argument><expr><name>Xbuiltin</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><operator>*</operator><name>nrows</name><operator>)</operator> <operator>=</operator> <call><name>mxGetM</name> <argument_list>(<argument><expr><name>Xbuiltin</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><operator>*</operator><name>ncols</name><operator>)</operator> <operator>=</operator> <call><name>mxGetN</name> <argument_list>(<argument><expr><name>Xbuiltin</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><operator>(</operator><operator>*</operator><name>xtype</name><operator>)</operator> <operator>=</operator> <call><name>GB_mx_Type</name> <argument_list>(<argument><expr><name>Xbuiltin</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
</block_content>}</block></function>

</unit>
