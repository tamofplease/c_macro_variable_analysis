<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/datatypes/set.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"set.h"</cpp:file></cpp:include>

<function><type><name>set</name> <modifier>*</modifier></type><name>Set_New</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
	<return>return <expr><call><name>raxNew</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name>Set_Contains</name><parameter_list>(<parameter><decl><type><name>set</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>SIValue</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <specifier>const</specifier></type> <name>hash</name> <init>= <expr><call><name>SIValue_HashCode</name><argument_list>(<argument><expr><name>v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return>return <expr><operator>(</operator><call><name>raxFind</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name>hash</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>hash</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator>!=</operator> <name>raxNotFound</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* Adds v to set. */</comment>
<function><type><name>bool</name></type> <name>Set_Add</name><parameter_list>(<parameter><decl><type><name>set</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>SIValue</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <specifier>const</specifier></type> <name>hash</name> <init>= <expr><call><name>SIValue_HashCode</name><argument_list>(<argument><expr><name>v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return>return <expr><call><name>raxTryInsert</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name>hash</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>hash</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* Removes v from set. */</comment>
<function><type><name>void</name></type> <name>Set_Remove</name><parameter_list>(<parameter><decl><type><name>set</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>SIValue</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <specifier>const</specifier></type> <name>hash</name> <init>= <expr><call><name>SIValue_HashCode</name><argument_list>(<argument><expr><name>v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>raxRemove</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name>hash</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>hash</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* Return number of elements in set. */</comment>
<function><type><name>uint64_t</name></type> <name>Set_Size</name><parameter_list>(<parameter><decl><type><name>set</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<return>return <expr><call><name>raxSize</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* Free set. */</comment>
<function><type><name>void</name></type> <name>Set_Free</name><parameter_list>(<parameter><decl><type><name>set</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>raxFree</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

</unit>
