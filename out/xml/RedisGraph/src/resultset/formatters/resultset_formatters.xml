<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/resultset/formatters/resultset_formatters.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"resultset_formatters.h"</cpp:file></cpp:include>

<function><type><name>ResultSetFormatter</name> <modifier>*</modifier></type><name>ResultSetFormatter_GetFormatter</name><parameter_list>(<parameter><decl><type><name>ResultSetFormatterType</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>ResultSetFormatter</name> <modifier>*</modifier></type><name>formatter</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<switch>switch<condition>(<expr><name>t</name></expr>)</condition> <block>{<block_content>
	<case>case <expr><name>FORMATTER_NOP</name></expr>:</case>
		<expr_stmt><expr><name>formatter</name> <operator>=</operator> <operator>&amp;</operator><name>ResultSetNOP</name></expr>;</expr_stmt>
		<break>break;</break>
	<case>case <expr><name>FORMATTER_VERBOSE</name></expr>:</case>
		<expr_stmt><expr><name>formatter</name> <operator>=</operator> <operator>&amp;</operator><name>ResultSetFormatterVerbose</name></expr>;</expr_stmt>
		<break>break;</break>
	<case>case <expr><name>FORMATTER_COMPACT</name></expr>:</case>
		<expr_stmt><expr><name>formatter</name> <operator>=</operator> <operator>&amp;</operator><name>ResultSetFormatterCompact</name></expr>;</expr_stmt>
		<break>break;</break>
	<default>default:</default>
		<expr_stmt><expr><call><name>RedisModule_Assert</name><argument_list>(<argument><expr><name>false</name> <operator>&amp;&amp;</operator> <literal type="string">"Unknown formatter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></switch>

	<return>return <expr><name>formatter</name></expr>;</return>
</block_content>}</block></function>

</unit>
