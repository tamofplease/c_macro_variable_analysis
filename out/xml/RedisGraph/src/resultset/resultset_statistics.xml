<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/resultset/resultset_statistics.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RG.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../query_ctx.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"resultset_statistics.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<function><type><name>bool</name></type> <name>ResultSetStat_IndicateModification</name>
<parameter_list>(
	<parameter><decl><type><specifier>const</specifier> <name>ResultSetStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>
)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>labels_added</name></name>          <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>nodes_created</name></name>         <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>nodes_deleted</name></name>         <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>properties_set</name></name>        <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>labels_removed</name></name>        <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>indices_deleted</name></name>       <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>indices_created</name></name>       <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>properties_removed</name></name>    <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>relationships_created</name></name> <operator>|</operator>
			<name><name>stats</name><operator>-&gt;</operator><name>relationships_deleted</name></name>
		<operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="line">// initialize resultset statistics</comment>
<function><type><name>void</name></type> <name>ResultSetStat_init</name>
<parameter_list>(
	<parameter><decl><type><name>ResultSetStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>  <comment type="line">// resultset statistics to initialize</comment>
)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>stats</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ResultSetStatistics</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="line">// emit resultset statistics</comment>
<function><type><name>void</name></type> <name>ResultSetStat_emit</name>
<parameter_list>(
	<parameter><decl><type><name>RedisModuleCtx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,              <comment type="line">// redis module context</comment>
	<parameter><decl><type><specifier>const</specifier> <name>ResultSetStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>  <comment type="line">// statistics to emit</comment>
)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>buflen</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type> <name><name>buff</name><index>[<expr><literal type="number">512</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name>resultset_size</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt> <comment type="line">// execution time, cached</comment>

	<comment type="line">// compute required space for resultset statistics</comment>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>index_creation</name></name></expr>)</condition><block type="pseudo"><block_content>            <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>index_deletion</name></name></expr>)</condition><block type="pseudo"><block_content>            <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>labels_added</name></name>          <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>nodes_created</name></name>         <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>nodes_deleted</name></name>         <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>labels_removed</name></name>        <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>properties_set</name></name>        <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>properties_removed</name></name>    <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>relationships_deleted</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>relationships_created</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>resultset_size</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><call><name>RedisModule_ReplyWithArray</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>resultset_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>labels_added</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Labels added: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>labels_added</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>labels_removed</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Labels removed: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>labels_removed</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>nodes_created</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Nodes created: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>nodes_created</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>properties_set</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Properties set: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>properties_set</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>properties_removed</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Properties removed: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>properties_removed</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>relationships_created</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Relationships created: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>relationships_created</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>nodes_deleted</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Nodes deleted: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>nodes_deleted</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>relationships_deleted</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Relationships deleted: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>relationships_deleted</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>index_creation</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Indices created: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>indices_created</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>index_deletion</name></name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Indices deleted: %d"</literal></expr></argument>, <argument><expr><name><name>stats</name><operator>-&gt;</operator><name>indices_deleted</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Cached execution: %d"</literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name>stats</name><operator>-&gt;</operator><name>cached</name></name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// emit query execution time</comment>
	<decl_stmt><decl><type><name>double</name></type> <name>t</name> <init>= <expr><call><name>QueryCtx_GetExecutionTime</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>buflen</name> <operator>=</operator> <call><name>sprintf</name><argument_list>(<argument><expr><name>buff</name></expr></argument>, <argument><expr><literal type="string">"Query internal execution time: %.6f milliseconds"</literal></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>buff</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ResultSetStat_Clear</name>
<parameter_list>(
	<parameter><decl><type><name>ResultSetStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>
)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>labels_added</name></name>          <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>nodes_deleted</name></name>         <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>nodes_created</name></name>         <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>properties_set</name></name>        <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>labels_removed</name></name>        <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>indices_created</name></name>       <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>indices_deleted</name></name>       <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>properties_removed</name></name>    <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>relationships_created</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>relationships_deleted</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>

</unit>
