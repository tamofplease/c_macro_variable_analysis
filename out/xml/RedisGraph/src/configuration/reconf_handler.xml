<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/configuration/reconf_handler.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RG.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util/rmalloc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"reconf_handler.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"util/thpool/pools.h"</cpp:file></cpp:include>

<comment type="line">// handler function invoked when config changes</comment>
<function><type><name>void</name></type> <name>reconf_handler</name><parameter_list>(<parameter><decl><type><name>Config_Option_Field</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<switch>switch <condition>(<expr><name>type</name></expr>)</condition>
	<block>{<block_content>
		<comment type="line">//----------------------------------------------------------------------</comment>
		<comment type="line">// max queued queries</comment>
		<comment type="line">//----------------------------------------------------------------------</comment>

		<case>case <expr><name>Config_MAX_QUEUED_QUERIES</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>uint64_t</name></type> <name>max_queued_queries</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>bool</name></type> <name>res</name> <init>= <expr><call><name>Config_Option_get</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>max_queued_queries</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>ThreadPools_SetMaxPendingWork</name><argument_list>(<argument><expr><name>max_queued_queries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block>
			<break>break;</break>
		
		<comment type="line">//----------------------------------------------------------------------</comment>
		<comment type="line">// query mem capacity</comment>
		<comment type="line">//----------------------------------------------------------------------</comment>

		<case>case <expr><name>Config_QUERY_MEM_CAPACITY</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>int64_t</name></type> <name>query_mem_capacity</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>bool</name></type> <name>res</name> <init>= <expr><call><name>Config_Option_get</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>query_mem_capacity</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>rm_set_mem_capacity</name><argument_list>(<argument><expr><name>query_mem_capacity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block>
			<break>break;</break>

        <comment type="line">//----------------------------------------------------------------------</comment>
        <comment type="line">// all other options</comment>
        <comment type="line">//----------------------------------------------------------------------</comment>
        <default>default :</default> 
			<return>return;</return>
    </block_content>}</block></switch>
</block_content>}</block></function>

</unit>
