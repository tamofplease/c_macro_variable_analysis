<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/graph/rg_matrix/rg_set_element_bool.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RG.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rg_utils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rg_matrix.h"</cpp:file></cpp:include>

<function><type><name>GrB_Info</name></type> <name>RG_Matrix_setElement_BOOL</name>      <comment type="line">// C (i,j) = x</comment>
<parameter_list>(
    <parameter><decl><type><name>RG_Matrix</name></type> <name>C</name></decl></parameter>,                        <comment type="line">// matrix to modify</comment>
    <parameter><decl><type><name>GrB_Index</name></type> <name>i</name></decl></parameter>,                        <comment type="line">// row index</comment>
    <parameter><decl><type><name>GrB_Index</name></type> <name>j</name></decl></parameter>                         <comment type="line">// column index</comment>
)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>C</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><call><name>RG_MATRIX_MULTI_EDGE</name><argument_list>(<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RG_Matrix_checkBounds</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name>bool</name></type> <name>v</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Info</name></type> <name>info</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>GrB_Matrix</name></type> <name>m</name>  <init>= <expr><call><name>RG_MATRIX_M</name><argument_list>(<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Matrix</name></type> <name>dp</name> <init>= <expr><call><name>RG_MATRIX_DELTA_PLUS</name><argument_list>(<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Matrix</name></type> <name>dm</name> <init>= <expr><call><name>RG_MATRIX_DELTA_MINUS</name><argument_list>(<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>bool</name></type>  <name>already_allocated</name>    <init>=  <expr><name>false</name></expr></init></decl>;</decl_stmt>  <comment type="line">// M[i,j] exists</comment>
	<decl_stmt><decl><type><name>bool</name></type>  <name>marked_for_deletion</name>  <init>=  <expr><name>false</name></expr></init></decl>;</decl_stmt>  <comment type="line">// dm[i,j] exists</comment>

	<if_stmt><if>if<condition>(<expr><call><name>RG_MATRIX_MAINTAIN_TRANSPOSE</name><argument_list>(<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>RG_Matrix_setElement_BOOL</name><argument_list>(<argument><expr><name><name>C</name><operator>-&gt;</operator><name>transposed</name></name></expr></argument>, <argument><expr><name>j</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_extractElement</name><argument_list>(<argument><expr><operator>&amp;</operator><name>v</name></expr></argument>, <argument><expr><name>dm</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>marked_for_deletion</name> <operator>=</operator> <operator>(</operator><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name><operator>)</operator></expr>;</expr_stmt>

	<if_stmt><if>if<condition>(<expr><name>marked_for_deletion</name></expr>)</condition> <block>{<block_content>
		<comment type="line">// unset delta-minus m already assign to true</comment>
		<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_removeElement</name><argument_list>(<argument><expr><name>dm</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_extractElement</name><argument_list>(<argument><expr><operator>&amp;</operator><name>v</name></expr></argument>, <argument><expr><name>m</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>already_allocated</name> <operator>=</operator> <operator>(</operator><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name><operator>)</operator></expr>;</expr_stmt>

		<if_stmt><if>if<condition>(<expr><operator>!</operator><name>already_allocated</name></expr>)</condition> <block>{<block_content>
			<comment type="line">// update entry to dp[i, j]</comment>
			<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_setElement_BOOL</name><argument_list>(<argument><expr><name>dp</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></else></if_stmt>

	<expr_stmt><expr><call><name>RG_Matrix_setDirty</name><argument_list>(<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><name>info</name></expr>;</return>
</block_content>}</block></function>

</unit>
