<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/graph/rg_matrix/rg_extract.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"RG.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rg_matrix.h"</cpp:file></cpp:include>

<function><type><name>GrB_Info</name></type> <name>RG_Matrix_extractElement_BOOL</name>     <comment type="line">// x = A(i,j)</comment>
<parameter_list>(
    <parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>x</name></decl></parameter>,                               <comment type="line">// extracted scalar</comment>
    <parameter><decl><type><specifier>const</specifier> <name>RG_Matrix</name></type> <name>A</name></decl></parameter>,                     <comment type="line">// matrix to extract a scalar from</comment>
    <parameter><decl><type><name>GrB_Index</name></type> <name>i</name></decl></parameter>,                           <comment type="line">// row index</comment>
    <parameter><decl><type><name>GrB_Index</name></type> <name>j</name></decl></parameter>                            <comment type="line">// column index</comment>
)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>x</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>A</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name>GrB_Info</name></type> <name>info</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Matrix</name></type>  <name>m</name>      <init>=  <expr><call><name>RG_MATRIX_M</name><argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Matrix</name></type>  <name>dp</name>     <init>=  <expr><call><name>RG_MATRIX_DELTA_PLUS</name><argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Matrix</name></type>  <name>dm</name>     <init>=  <expr><call><name>RG_MATRIX_DELTA_MINUS</name><argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line">// if 'delta-plus' exists return dp[i,j]</comment>
	<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_extractElement</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>dp</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if<condition>(<expr><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name></expr>)</condition> <block>{<block_content>
		<return>return <expr><name>info</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="line">// if dm[i,j] exists, return no value</comment>
	<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_extractElement</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>dm</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if<condition>(<expr><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name></expr>)</condition> <block>{<block_content>
		<comment type="line">// entry marked for deletion</comment>
		<return>return <expr><name>GrB_NO_VALUE</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="line">// entry isn't marked for deletion, see if it exists in 'm'</comment>
	<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_extractElement</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>m</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>info</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>GrB_Info</name></type> <name>RG_Matrix_extractElement_UINT64</name>   <comment type="line">// x = A(i,j)</comment>
<parameter_list>(
    <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>x</name></decl></parameter>,                           <comment type="line">// extracted scalar</comment>
    <parameter><decl><type><specifier>const</specifier> <name>RG_Matrix</name></type> <name>A</name></decl></parameter>,                     <comment type="line">// matrix to extract a scalar from</comment>
    <parameter><decl><type><name>GrB_Index</name></type> <name>i</name></decl></parameter>,                           <comment type="line">// row index</comment>
    <parameter><decl><type><name>GrB_Index</name></type> <name>j</name></decl></parameter>                            <comment type="line">// column index</comment>
)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>x</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>A</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name>GrB_Info</name></type> <name>info</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Matrix</name></type>  <name>m</name>      <init>=  <expr><call><name>RG_MATRIX_M</name><argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Matrix</name></type>  <name>dp</name>     <init>=  <expr><call><name>RG_MATRIX_DELTA_PLUS</name><argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GrB_Matrix</name></type>  <name>dm</name>     <init>=  <expr><call><name>RG_MATRIX_DELTA_MINUS</name><argument_list>(<argument><expr><name>A</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line">// if 'delta-plus' exists return dp[i,j]</comment>
	<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_extractElement</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>dp</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if<condition>(<expr><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name></expr>)</condition> <block>{<block_content>
		<return>return <expr><name>info</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="line">// if dm[i,j] exists, return no value</comment>
	<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_extractElement</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>dm</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if<condition>(<expr><name>info</name> <operator>==</operator> <name>GrB_SUCCESS</name></expr>)</condition> <block>{<block_content>
		<comment type="line">// entry marked for deletion</comment>
		<return>return <expr><name>GrB_NO_VALUE</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<comment type="line">// entry isn't marked for deletion, see if it exists in 'm'</comment>
	<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>GrB_Matrix_extractElement</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>m</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>info</name></expr>;</return>
</block_content>}</block></function>

</unit>
