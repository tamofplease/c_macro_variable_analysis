<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/graph/graph_statistics.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"graph_statistics.h"</cpp:file></cpp:include>

<comment type="line">// Initialize the node_count and edge_count arrays</comment>
<function><type><name>void</name></type> <name>GraphStatistics_init</name><parameter_list>(<parameter><decl><type><name>GraphStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>node_count</name></name> <operator>=</operator> <call><name>array_new</name><argument_list>(<argument><expr><name>uint64_t</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>stats</name><operator>-&gt;</operator><name>edge_count</name></name> <operator>=</operator> <call><name>array_new</name><argument_list>(<argument><expr><name>uint64_t</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>GraphStatistics_IntroduceRelationship</name><parameter_list>(<parameter><decl><type><name>GraphStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name> <operator>&amp;&amp;</operator> <name><name>stats</name><operator>-&gt;</operator><name>edge_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>array_append</name><argument_list>(<argument><expr><name><name>stats</name><operator>-&gt;</operator><name>edge_count</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>GraphStatistics_IntroduceLabel</name><parameter_list>(<parameter><decl><type><name>GraphStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name> <operator>&amp;&amp;</operator> <name><name>stats</name><operator>-&gt;</operator><name>node_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>array_append</name><argument_list>(<argument><expr><name><name>stats</name><operator>-&gt;</operator><name>node_count</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>uint64_t</name></type> <name>GraphStatistics_EdgeCount</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GraphStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>,
								   <parameter><decl><type><name>int</name></type> <name>relation_idx</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>relation_idx</name> <operator>&lt;</operator> <call><name>array_len</name><argument_list>(<argument><expr><name><name>stats</name><operator>-&gt;</operator><name>edge_count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name><name>stats</name><operator>-&gt;</operator><name>edge_count</name><index>[<expr><name>relation_idx</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint64_t</name></type> <name>GraphStatistics_NodeCount</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GraphStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>,
								   <parameter><decl><type><name>int</name></type> <name>label_idx</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>label_idx</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><call><name>array_len</name><argument_list>(<argument><expr><name><name>stats</name><operator>-&gt;</operator><name>node_count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if<condition>(<expr><name>label_idx</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
	<return>return <expr><name><name>stats</name><operator>-&gt;</operator><name>node_count</name><index>[<expr><name>label_idx</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>GraphStatistics_FreeInternals</name><parameter_list>(<parameter><decl><type><name>GraphStatistics</name> <modifier>*</modifier></type><name>stats</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>node_count</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>array_free</name><argument_list>(<argument><expr><name><name>stats</name><operator>-&gt;</operator><name>node_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if<condition>(<expr><name><name>stats</name><operator>-&gt;</operator><name>edge_count</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>array_free</name><argument_list>(<argument><expr><name><name>stats</name><operator>-&gt;</operator><name>edge_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

</unit>
