<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/serializers/decoders/decode_previous.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"decode_previous.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"prev/decoders.h"</cpp:file></cpp:include>

<function><type><name>GraphContext</name> <modifier>*</modifier></type><name>Decode_Previous</name><parameter_list>(<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>encver</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<switch>switch<condition>(<expr><name>encver</name></expr>)</condition> <block>{<block_content>
	<case>case <expr><literal type="number">8</literal></expr>:</case>
		<return>return <expr><call><name>RdbLoadGraphContext_v8</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><literal type="number">9</literal></expr>:</case>
		<return>return <expr><call><name>RdbLoadGraphContext_v9</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><literal type="number">10</literal></expr>:</case>
		<return>return <expr><call><name>RdbLoadGraphContext_v10</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><literal type="number">11</literal></expr>:</case>
		<return>return <expr><call><name>RdbLoadGraphContext_v11</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr>;</return>
	<default>default:</default>
		<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>false</name> <operator>&amp;&amp;</operator> <literal type="string">"attempted to read unsupported RedisGraph version from RDB file."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>NULL</name></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

</unit>
