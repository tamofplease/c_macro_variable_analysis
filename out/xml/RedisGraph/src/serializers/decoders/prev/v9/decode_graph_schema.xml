<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/serializers/decoders/prev/v9/decode_graph_schema.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"decode_v9.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>Schema</name> <modifier>*</modifier></type><name>_RdbLoadSchema</name>
<parameter_list>(
	<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>,
	<parameter><decl><type><name>GraphContext</name> <modifier>*</modifier></type><name>gc</name></decl></parameter>,
	<parameter><decl><type><name>SchemaType</name></type> <name>type</name></decl></parameter>
)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * id
	 * name
	 * #indices
	 * (index type, indexed property) X M */</comment>

	<decl_stmt><decl><type><name>int</name></type> <name>id</name> <init>= <expr><call><name>RedisModule_LoadUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name> <init>= <expr><call><name>RedisModule_LoadStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Schema</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><call><name>Schema_New</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>RedisModule_Free</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name>Index</name> <modifier>*</modifier></type><name>idx</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint</name></type> <name>index_count</name> <init>= <expr><call><name>RedisModule_LoadUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>uint</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>index_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>IndexType</name></type> <name>type</name> <init>= <expr><call><name>RedisModule_LoadUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>field_name</name> <init>= <expr><call><name>RedisModule_LoadStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>IndexField</name></type> <name>field</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>Attribute_ID</name></type> <name>field_id</name> <init>= <expr><call><name>GraphContext_FindOrAddAttribute</name><argument_list>(<argument><expr><name>gc</name></expr></argument>, <argument><expr><name>field_name</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>IndexField_New</name><argument_list>(<argument><expr><operator>&amp;</operator><name>field</name></expr></argument>, <argument><expr><name>field_id</name></expr></argument>, <argument><expr><name>field_name</name></expr></argument>, <argument><expr><name>INDEX_FIELD_DEFAULT_WEIGHT</name></expr></argument>,
				<argument><expr><name>INDEX_FIELD_DEFAULT_NOSTEM</name></expr></argument>, <argument><expr><name>INDEX_FIELD_DEFAULT_PHONETIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>Schema_AddIndex</name><argument_list>(<argument><expr><operator>&amp;</operator><name>idx</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>field</name></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_Free</name><argument_list>(<argument><expr><name>field_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>

	<return>return <expr><name>s</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>_RdbLoadAttributeKeys</name><parameter_list>(<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>, <parameter><decl><type><name>GraphContext</name> <modifier>*</modifier></type><name>gc</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * #attribute keys
	 * attribute keys
	 */</comment>

	<decl_stmt><decl><type><name>uint</name></type> <name>count</name> <init>= <expr><call><name>RedisModule_LoadUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>uint</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>attr</name> <init>= <expr><call><name>RedisModule_LoadStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>GraphContext_FindOrAddAttribute</name><argument_list>(<argument><expr><name>gc</name></expr></argument>, <argument><expr><name>attr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_Free</name><argument_list>(<argument><expr><name>attr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>RdbLoadGraphSchema_v9</name><parameter_list>(<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>, <parameter><decl><type><name>GraphContext</name> <modifier>*</modifier></type><name>gc</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * attribute keys (unified schema)
	 * #node schemas
	 * node schema X #node schemas
	 * #relation schemas
	 * unified relation schema
	 * relation schema X #relation schemas
	 */</comment>

	<comment type="line">// Attributes, Load the full attribute mapping.</comment>
	<expr_stmt><expr><call><name>_RdbLoadAttributeKeys</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>gc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// #Node schemas</comment>
	<decl_stmt><decl><type><name>uint</name></type> <name>schema_count</name> <init>= <expr><call><name>RedisModule_LoadUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line">// Load each node schema</comment>
	<expr_stmt><expr><name><name>gc</name><operator>-&gt;</operator><name>node_schemas</name></name> <operator>=</operator> <call><name>array_ensure_cap</name><argument_list>(<argument><expr><name><name>gc</name><operator>-&gt;</operator><name>node_schemas</name></name></expr></argument>, <argument><expr><name>schema_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>uint</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>schema_count</name></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><call><name>array_append</name><argument_list>(<argument><expr><name><name>gc</name><operator>-&gt;</operator><name>node_schemas</name></name></expr></argument>, <argument><expr><call><name>_RdbLoadSchema</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>gc</name></expr></argument>, <argument><expr><name>SCHEMA_NODE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>

	<comment type="line">// #Edge schemas</comment>
	<expr_stmt><expr><name>schema_count</name> <operator>=</operator> <call><name>RedisModule_LoadUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// Load each edge schema</comment>
	<expr_stmt><expr><name><name>gc</name><operator>-&gt;</operator><name>relation_schemas</name></name> <operator>=</operator> <call><name>array_ensure_cap</name><argument_list>(<argument><expr><name><name>gc</name><operator>-&gt;</operator><name>relation_schemas</name></name></expr></argument>, <argument><expr><name>schema_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>uint</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>schema_count</name></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><call><name>array_append</name><argument_list>(<argument><expr><name><name>gc</name><operator>-&gt;</operator><name>relation_schemas</name></name></expr></argument>, <argument><expr><call><name>_RdbLoadSchema</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>gc</name></expr></argument>, <argument><expr><name>SCHEMA_EDGE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>
</unit>
