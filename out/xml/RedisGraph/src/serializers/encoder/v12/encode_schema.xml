<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/serializers/encoder/v12/encode_schema.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"encode_v12.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>_RdbSaveAttributeKeys</name>
<parameter_list>(
	<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>,
	<parameter><decl><type><name>GraphContext</name> <modifier>*</modifier></type><name>gc</name></decl></parameter>
)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * #attribute keys
	 * attribute keys
	*/</comment>

	<decl_stmt><decl><type><name>uint</name></type> <name>count</name> <init>= <expr><call><name>GraphContext_AttributeCount</name><argument_list>(<argument><expr><name>gc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>uint</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>key</name> <init>= <expr><name><name>gc</name><operator>-&gt;</operator><name>string_mapping</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>RedisModule_SaveStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>_RdbSaveFullTextIndexData</name>
<parameter_list>(
	<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>,
	<parameter><decl><type><name>Index</name> <modifier>*</modifier></type><name>idx</name></decl></parameter>
)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * language
	 * #stopwords - N
	 * N * stopword
	 * #properties - M
	 * M * property {name, weight, nostem, phonetic} */</comment>

	<comment type="line">// encode language</comment>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>language</name> <init>= <expr><call><name>Index_GetLanguage</name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>RedisModule_SaveStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>language</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>language</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name>size_t</name></type> <name>stopwords_count</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>stopwords</name> <init>= <expr><call><name>Index_GetStopwords</name><argument_list>(<argument><expr><name>idx</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stopwords_count</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line">// encode stopwords count</comment>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>stopwords_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>stopwords_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>stopword</name> <init>= <expr><name><name>stopwords</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>RedisModule_SaveStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>stopword</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>stopword</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>rm_free</name><argument_list>(<argument><expr><name>stopword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>rm_free</name><argument_list>(<argument><expr><name>stopwords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// encode field count</comment>
	<decl_stmt><decl><type><name>uint</name></type> <name>fields_count</name> <init>= <expr><call><name>Index_FieldsCount</name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>fields_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>uint</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>fields_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<comment type="line">// encode field</comment>
		<expr_stmt><expr><call><name>RedisModule_SaveStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>idx</name><operator>-&gt;</operator><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>idx</name><operator>-&gt;</operator><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_SaveDouble</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>idx</name><operator>-&gt;</operator><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>weight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>idx</name><operator>-&gt;</operator><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>nostem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>RedisModule_SaveStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>idx</name><operator>-&gt;</operator><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>phonetic</name></expr></argument>, 
			<argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>idx</name><operator>-&gt;</operator><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>phonetic</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>_RdbSaveExactMatchIndex</name>
<parameter_list>(
	<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>,
	<parameter><decl><type><name>SchemaType</name></type> <name>type</name></decl></parameter>,
	<parameter><decl><type><name>Index</name> <modifier>*</modifier></type><name>idx</name></decl></parameter>
)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * #properties - M
	 * M * property */</comment>

	<decl_stmt><decl><type><name>uint</name></type> <name>fields_count</name> <init>= <expr><call><name>Index_FieldsCount</name><argument_list>(<argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line">// for exact-match index on an edge type, decrease `fields_count` by 2</comment>
	<comment type="line">// skipping `_src_id` and `_dest_id` fields</comment>
	<decl_stmt><decl><type><name>uint</name></type> <name>encode_fields_count</name> <init>=
		<expr><ternary><condition><expr><name>type</name> <operator>==</operator> <name>SCHEMA_EDGE</name></expr> ?</condition><then> <expr><name>fields_count</name> <operator>-</operator> <literal type="number">2</literal></expr> </then><else>: <expr><name>fields_count</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

	<comment type="line">// encode field count</comment>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>encode_fields_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>uint</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>fields_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>field_name</name> <init>= <expr><name><name>idx</name><operator>-&gt;</operator><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></init></decl>;</decl_stmt>

		<comment type="line">// for exact-match index on an edge type, skip both `_src_id` and</comment>
		<comment type="line">// `_dest_id` fields, these are introduce automaticly by the index</comment>
		<comment type="line">// construct routine</comment>
		<if_stmt><if>if<condition>(<expr><name>type</name> <operator>==</operator> <name>SCHEMA_EDGE</name> <operator>&amp;&amp;</operator> 
		   <operator>(</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>field_name</name></expr></argument>, <argument><expr><literal type="string">"_src_id"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator>
		    <call><name>strcmp</name><argument_list>(<argument><expr><name>field_name</name></expr></argument>, <argument><expr><literal type="string">"_dest_id"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

		<comment type="line">// encode field</comment>
		<expr_stmt><expr><call><name>RedisModule_SaveStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>field_name</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>field_name</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>_RdbSaveIndexData</name>
<parameter_list>(
	<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>,
	<parameter><decl><type><name>SchemaType</name></type> <name>type</name></decl></parameter>,
	<parameter><decl><type><name>Index</name> <modifier>*</modifier></type><name>idx</name></decl></parameter>
)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * type
	 * index data */</comment>

	<if_stmt><if>if<condition>(<expr><operator>!</operator><name>idx</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

	<comment type="line">// index type</comment>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>idx</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if<condition>(<expr><name><name>idx</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>IDX_FULLTEXT</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>_RdbSaveFullTextIndexData</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
	<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>_RdbSaveExactMatchIndex</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>_RdbSaveSchema</name><parameter_list>(<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>, <parameter><decl><type><name>Schema</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * id
	 * name
	 * #indices
	 * (index type, indexed property) X M */</comment>

	<comment type="line">// Schema ID.</comment>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// Schema name.</comment>
	<expr_stmt><expr><call><name>RedisModule_SaveStringBuffer</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// Number of indices.</comment>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><call><name>Schema_IndexCount</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// Exact match indices.</comment>
	<expr_stmt><expr><call><name>_RdbSaveIndexData</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// Fulltext indices.</comment>
	<expr_stmt><expr><call><name>_RdbSaveIndexData</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>fulltextIdx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>RdbSaveGraphSchema_v12</name><parameter_list>(<parameter><decl><type><name>RedisModuleIO</name> <modifier>*</modifier></type><name>rdb</name></decl></parameter>, <parameter><decl><type><name>GraphContext</name> <modifier>*</modifier></type><name>gc</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<comment type="block">/* Format:
	 * attribute keys (unified schema)
	 * #node schemas
	 * node schema X #node schemas
	 * #relation schemas
	 * relation schema X #relation schemas
	*/</comment>

	<comment type="line">// Serialize all attribute keys</comment>
	<expr_stmt><expr><call><name>_RdbSaveAttributeKeys</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>gc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// #Node schemas.</comment>
	<decl_stmt><decl><type><name>unsigned</name> <name>short</name></type> <name>schema_count</name> <init>= <expr><call><name>GraphContext_SchemaCount</name><argument_list>(<argument><expr><name>gc</name></expr></argument>, <argument><expr><name>SCHEMA_NODE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>schema_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// Name of label X #node schemas.</comment>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>schema_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>Schema</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>gc</name><operator>-&gt;</operator><name>node_schemas</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>_RdbSaveSchema</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>

	<comment type="line">// #Relation schemas.</comment>
	<decl_stmt><decl><type><name>unsigned</name> <name>short</name></type> <name>relation_count</name> <init>= <expr><call><name>GraphContext_SchemaCount</name><argument_list>(<argument><expr><name>gc</name></expr></argument>, <argument><expr><name>SCHEMA_EDGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>RedisModule_SaveUnsigned</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>relation_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// Name of label X #relation schemas.</comment>
	<for>for<control>(<init><decl><type><name>unsigned</name> <name>short</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>relation_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>Schema</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>gc</name><operator>-&gt;</operator><name>relation_schemas</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>_RdbSaveSchema</name><argument_list>(<argument><expr><name>rdb</name></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>
</unit>
