<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/RedisGraph/src/commands/cmd_delete.c"><comment type="block">/*
 * Copyright Redis Ltd. 2018 - present
 * Licensed under your choice of the Redis Source Available License 2.0 (RSALv2) or
 * the Server Side Public License v1 (SSPLv1).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"./cmd_context.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../graph/graph.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../graph/graphcontext.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../query_ctx.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../resultset/resultset.h"</cpp:file></cpp:include>

<comment type="block">/* Delete graph, removing the key from Redis and
 * freeing every resource allocated by the graph. */</comment>
<function><type><name>int</name></type> <name>Graph_Delete</name><parameter_list>(<parameter><decl><type><name>RedisModuleCtx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>RedisModuleString</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<if_stmt><if>if<condition>(<expr><name>argc</name> <operator>!=</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>RedisModule_WrongArity</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

	<decl_stmt><decl><type><name>int</name></type> <name>res</name> <init>= <expr><name>REDISMODULE_OK</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>strElapsed</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>QueryCtx_BeginTimer</name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// Start deletion timing.</comment>

	<decl_stmt><decl><type><name>RedisModuleString</name> <modifier>*</modifier></type><name>graph_name</name> <init>= <expr><name><name>argv</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>GraphContext</name> <modifier>*</modifier></type><name>gc</name> <init>= <expr><call><name>GraphContext_Retrieve</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>graph_name</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>    <comment type="line">// Increase ref count.</comment>
	<comment type="line">// If the GraphContext is null, key access failed and an error has been emitted.</comment>
	<if_stmt><if>if<condition>(<expr><operator>!</operator><name>gc</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>res</name> <operator>=</operator> <name>REDISMODULE_ERR</name></expr>;</expr_stmt>
		<goto>goto <name>cleanup</name>;</goto>
	</block_content>}</block></if></if_stmt>

	<comment type="line">// Remove graph from keyspace.</comment>
	<decl_stmt><decl><type><name>RedisModuleKey</name> <modifier>*</modifier></type><name>key</name> <init>= <expr><call><name>RedisModule_OpenKey</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>graph_name</name></expr></argument>, <argument><expr><name>REDISMODULE_WRITE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>RedisModule_DeleteKey</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// Decreases graph ref count.</comment>
	<expr_stmt><expr><call><name>RedisModule_CloseKey</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line">// Free key handle.</comment>
	<expr_stmt><expr><call><name>GraphContext_DecreaseRefCount</name><argument_list>(<argument><expr><name>gc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line">// Decrease graph ref count.</comment>

	<decl_stmt><decl><type><name>double</name></type> <name>t</name> <init>= <expr><call><name>QueryCtx_GetExecutionTime</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>asprintf</name><argument_list>(<argument><expr><operator>&amp;</operator><name>strElapsed</name></expr></argument>, <argument><expr><literal type="string">"Graph removed, internal execution time: %.6f milliseconds"</literal></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>RedisModule_ReplyWithStringBuffer</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>strElapsed</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>strElapsed</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// Delete commands should always modify slaves.</comment>
	<expr_stmt><expr><call><name>RedisModule_ReplicateVerbatim</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>cleanup</name>:</label>
	<expr_stmt><expr><call><name>QueryCtx_Free</name><argument_list>()</argument_list></call></expr>;</expr_stmt> <comment type="line">// Reset the QueryCtx and free its allocations.</comment>
	<if_stmt><if>if<condition>(<expr><name>strElapsed</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>strElapsed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<return>return <expr><name>res</name></expr>;</return>
</block_content>}</block></function>

</unit>
