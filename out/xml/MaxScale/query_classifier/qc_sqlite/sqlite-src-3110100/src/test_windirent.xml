<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/MaxScale/query_classifier/qc_sqlite/sqlite-src-3110100/src/test_windirent.c"><comment type="block">/*
** 2015 November 30
**
** The author disclaims copyright to this source code.  In place of
** a legal notice, here is a blessing:
**
**    May you do good and not evil.
**    May you find forgiveness for yourself and forgive others.
**    May you share freely, never taking more than you give.
**
*************************************************************************
** This file contains code to implement most of the opendir() family of
** POSIX functions on Win32 using the MSVCRT.
*/</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test_windirent.h"</cpp:file></cpp:include>

<comment type="block">/*
** Implementation of the POSIX opendir() function using the MSVCRT.
*/</comment>
<function><type><name>LPDIR</name></type> <name>opendir</name><parameter_list>(
  <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dirname</name></decl></parameter>
)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name><name>struct</name> <name>_finddata_t</name></name></type> <name>data</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>LPDIR</name></type> <name>dirp</name> <init>= <expr><operator>(</operator><name>LPDIR</name><operator>)</operator><call><name>sqlite3_malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>DIR</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>SIZE_T</name></type> <name>namesize</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>name</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

  <if_stmt><if>if<condition>( <expr><name>dirp</name><operator>==</operator><name>NULL</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
  <expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>dirp</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>DIR</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="block">/* TODO: Remove this if Unix-style root paths are not used. */</comment>
  <if_stmt><if>if<condition>( <expr><call><name>sqlite3_stricmp</name><argument_list>(<argument><expr><name>dirname</name></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call><operator>==</operator><literal type="number">0</literal></expr> )</condition><block>{<block_content>
    <expr_stmt><expr><name>dirname</name> <operator>=</operator> <call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"SystemDrive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><call><name>_snprintf</name><argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>name</name></name></expr></argument>, <argument><expr><name>namesize</name></expr></argument>, <argument><expr><literal type="string">"%s\\*"</literal></expr></argument>, <argument><expr><name>dirname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_handle</name></name> <operator>=</operator> <call><name>_findfirst</name><argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>name</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt><if>if<condition>( <expr><name><name>dirp</name><operator>-&gt;</operator><name>d_handle</name></name><operator>==</operator><name>BAD_INTPTR_T</name></expr> )</condition><block>{<block_content>
    <expr_stmt><expr><call><name>closedir</name><argument_list>(<argument><expr><name>dirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>NULL</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <comment type="block">/* TODO: Remove this block to allow hidden and system files. */</comment>
  <if_stmt><if>if<condition>( <expr><name><name>data</name><operator>.</operator><name>attrib</name></name><operator>&amp;</operator><name>_A_HIDDEN</name> <operator>||</operator> <name><name>data</name><operator>.</operator><name>attrib</name></name><operator>&amp;</operator><name>_A_SYSTEM</name></expr> )</condition><block>{<block_content>
    <if_stmt><if>if<condition>( <expr><call><name>_findnext</name><argument_list>(<argument><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_handle</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data</name></expr></argument>)</argument_list></call><operator>==</operator><operator>-</operator><literal type="number">1</literal></expr> )</condition><block>{<block_content>
      <expr_stmt><expr><call><name>closedir</name><argument_list>(<argument><expr><name>dirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>NULL</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_attributes</name></name> <operator>=</operator> <name><name>data</name><operator>.</operator><name>attrib</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_name</name></name></expr></argument>, <argument><expr><name><name>data</name><operator>.</operator><name>name</name></name></expr></argument>, <argument><expr><name>NAME_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_name</name><index>[<expr><name>NAME_MAX</name></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

  <return>return <expr><name>dirp</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
** Implementation of the POSIX readdir() function using the MSVCRT.
*/</comment>
<function><type><name>LPDIRENT</name></type> <name>readdir</name><parameter_list>(
  <parameter><decl><type><name>LPDIR</name></type> <name>dirp</name></decl></parameter>
)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name><name>struct</name> <name>_finddata_t</name></name></type> <name>data</name></decl>;</decl_stmt>

  <if_stmt><if>if<condition>( <expr><name>dirp</name><operator>==</operator><name>NULL</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

  <if_stmt><if>if<condition>( <expr><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_ino</name></name><operator>==</operator><literal type="number">0</literal></expr> )</condition><block>{<block_content>
    <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_ino</name></name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_next</name><operator>.</operator><name>d_ino</name></name><operator>++</operator></expr>;</expr_stmt>

    <return>return <expr><operator>&amp;</operator><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name></name></expr>;</return>
  </block_content>}</block></if></if_stmt>

<label><name>next</name>:</label>

  <if_stmt><if>if<condition>( <expr><call><name>_findnext</name><argument_list>(<argument><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_handle</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data</name></expr></argument>)</argument_list></call><operator>==</operator><operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

  <comment type="block">/* TODO: Remove this block to allow hidden and system files. */</comment>
  <if_stmt><if>if<condition>( <expr><name><name>data</name><operator>.</operator><name>attrib</name></name><operator>&amp;</operator><name>_A_HIDDEN</name></expr> )</condition><block type="pseudo"><block_content> <goto>goto <name>next</name>;</goto></block_content></block></if></if_stmt>
  <if_stmt><if>if<condition>( <expr><name><name>data</name><operator>.</operator><name>attrib</name></name><operator>&amp;</operator><name>_A_SYSTEM</name></expr> )</condition><block type="pseudo"><block_content> <goto>goto <name>next</name>;</goto></block_content></block></if></if_stmt>

  <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_next</name><operator>.</operator><name>d_ino</name></name><operator>++</operator></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_next</name><operator>.</operator><name>d_attributes</name></name> <operator>=</operator> <name><name>data</name><operator>.</operator><name>attrib</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_next</name><operator>.</operator><name>d_name</name></name></expr></argument>, <argument><expr><name><name>data</name><operator>.</operator><name>name</name></name></expr></argument>, <argument><expr><name>NAME_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_next</name><operator>.</operator><name>d_name</name><index>[<expr><name>NAME_MAX</name></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

  <return>return <expr><operator>&amp;</operator><name><name>dirp</name><operator>-&gt;</operator><name>d_next</name></name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
** Implementation of the POSIX readdir_r() function using the MSVCRT.
*/</comment>
<function><type><name>INT</name></type> <name>readdir_r</name><parameter_list>(
  <parameter><decl><type><name>LPDIR</name></type> <name>dirp</name></decl></parameter>,
  <parameter><decl><type><name>LPDIRENT</name></type> <name>entry</name></decl></parameter>,
  <parameter><decl><type><name>LPDIRENT</name> <modifier>*</modifier></type><name>result</name></decl></parameter>
)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name><name>struct</name> <name>_finddata_t</name></name></type> <name>data</name></decl>;</decl_stmt>

  <if_stmt><if>if<condition>( <expr><name>dirp</name><operator>==</operator><name>NULL</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>EBADF</name></expr>;</return></block_content></block></if></if_stmt>

  <if_stmt><if>if<condition>( <expr><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_ino</name></name><operator>==</operator><literal type="number">0</literal></expr> )</condition><block>{<block_content>
    <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_ino</name></name><operator>++</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_next</name><operator>.</operator><name>d_ino</name></name><operator>++</operator></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>d_ino</name></name> <operator>=</operator> <name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_ino</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>d_attributes</name></name> <operator>=</operator> <name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_attributes</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>entry</name><operator>-&gt;</operator><name>d_name</name></name></expr></argument>, <argument><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_first</name><operator>.</operator><name>d_name</name></name></expr></argument>, <argument><expr><name>NAME_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>d_name</name><index>[<expr><name>NAME_MAX</name></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt><expr><operator>*</operator><name>result</name> <operator>=</operator> <name>entry</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>

<label><name>next</name>:</label>

  <if_stmt><if>if<condition>( <expr><call><name>_findnext</name><argument_list>(<argument><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_handle</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data</name></expr></argument>)</argument_list></call><operator>==</operator><operator>-</operator><literal type="number">1</literal></expr> )</condition><block>{<block_content>
    <expr_stmt><expr><operator>*</operator><name>result</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
    <return>return <expr><name>ENOENT</name></expr>;</return>
  </block_content>}</block></if></if_stmt>

  <comment type="block">/* TODO: Remove this block to allow hidden and system files. */</comment>
  <if_stmt><if>if<condition>( <expr><name><name>data</name><operator>.</operator><name>attrib</name></name><operator>&amp;</operator><name>_A_HIDDEN</name></expr> )</condition><block type="pseudo"><block_content> <goto>goto <name>next</name>;</goto></block_content></block></if></if_stmt>
  <if_stmt><if>if<condition>( <expr><name><name>data</name><operator>.</operator><name>attrib</name></name><operator>&amp;</operator><name>_A_SYSTEM</name></expr> )</condition><block type="pseudo"><block_content> <goto>goto <name>next</name>;</goto></block_content></block></if></if_stmt>

  <expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>d_ino</name></name> <operator>=</operator> <operator>(</operator><name>ino_t</name><operator>)</operator><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt> <comment type="block">/* not available */</comment>
  <expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>d_attributes</name></name> <operator>=</operator> <name><name>data</name><operator>.</operator><name>attrib</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name><name>entry</name><operator>-&gt;</operator><name>d_name</name></name></expr></argument>, <argument><expr><name><name>data</name><operator>.</operator><name>name</name></name></expr></argument>, <argument><expr><name>NAME_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>entry</name><operator>-&gt;</operator><name>d_name</name><index>[<expr><name>NAME_MAX</name></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

  <expr_stmt><expr><operator>*</operator><name>result</name> <operator>=</operator> <name>entry</name></expr>;</expr_stmt>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
** Implementation of the POSIX closedir() function using the MSVCRT.
*/</comment>
<function><type><name>INT</name></type> <name>closedir</name><parameter_list>(
  <parameter><decl><type><name>LPDIR</name></type> <name>dirp</name></decl></parameter>
)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name>INT</name></type> <name>result</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <if_stmt><if>if<condition>( <expr><name>dirp</name><operator>==</operator><name>NULL</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

  <if_stmt><if>if<condition>( <expr><name><name>dirp</name><operator>-&gt;</operator><name>d_handle</name></name><operator>!=</operator><name>NULL_INTPTR_T</name> <operator>&amp;&amp;</operator> <name><name>dirp</name><operator>-&gt;</operator><name>d_handle</name></name><operator>!=</operator><name>BAD_INTPTR_T</name></expr> )</condition><block>{<block_content>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>_findclose</name><argument_list>(<argument><expr><name><name>dirp</name><operator>-&gt;</operator><name>d_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>

  <expr_stmt><expr><call><name>sqlite3_free</name><argument_list>(<argument><expr><name>dirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* defined(WIN32) &amp;&amp; defined(_MSC_VER) */</comment>
</unit>
