<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/MaxScale/query_classifier/qc_sqlite/sqlite-src-3110100/src/test_btree.c"><comment type="block">/*
** 2007 May 05
**
** The author disclaims copyright to this source code.  In place of
** a legal notice, here is a blessing:
**
**    May you do good and not evil.
**    May you find forgiveness for yourself and forgive others.
**    May you share freely, never taking more than you give.
**
*************************************************************************
** Code for testing the btree.c module in SQLite.  This code
** is not included in the SQLite library.  It is used for automated
** testing of the SQLite library.
*/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"btreeInt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;tcl.h&gt;</cpp:file></cpp:include>

<comment type="block">/*
** Usage: sqlite3_shared_cache_report
**
** Return a list of file that are shared and the number of
** references to each file.
*/</comment>
<function><type><name>int</name></type> <name>sqlite3BtreeSharedCacheReport</name><parameter_list>(
  <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>clientData</name></decl></parameter>,
  <parameter><decl><type><name>Tcl_Interp</name> <modifier>*</modifier></type><name>interp</name></decl></parameter>,
  <parameter><decl><type><name>int</name></type> <name>objc</name></decl></parameter>,
  <parameter><decl><type><name>Tcl_Obj</name> <modifier>*</modifier><name>CONST</name></type> <name><name>objv</name><index>[]</index></name></decl></parameter>
)</parameter_list><block>{<block_content>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SQLITE_OMIT_SHARED_CACHE</name></cpp:ifndef>
  <decl_stmt><decl><type><specifier>extern</specifier> <name>BtShared</name> <modifier>*</modifier></type><name>sqlite3SharedCacheList</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>BtShared</name> <modifier>*</modifier></type><name>pBt</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>Tcl_Obj</name> <modifier>*</modifier></type><name>pRet</name> <init>= <expr><call><name>Tcl_NewObj</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <for>for<control>(<init><expr><name>pBt</name><operator>=</operator><call><name>GLOBAL</name><argument_list>(<argument><expr><name>BtShared</name><operator>*</operator></expr></argument>,<argument><expr><name>sqlite3SharedCacheList</name></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><name>pBt</name></expr>;</condition> <incr><expr><name>pBt</name><operator>=</operator><name><name>pBt</name><operator>-&gt;</operator><name>pNext</name></name></expr></incr>)</control><block>{<block_content>
    <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>zFile</name> <init>= <expr><call><name>sqlite3PagerFilename</name><argument_list>(<argument><expr><name><name>pBt</name><operator>-&gt;</operator><name>pPager</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>Tcl_ListObjAppendElement</name><argument_list>(<argument><expr><name>interp</name></expr></argument>, <argument><expr><name>pRet</name></expr></argument>, <argument><expr><call><name>Tcl_NewStringObj</name><argument_list>(<argument><expr><name>zFile</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>Tcl_ListObjAppendElement</name><argument_list>(<argument><expr><name>interp</name></expr></argument>, <argument><expr><name>pRet</name></expr></argument>, <argument><expr><call><name>Tcl_NewIntObj</name><argument_list>(<argument><expr><name><name>pBt</name><operator>-&gt;</operator><name>nRef</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>
  <expr_stmt><expr><call><name>Tcl_SetObjResult</name><argument_list>(<argument><expr><name>interp</name></expr></argument>, <argument><expr><name>pRet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
  <return>return <expr><name>TCL_OK</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
** Print debugging information about all cursors to standard output.
*/</comment>
<function><type><name>void</name></type> <name>sqlite3BtreeCursorList</name><parameter_list>(<parameter><decl><type><name>Btree</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list><block>{<block_content>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>SQLITE_DEBUG</name></cpp:ifdef>
  <decl_stmt><decl><type><name>BtCursor</name> <modifier>*</modifier></type><name>pCur</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>BtShared</name> <modifier>*</modifier></type><name>pBt</name> <init>= <expr><name><name>p</name><operator>-&gt;</operator><name>pBt</name></name></expr></init></decl>;</decl_stmt>
  <for>for<control>(<init><expr><name>pCur</name><operator>=</operator><name><name>pBt</name><operator>-&gt;</operator><name>pCursor</name></name></expr>;</init> <condition><expr><name>pCur</name></expr>;</condition> <incr><expr><name>pCur</name><operator>=</operator><name><name>pCur</name><operator>-&gt;</operator><name>pNext</name></name></expr></incr>)</control><block>{<block_content>
    <decl_stmt><decl><type><name>MemPage</name> <modifier>*</modifier></type><name>pPage</name> <init>= <expr><name><name>pCur</name><operator>-&gt;</operator><name>apPage</name><index>[<expr><name><name>pCur</name><operator>-&gt;</operator><name>iPage</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>zMode</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name><name>pCur</name><operator>-&gt;</operator><name>curFlags</name></name> <operator>&amp;</operator> <name>BTCF_WriteFlag</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="string">"rw"</literal></expr> </then><else>: <expr><literal type="string">"ro"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>sqlite3DebugPrintf</name><argument_list>(<argument><expr><literal type="string">"CURSOR %p rooted at %4d(%s) currently at %d.%d%s\n"</literal></expr></argument>,
       <argument><expr><name>pCur</name></expr></argument>, <argument><expr><name><name>pCur</name><operator>-&gt;</operator><name>pgnoRoot</name></name></expr></argument>, <argument><expr><name>zMode</name></expr></argument>,
       <argument><expr><ternary><condition><expr><name>pPage</name></expr> ?</condition><then> <expr><name><name>pPage</name><operator>-&gt;</operator><name>pgno</name></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>, <argument><expr><name><name>pCur</name><operator>-&gt;</operator><name>aiIdx</name><index>[<expr><name><name>pCur</name><operator>-&gt;</operator><name>iPage</name></name></expr>]</index></name></expr></argument>,
       <argument><expr><ternary><condition><expr><operator>(</operator><name><name>pCur</name><operator>-&gt;</operator><name>eState</name></name><operator>==</operator><name>CURSOR_VALID</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="string">""</literal></expr> </then><else>: <expr><literal type="string">" eof"</literal></expr></else></ternary></expr></argument>
    )</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></for>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>
</unit>
