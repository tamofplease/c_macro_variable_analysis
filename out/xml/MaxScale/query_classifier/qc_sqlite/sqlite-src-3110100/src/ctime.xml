<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/MaxScale/query_classifier/qc_sqlite/sqlite-src-3110100/src/ctime.c"><comment type="block">/*
** 2010 February 23
**
** The author disclaims copyright to this source code.  In place of
** a legal notice, here is a blessing:
**
**    May you do good and not evil.
**    May you find forgiveness for yourself and forgive others.
**    May you share freely, never taking more than you give.
**
*************************************************************************
**
** This file implements routines used to report what compile-time options
** SQLite was built with.
*/</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SQLITE_OMIT_COMPILEOPTION_DIAGS</name></cpp:ifndef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sqliteInt.h"</cpp:file></cpp:include>

<comment type="block">/*
** An array of names of all compile-time options.  This array should 
** be sorted A-Z.
**
** This array looks large, but in a typical installation actually uses
** only a handful of compile-time options, so most times this array is usually
** rather short and uses little memory space.
*/</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>azCompileOpt</name><index>[]</index></name> <init>= <expr><block>{

<comment type="block">/* These macros are provided to "stringify" the value of the define
** for those options in which the value is meaningful. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CTIMEOPT_VAL_</name><parameter_list>(<parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>#opt</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CTIMEOPT_VAL</name><parameter_list>(<parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CTIMEOPT_VAL_(opt)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_32BIT_ROWID</name></expr></cpp:if>
  <expr><literal type="string">"32BIT_ROWID"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_4_BYTE_ALIGNED_MALLOC</name></expr></cpp:if>
  <expr><literal type="string">"4_BYTE_ALIGNED_MALLOC"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_CASE_SENSITIVE_LIKE</name></expr></cpp:if>
  <expr><literal type="string">"CASE_SENSITIVE_LIKE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_CHECK_PAGES</name></expr></cpp:if>
  <expr><literal type="string">"CHECK_PAGES"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_COVERAGE_TEST</name></expr></cpp:if>
  <expr><literal type="string">"COVERAGE_TEST"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_DEBUG</name></expr></cpp:if>
  <expr><literal type="string">"DEBUG"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_DEFAULT_LOCKING_MODE</name></expr></cpp:if>
  <expr><literal type="string">"DEFAULT_LOCKING_MODE="</literal> <call><name>CTIMEOPT_VAL</name><argument_list>(<argument><expr><name>SQLITE_DEFAULT_LOCKING_MODE</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_DEFAULT_MMAP_SIZE</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_DEFAULT_MMAP_SIZE_xc</name></expr></argument>)</argument_list></call></expr></cpp:if>
  <expr><literal type="string">"DEFAULT_MMAP_SIZE="</literal> <call><name>CTIMEOPT_VAL</name><argument_list>(<argument><expr><name>SQLITE_DEFAULT_MMAP_SIZE</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_DISABLE_DIRSYNC</name></expr></cpp:if>
  <expr><literal type="string">"DISABLE_DIRSYNC"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_DISABLE_LFS</name></expr></cpp:if>
  <expr><literal type="string">"DISABLE_LFS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_8_3_NAMES</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_8_3_NAMES"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_API_ARMOR</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_API_ARMOR"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_ATOMIC_WRITE</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_ATOMIC_WRITE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_CEROD</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_CEROD"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_COLUMN_METADATA</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_COLUMN_METADATA"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_DBSTAT_VTAB</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_DBSTAT_VTAB"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_EXPENSIVE_ASSERT</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_EXPENSIVE_ASSERT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_FTS1</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_FTS1"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_FTS2</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_FTS2"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_FTS3</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_FTS3"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_FTS3_PARENTHESIS</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_FTS3_PARENTHESIS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_FTS4</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_FTS4"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_FTS5</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_FTS5"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_ICU</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_ICU"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_IOTRACE</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_IOTRACE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_JSON1</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_JSON1"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_LOAD_EXTENSION</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_LOAD_EXTENSION"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_LOCKING_STYLE</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_LOCKING_STYLE="</literal> <call><name>CTIMEOPT_VAL</name><argument_list>(<argument><expr><name>SQLITE_ENABLE_LOCKING_STYLE</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_MEMORY_MANAGEMENT</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_MEMORY_MANAGEMENT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_MEMSYS3</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_MEMSYS3"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_MEMSYS5</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_MEMSYS5"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_OVERSIZE_CELL_CHECK</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_OVERSIZE_CELL_CHECK"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_RTREE</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_RTREE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_ENABLE_STAT4</name></expr></argument>)</argument_list></call></expr></cpp:if>
  <expr><literal type="string">"ENABLE_STAT4"</literal></expr>,
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_ENABLE_STAT3</name></expr></argument>)</argument_list></call></expr></cpp:elif>
  <expr><literal type="string">"ENABLE_STAT3"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_UNLOCK_NOTIFY</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_UNLOCK_NOTIFY"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_UPDATE_DELETE_LIMIT</name></expr></cpp:if>
  <expr><literal type="string">"ENABLE_UPDATE_DELETE_LIMIT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_HAS_CODEC</name></expr></cpp:if>
  <expr><literal type="string">"HAS_CODEC"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_ISNAN</name> <operator>||</operator> <name>SQLITE_HAVE_ISNAN</name></expr></cpp:if>
  <expr><literal type="string">"HAVE_ISNAN"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_HOMEGROWN_RECURSIVE_MUTEX</name></expr></cpp:if>
  <expr><literal type="string">"HOMEGROWN_RECURSIVE_MUTEX"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_IGNORE_AFP_LOCK_ERRORS</name></expr></cpp:if>
  <expr><literal type="string">"IGNORE_AFP_LOCK_ERRORS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_IGNORE_FLOCK_LOCK_ERRORS</name></expr></cpp:if>
  <expr><literal type="string">"IGNORE_FLOCK_LOCK_ERRORS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>SQLITE_INT64_TYPE</name></cpp:ifdef>
  <expr><literal type="string">"INT64_TYPE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>SQLITE_LIKE_DOESNT_MATCH_BLOBS</name></cpp:ifdef>
  <expr><literal type="string">"LIKE_DOESNT_MATCH_BLOBS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_LOCK_TRACE</name></expr></cpp:if>
  <expr><literal type="string">"LOCK_TRACE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_MAX_MMAP_SIZE</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_MAX_MMAP_SIZE_xc</name></expr></argument>)</argument_list></call></expr></cpp:if>
  <expr><literal type="string">"MAX_MMAP_SIZE="</literal> <call><name>CTIMEOPT_VAL</name><argument_list>(<argument><expr><name>SQLITE_MAX_MMAP_SIZE</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>SQLITE_MAX_SCHEMA_RETRY</name></cpp:ifdef>
  <expr><literal type="string">"MAX_SCHEMA_RETRY="</literal> <call><name>CTIMEOPT_VAL</name><argument_list>(<argument><expr><name>SQLITE_MAX_SCHEMA_RETRY</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_MEMDEBUG</name></expr></cpp:if>
  <expr><literal type="string">"MEMDEBUG"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_MIXED_ENDIAN_64BIT_FLOAT</name></expr></cpp:if>
  <expr><literal type="string">"MIXED_ENDIAN_64BIT_FLOAT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_NO_SYNC</name></expr></cpp:if>
  <expr><literal type="string">"NO_SYNC"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_ALTERTABLE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_ALTERTABLE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_ANALYZE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_ANALYZE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_ATTACH</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_ATTACH"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_AUTHORIZATION</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_AUTHORIZATION"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_AUTOINCREMENT</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_AUTOINCREMENT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_AUTOINIT</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_AUTOINIT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_AUTOMATIC_INDEX</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_AUTOMATIC_INDEX"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_AUTORESET</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_AUTORESET"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_AUTOVACUUM</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_AUTOVACUUM"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_BETWEEN_OPTIMIZATION</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_BETWEEN_OPTIMIZATION"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_BLOB_LITERAL</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_BLOB_LITERAL"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_BTREECOUNT</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_BTREECOUNT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_BUILTIN_TEST</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_BUILTIN_TEST"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_CAST</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_CAST"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_CHECK</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_CHECK"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_COMPLETE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_COMPLETE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_COMPOUND_SELECT</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_COMPOUND_SELECT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_CTE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_CTE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_DATETIME_FUNCS</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_DATETIME_FUNCS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_DECLTYPE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_DECLTYPE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_DEPRECATED</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_DEPRECATED"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_DISKIO</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_DISKIO"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_EXPLAIN</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_EXPLAIN"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_FLAG_PRAGMAS</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_FLAG_PRAGMAS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_FLOATING_POINT</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_FLOATING_POINT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_FOREIGN_KEY</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_FOREIGN_KEY"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_GET_TABLE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_GET_TABLE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_INCRBLOB</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_INCRBLOB"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_INTEGRITY_CHECK</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_INTEGRITY_CHECK"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_LIKE_OPTIMIZATION</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_LIKE_OPTIMIZATION"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_LOAD_EXTENSION</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_LOAD_EXTENSION"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_LOCALTIME</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_LOCALTIME"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_LOOKASIDE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_LOOKASIDE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_MEMORYDB</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_MEMORYDB"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_OR_OPTIMIZATION</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_OR_OPTIMIZATION"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_PAGER_PRAGMAS</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_PAGER_PRAGMAS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_PRAGMA</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_PRAGMA"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_PROGRESS_CALLBACK</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_PROGRESS_CALLBACK"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_QUICKBALANCE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_QUICKBALANCE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_REINDEX</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_REINDEX"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_SCHEMA_PRAGMAS</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_SCHEMA_PRAGMAS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_SCHEMA_VERSION_PRAGMAS"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_SHARED_CACHE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_SHARED_CACHE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_SUBQUERY</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_SUBQUERY"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_TCL_VARIABLE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_TCL_VARIABLE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_TEMPDB</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_TEMPDB"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_TRACE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_TRACE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_TRIGGER</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_TRIGGER"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_TRUNCATE_OPTIMIZATION</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_TRUNCATE_OPTIMIZATION"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_UTF16</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_UTF16"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_VACUUM</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_VACUUM"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_VIEW</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_VIEW"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_VIRTUALTABLE</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_VIRTUALTABLE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_WAL</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_WAL"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_WSD</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_WSD"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_OMIT_XFER_OPT</name></expr></cpp:if>
  <expr><literal type="string">"OMIT_XFER_OPT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_PERFORMANCE_TRACE</name></expr></cpp:if>
  <expr><literal type="string">"PERFORMANCE_TRACE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_PROXY_DEBUG</name></expr></cpp:if>
  <expr><literal type="string">"PROXY_DEBUG"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_RTREE_INT_ONLY</name></expr></cpp:if>
  <expr><literal type="string">"RTREE_INT_ONLY"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_SECURE_DELETE</name></expr></cpp:if>
  <expr><literal type="string">"SECURE_DELETE"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_SMALL_STACK</name></expr></cpp:if>
  <expr><literal type="string">"SMALL_STACK"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_SOUNDEX</name></expr></cpp:if>
  <expr><literal type="string">"SOUNDEX"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_SYSTEM_MALLOC</name></expr></cpp:if>
  <expr><literal type="string">"SYSTEM_MALLOC"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_TCL</name></expr></cpp:if>
  <expr><literal type="string">"TCL"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_TEMP_STORE</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_TEMP_STORE_xc</name></expr></argument>)</argument_list></call></expr></cpp:if>
  <expr><literal type="string">"TEMP_STORE="</literal> <call><name>CTIMEOPT_VAL</name><argument_list>(<argument><expr><name>SQLITE_TEMP_STORE</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_TEST</name></expr></cpp:if>
  <expr><literal type="string">"TEST"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SQLITE_THREADSAFE</name></expr></argument>)</argument_list></call></expr></cpp:if>
  <expr><literal type="string">"THREADSAFE="</literal> <call><name>CTIMEOPT_VAL</name><argument_list>(<argument><expr><name>SQLITE_THREADSAFE</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_USE_ALLOCA</name></expr></cpp:if>
  <expr><literal type="string">"USE_ALLOCA"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_USER_AUTHENTICATION</name></expr></cpp:if>
  <expr><literal type="string">"USER_AUTHENTICATION"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_WIN32_MALLOC</name></expr></cpp:if>
  <expr><literal type="string">"WIN32_MALLOC"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ZERO_MALLOC</name></expr></cpp:if>
  <expr><literal type="string">"ZERO_MALLOC"</literal></expr>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/*
** Given the name of a compile-time option, return true if that option
** was used and false if not.
**
** The name can optionally begin with "SQLITE_" but the "SQLITE_" prefix
** is not required for a match.
*/</comment>
<function><type><name>int</name></type> <name>sqlite3_compileoption_used</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>zOptName</name></decl></parameter>)</parameter_list><block>{<block_content>
  <decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SQLITE_ENABLE_API_ARMOR</name></expr></cpp:if>
  <if_stmt><if>if<condition>( <expr><name>zOptName</name><operator>==</operator><literal type="number">0</literal></expr> )</condition><block>{<block_content>
    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>SQLITE_MISUSE_BKPT</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
  </block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
  <if_stmt><if>if<condition>( <expr><call><name>sqlite3StrNICmp</name><argument_list>(<argument><expr><name>zOptName</name></expr></argument>, <argument><expr><literal type="string">"SQLITE_"</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call><operator>==</operator><literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>zOptName</name> <operator>+=</operator> <literal type="number">7</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
  <expr_stmt><expr><name>n</name> <operator>=</operator> <call><name>sqlite3Strlen30</name><argument_list>(<argument><expr><name>zOptName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="block">/* Since ArraySize(azCompileOpt) is normally in single digits, a
  ** linear search is adequate.  No need for a binary search. */</comment>
  <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><call><name>ArraySize</name><argument_list>(<argument><expr><name>azCompileOpt</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
    <if_stmt><if>if<condition>( <expr><call><name>sqlite3StrNICmp</name><argument_list>(<argument><expr><name>zOptName</name></expr></argument>, <argument><expr><name><name>azCompileOpt</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call><operator>==</operator><literal type="number">0</literal>
     <operator>&amp;&amp;</operator> <call><name>sqlite3IsIdChar</name><argument_list>(<argument><expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><name><name>azCompileOpt</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>n</name></expr>]</index></name></expr></argument>)</argument_list></call><operator>==</operator><literal type="number">0</literal></expr>
    )</condition><block>{<block_content>
      <return>return <expr><literal type="number">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>
  </block_content>}</block></for>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
** Return the N-th compile-time option string.  If N is out of range,
** return a NULL pointer.
*/</comment>
<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sqlite3_compileoption_get</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>N</name></decl></parameter>)</parameter_list><block>{<block_content>
  <if_stmt><if>if<condition>( <expr><name>N</name><operator>&gt;=</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>N</name><operator>&lt;</operator><call><name>ArraySize</name><argument_list>(<argument><expr><name>azCompileOpt</name></expr></argument>)</argument_list></call></expr> )</condition><block>{<block_content>
    <return>return <expr><name><name>azCompileOpt</name><index>[<expr><name>N</name></expr>]</index></name></expr>;</return>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SQLITE_OMIT_COMPILEOPTION_DIAGS */</comment>
</unit>
