<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/MaxScale/pcre2/src/pcre2_tables.c"><comment type="block" format="doxygen">/*************************************************
*      Perl-Compatible Regular Expressions       *
*************************************************/</comment>

<comment type="block">/* PCRE is a library of functions to support regular expressions whose syntax
and semantics are as close as possible to those of the Perl 5 language.

                       Written by Philip Hazel
     Original API code Copyright (c) 1997-2012 University of Cambridge
          New API code Copyright (c) 2016-2019 University of Cambridge

-----------------------------------------------------------------------------
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

    * Neither the name of the University of Cambridge nor the names of its
      contributors may be used to endorse or promote products derived from
      this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-----------------------------------------------------------------------------
*/</comment>

<comment type="block">/* This module contains some fixed tables that are used by more than one of the
PCRE2 code modules. The tables are also #included by the pcre2test program,
which uses macros to change their names from _pcre2_xxx to xxxx, thereby
avoiding name clashes with the library. In this case, PCRE2_PCRE2TEST is
defined. */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>PCRE2_PCRE2TEST</name></cpp:ifndef>           <comment type="block">/* We're compiling the library */</comment>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>HAVE_CONFIG_H</name></cpp:ifdef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pcre2_internal.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* PCRE2_PCRE2TEST */</comment>


<comment type="block">/* Table of sizes for the fixed-length opcodes. It's defined in a macro so that
the definition is next to the definition of the opcodes in pcre2_internal.h.
This is mode-dependent, so is skipped when this file is included by pcre2test. */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>PCRE2_PCRE2TEST</name></cpp:ifndef>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>OP_lengths</name></expr></argument>)</argument_list>[] <init>= <expr><block>{ <expr><name>OP_LENGTHS</name></expr> }</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Tables of horizontal and vertical whitespace characters, suitable for
adding to classes. */</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>hspace_list</name></expr></argument>)</argument_list>[] <init>= <expr><block>{ <expr><name>HSPACE_LIST</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>vspace_list</name></expr></argument>)</argument_list>[] <init>= <expr><block>{ <expr><name>VSPACE_LIST</name></expr> }</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* These tables are the pairs of delimiters that are valid for callout string
arguments. For each starting delimiter there must be a matching ending
delimiter, which in fact is different only for bracket-like delimiters. */</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>callout_start_delims</name></expr></argument>)</argument_list>[] <init>= <expr><block>{
  <expr><name>CHAR_GRAVE_ACCENT</name></expr>, <expr><name>CHAR_APOSTROPHE</name></expr>, <expr><name>CHAR_QUOTATION_MARK</name></expr>,
  <expr><name>CHAR_CIRCUMFLEX_ACCENT</name></expr>, <expr><name>CHAR_PERCENT_SIGN</name></expr>, <expr><name>CHAR_NUMBER_SIGN</name></expr>,
  <expr><name>CHAR_DOLLAR_SIGN</name></expr>, <expr><name>CHAR_LEFT_CURLY_BRACKET</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<function_decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>PRIV</name><parameter_list>(<parameter><decl><type><name><name>callout_end_delims</name><index>[]</index></name></type></decl></parameter>)</parameter_list> <init>= <expr><block>{
  <expr><name>CHAR_GRAVE_ACCENT</name></expr></block></expr></init><operator>,</operator> CHAR_APOSTROPHE<operator>,</operator> CHAR_QUOTATION_MARK<operator>,</operator>
  CHAR_CIRCUMFLEX_ACCENT<operator>,</operator> CHAR_PERCENT_SIGN<operator>,</operator> CHAR_NUMBER_SIGN<operator>,</operator>
  CHAR_DOLLAR_SIGN<operator>,</operator> CHAR_RIGHT_CURLY_BRACKET<operator>,</operator> 0</function_decl> };


<comment type="block" format="doxygen">/*************************************************
*           Tables for UTF-8 support             *
*************************************************/</comment>

<comment type="block">/* These tables are required by pcre2test in 16- or 32-bit mode, as well
as for the library in 8-bit mode, because pcre2test uses UTF-8 internally for
handling wide characters. */</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>PCRE2_PCRE2TEST</name> <operator>||</operator> \
   <operator>(</operator><name>defined</name> <name>SUPPORT_UNICODE</name> <operator>&amp;&amp;</operator> \
    <name>defined</name> <name>PCRE2_CODE_UNIT_WIDTH</name> <operator>&amp;&amp;</operator> \
    <name>PCRE2_CODE_UNIT_WIDTH</name> <operator>==</operator> <literal type="number">8</literal><operator>)</operator></expr></cpp:if>

<comment type="block">/* These are the breakpoints for different numbers of bytes in a UTF-8
character. */</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>utf8_table1</name></expr></argument>)</argument_list>[] <init>=
  <expr><block>{ <expr><literal type="number">0x7f</literal></expr>, <expr><literal type="number">0x7ff</literal></expr>, <expr><literal type="number">0xffff</literal></expr>, <expr><literal type="number">0x1fffff</literal></expr>, <expr><literal type="number">0x3ffffff</literal></expr>, <expr><literal type="number">0x7fffffff</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<function_decl><type><specifier>const</specifier> <name>int</name></type> <name>PRIV</name><parameter_list>(<parameter><decl><type><name>utf8_table1_size</name></type></decl></parameter>)</parameter_list> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><call><name>PRIV</name><argument_list>(<argument><expr><name>utf8_table1</name></expr></argument>)</argument_list></call></expr></argument></argument_list></sizeof></expr>)</init> / sizeof<parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block">/* These are the indicator bits and the mask for the data bits to set in the
first byte of a character, indexed by the number of additional bytes. */</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>utf8_table2</name></expr></argument>)</argument_list>[] <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>,    <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0xfc</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>utf8_table3</name></expr></argument>)</argument_list>[] <init>= <expr><block>{ <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x01</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* Table of the number of extra bytes, indexed by the first byte masked with
0x3f. The highest number for a valid UTF-8 first byte is in fact 0x3d. */</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>utf8_table4</name></expr></argument>)</argument_list>[] <init>= <expr><block>{
  <expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,
  <expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">1</literal></expr>,
  <expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">2</literal></expr>,
  <expr><literal type="number">3</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">5</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* UTF-8 support needed */</comment>


<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>SUPPORT_UNICODE</name></cpp:ifdef>

<comment type="block">/* Table to translate from particular type value to the general value. */</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>ucp_gentype</name></expr></argument>)</argument_list>[] <init>= <expr><block>{
  <expr><name>ucp_C</name></expr>, <expr><name>ucp_C</name></expr>, <expr><name>ucp_C</name></expr>, <expr><name>ucp_C</name></expr>, <expr><name>ucp_C</name></expr>,  <comment type="block">/* Cc, Cf, Cn, Co, Cs */</comment>
  <expr><name>ucp_L</name></expr>, <expr><name>ucp_L</name></expr>, <expr><name>ucp_L</name></expr>, <expr><name>ucp_L</name></expr>, <expr><name>ucp_L</name></expr>,  <comment type="block">/* Ll, Lu, Lm, Lo, Lt */</comment>
  <expr><name>ucp_M</name></expr>, <expr><name>ucp_M</name></expr>, <expr><name>ucp_M</name></expr>,                <comment type="block">/* Mc, Me, Mn */</comment>
  <expr><name>ucp_N</name></expr>, <expr><name>ucp_N</name></expr>, <expr><name>ucp_N</name></expr>,                <comment type="block">/* Nd, Nl, No */</comment>
  <expr><name>ucp_P</name></expr>, <expr><name>ucp_P</name></expr>, <expr><name>ucp_P</name></expr>, <expr><name>ucp_P</name></expr>, <expr><name>ucp_P</name></expr>,  <comment type="block">/* Pc, Pd, Pe, Pf, Pi */</comment>
  <expr><name>ucp_P</name></expr>, <expr><name>ucp_P</name></expr>,                       <comment type="block">/* Ps, Po */</comment>
  <expr><name>ucp_S</name></expr>, <expr><name>ucp_S</name></expr>, <expr><name>ucp_S</name></expr>, <expr><name>ucp_S</name></expr>,         <comment type="block">/* Sc, Sk, Sm, So */</comment>
  <expr><name>ucp_Z</name></expr>, <expr><name>ucp_Z</name></expr>, <expr><name>ucp_Z</name></expr>                 <comment type="block">/* Zl, Zp, Zs */</comment>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* This table encodes the rules for finding the end of an extended grapheme
cluster. Every code point has a grapheme break property which is one of the
ucp_gbXX values defined in pcre2_ucp.h. These changed between Unicode versions
10 and 11. The 2-dimensional table is indexed by the properties of two adjacent
code points. The left property selects a word from the table, and the right
property selects a bit from that word like this:

  PRIV(ucp_gbtable)[left-property] &amp; (1u &lt;&lt; right-property)

The value is non-zero if a grapheme break is NOT permitted between the relevant
two code points. The breaking rules are as follows:

1. Break at the start and end of text (pretty obviously).

2. Do not break between a CR and LF; otherwise, break before and after
   controls.

3. Do not break Hangul syllable sequences, the rules for which are:

    L may be followed by L, V, LV or LVT
    LV or V may be followed by V or T
    LVT or T may be followed by T

4. Do not break before extending characters or zero-width-joiner (ZWJ).

The following rules are only for extended grapheme clusters (but that's what we
are implementing).

5. Do not break before SpacingMarks.

6. Do not break after Prepend characters.

7. Do not break within emoji modifier sequences or emoji zwj sequences. That
   is, do not break between characters with the Extended_Pictographic property.
   Extend and ZWJ characters are allowed between the characters; this cannot be
   represented in this table, the code has to deal with it.

8. Do not break within emoji flag sequences. That is, do not break between
   regional indicator (RI) symbols if there are an odd number of RI characters
   before the break point. This table encodes "join RI characters"; the code
   has to deal with checking for previous adjoining RIs.

9. Otherwise, break everywhere.
*/</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ESZ</name></cpp:macro> <cpp:value>(1&lt;&lt;ucp_gbExtend)|(1&lt;&lt;ucp_gbSpacingMark)|(1&lt;&lt;ucp_gbZWJ)</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>ucp_gbtable</name></expr></argument>)</argument_list>[] <init>= <expr><block>{
   <expr><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbLF</name><operator>)</operator></expr>,                                      <comment type="block">/*  0 CR */</comment>
   <expr><literal type="number">0</literal></expr>,                                                   <comment type="block">/*  1 LF */</comment>
   <expr><literal type="number">0</literal></expr>,                                                   <comment type="block">/*  2 Control */</comment>
   <expr><name>ESZ</name></expr>,                                                 <comment type="block">/*  3 Extend */</comment>
   <expr><name>ESZ</name><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbPrepend</name><operator>)</operator><operator>|</operator>                             <comment type="block">/*  4 Prepend */</comment>
       <operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbL</name><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbV</name><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbT</name><operator>)</operator><operator>|</operator>
       <operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbLV</name><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbLVT</name><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbOther</name><operator>)</operator><operator>|</operator>
       <operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbRegionalIndicator</name><operator>)</operator></expr>,
   <expr><name>ESZ</name></expr>,                                                 <comment type="block">/*  5 SpacingMark */</comment>
   <expr><name>ESZ</name><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbL</name><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbV</name><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbLV</name><operator>)</operator><operator>|</operator>      <comment type="block">/*  6 L */</comment>
       <operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbLVT</name><operator>)</operator></expr>,
   <expr><name>ESZ</name><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbV</name><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbT</name><operator>)</operator></expr>,                     <comment type="block">/*  7 V */</comment>
   <expr><name>ESZ</name><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbT</name><operator>)</operator></expr>,                                   <comment type="block">/*  8 T */</comment>
   <expr><name>ESZ</name><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbV</name><operator>)</operator><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbT</name><operator>)</operator></expr>,                     <comment type="block">/*  9 LV */</comment>
   <expr><name>ESZ</name><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbT</name><operator>)</operator></expr>,                                   <comment type="block">/* 10 LVT */</comment>
   <expr><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbRegionalIndicator</name><operator>)</operator></expr>,                       <comment type="block">/* 11 RegionalIndicator */</comment>
   <expr><name>ESZ</name></expr>,                                                 <comment type="block">/* 12 Other */</comment>
   <expr><name>ESZ</name></expr>,                                                 <comment type="block">/* 13 ZWJ */</comment>
   <expr><name>ESZ</name><operator>|</operator><operator>(</operator><literal type="number">1u</literal><operator>&lt;&lt;</operator><name>ucp_gbExtended_Pictographic</name><operator>)</operator></expr>                <comment type="block">/* 14 Extended Pictographic */</comment>
}</block></expr></init></decl>;</decl_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ESZ</name></cpp:undef>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>SUPPORT_JIT</name></cpp:ifdef>
<comment type="block">/* This table reverses PRIV(ucp_gentype). We can save the cost
of a memory load. */</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>ucp_typerange</name></expr></argument>)</argument_list>[] <init>= <expr><block>{
  <expr><name>ucp_Cc</name></expr>, <expr><name>ucp_Cs</name></expr>,
  <expr><name>ucp_Ll</name></expr>, <expr><name>ucp_Lu</name></expr>,
  <expr><name>ucp_Mc</name></expr>, <expr><name>ucp_Mn</name></expr>,
  <expr><name>ucp_Nd</name></expr>, <expr><name>ucp_No</name></expr>,
  <expr><name>ucp_Pc</name></expr>, <expr><name>ucp_Ps</name></expr>,
  <expr><name>ucp_Sc</name></expr>, <expr><name>ucp_So</name></expr>,
  <expr><name>ucp_Zl</name></expr>, <expr><name>ucp_Zs</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SUPPORT_JIT */</comment>

<comment type="block">/* The PRIV(utt)[] table below translates Unicode property names into type and
code values. It is searched by binary chop, so must be in collating sequence of
name. Originally, the table contained pointers to the name strings in the first
field of each entry. However, that leads to a large number of relocations when
a shared library is dynamically loaded. A significant reduction is made by
putting all the names into a single, large string and then using offsets in the
table itself. Maintenance is more error-prone, but frequent changes to this
data are unlikely.

July 2008: There is now a script called maint/GenerateUtt.py that can be used
to generate this data automatically instead of maintaining it by hand.

The script was updated in March 2009 to generate a new EBCDIC-compliant
version. Like all other character and string literals that are compared against
the regular expression pattern, we must use STR_ macros instead of literal
strings to make sure that UTF-8 support works on EBCDIC platforms. */</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Adlam0</name></cpp:macro> <cpp:value>STR_A STR_d STR_l STR_a STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Ahom0</name></cpp:macro> <cpp:value>STR_A STR_h STR_o STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Anatolian_Hieroglyphs0</name></cpp:macro> <cpp:value>STR_A STR_n STR_a STR_t STR_o STR_l STR_i STR_a STR_n STR_UNDERSCORE STR_H STR_i STR_e STR_r STR_o STR_g STR_l STR_y STR_p STR_h STR_s "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Any0</name></cpp:macro> <cpp:value>STR_A STR_n STR_y "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Arabic0</name></cpp:macro> <cpp:value>STR_A STR_r STR_a STR_b STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Armenian0</name></cpp:macro> <cpp:value>STR_A STR_r STR_m STR_e STR_n STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Avestan0</name></cpp:macro> <cpp:value>STR_A STR_v STR_e STR_s STR_t STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Balinese0</name></cpp:macro> <cpp:value>STR_B STR_a STR_l STR_i STR_n STR_e STR_s STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Bamum0</name></cpp:macro> <cpp:value>STR_B STR_a STR_m STR_u STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Bassa_Vah0</name></cpp:macro> <cpp:value>STR_B STR_a STR_s STR_s STR_a STR_UNDERSCORE STR_V STR_a STR_h "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Batak0</name></cpp:macro> <cpp:value>STR_B STR_a STR_t STR_a STR_k "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Bengali0</name></cpp:macro> <cpp:value>STR_B STR_e STR_n STR_g STR_a STR_l STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Bhaiksuki0</name></cpp:macro> <cpp:value>STR_B STR_h STR_a STR_i STR_k STR_s STR_u STR_k STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Bopomofo0</name></cpp:macro> <cpp:value>STR_B STR_o STR_p STR_o STR_m STR_o STR_f STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Brahmi0</name></cpp:macro> <cpp:value>STR_B STR_r STR_a STR_h STR_m STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Braille0</name></cpp:macro> <cpp:value>STR_B STR_r STR_a STR_i STR_l STR_l STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Buginese0</name></cpp:macro> <cpp:value>STR_B STR_u STR_g STR_i STR_n STR_e STR_s STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Buhid0</name></cpp:macro> <cpp:value>STR_B STR_u STR_h STR_i STR_d "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_C0</name></cpp:macro> <cpp:value>STR_C "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Canadian_Aboriginal0</name></cpp:macro> <cpp:value>STR_C STR_a STR_n STR_a STR_d STR_i STR_a STR_n STR_UNDERSCORE STR_A STR_b STR_o STR_r STR_i STR_g STR_i STR_n STR_a STR_l "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Carian0</name></cpp:macro> <cpp:value>STR_C STR_a STR_r STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Caucasian_Albanian0</name></cpp:macro> <cpp:value>STR_C STR_a STR_u STR_c STR_a STR_s STR_i STR_a STR_n STR_UNDERSCORE STR_A STR_l STR_b STR_a STR_n STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cc0</name></cpp:macro> <cpp:value>STR_C STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cf0</name></cpp:macro> <cpp:value>STR_C STR_f "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Chakma0</name></cpp:macro> <cpp:value>STR_C STR_h STR_a STR_k STR_m STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cham0</name></cpp:macro> <cpp:value>STR_C STR_h STR_a STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cherokee0</name></cpp:macro> <cpp:value>STR_C STR_h STR_e STR_r STR_o STR_k STR_e STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Chorasmian0</name></cpp:macro> <cpp:value>STR_C STR_h STR_o STR_r STR_a STR_s STR_m STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cn0</name></cpp:macro> <cpp:value>STR_C STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Co0</name></cpp:macro> <cpp:value>STR_C STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Common0</name></cpp:macro> <cpp:value>STR_C STR_o STR_m STR_m STR_o STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Coptic0</name></cpp:macro> <cpp:value>STR_C STR_o STR_p STR_t STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cs0</name></cpp:macro> <cpp:value>STR_C STR_s "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cuneiform0</name></cpp:macro> <cpp:value>STR_C STR_u STR_n STR_e STR_i STR_f STR_o STR_r STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cypriot0</name></cpp:macro> <cpp:value>STR_C STR_y STR_p STR_r STR_i STR_o STR_t "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Cyrillic0</name></cpp:macro> <cpp:value>STR_C STR_y STR_r STR_i STR_l STR_l STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Deseret0</name></cpp:macro> <cpp:value>STR_D STR_e STR_s STR_e STR_r STR_e STR_t "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Devanagari0</name></cpp:macro> <cpp:value>STR_D STR_e STR_v STR_a STR_n STR_a STR_g STR_a STR_r STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Dives_Akuru0</name></cpp:macro> <cpp:value>STR_D STR_i STR_v STR_e STR_s STR_UNDERSCORE STR_A STR_k STR_u STR_r STR_u "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Dogra0</name></cpp:macro> <cpp:value>STR_D STR_o STR_g STR_r STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Duployan0</name></cpp:macro> <cpp:value>STR_D STR_u STR_p STR_l STR_o STR_y STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Egyptian_Hieroglyphs0</name></cpp:macro> <cpp:value>STR_E STR_g STR_y STR_p STR_t STR_i STR_a STR_n STR_UNDERSCORE STR_H STR_i STR_e STR_r STR_o STR_g STR_l STR_y STR_p STR_h STR_s "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Elbasan0</name></cpp:macro> <cpp:value>STR_E STR_l STR_b STR_a STR_s STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Elymaic0</name></cpp:macro> <cpp:value>STR_E STR_l STR_y STR_m STR_a STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Ethiopic0</name></cpp:macro> <cpp:value>STR_E STR_t STR_h STR_i STR_o STR_p STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Georgian0</name></cpp:macro> <cpp:value>STR_G STR_e STR_o STR_r STR_g STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Glagolitic0</name></cpp:macro> <cpp:value>STR_G STR_l STR_a STR_g STR_o STR_l STR_i STR_t STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Gothic0</name></cpp:macro> <cpp:value>STR_G STR_o STR_t STR_h STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Grantha0</name></cpp:macro> <cpp:value>STR_G STR_r STR_a STR_n STR_t STR_h STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Greek0</name></cpp:macro> <cpp:value>STR_G STR_r STR_e STR_e STR_k "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Gujarati0</name></cpp:macro> <cpp:value>STR_G STR_u STR_j STR_a STR_r STR_a STR_t STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Gunjala_Gondi0</name></cpp:macro> <cpp:value>STR_G STR_u STR_n STR_j STR_a STR_l STR_a STR_UNDERSCORE STR_G STR_o STR_n STR_d STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Gurmukhi0</name></cpp:macro> <cpp:value>STR_G STR_u STR_r STR_m STR_u STR_k STR_h STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Han0</name></cpp:macro> <cpp:value>STR_H STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Hangul0</name></cpp:macro> <cpp:value>STR_H STR_a STR_n STR_g STR_u STR_l "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Hanifi_Rohingya0</name></cpp:macro> <cpp:value>STR_H STR_a STR_n STR_i STR_f STR_i STR_UNDERSCORE STR_R STR_o STR_h STR_i STR_n STR_g STR_y STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Hanunoo0</name></cpp:macro> <cpp:value>STR_H STR_a STR_n STR_u STR_n STR_o STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Hatran0</name></cpp:macro> <cpp:value>STR_H STR_a STR_t STR_r STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Hebrew0</name></cpp:macro> <cpp:value>STR_H STR_e STR_b STR_r STR_e STR_w "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Hiragana0</name></cpp:macro> <cpp:value>STR_H STR_i STR_r STR_a STR_g STR_a STR_n STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Imperial_Aramaic0</name></cpp:macro> <cpp:value>STR_I STR_m STR_p STR_e STR_r STR_i STR_a STR_l STR_UNDERSCORE STR_A STR_r STR_a STR_m STR_a STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Inherited0</name></cpp:macro> <cpp:value>STR_I STR_n STR_h STR_e STR_r STR_i STR_t STR_e STR_d "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Inscriptional_Pahlavi0</name></cpp:macro> <cpp:value>STR_I STR_n STR_s STR_c STR_r STR_i STR_p STR_t STR_i STR_o STR_n STR_a STR_l STR_UNDERSCORE STR_P STR_a STR_h STR_l STR_a STR_v STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Inscriptional_Parthian0</name></cpp:macro> <cpp:value>STR_I STR_n STR_s STR_c STR_r STR_i STR_p STR_t STR_i STR_o STR_n STR_a STR_l STR_UNDERSCORE STR_P STR_a STR_r STR_t STR_h STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Javanese0</name></cpp:macro> <cpp:value>STR_J STR_a STR_v STR_a STR_n STR_e STR_s STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Kaithi0</name></cpp:macro> <cpp:value>STR_K STR_a STR_i STR_t STR_h STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Kannada0</name></cpp:macro> <cpp:value>STR_K STR_a STR_n STR_n STR_a STR_d STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Katakana0</name></cpp:macro> <cpp:value>STR_K STR_a STR_t STR_a STR_k STR_a STR_n STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Kayah_Li0</name></cpp:macro> <cpp:value>STR_K STR_a STR_y STR_a STR_h STR_UNDERSCORE STR_L STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Kharoshthi0</name></cpp:macro> <cpp:value>STR_K STR_h STR_a STR_r STR_o STR_s STR_h STR_t STR_h STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Khitan_Small_Script0</name></cpp:macro> <cpp:value>STR_K STR_h STR_i STR_t STR_a STR_n STR_UNDERSCORE STR_S STR_m STR_a STR_l STR_l STR_UNDERSCORE STR_S STR_c STR_r STR_i STR_p STR_t "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Khmer0</name></cpp:macro> <cpp:value>STR_K STR_h STR_m STR_e STR_r "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Khojki0</name></cpp:macro> <cpp:value>STR_K STR_h STR_o STR_j STR_k STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Khudawadi0</name></cpp:macro> <cpp:value>STR_K STR_h STR_u STR_d STR_a STR_w STR_a STR_d STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_L0</name></cpp:macro> <cpp:value>STR_L "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_L_AMPERSAND0</name></cpp:macro> <cpp:value>STR_L STR_AMPERSAND "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lao0</name></cpp:macro> <cpp:value>STR_L STR_a STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Latin0</name></cpp:macro> <cpp:value>STR_L STR_a STR_t STR_i STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lepcha0</name></cpp:macro> <cpp:value>STR_L STR_e STR_p STR_c STR_h STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Limbu0</name></cpp:macro> <cpp:value>STR_L STR_i STR_m STR_b STR_u "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Linear_A0</name></cpp:macro> <cpp:value>STR_L STR_i STR_n STR_e STR_a STR_r STR_UNDERSCORE STR_A "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Linear_B0</name></cpp:macro> <cpp:value>STR_L STR_i STR_n STR_e STR_a STR_r STR_UNDERSCORE STR_B "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lisu0</name></cpp:macro> <cpp:value>STR_L STR_i STR_s STR_u "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Ll0</name></cpp:macro> <cpp:value>STR_L STR_l "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lm0</name></cpp:macro> <cpp:value>STR_L STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lo0</name></cpp:macro> <cpp:value>STR_L STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lt0</name></cpp:macro> <cpp:value>STR_L STR_t "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lu0</name></cpp:macro> <cpp:value>STR_L STR_u "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lycian0</name></cpp:macro> <cpp:value>STR_L STR_y STR_c STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Lydian0</name></cpp:macro> <cpp:value>STR_L STR_y STR_d STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_M0</name></cpp:macro> <cpp:value>STR_M "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Mahajani0</name></cpp:macro> <cpp:value>STR_M STR_a STR_h STR_a STR_j STR_a STR_n STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Makasar0</name></cpp:macro> <cpp:value>STR_M STR_a STR_k STR_a STR_s STR_a STR_r "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Malayalam0</name></cpp:macro> <cpp:value>STR_M STR_a STR_l STR_a STR_y STR_a STR_l STR_a STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Mandaic0</name></cpp:macro> <cpp:value>STR_M STR_a STR_n STR_d STR_a STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Manichaean0</name></cpp:macro> <cpp:value>STR_M STR_a STR_n STR_i STR_c STR_h STR_a STR_e STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Marchen0</name></cpp:macro> <cpp:value>STR_M STR_a STR_r STR_c STR_h STR_e STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Masaram_Gondi0</name></cpp:macro> <cpp:value>STR_M STR_a STR_s STR_a STR_r STR_a STR_m STR_UNDERSCORE STR_G STR_o STR_n STR_d STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Mc0</name></cpp:macro> <cpp:value>STR_M STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Me0</name></cpp:macro> <cpp:value>STR_M STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Medefaidrin0</name></cpp:macro> <cpp:value>STR_M STR_e STR_d STR_e STR_f STR_a STR_i STR_d STR_r STR_i STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Meetei_Mayek0</name></cpp:macro> <cpp:value>STR_M STR_e STR_e STR_t STR_e STR_i STR_UNDERSCORE STR_M STR_a STR_y STR_e STR_k "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Mende_Kikakui0</name></cpp:macro> <cpp:value>STR_M STR_e STR_n STR_d STR_e STR_UNDERSCORE STR_K STR_i STR_k STR_a STR_k STR_u STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Meroitic_Cursive0</name></cpp:macro> <cpp:value>STR_M STR_e STR_r STR_o STR_i STR_t STR_i STR_c STR_UNDERSCORE STR_C STR_u STR_r STR_s STR_i STR_v STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Meroitic_Hieroglyphs0</name></cpp:macro> <cpp:value>STR_M STR_e STR_r STR_o STR_i STR_t STR_i STR_c STR_UNDERSCORE STR_H STR_i STR_e STR_r STR_o STR_g STR_l STR_y STR_p STR_h STR_s "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Miao0</name></cpp:macro> <cpp:value>STR_M STR_i STR_a STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Mn0</name></cpp:macro> <cpp:value>STR_M STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Modi0</name></cpp:macro> <cpp:value>STR_M STR_o STR_d STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Mongolian0</name></cpp:macro> <cpp:value>STR_M STR_o STR_n STR_g STR_o STR_l STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Mro0</name></cpp:macro> <cpp:value>STR_M STR_r STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Multani0</name></cpp:macro> <cpp:value>STR_M STR_u STR_l STR_t STR_a STR_n STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Myanmar0</name></cpp:macro> <cpp:value>STR_M STR_y STR_a STR_n STR_m STR_a STR_r "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_N0</name></cpp:macro> <cpp:value>STR_N "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Nabataean0</name></cpp:macro> <cpp:value>STR_N STR_a STR_b STR_a STR_t STR_a STR_e STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Nandinagari0</name></cpp:macro> <cpp:value>STR_N STR_a STR_n STR_d STR_i STR_n STR_a STR_g STR_a STR_r STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Nd0</name></cpp:macro> <cpp:value>STR_N STR_d "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_New_Tai_Lue0</name></cpp:macro> <cpp:value>STR_N STR_e STR_w STR_UNDERSCORE STR_T STR_a STR_i STR_UNDERSCORE STR_L STR_u STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Newa0</name></cpp:macro> <cpp:value>STR_N STR_e STR_w STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Nko0</name></cpp:macro> <cpp:value>STR_N STR_k STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Nl0</name></cpp:macro> <cpp:value>STR_N STR_l "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_No0</name></cpp:macro> <cpp:value>STR_N STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Nushu0</name></cpp:macro> <cpp:value>STR_N STR_u STR_s STR_h STR_u "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Nyiakeng_Puachue_Hmong0</name></cpp:macro> <cpp:value>STR_N STR_y STR_i STR_a STR_k STR_e STR_n STR_g STR_UNDERSCORE STR_P STR_u STR_a STR_c STR_h STR_u STR_e STR_UNDERSCORE STR_H STR_m STR_o STR_n STR_g "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Ogham0</name></cpp:macro> <cpp:value>STR_O STR_g STR_h STR_a STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Ol_Chiki0</name></cpp:macro> <cpp:value>STR_O STR_l STR_UNDERSCORE STR_C STR_h STR_i STR_k STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Old_Hungarian0</name></cpp:macro> <cpp:value>STR_O STR_l STR_d STR_UNDERSCORE STR_H STR_u STR_n STR_g STR_a STR_r STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Old_Italic0</name></cpp:macro> <cpp:value>STR_O STR_l STR_d STR_UNDERSCORE STR_I STR_t STR_a STR_l STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Old_North_Arabian0</name></cpp:macro> <cpp:value>STR_O STR_l STR_d STR_UNDERSCORE STR_N STR_o STR_r STR_t STR_h STR_UNDERSCORE STR_A STR_r STR_a STR_b STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Old_Permic0</name></cpp:macro> <cpp:value>STR_O STR_l STR_d STR_UNDERSCORE STR_P STR_e STR_r STR_m STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Old_Persian0</name></cpp:macro> <cpp:value>STR_O STR_l STR_d STR_UNDERSCORE STR_P STR_e STR_r STR_s STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Old_Sogdian0</name></cpp:macro> <cpp:value>STR_O STR_l STR_d STR_UNDERSCORE STR_S STR_o STR_g STR_d STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Old_South_Arabian0</name></cpp:macro> <cpp:value>STR_O STR_l STR_d STR_UNDERSCORE STR_S STR_o STR_u STR_t STR_h STR_UNDERSCORE STR_A STR_r STR_a STR_b STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Old_Turkic0</name></cpp:macro> <cpp:value>STR_O STR_l STR_d STR_UNDERSCORE STR_T STR_u STR_r STR_k STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Oriya0</name></cpp:macro> <cpp:value>STR_O STR_r STR_i STR_y STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Osage0</name></cpp:macro> <cpp:value>STR_O STR_s STR_a STR_g STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Osmanya0</name></cpp:macro> <cpp:value>STR_O STR_s STR_m STR_a STR_n STR_y STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_P0</name></cpp:macro> <cpp:value>STR_P "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Pahawh_Hmong0</name></cpp:macro> <cpp:value>STR_P STR_a STR_h STR_a STR_w STR_h STR_UNDERSCORE STR_H STR_m STR_o STR_n STR_g "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Palmyrene0</name></cpp:macro> <cpp:value>STR_P STR_a STR_l STR_m STR_y STR_r STR_e STR_n STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Pau_Cin_Hau0</name></cpp:macro> <cpp:value>STR_P STR_a STR_u STR_UNDERSCORE STR_C STR_i STR_n STR_UNDERSCORE STR_H STR_a STR_u "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Pc0</name></cpp:macro> <cpp:value>STR_P STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Pd0</name></cpp:macro> <cpp:value>STR_P STR_d "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Pe0</name></cpp:macro> <cpp:value>STR_P STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Pf0</name></cpp:macro> <cpp:value>STR_P STR_f "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Phags_Pa0</name></cpp:macro> <cpp:value>STR_P STR_h STR_a STR_g STR_s STR_UNDERSCORE STR_P STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Phoenician0</name></cpp:macro> <cpp:value>STR_P STR_h STR_o STR_e STR_n STR_i STR_c STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Pi0</name></cpp:macro> <cpp:value>STR_P STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Po0</name></cpp:macro> <cpp:value>STR_P STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Ps0</name></cpp:macro> <cpp:value>STR_P STR_s "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Psalter_Pahlavi0</name></cpp:macro> <cpp:value>STR_P STR_s STR_a STR_l STR_t STR_e STR_r STR_UNDERSCORE STR_P STR_a STR_h STR_l STR_a STR_v STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Rejang0</name></cpp:macro> <cpp:value>STR_R STR_e STR_j STR_a STR_n STR_g "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Runic0</name></cpp:macro> <cpp:value>STR_R STR_u STR_n STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_S0</name></cpp:macro> <cpp:value>STR_S "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Samaritan0</name></cpp:macro> <cpp:value>STR_S STR_a STR_m STR_a STR_r STR_i STR_t STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Saurashtra0</name></cpp:macro> <cpp:value>STR_S STR_a STR_u STR_r STR_a STR_s STR_h STR_t STR_r STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Sc0</name></cpp:macro> <cpp:value>STR_S STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Sharada0</name></cpp:macro> <cpp:value>STR_S STR_h STR_a STR_r STR_a STR_d STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Shavian0</name></cpp:macro> <cpp:value>STR_S STR_h STR_a STR_v STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Siddham0</name></cpp:macro> <cpp:value>STR_S STR_i STR_d STR_d STR_h STR_a STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_SignWriting0</name></cpp:macro> <cpp:value>STR_S STR_i STR_g STR_n STR_W STR_r STR_i STR_t STR_i STR_n STR_g "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Sinhala0</name></cpp:macro> <cpp:value>STR_S STR_i STR_n STR_h STR_a STR_l STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Sk0</name></cpp:macro> <cpp:value>STR_S STR_k "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Sm0</name></cpp:macro> <cpp:value>STR_S STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_So0</name></cpp:macro> <cpp:value>STR_S STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Sogdian0</name></cpp:macro> <cpp:value>STR_S STR_o STR_g STR_d STR_i STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Sora_Sompeng0</name></cpp:macro> <cpp:value>STR_S STR_o STR_r STR_a STR_UNDERSCORE STR_S STR_o STR_m STR_p STR_e STR_n STR_g "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Soyombo0</name></cpp:macro> <cpp:value>STR_S STR_o STR_y STR_o STR_m STR_b STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Sundanese0</name></cpp:macro> <cpp:value>STR_S STR_u STR_n STR_d STR_a STR_n STR_e STR_s STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Syloti_Nagri0</name></cpp:macro> <cpp:value>STR_S STR_y STR_l STR_o STR_t STR_i STR_UNDERSCORE STR_N STR_a STR_g STR_r STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Syriac0</name></cpp:macro> <cpp:value>STR_S STR_y STR_r STR_i STR_a STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tagalog0</name></cpp:macro> <cpp:value>STR_T STR_a STR_g STR_a STR_l STR_o STR_g "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tagbanwa0</name></cpp:macro> <cpp:value>STR_T STR_a STR_g STR_b STR_a STR_n STR_w STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tai_Le0</name></cpp:macro> <cpp:value>STR_T STR_a STR_i STR_UNDERSCORE STR_L STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tai_Tham0</name></cpp:macro> <cpp:value>STR_T STR_a STR_i STR_UNDERSCORE STR_T STR_h STR_a STR_m "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tai_Viet0</name></cpp:macro> <cpp:value>STR_T STR_a STR_i STR_UNDERSCORE STR_V STR_i STR_e STR_t "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Takri0</name></cpp:macro> <cpp:value>STR_T STR_a STR_k STR_r STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tamil0</name></cpp:macro> <cpp:value>STR_T STR_a STR_m STR_i STR_l "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tangut0</name></cpp:macro> <cpp:value>STR_T STR_a STR_n STR_g STR_u STR_t "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Telugu0</name></cpp:macro> <cpp:value>STR_T STR_e STR_l STR_u STR_g STR_u "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Thaana0</name></cpp:macro> <cpp:value>STR_T STR_h STR_a STR_a STR_n STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Thai0</name></cpp:macro> <cpp:value>STR_T STR_h STR_a STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tibetan0</name></cpp:macro> <cpp:value>STR_T STR_i STR_b STR_e STR_t STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tifinagh0</name></cpp:macro> <cpp:value>STR_T STR_i STR_f STR_i STR_n STR_a STR_g STR_h "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Tirhuta0</name></cpp:macro> <cpp:value>STR_T STR_i STR_r STR_h STR_u STR_t STR_a "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Ugaritic0</name></cpp:macro> <cpp:value>STR_U STR_g STR_a STR_r STR_i STR_t STR_i STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Unknown0</name></cpp:macro> <cpp:value>STR_U STR_n STR_k STR_n STR_o STR_w STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Vai0</name></cpp:macro> <cpp:value>STR_V STR_a STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Wancho0</name></cpp:macro> <cpp:value>STR_W STR_a STR_n STR_c STR_h STR_o "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Warang_Citi0</name></cpp:macro> <cpp:value>STR_W STR_a STR_r STR_a STR_n STR_g STR_UNDERSCORE STR_C STR_i STR_t STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Xan0</name></cpp:macro> <cpp:value>STR_X STR_a STR_n "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Xps0</name></cpp:macro> <cpp:value>STR_X STR_p STR_s "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Xsp0</name></cpp:macro> <cpp:value>STR_X STR_s STR_p "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Xuc0</name></cpp:macro> <cpp:value>STR_X STR_u STR_c "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Xwd0</name></cpp:macro> <cpp:value>STR_X STR_w STR_d "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Yezidi0</name></cpp:macro> <cpp:value>STR_Y STR_e STR_z STR_i STR_d STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Yi0</name></cpp:macro> <cpp:value>STR_Y STR_i "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Z0</name></cpp:macro> <cpp:value>STR_Z "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Zanabazar_Square0</name></cpp:macro> <cpp:value>STR_Z STR_a STR_n STR_a STR_b STR_a STR_z STR_a STR_r STR_UNDERSCORE STR_S STR_q STR_u STR_a STR_r STR_e "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Zl0</name></cpp:macro> <cpp:value>STR_Z STR_l "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Zp0</name></cpp:macro> <cpp:value>STR_Z STR_p "\0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING_Zs0</name></cpp:macro> <cpp:value>STR_Z STR_s "\0"</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>utt_names</name></expr></argument>)</argument_list>[] <init>=
  <expr><name>STRING_Adlam0</name>
  <name>STRING_Ahom0</name>
  <name>STRING_Anatolian_Hieroglyphs0</name>
  <name>STRING_Any0</name>
  <name>STRING_Arabic0</name>
  <name>STRING_Armenian0</name>
  <name>STRING_Avestan0</name>
  <name>STRING_Balinese0</name>
  <name>STRING_Bamum0</name>
  <name>STRING_Bassa_Vah0</name>
  <name>STRING_Batak0</name>
  <name>STRING_Bengali0</name>
  <name>STRING_Bhaiksuki0</name>
  <name>STRING_Bopomofo0</name>
  <name>STRING_Brahmi0</name>
  <name>STRING_Braille0</name>
  <name>STRING_Buginese0</name>
  <name>STRING_Buhid0</name>
  <name>STRING_C0</name>
  <name>STRING_Canadian_Aboriginal0</name>
  <name>STRING_Carian0</name>
  <name>STRING_Caucasian_Albanian0</name>
  <name>STRING_Cc0</name>
  <name>STRING_Cf0</name>
  <name>STRING_Chakma0</name>
  <name>STRING_Cham0</name>
  <name>STRING_Cherokee0</name>
  <name>STRING_Chorasmian0</name>
  <name>STRING_Cn0</name>
  <name>STRING_Co0</name>
  <name>STRING_Common0</name>
  <name>STRING_Coptic0</name>
  <name>STRING_Cs0</name>
  <name>STRING_Cuneiform0</name>
  <name>STRING_Cypriot0</name>
  <name>STRING_Cyrillic0</name>
  <name>STRING_Deseret0</name>
  <name>STRING_Devanagari0</name>
  <name>STRING_Dives_Akuru0</name>
  <name>STRING_Dogra0</name>
  <name>STRING_Duployan0</name>
  <name>STRING_Egyptian_Hieroglyphs0</name>
  <name>STRING_Elbasan0</name>
  <name>STRING_Elymaic0</name>
  <name>STRING_Ethiopic0</name>
  <name>STRING_Georgian0</name>
  <name>STRING_Glagolitic0</name>
  <name>STRING_Gothic0</name>
  <name>STRING_Grantha0</name>
  <name>STRING_Greek0</name>
  <name>STRING_Gujarati0</name>
  <name>STRING_Gunjala_Gondi0</name>
  <name>STRING_Gurmukhi0</name>
  <name>STRING_Han0</name>
  <name>STRING_Hangul0</name>
  <name>STRING_Hanifi_Rohingya0</name>
  <name>STRING_Hanunoo0</name>
  <name>STRING_Hatran0</name>
  <name>STRING_Hebrew0</name>
  <name>STRING_Hiragana0</name>
  <name>STRING_Imperial_Aramaic0</name>
  <name>STRING_Inherited0</name>
  <name>STRING_Inscriptional_Pahlavi0</name>
  <name>STRING_Inscriptional_Parthian0</name>
  <name>STRING_Javanese0</name>
  <name>STRING_Kaithi0</name>
  <name>STRING_Kannada0</name>
  <name>STRING_Katakana0</name>
  <name>STRING_Kayah_Li0</name>
  <name>STRING_Kharoshthi0</name>
  <name>STRING_Khitan_Small_Script0</name>
  <name>STRING_Khmer0</name>
  <name>STRING_Khojki0</name>
  <name>STRING_Khudawadi0</name>
  <name>STRING_L0</name>
  <name>STRING_L_AMPERSAND0</name>
  <name>STRING_Lao0</name>
  <name>STRING_Latin0</name>
  <name>STRING_Lepcha0</name>
  <name>STRING_Limbu0</name>
  <name>STRING_Linear_A0</name>
  <name>STRING_Linear_B0</name>
  <name>STRING_Lisu0</name>
  <name>STRING_Ll0</name>
  <name>STRING_Lm0</name>
  <name>STRING_Lo0</name>
  <name>STRING_Lt0</name>
  <name>STRING_Lu0</name>
  <name>STRING_Lycian0</name>
  <name>STRING_Lydian0</name>
  <name>STRING_M0</name>
  <name>STRING_Mahajani0</name>
  <name>STRING_Makasar0</name>
  <name>STRING_Malayalam0</name>
  <name>STRING_Mandaic0</name>
  <name>STRING_Manichaean0</name>
  <name>STRING_Marchen0</name>
  <name>STRING_Masaram_Gondi0</name>
  <name>STRING_Mc0</name>
  <name>STRING_Me0</name>
  <name>STRING_Medefaidrin0</name>
  <name>STRING_Meetei_Mayek0</name>
  <name>STRING_Mende_Kikakui0</name>
  <name>STRING_Meroitic_Cursive0</name>
  <name>STRING_Meroitic_Hieroglyphs0</name>
  <name>STRING_Miao0</name>
  <name>STRING_Mn0</name>
  <name>STRING_Modi0</name>
  <name>STRING_Mongolian0</name>
  <name>STRING_Mro0</name>
  <name>STRING_Multani0</name>
  <name>STRING_Myanmar0</name>
  <name>STRING_N0</name>
  <name>STRING_Nabataean0</name>
  <name>STRING_Nandinagari0</name>
  <name>STRING_Nd0</name>
  <name>STRING_New_Tai_Lue0</name>
  <name>STRING_Newa0</name>
  <name>STRING_Nko0</name>
  <name>STRING_Nl0</name>
  <name>STRING_No0</name>
  <name>STRING_Nushu0</name>
  <name>STRING_Nyiakeng_Puachue_Hmong0</name>
  <name>STRING_Ogham0</name>
  <name>STRING_Ol_Chiki0</name>
  <name>STRING_Old_Hungarian0</name>
  <name>STRING_Old_Italic0</name>
  <name>STRING_Old_North_Arabian0</name>
  <name>STRING_Old_Permic0</name>
  <name>STRING_Old_Persian0</name>
  <name>STRING_Old_Sogdian0</name>
  <name>STRING_Old_South_Arabian0</name>
  <name>STRING_Old_Turkic0</name>
  <name>STRING_Oriya0</name>
  <name>STRING_Osage0</name>
  <name>STRING_Osmanya0</name>
  <name>STRING_P0</name>
  <name>STRING_Pahawh_Hmong0</name>
  <name>STRING_Palmyrene0</name>
  <name>STRING_Pau_Cin_Hau0</name>
  <name>STRING_Pc0</name>
  <name>STRING_Pd0</name>
  <name>STRING_Pe0</name>
  <name>STRING_Pf0</name>
  <name>STRING_Phags_Pa0</name>
  <name>STRING_Phoenician0</name>
  <name>STRING_Pi0</name>
  <name>STRING_Po0</name>
  <name>STRING_Ps0</name>
  <name>STRING_Psalter_Pahlavi0</name>
  <name>STRING_Rejang0</name>
  <name>STRING_Runic0</name>
  <name>STRING_S0</name>
  <name>STRING_Samaritan0</name>
  <name>STRING_Saurashtra0</name>
  <name>STRING_Sc0</name>
  <name>STRING_Sharada0</name>
  <name>STRING_Shavian0</name>
  <name>STRING_Siddham0</name>
  <name>STRING_SignWriting0</name>
  <name>STRING_Sinhala0</name>
  <name>STRING_Sk0</name>
  <name>STRING_Sm0</name>
  <name>STRING_So0</name>
  <name>STRING_Sogdian0</name>
  <name>STRING_Sora_Sompeng0</name>
  <name>STRING_Soyombo0</name>
  <name>STRING_Sundanese0</name>
  <name>STRING_Syloti_Nagri0</name>
  <name>STRING_Syriac0</name>
  <name>STRING_Tagalog0</name>
  <name>STRING_Tagbanwa0</name>
  <name>STRING_Tai_Le0</name>
  <name>STRING_Tai_Tham0</name>
  <name>STRING_Tai_Viet0</name>
  <name>STRING_Takri0</name>
  <name>STRING_Tamil0</name>
  <name>STRING_Tangut0</name>
  <name>STRING_Telugu0</name>
  <name>STRING_Thaana0</name>
  <name>STRING_Thai0</name>
  <name>STRING_Tibetan0</name>
  <name>STRING_Tifinagh0</name>
  <name>STRING_Tirhuta0</name>
  <name>STRING_Ugaritic0</name>
  <name>STRING_Unknown0</name>
  <name>STRING_Vai0</name>
  <name>STRING_Wancho0</name>
  <name>STRING_Warang_Citi0</name>
  <name>STRING_Xan0</name>
  <name>STRING_Xps0</name>
  <name>STRING_Xsp0</name>
  <name>STRING_Xuc0</name>
  <name>STRING_Xwd0</name>
  <name>STRING_Yezidi0</name>
  <name>STRING_Yi0</name>
  <name>STRING_Z0</name>
  <name>STRING_Zanabazar_Square0</name>
  <name>STRING_Zl0</name>
  <name>STRING_Zp0</name>
  <name>STRING_Zs0</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>ucp_type_table</name></type> <name>PRIV</name><argument_list>(<argument><expr><name>utt</name></expr></argument>)</argument_list>[] <init>= <expr><block>{
  <expr><block>{   <expr><literal type="number">0</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Adlam</name></expr> }</block></expr>,
  <expr><block>{   <expr><literal type="number">6</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Ahom</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">11</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Anatolian_Hieroglyphs</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">33</literal></expr>, <expr><name>PT_ANY</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">37</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Arabic</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">44</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Armenian</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">53</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Avestan</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">61</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Balinese</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">70</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Bamum</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">76</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Bassa_Vah</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">86</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Batak</name></expr> }</block></expr>,
  <expr><block>{  <expr><literal type="number">92</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Bengali</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">100</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Bhaiksuki</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">110</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Bopomofo</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">119</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Brahmi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">126</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Braille</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">134</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Buginese</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">143</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Buhid</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">149</literal></expr>, <expr><name>PT_GC</name></expr>, <expr><name>ucp_C</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">151</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Canadian_Aboriginal</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">171</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Carian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">178</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Caucasian_Albanian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">197</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Cc</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">200</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Cf</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">203</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Chakma</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">210</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Cham</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">215</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Cherokee</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">224</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Chorasmian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">235</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Cn</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">238</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Co</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">241</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Common</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">248</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Coptic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">255</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Cs</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">258</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Cuneiform</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">268</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Cypriot</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">276</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Cyrillic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">285</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Deseret</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">293</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Devanagari</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">304</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Dives_Akuru</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">316</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Dogra</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">322</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Duployan</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">331</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Egyptian_Hieroglyphs</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">352</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Elbasan</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">360</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Elymaic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">368</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Ethiopic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">377</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Georgian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">386</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Glagolitic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">397</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Gothic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">404</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Grantha</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">412</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Greek</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">418</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Gujarati</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">427</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Gunjala_Gondi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">441</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Gurmukhi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">450</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Han</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">454</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Hangul</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">461</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Hanifi_Rohingya</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">477</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Hanunoo</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">485</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Hatran</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">492</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Hebrew</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">499</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Hiragana</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">508</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Imperial_Aramaic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">525</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Inherited</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">535</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Inscriptional_Pahlavi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">557</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Inscriptional_Parthian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">580</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Javanese</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">589</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Kaithi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">596</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Kannada</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">604</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Katakana</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">613</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Kayah_Li</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">622</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Kharoshthi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">633</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Khitan_Small_Script</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">653</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Khmer</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">659</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Khojki</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">666</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Khudawadi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">676</literal></expr>, <expr><name>PT_GC</name></expr>, <expr><name>ucp_L</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">678</literal></expr>, <expr><name>PT_LAMP</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">681</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Lao</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">685</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Latin</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">691</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Lepcha</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">698</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Limbu</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">704</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Linear_A</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">713</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Linear_B</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">722</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Lisu</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">727</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Ll</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">730</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Lm</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">733</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Lo</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">736</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Lt</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">739</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Lu</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">742</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Lycian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">749</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Lydian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">756</literal></expr>, <expr><name>PT_GC</name></expr>, <expr><name>ucp_M</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">758</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Mahajani</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">767</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Makasar</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">775</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Malayalam</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">785</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Mandaic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">793</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Manichaean</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">804</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Marchen</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">812</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Masaram_Gondi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">826</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Mc</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">829</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Me</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">832</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Medefaidrin</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">844</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Meetei_Mayek</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">857</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Mende_Kikakui</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">871</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Meroitic_Cursive</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">888</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Meroitic_Hieroglyphs</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">909</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Miao</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">914</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Mn</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">917</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Modi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">922</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Mongolian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">932</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Mro</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">936</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Multani</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">944</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Myanmar</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">952</literal></expr>, <expr><name>PT_GC</name></expr>, <expr><name>ucp_N</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">954</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Nabataean</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">964</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Nandinagari</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">976</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Nd</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">979</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_New_Tai_Lue</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">991</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Newa</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">996</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Nko</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1000</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Nl</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1003</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_No</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1006</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Nushu</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1012</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Nyiakeng_Puachue_Hmong</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1035</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Ogham</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1041</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Ol_Chiki</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1050</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Old_Hungarian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1064</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Old_Italic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1075</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Old_North_Arabian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1093</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Old_Permic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1104</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Old_Persian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1116</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Old_Sogdian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1128</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Old_South_Arabian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1146</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Old_Turkic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1157</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Oriya</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1163</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Osage</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1169</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Osmanya</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1177</literal></expr>, <expr><name>PT_GC</name></expr>, <expr><name>ucp_P</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1179</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Pahawh_Hmong</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1192</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Palmyrene</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1202</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Pau_Cin_Hau</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1214</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Pc</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1217</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Pd</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1220</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Pe</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1223</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Pf</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1226</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Phags_Pa</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1235</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Phoenician</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1246</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Pi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1249</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Po</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1252</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Ps</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1255</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Psalter_Pahlavi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1271</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Rejang</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1278</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Runic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1284</literal></expr>, <expr><name>PT_GC</name></expr>, <expr><name>ucp_S</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1286</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Samaritan</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1296</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Saurashtra</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1307</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Sc</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1310</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Sharada</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1318</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Shavian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1326</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Siddham</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1334</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_SignWriting</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1346</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Sinhala</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1354</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Sk</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1357</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Sm</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1360</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_So</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1363</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Sogdian</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1371</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Sora_Sompeng</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1384</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Soyombo</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1392</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Sundanese</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1402</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Syloti_Nagri</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1415</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Syriac</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1422</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tagalog</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1430</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tagbanwa</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1439</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tai_Le</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1446</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tai_Tham</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1455</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tai_Viet</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1464</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Takri</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1470</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tamil</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1476</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tangut</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1483</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Telugu</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1490</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Thaana</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1497</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Thai</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1502</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tibetan</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1510</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tifinagh</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1519</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Tirhuta</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1527</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Ugaritic</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1536</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Unknown</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1544</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Vai</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1548</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Wancho</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1555</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Warang_Citi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1567</literal></expr>, <expr><name>PT_ALNUM</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1571</literal></expr>, <expr><name>PT_PXSPACE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1575</literal></expr>, <expr><name>PT_SPACE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1579</literal></expr>, <expr><name>PT_UCNC</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1583</literal></expr>, <expr><name>PT_WORD</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1587</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Yezidi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1594</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Yi</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1597</literal></expr>, <expr><name>PT_GC</name></expr>, <expr><name>ucp_Z</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1599</literal></expr>, <expr><name>PT_SC</name></expr>, <expr><name>ucp_Zanabazar_Square</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1616</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Zl</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1619</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Zp</name></expr> }</block></expr>,
  <expr><block>{ <expr><literal type="number">1622</literal></expr>, <expr><name>PT_PC</name></expr>, <expr><name>ucp_Zs</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function_decl><type><specifier>const</specifier> <name>size_t</name></type> <name>PRIV</name><parameter_list>(<parameter><decl><type><name>utt_size</name></type></decl></parameter>)</parameter_list> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><call><name>PRIV</name><argument_list>(<argument><expr><name>utt</name></expr></argument>)</argument_list></call></expr></argument></argument_list></sizeof></expr>)</init> / sizeof<parameter_list>(<parameter><decl><type><name>ucp_type_table</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* SUPPORT_UNICODE */</comment>

<comment type="block">/* End of pcre2_tables.c */</comment>
</unit>
