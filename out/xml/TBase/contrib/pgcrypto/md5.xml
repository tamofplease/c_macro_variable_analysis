<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TBase/contrib/pgcrypto/md5.c"><comment type="block">/*       $KAME: md5.c,v 1.3 2000/02/22 14:01:17 itojun Exp $       */</comment>

<comment type="block">/*
 * Copyright (C) 1995, 1996, 1997, and 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *      may be used to endorse or promote products derived from this software
 *      without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * contrib/pgcrypto/md5.c
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/param.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"md5.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHIFT</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((X) &lt;&lt; (s)) | ((X) &gt;&gt; (32 - (s))))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>Z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((X) &amp; (Y)) | ((~X) &amp; (Z)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>G</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>Z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((X) &amp; (Z)) | ((Y) &amp; (~Z)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>Z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((X) ^ (Y) ^ (Z))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>I</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>Z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((Y) ^ ((X) | (~Z)))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROUND1</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>, <parameter><type><name>k</name></type></parameter>, <parameter><type><name>s</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> \
<cpp:value>do { \
    (a) = (a) + F((b), (c), (d)) + X[(k)] + T[(i)]; \
    (a) = SHIFT((a), (s)); \
    (a) = (b) + (a); \
} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROUND2</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>, <parameter><type><name>k</name></type></parameter>, <parameter><type><name>s</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> \
<cpp:value>do { \
    (a) = (a) + G((b), (c), (d)) + X[(k)] + T[(i)]; \
    (a) = SHIFT((a), (s)); \
    (a) = (b) + (a); \
} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROUND3</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>, <parameter><type><name>k</name></type></parameter>, <parameter><type><name>s</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> \
<cpp:value>do { \
    (a) = (a) + H((b), (c), (d)) + X[(k)] + T[(i)]; \
    (a) = SHIFT((a), (s)); \
    (a) = (b) + (a); \
} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROUND4</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>, <parameter><type><name>k</name></type></parameter>, <parameter><type><name>s</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> \
<cpp:value>do { \
    (a) = (a) + I((b), (c), (d)) + X[(k)] + T[(i)]; \
    (a) = SHIFT((a), (s)); \
    (a) = (b) + (a); \
} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sa</name></cpp:macro>     <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sb</name></cpp:macro>    <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sc</name></cpp:macro>    <cpp:value>17</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sd</name></cpp:macro>    <cpp:value>22</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Se</name></cpp:macro>     <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sf</name></cpp:macro>     <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sg</name></cpp:macro>    <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sh</name></cpp:macro>    <cpp:value>20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Si</name></cpp:macro>     <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sj</name></cpp:macro>    <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sk</name></cpp:macro>    <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sl</name></cpp:macro>    <cpp:value>23</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sm</name></cpp:macro>     <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sn</name></cpp:macro>    <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>So</name></cpp:macro>    <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Sp</name></cpp:macro>    <cpp:value>21</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MD5_A0</name></cpp:macro>    <cpp:value>0x67452301</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MD5_B0</name></cpp:macro>    <cpp:value>0xefcdab89</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MD5_C0</name></cpp:macro>    <cpp:value>0x98badcfe</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MD5_D0</name></cpp:macro>    <cpp:value>0x10325476</cpp:value></cpp:define>

<comment type="block">/* Integer part of 4294967296 times abs(sin(i)), where i is in radians. */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32</name></type> <name><name>T</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{
    <expr><literal type="number">0</literal></expr>,
    <expr><literal type="number">0xd76aa478</literal></expr>, <expr><literal type="number">0xe8c7b756</literal></expr>, <expr><literal type="number">0x242070db</literal></expr>, <expr><literal type="number">0xc1bdceee</literal></expr>,
    <expr><literal type="number">0xf57c0faf</literal></expr>, <expr><literal type="number">0x4787c62a</literal></expr>, <expr><literal type="number">0xa8304613</literal></expr>, <expr><literal type="number">0xfd469501</literal></expr>,
    <expr><literal type="number">0x698098d8</literal></expr>, <expr><literal type="number">0x8b44f7af</literal></expr>, <expr><literal type="number">0xffff5bb1</literal></expr>, <expr><literal type="number">0x895cd7be</literal></expr>,
    <expr><literal type="number">0x6b901122</literal></expr>, <expr><literal type="number">0xfd987193</literal></expr>, <expr><literal type="number">0xa679438e</literal></expr>, <expr><literal type="number">0x49b40821</literal></expr>,

    <expr><literal type="number">0xf61e2562</literal></expr>, <expr><literal type="number">0xc040b340</literal></expr>, <expr><literal type="number">0x265e5a51</literal></expr>, <expr><literal type="number">0xe9b6c7aa</literal></expr>,
    <expr><literal type="number">0xd62f105d</literal></expr>, <expr><literal type="number">0x2441453</literal></expr>, <expr><literal type="number">0xd8a1e681</literal></expr>, <expr><literal type="number">0xe7d3fbc8</literal></expr>,
    <expr><literal type="number">0x21e1cde6</literal></expr>, <expr><literal type="number">0xc33707d6</literal></expr>, <expr><literal type="number">0xf4d50d87</literal></expr>, <expr><literal type="number">0x455a14ed</literal></expr>,
    <expr><literal type="number">0xa9e3e905</literal></expr>, <expr><literal type="number">0xfcefa3f8</literal></expr>, <expr><literal type="number">0x676f02d9</literal></expr>, <expr><literal type="number">0x8d2a4c8a</literal></expr>,

    <expr><literal type="number">0xfffa3942</literal></expr>, <expr><literal type="number">0x8771f681</literal></expr>, <expr><literal type="number">0x6d9d6122</literal></expr>, <expr><literal type="number">0xfde5380c</literal></expr>,
    <expr><literal type="number">0xa4beea44</literal></expr>, <expr><literal type="number">0x4bdecfa9</literal></expr>, <expr><literal type="number">0xf6bb4b60</literal></expr>, <expr><literal type="number">0xbebfbc70</literal></expr>,
    <expr><literal type="number">0x289b7ec6</literal></expr>, <expr><literal type="number">0xeaa127fa</literal></expr>, <expr><literal type="number">0xd4ef3085</literal></expr>, <expr><literal type="number">0x4881d05</literal></expr>,
    <expr><literal type="number">0xd9d4d039</literal></expr>, <expr><literal type="number">0xe6db99e5</literal></expr>, <expr><literal type="number">0x1fa27cf8</literal></expr>, <expr><literal type="number">0xc4ac5665</literal></expr>,

    <expr><literal type="number">0xf4292244</literal></expr>, <expr><literal type="number">0x432aff97</literal></expr>, <expr><literal type="number">0xab9423a7</literal></expr>, <expr><literal type="number">0xfc93a039</literal></expr>,
    <expr><literal type="number">0x655b59c3</literal></expr>, <expr><literal type="number">0x8f0ccc92</literal></expr>, <expr><literal type="number">0xffeff47d</literal></expr>, <expr><literal type="number">0x85845dd1</literal></expr>,
    <expr><literal type="number">0x6fa87e4f</literal></expr>, <expr><literal type="number">0xfe2ce6e0</literal></expr>, <expr><literal type="number">0xa3014314</literal></expr>, <expr><literal type="number">0x4e0811a1</literal></expr>,
    <expr><literal type="number">0xf7537e82</literal></expr>, <expr><literal type="number">0xbd3af235</literal></expr>, <expr><literal type="number">0x2ad7d2bb</literal></expr>, <expr><literal type="number">0xeb86d391</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8</name></type> <name><name>md5_paddat</name><index>[<expr><name>MD5_BUFLEN</name></expr>]</index></name> <init>= <expr><block>{
    <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
    <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>md5_calc</name><parameter_list>(<parameter><decl><type><name>uint8</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>md5_ctxt</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type>
<name>md5_init</name><parameter_list>(<parameter><decl><type><name>md5_ctxt</name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_n</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_sta</name></name> <operator>=</operator> <name>MD5_A0</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_stb</name></name> <operator>=</operator> <name>MD5_B0</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_stc</name></name> <operator>=</operator> <name>MD5_C0</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_std</name></name> <operator>=</operator> <name>MD5_D0</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>md5_loop</name><parameter_list>(<parameter><decl><type><name>md5_ctxt</name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>gap</name></decl>,
                <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>

    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_n</name></name> <operator>+=</operator> <name>len</name> <operator>*</operator> <literal type="number">8</literal></expr>;</expr_stmt>        <comment type="block">/* byte to bit */</comment>
    <expr_stmt><expr><name>gap</name> <operator>=</operator> <name>MD5_BUFLEN</name> <operator>-</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name>len</name> <operator>&gt;=</operator> <name>gap</name></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name> <operator>+</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name></expr></argument>, <argument><expr><name>input</name></expr></argument>, <argument><expr><name>gap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>md5_calc</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name></expr></argument>, <argument><expr><name>ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <name>gap</name></expr>;</init> <condition><expr><name>i</name> <operator>+</operator> <name>MD5_BUFLEN</name> <operator>&lt;=</operator> <name>len</name></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <name>MD5_BUFLEN</name></expr></incr>)</control><block type="pseudo"><block_content>
            <expr_stmt><expr><call><name>md5_calc</name><argument_list>(<argument><expr><operator>(</operator><name>uint8</name> <operator>*</operator><operator>)</operator> <operator>(</operator><name>input</name> <operator>+</operator> <name>i</name><operator>)</operator></expr></argument>, <argument><expr><name>ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name> <operator>=</operator> <name>len</name> <operator>-</operator> <name>i</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name></expr></argument>, <argument><expr><name>input</name> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else>else
    <block>{<block_content>
        <expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name> <operator>+</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name></expr></argument>, <argument><expr><name>input</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name> <operator>+=</operator> <name>len</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>md5_pad</name><parameter_list>(<parameter><decl><type><name>md5_ctxt</name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>gap</name></decl>;</decl_stmt>

    <comment type="block">/* Don't count up padding. Keep md5_n. */</comment>
    <expr_stmt><expr><name>gap</name> <operator>=</operator> <name>MD5_BUFLEN</name> <operator>-</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>gap</name> <operator>&gt;</operator> <literal type="number">8</literal></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name> <operator>+</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name></expr></argument>, <argument><expr><name>md5_paddat</name></expr></argument>,
                <argument><expr><name>gap</name> <operator>-</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_n</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <else>else
    <block>{<block_content>
        <comment type="block">/* including gap == 8 */</comment>
        <expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name> <operator>+</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_i</name></name></expr></argument>, <argument><expr><name>md5_paddat</name></expr></argument>, <argument><expr><name>gap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>md5_calc</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name></expr></argument>, <argument><expr><name>ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name></expr></argument>, <argument><expr><name>md5_paddat</name> <operator>+</operator> <name>gap</name></expr></argument>,
                <argument><expr><name>MD5_BUFLEN</name> <operator>-</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_n</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <comment type="block">/* 8 byte word */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifndef>
    <expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">56</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">56</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">57</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">58</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">59</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">60</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">61</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">62</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name><index>[<expr><literal type="number">63</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_n8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name>md5_calc</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_buf</name></name></expr></argument>, <argument><expr><name>ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>md5_result</name><parameter_list>(<parameter><decl><type><name>uint8</name> <modifier>*</modifier></type><name>digest</name></decl></parameter>, <parameter><decl><type><name>md5_ctxt</name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="block">/* 4 byte words */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifndef>
    <expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name>digest</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>md5_st8</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifdef>
<decl_stmt><decl><type><specifier>static</specifier> <name>uint32</name></type> <name><name>X</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>md5_calc</name><parameter_list>(<parameter><decl><type><name>uint8</name> <modifier>*</modifier></type><name>b64</name></decl></parameter>, <parameter><decl><type><name>md5_ctxt</name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>uint32</name></type>        <name>A</name> <init>= <expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_sta</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32</name></type>        <name>B</name> <init>= <expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_stb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32</name></type>        <name>C</name> <init>= <expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_stc</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint32</name></type>        <name>D</name> <init>= <expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_std</name></name></expr></init></decl>;</decl_stmt>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifndef>
    <decl_stmt><decl><type><name>uint32</name>       <modifier>*</modifier></type><name>X</name> <init>= <expr><operator>(</operator><name>uint32</name> <operator>*</operator><operator>)</operator> <name>b64</name></expr></init></decl>;</decl_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
    <comment type="block">/* 4 byte words */</comment>
    <comment type="block">/* what a brute force but fast! */</comment>
    <decl_stmt><decl><type><name>uint8</name>       <modifier>*</modifier></type><name>y</name> <init>= <expr><operator>(</operator><name>uint8</name> <operator>*</operator><operator>)</operator> <name>X</name></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">20</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">23</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">21</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">22</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">22</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">21</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">23</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">27</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">26</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">26</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">25</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">27</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">24</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">28</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">31</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">29</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">30</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">30</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">29</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">31</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">28</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">35</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">34</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">34</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">33</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">35</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">36</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">39</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">37</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">38</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">38</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">37</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">39</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">36</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">40</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">43</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">41</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">42</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">42</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">41</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">43</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">40</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">44</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">47</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">45</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">46</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">46</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">45</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">47</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">44</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">51</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">49</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">50</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">50</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">49</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">51</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">52</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">55</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">53</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">54</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">54</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">53</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">55</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">52</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">56</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">59</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">57</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">58</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">58</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">57</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">59</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">56</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">60</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">63</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">61</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">62</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">62</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">61</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>y</name><index>[<expr><literal type="number">63</literal></expr>]</index></name> <operator>=</operator> <name><name>b64</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Sa</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>Sb</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>Sc</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>Sd</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>Sa</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>Sb</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>Sc</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>Sd</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>Sa</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>Sb</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>Sc</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>Sd</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>Sa</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>Sb</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><name>Sc</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND1</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>Sd</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>Se</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>Sf</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>Sg</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Sh</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>Se</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>Sf</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>Sg</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>Sh</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>Se</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><name>Sf</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>Sg</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>Sh</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>Se</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>Sf</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>Sg</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND2</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>Sh</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>Si</name></expr></argument>, <argument><expr><literal type="number">33</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>Sj</name></expr></argument>, <argument><expr><literal type="number">34</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>Sk</name></expr></argument>, <argument><expr><literal type="number">35</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><name>Sl</name></expr></argument>, <argument><expr><literal type="number">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>Si</name></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>Sj</name></expr></argument>, <argument><expr><literal type="number">38</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>Sk</name></expr></argument>, <argument><expr><literal type="number">39</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>Sl</name></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>Si</name></expr></argument>, <argument><expr><literal type="number">41</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Sj</name></expr></argument>, <argument><expr><literal type="number">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>Sk</name></expr></argument>, <argument><expr><literal type="number">43</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>Sl</name></expr></argument>, <argument><expr><literal type="number">44</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>Si</name></expr></argument>, <argument><expr><literal type="number">45</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>Sj</name></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>Sk</name></expr></argument>, <argument><expr><literal type="number">47</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND3</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>Sl</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Sm</name></expr></argument>, <argument><expr><literal type="number">49</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>Sn</name></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><name>So</name></expr></argument>, <argument><expr><literal type="number">51</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>Sp</name></expr></argument>, <argument><expr><literal type="number">52</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>Sm</name></expr></argument>, <argument><expr><literal type="number">53</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>Sn</name></expr></argument>, <argument><expr><literal type="number">54</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>So</name></expr></argument>, <argument><expr><literal type="number">55</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>Sp</name></expr></argument>, <argument><expr><literal type="number">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>Sm</name></expr></argument>, <argument><expr><literal type="number">57</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>Sn</name></expr></argument>, <argument><expr><literal type="number">58</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>So</name></expr></argument>, <argument><expr><literal type="number">59</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>Sp</name></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>Sm</name></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>Sn</name></expr></argument>, <argument><expr><literal type="number">62</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>So</name></expr></argument>, <argument><expr><literal type="number">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>ROUND4</name><argument_list>(<argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>Sp</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_sta</name></name> <operator>+=</operator> <name>A</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_stb</name></name> <operator>+=</operator> <name>B</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_stc</name></name> <operator>+=</operator> <name>C</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>md5_std</name></name> <operator>+=</operator> <name>D</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
