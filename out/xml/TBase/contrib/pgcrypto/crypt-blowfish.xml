<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TBase/contrib/pgcrypto/crypt-blowfish.c"><comment type="block">/*
 * contrib/pgcrypto/crypt-blowfish.c
 *
 * This code comes from John the Ripper password cracker, with reentrant
 * and crypt(3) interfaces added, but optimizations specific to password
 * cracking removed.
 *
 * Written by Solar Designer &lt;solar at openwall.com&gt; in 1998-2002 and
 * placed in the public domain.
 *
 * There's absolutely no warranty.
 *
 * It is my intent that you should be able to use this on your system,
 * as a part of a software package, or anywhere else to improve security,
 * ensure compatibility, or for any other purpose. I would appreciate
 * it if you give credit where it is due and keep your modifications in
 * the public domain as well, but I don't require that in order to let
 * you place this code and any modifications you make under a license
 * of your choice.
 *
 * This implementation is compatible with OpenBSD bcrypt.c (version 2a)
 * by Niels Provos &lt;provos at citi.umich.edu&gt;, and uses some of his
 * ideas.  The password hashing algorithm was designed by David Mazieres
 * &lt;dm at lcs.mit.edu&gt;.
 *
 * There's a paper on the algorithm that explains its design decisions:
 *
 *    http://www.usenix.org/events/usenix99/provos.html
 *
 * Some of the tricks in BF_ROUND might be inspired by Eric Young's
 * Blowfish library (I can't be sure if I would think of something if I
 * hadn't seen his code).
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"miscadmin.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"px-crypt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"px.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__i386__</name></cpp:ifdef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_ASM</name></cpp:macro>                <cpp:value>0</cpp:value></cpp:define>    <comment type="block">/* 1 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_SCALE</name></cpp:macro>            <cpp:value>1</cpp:value></cpp:define>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__alpha__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__hppa__</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_ASM</name></cpp:macro>                <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_SCALE</name></cpp:macro>            <cpp:value>1</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_ASM</name></cpp:macro>                <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_SCALE</name></cpp:macro>            <cpp:value>0</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>BF_word</name>;</typedef>
<typedef>typedef <type><name>signed</name> <name>int</name></type> <name>BF_word_signed</name>;</typedef>

<comment type="block">/* Number of Blowfish rounds, this is also hardcoded into a few places */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_N</name></cpp:macro>                <cpp:value>16</cpp:value></cpp:define>

<typedef>typedef <type><name>BF_word</name></type> <name><name>BF_key</name><index>[<expr><name>BF_N</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
    <decl_stmt><decl><type><name>BF_word</name></type>        <name><name>S</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">0x100</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BF_key</name></type>        <name>P</name></decl>;</decl_stmt>
}</block></struct></type> <name>BF_ctx</name>;</typedef>

<comment type="block">/*
 * Magic IV for 64 Blowfish encryptions that we do at the end.
 * The string is "OrpheanBeholderScryDoubt" on big-endian.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <name>BF_word</name></type> <name><name>BF_magic_w</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{
    <expr><literal type="number">0x4F727068</literal></expr>, <expr><literal type="number">0x65616E42</literal></expr>, <expr><literal type="number">0x65686F6C</literal></expr>,
    <expr><literal type="number">0x64657253</literal></expr>, <expr><literal type="number">0x63727944</literal></expr>, <expr><literal type="number">0x6F756274</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * P-box and S-box tables initialized with digits of Pi.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <name>BF_ctx</name></type> <name>BF_init_state</name> <init>= <expr><block>{
    <expr><block>{
        <expr><block>{
            <expr><literal type="number">0xd1310ba6</literal></expr>, <expr><literal type="number">0x98dfb5ac</literal></expr>, <expr><literal type="number">0x2ffd72db</literal></expr>, <expr><literal type="number">0xd01adfb7</literal></expr>,
            <expr><literal type="number">0xb8e1afed</literal></expr>, <expr><literal type="number">0x6a267e96</literal></expr>, <expr><literal type="number">0xba7c9045</literal></expr>, <expr><literal type="number">0xf12c7f99</literal></expr>,
            <expr><literal type="number">0x24a19947</literal></expr>, <expr><literal type="number">0xb3916cf7</literal></expr>, <expr><literal type="number">0x0801f2e2</literal></expr>, <expr><literal type="number">0x858efc16</literal></expr>,
            <expr><literal type="number">0x636920d8</literal></expr>, <expr><literal type="number">0x71574e69</literal></expr>, <expr><literal type="number">0xa458fea3</literal></expr>, <expr><literal type="number">0xf4933d7e</literal></expr>,
            <expr><literal type="number">0x0d95748f</literal></expr>, <expr><literal type="number">0x728eb658</literal></expr>, <expr><literal type="number">0x718bcd58</literal></expr>, <expr><literal type="number">0x82154aee</literal></expr>,
            <expr><literal type="number">0x7b54a41d</literal></expr>, <expr><literal type="number">0xc25a59b5</literal></expr>, <expr><literal type="number">0x9c30d539</literal></expr>, <expr><literal type="number">0x2af26013</literal></expr>,
            <expr><literal type="number">0xc5d1b023</literal></expr>, <expr><literal type="number">0x286085f0</literal></expr>, <expr><literal type="number">0xca417918</literal></expr>, <expr><literal type="number">0xb8db38ef</literal></expr>,
            <expr><literal type="number">0x8e79dcb0</literal></expr>, <expr><literal type="number">0x603a180e</literal></expr>, <expr><literal type="number">0x6c9e0e8b</literal></expr>, <expr><literal type="number">0xb01e8a3e</literal></expr>,
            <expr><literal type="number">0xd71577c1</literal></expr>, <expr><literal type="number">0xbd314b27</literal></expr>, <expr><literal type="number">0x78af2fda</literal></expr>, <expr><literal type="number">0x55605c60</literal></expr>,
            <expr><literal type="number">0xe65525f3</literal></expr>, <expr><literal type="number">0xaa55ab94</literal></expr>, <expr><literal type="number">0x57489862</literal></expr>, <expr><literal type="number">0x63e81440</literal></expr>,
            <expr><literal type="number">0x55ca396a</literal></expr>, <expr><literal type="number">0x2aab10b6</literal></expr>, <expr><literal type="number">0xb4cc5c34</literal></expr>, <expr><literal type="number">0x1141e8ce</literal></expr>,
            <expr><literal type="number">0xa15486af</literal></expr>, <expr><literal type="number">0x7c72e993</literal></expr>, <expr><literal type="number">0xb3ee1411</literal></expr>, <expr><literal type="number">0x636fbc2a</literal></expr>,
            <expr><literal type="number">0x2ba9c55d</literal></expr>, <expr><literal type="number">0x741831f6</literal></expr>, <expr><literal type="number">0xce5c3e16</literal></expr>, <expr><literal type="number">0x9b87931e</literal></expr>,
            <expr><literal type="number">0xafd6ba33</literal></expr>, <expr><literal type="number">0x6c24cf5c</literal></expr>, <expr><literal type="number">0x7a325381</literal></expr>, <expr><literal type="number">0x28958677</literal></expr>,
            <expr><literal type="number">0x3b8f4898</literal></expr>, <expr><literal type="number">0x6b4bb9af</literal></expr>, <expr><literal type="number">0xc4bfe81b</literal></expr>, <expr><literal type="number">0x66282193</literal></expr>,
            <expr><literal type="number">0x61d809cc</literal></expr>, <expr><literal type="number">0xfb21a991</literal></expr>, <expr><literal type="number">0x487cac60</literal></expr>, <expr><literal type="number">0x5dec8032</literal></expr>,
            <expr><literal type="number">0xef845d5d</literal></expr>, <expr><literal type="number">0xe98575b1</literal></expr>, <expr><literal type="number">0xdc262302</literal></expr>, <expr><literal type="number">0xeb651b88</literal></expr>,
            <expr><literal type="number">0x23893e81</literal></expr>, <expr><literal type="number">0xd396acc5</literal></expr>, <expr><literal type="number">0x0f6d6ff3</literal></expr>, <expr><literal type="number">0x83f44239</literal></expr>,
            <expr><literal type="number">0x2e0b4482</literal></expr>, <expr><literal type="number">0xa4842004</literal></expr>, <expr><literal type="number">0x69c8f04a</literal></expr>, <expr><literal type="number">0x9e1f9b5e</literal></expr>,
            <expr><literal type="number">0x21c66842</literal></expr>, <expr><literal type="number">0xf6e96c9a</literal></expr>, <expr><literal type="number">0x670c9c61</literal></expr>, <expr><literal type="number">0xabd388f0</literal></expr>,
            <expr><literal type="number">0x6a51a0d2</literal></expr>, <expr><literal type="number">0xd8542f68</literal></expr>, <expr><literal type="number">0x960fa728</literal></expr>, <expr><literal type="number">0xab5133a3</literal></expr>,
            <expr><literal type="number">0x6eef0b6c</literal></expr>, <expr><literal type="number">0x137a3be4</literal></expr>, <expr><literal type="number">0xba3bf050</literal></expr>, <expr><literal type="number">0x7efb2a98</literal></expr>,
            <expr><literal type="number">0xa1f1651d</literal></expr>, <expr><literal type="number">0x39af0176</literal></expr>, <expr><literal type="number">0x66ca593e</literal></expr>, <expr><literal type="number">0x82430e88</literal></expr>,
            <expr><literal type="number">0x8cee8619</literal></expr>, <expr><literal type="number">0x456f9fb4</literal></expr>, <expr><literal type="number">0x7d84a5c3</literal></expr>, <expr><literal type="number">0x3b8b5ebe</literal></expr>,
            <expr><literal type="number">0xe06f75d8</literal></expr>, <expr><literal type="number">0x85c12073</literal></expr>, <expr><literal type="number">0x401a449f</literal></expr>, <expr><literal type="number">0x56c16aa6</literal></expr>,
            <expr><literal type="number">0x4ed3aa62</literal></expr>, <expr><literal type="number">0x363f7706</literal></expr>, <expr><literal type="number">0x1bfedf72</literal></expr>, <expr><literal type="number">0x429b023d</literal></expr>,
            <expr><literal type="number">0x37d0d724</literal></expr>, <expr><literal type="number">0xd00a1248</literal></expr>, <expr><literal type="number">0xdb0fead3</literal></expr>, <expr><literal type="number">0x49f1c09b</literal></expr>,
            <expr><literal type="number">0x075372c9</literal></expr>, <expr><literal type="number">0x80991b7b</literal></expr>, <expr><literal type="number">0x25d479d8</literal></expr>, <expr><literal type="number">0xf6e8def7</literal></expr>,
            <expr><literal type="number">0xe3fe501a</literal></expr>, <expr><literal type="number">0xb6794c3b</literal></expr>, <expr><literal type="number">0x976ce0bd</literal></expr>, <expr><literal type="number">0x04c006ba</literal></expr>,
            <expr><literal type="number">0xc1a94fb6</literal></expr>, <expr><literal type="number">0x409f60c4</literal></expr>, <expr><literal type="number">0x5e5c9ec2</literal></expr>, <expr><literal type="number">0x196a2463</literal></expr>,
            <expr><literal type="number">0x68fb6faf</literal></expr>, <expr><literal type="number">0x3e6c53b5</literal></expr>, <expr><literal type="number">0x1339b2eb</literal></expr>, <expr><literal type="number">0x3b52ec6f</literal></expr>,
            <expr><literal type="number">0x6dfc511f</literal></expr>, <expr><literal type="number">0x9b30952c</literal></expr>, <expr><literal type="number">0xcc814544</literal></expr>, <expr><literal type="number">0xaf5ebd09</literal></expr>,
            <expr><literal type="number">0xbee3d004</literal></expr>, <expr><literal type="number">0xde334afd</literal></expr>, <expr><literal type="number">0x660f2807</literal></expr>, <expr><literal type="number">0x192e4bb3</literal></expr>,
            <expr><literal type="number">0xc0cba857</literal></expr>, <expr><literal type="number">0x45c8740f</literal></expr>, <expr><literal type="number">0xd20b5f39</literal></expr>, <expr><literal type="number">0xb9d3fbdb</literal></expr>,
            <expr><literal type="number">0x5579c0bd</literal></expr>, <expr><literal type="number">0x1a60320a</literal></expr>, <expr><literal type="number">0xd6a100c6</literal></expr>, <expr><literal type="number">0x402c7279</literal></expr>,
            <expr><literal type="number">0x679f25fe</literal></expr>, <expr><literal type="number">0xfb1fa3cc</literal></expr>, <expr><literal type="number">0x8ea5e9f8</literal></expr>, <expr><literal type="number">0xdb3222f8</literal></expr>,
            <expr><literal type="number">0x3c7516df</literal></expr>, <expr><literal type="number">0xfd616b15</literal></expr>, <expr><literal type="number">0x2f501ec8</literal></expr>, <expr><literal type="number">0xad0552ab</literal></expr>,
            <expr><literal type="number">0x323db5fa</literal></expr>, <expr><literal type="number">0xfd238760</literal></expr>, <expr><literal type="number">0x53317b48</literal></expr>, <expr><literal type="number">0x3e00df82</literal></expr>,
            <expr><literal type="number">0x9e5c57bb</literal></expr>, <expr><literal type="number">0xca6f8ca0</literal></expr>, <expr><literal type="number">0x1a87562e</literal></expr>, <expr><literal type="number">0xdf1769db</literal></expr>,
            <expr><literal type="number">0xd542a8f6</literal></expr>, <expr><literal type="number">0x287effc3</literal></expr>, <expr><literal type="number">0xac6732c6</literal></expr>, <expr><literal type="number">0x8c4f5573</literal></expr>,
            <expr><literal type="number">0x695b27b0</literal></expr>, <expr><literal type="number">0xbbca58c8</literal></expr>, <expr><literal type="number">0xe1ffa35d</literal></expr>, <expr><literal type="number">0xb8f011a0</literal></expr>,
            <expr><literal type="number">0x10fa3d98</literal></expr>, <expr><literal type="number">0xfd2183b8</literal></expr>, <expr><literal type="number">0x4afcb56c</literal></expr>, <expr><literal type="number">0x2dd1d35b</literal></expr>,
            <expr><literal type="number">0x9a53e479</literal></expr>, <expr><literal type="number">0xb6f84565</literal></expr>, <expr><literal type="number">0xd28e49bc</literal></expr>, <expr><literal type="number">0x4bfb9790</literal></expr>,
            <expr><literal type="number">0xe1ddf2da</literal></expr>, <expr><literal type="number">0xa4cb7e33</literal></expr>, <expr><literal type="number">0x62fb1341</literal></expr>, <expr><literal type="number">0xcee4c6e8</literal></expr>,
            <expr><literal type="number">0xef20cada</literal></expr>, <expr><literal type="number">0x36774c01</literal></expr>, <expr><literal type="number">0xd07e9efe</literal></expr>, <expr><literal type="number">0x2bf11fb4</literal></expr>,
            <expr><literal type="number">0x95dbda4d</literal></expr>, <expr><literal type="number">0xae909198</literal></expr>, <expr><literal type="number">0xeaad8e71</literal></expr>, <expr><literal type="number">0x6b93d5a0</literal></expr>,
            <expr><literal type="number">0xd08ed1d0</literal></expr>, <expr><literal type="number">0xafc725e0</literal></expr>, <expr><literal type="number">0x8e3c5b2f</literal></expr>, <expr><literal type="number">0x8e7594b7</literal></expr>,
            <expr><literal type="number">0x8ff6e2fb</literal></expr>, <expr><literal type="number">0xf2122b64</literal></expr>, <expr><literal type="number">0x8888b812</literal></expr>, <expr><literal type="number">0x900df01c</literal></expr>,
            <expr><literal type="number">0x4fad5ea0</literal></expr>, <expr><literal type="number">0x688fc31c</literal></expr>, <expr><literal type="number">0xd1cff191</literal></expr>, <expr><literal type="number">0xb3a8c1ad</literal></expr>,
            <expr><literal type="number">0x2f2f2218</literal></expr>, <expr><literal type="number">0xbe0e1777</literal></expr>, <expr><literal type="number">0xea752dfe</literal></expr>, <expr><literal type="number">0x8b021fa1</literal></expr>,
            <expr><literal type="number">0xe5a0cc0f</literal></expr>, <expr><literal type="number">0xb56f74e8</literal></expr>, <expr><literal type="number">0x18acf3d6</literal></expr>, <expr><literal type="number">0xce89e299</literal></expr>,
            <expr><literal type="number">0xb4a84fe0</literal></expr>, <expr><literal type="number">0xfd13e0b7</literal></expr>, <expr><literal type="number">0x7cc43b81</literal></expr>, <expr><literal type="number">0xd2ada8d9</literal></expr>,
            <expr><literal type="number">0x165fa266</literal></expr>, <expr><literal type="number">0x80957705</literal></expr>, <expr><literal type="number">0x93cc7314</literal></expr>, <expr><literal type="number">0x211a1477</literal></expr>,
            <expr><literal type="number">0xe6ad2065</literal></expr>, <expr><literal type="number">0x77b5fa86</literal></expr>, <expr><literal type="number">0xc75442f5</literal></expr>, <expr><literal type="number">0xfb9d35cf</literal></expr>,
            <expr><literal type="number">0xebcdaf0c</literal></expr>, <expr><literal type="number">0x7b3e89a0</literal></expr>, <expr><literal type="number">0xd6411bd3</literal></expr>, <expr><literal type="number">0xae1e7e49</literal></expr>,
            <expr><literal type="number">0x00250e2d</literal></expr>, <expr><literal type="number">0x2071b35e</literal></expr>, <expr><literal type="number">0x226800bb</literal></expr>, <expr><literal type="number">0x57b8e0af</literal></expr>,
            <expr><literal type="number">0x2464369b</literal></expr>, <expr><literal type="number">0xf009b91e</literal></expr>, <expr><literal type="number">0x5563911d</literal></expr>, <expr><literal type="number">0x59dfa6aa</literal></expr>,
            <expr><literal type="number">0x78c14389</literal></expr>, <expr><literal type="number">0xd95a537f</literal></expr>, <expr><literal type="number">0x207d5ba2</literal></expr>, <expr><literal type="number">0x02e5b9c5</literal></expr>,
            <expr><literal type="number">0x83260376</literal></expr>, <expr><literal type="number">0x6295cfa9</literal></expr>, <expr><literal type="number">0x11c81968</literal></expr>, <expr><literal type="number">0x4e734a41</literal></expr>,
            <expr><literal type="number">0xb3472dca</literal></expr>, <expr><literal type="number">0x7b14a94a</literal></expr>, <expr><literal type="number">0x1b510052</literal></expr>, <expr><literal type="number">0x9a532915</literal></expr>,
            <expr><literal type="number">0xd60f573f</literal></expr>, <expr><literal type="number">0xbc9bc6e4</literal></expr>, <expr><literal type="number">0x2b60a476</literal></expr>, <expr><literal type="number">0x81e67400</literal></expr>,
            <expr><literal type="number">0x08ba6fb5</literal></expr>, <expr><literal type="number">0x571be91f</literal></expr>, <expr><literal type="number">0xf296ec6b</literal></expr>, <expr><literal type="number">0x2a0dd915</literal></expr>,
            <expr><literal type="number">0xb6636521</literal></expr>, <expr><literal type="number">0xe7b9f9b6</literal></expr>, <expr><literal type="number">0xff34052e</literal></expr>, <expr><literal type="number">0xc5855664</literal></expr>,
            <expr><literal type="number">0x53b02d5d</literal></expr>, <expr><literal type="number">0xa99f8fa1</literal></expr>, <expr><literal type="number">0x08ba4799</literal></expr>, <expr><literal type="number">0x6e85076a</literal></expr>
        }</block></expr>, <expr><block>{
            <expr><literal type="number">0x4b7a70e9</literal></expr>, <expr><literal type="number">0xb5b32944</literal></expr>, <expr><literal type="number">0xdb75092e</literal></expr>, <expr><literal type="number">0xc4192623</literal></expr>,
            <expr><literal type="number">0xad6ea6b0</literal></expr>, <expr><literal type="number">0x49a7df7d</literal></expr>, <expr><literal type="number">0x9cee60b8</literal></expr>, <expr><literal type="number">0x8fedb266</literal></expr>,
            <expr><literal type="number">0xecaa8c71</literal></expr>, <expr><literal type="number">0x699a17ff</literal></expr>, <expr><literal type="number">0x5664526c</literal></expr>, <expr><literal type="number">0xc2b19ee1</literal></expr>,
            <expr><literal type="number">0x193602a5</literal></expr>, <expr><literal type="number">0x75094c29</literal></expr>, <expr><literal type="number">0xa0591340</literal></expr>, <expr><literal type="number">0xe4183a3e</literal></expr>,
            <expr><literal type="number">0x3f54989a</literal></expr>, <expr><literal type="number">0x5b429d65</literal></expr>, <expr><literal type="number">0x6b8fe4d6</literal></expr>, <expr><literal type="number">0x99f73fd6</literal></expr>,
            <expr><literal type="number">0xa1d29c07</literal></expr>, <expr><literal type="number">0xefe830f5</literal></expr>, <expr><literal type="number">0x4d2d38e6</literal></expr>, <expr><literal type="number">0xf0255dc1</literal></expr>,
            <expr><literal type="number">0x4cdd2086</literal></expr>, <expr><literal type="number">0x8470eb26</literal></expr>, <expr><literal type="number">0x6382e9c6</literal></expr>, <expr><literal type="number">0x021ecc5e</literal></expr>,
            <expr><literal type="number">0x09686b3f</literal></expr>, <expr><literal type="number">0x3ebaefc9</literal></expr>, <expr><literal type="number">0x3c971814</literal></expr>, <expr><literal type="number">0x6b6a70a1</literal></expr>,
            <expr><literal type="number">0x687f3584</literal></expr>, <expr><literal type="number">0x52a0e286</literal></expr>, <expr><literal type="number">0xb79c5305</literal></expr>, <expr><literal type="number">0xaa500737</literal></expr>,
            <expr><literal type="number">0x3e07841c</literal></expr>, <expr><literal type="number">0x7fdeae5c</literal></expr>, <expr><literal type="number">0x8e7d44ec</literal></expr>, <expr><literal type="number">0x5716f2b8</literal></expr>,
            <expr><literal type="number">0xb03ada37</literal></expr>, <expr><literal type="number">0xf0500c0d</literal></expr>, <expr><literal type="number">0xf01c1f04</literal></expr>, <expr><literal type="number">0x0200b3ff</literal></expr>,
            <expr><literal type="number">0xae0cf51a</literal></expr>, <expr><literal type="number">0x3cb574b2</literal></expr>, <expr><literal type="number">0x25837a58</literal></expr>, <expr><literal type="number">0xdc0921bd</literal></expr>,
            <expr><literal type="number">0xd19113f9</literal></expr>, <expr><literal type="number">0x7ca92ff6</literal></expr>, <expr><literal type="number">0x94324773</literal></expr>, <expr><literal type="number">0x22f54701</literal></expr>,
            <expr><literal type="number">0x3ae5e581</literal></expr>, <expr><literal type="number">0x37c2dadc</literal></expr>, <expr><literal type="number">0xc8b57634</literal></expr>, <expr><literal type="number">0x9af3dda7</literal></expr>,
            <expr><literal type="number">0xa9446146</literal></expr>, <expr><literal type="number">0x0fd0030e</literal></expr>, <expr><literal type="number">0xecc8c73e</literal></expr>, <expr><literal type="number">0xa4751e41</literal></expr>,
            <expr><literal type="number">0xe238cd99</literal></expr>, <expr><literal type="number">0x3bea0e2f</literal></expr>, <expr><literal type="number">0x3280bba1</literal></expr>, <expr><literal type="number">0x183eb331</literal></expr>,
            <expr><literal type="number">0x4e548b38</literal></expr>, <expr><literal type="number">0x4f6db908</literal></expr>, <expr><literal type="number">0x6f420d03</literal></expr>, <expr><literal type="number">0xf60a04bf</literal></expr>,
            <expr><literal type="number">0x2cb81290</literal></expr>, <expr><literal type="number">0x24977c79</literal></expr>, <expr><literal type="number">0x5679b072</literal></expr>, <expr><literal type="number">0xbcaf89af</literal></expr>,
            <expr><literal type="number">0xde9a771f</literal></expr>, <expr><literal type="number">0xd9930810</literal></expr>, <expr><literal type="number">0xb38bae12</literal></expr>, <expr><literal type="number">0xdccf3f2e</literal></expr>,
            <expr><literal type="number">0x5512721f</literal></expr>, <expr><literal type="number">0x2e6b7124</literal></expr>, <expr><literal type="number">0x501adde6</literal></expr>, <expr><literal type="number">0x9f84cd87</literal></expr>,
            <expr><literal type="number">0x7a584718</literal></expr>, <expr><literal type="number">0x7408da17</literal></expr>, <expr><literal type="number">0xbc9f9abc</literal></expr>, <expr><literal type="number">0xe94b7d8c</literal></expr>,
            <expr><literal type="number">0xec7aec3a</literal></expr>, <expr><literal type="number">0xdb851dfa</literal></expr>, <expr><literal type="number">0x63094366</literal></expr>, <expr><literal type="number">0xc464c3d2</literal></expr>,
            <expr><literal type="number">0xef1c1847</literal></expr>, <expr><literal type="number">0x3215d908</literal></expr>, <expr><literal type="number">0xdd433b37</literal></expr>, <expr><literal type="number">0x24c2ba16</literal></expr>,
            <expr><literal type="number">0x12a14d43</literal></expr>, <expr><literal type="number">0x2a65c451</literal></expr>, <expr><literal type="number">0x50940002</literal></expr>, <expr><literal type="number">0x133ae4dd</literal></expr>,
            <expr><literal type="number">0x71dff89e</literal></expr>, <expr><literal type="number">0x10314e55</literal></expr>, <expr><literal type="number">0x81ac77d6</literal></expr>, <expr><literal type="number">0x5f11199b</literal></expr>,
            <expr><literal type="number">0x043556f1</literal></expr>, <expr><literal type="number">0xd7a3c76b</literal></expr>, <expr><literal type="number">0x3c11183b</literal></expr>, <expr><literal type="number">0x5924a509</literal></expr>,
            <expr><literal type="number">0xf28fe6ed</literal></expr>, <expr><literal type="number">0x97f1fbfa</literal></expr>, <expr><literal type="number">0x9ebabf2c</literal></expr>, <expr><literal type="number">0x1e153c6e</literal></expr>,
            <expr><literal type="number">0x86e34570</literal></expr>, <expr><literal type="number">0xeae96fb1</literal></expr>, <expr><literal type="number">0x860e5e0a</literal></expr>, <expr><literal type="number">0x5a3e2ab3</literal></expr>,
            <expr><literal type="number">0x771fe71c</literal></expr>, <expr><literal type="number">0x4e3d06fa</literal></expr>, <expr><literal type="number">0x2965dcb9</literal></expr>, <expr><literal type="number">0x99e71d0f</literal></expr>,
            <expr><literal type="number">0x803e89d6</literal></expr>, <expr><literal type="number">0x5266c825</literal></expr>, <expr><literal type="number">0x2e4cc978</literal></expr>, <expr><literal type="number">0x9c10b36a</literal></expr>,
            <expr><literal type="number">0xc6150eba</literal></expr>, <expr><literal type="number">0x94e2ea78</literal></expr>, <expr><literal type="number">0xa5fc3c53</literal></expr>, <expr><literal type="number">0x1e0a2df4</literal></expr>,
            <expr><literal type="number">0xf2f74ea7</literal></expr>, <expr><literal type="number">0x361d2b3d</literal></expr>, <expr><literal type="number">0x1939260f</literal></expr>, <expr><literal type="number">0x19c27960</literal></expr>,
            <expr><literal type="number">0x5223a708</literal></expr>, <expr><literal type="number">0xf71312b6</literal></expr>, <expr><literal type="number">0xebadfe6e</literal></expr>, <expr><literal type="number">0xeac31f66</literal></expr>,
            <expr><literal type="number">0xe3bc4595</literal></expr>, <expr><literal type="number">0xa67bc883</literal></expr>, <expr><literal type="number">0xb17f37d1</literal></expr>, <expr><literal type="number">0x018cff28</literal></expr>,
            <expr><literal type="number">0xc332ddef</literal></expr>, <expr><literal type="number">0xbe6c5aa5</literal></expr>, <expr><literal type="number">0x65582185</literal></expr>, <expr><literal type="number">0x68ab9802</literal></expr>,
            <expr><literal type="number">0xeecea50f</literal></expr>, <expr><literal type="number">0xdb2f953b</literal></expr>, <expr><literal type="number">0x2aef7dad</literal></expr>, <expr><literal type="number">0x5b6e2f84</literal></expr>,
            <expr><literal type="number">0x1521b628</literal></expr>, <expr><literal type="number">0x29076170</literal></expr>, <expr><literal type="number">0xecdd4775</literal></expr>, <expr><literal type="number">0x619f1510</literal></expr>,
            <expr><literal type="number">0x13cca830</literal></expr>, <expr><literal type="number">0xeb61bd96</literal></expr>, <expr><literal type="number">0x0334fe1e</literal></expr>, <expr><literal type="number">0xaa0363cf</literal></expr>,
            <expr><literal type="number">0xb5735c90</literal></expr>, <expr><literal type="number">0x4c70a239</literal></expr>, <expr><literal type="number">0xd59e9e0b</literal></expr>, <expr><literal type="number">0xcbaade14</literal></expr>,
            <expr><literal type="number">0xeecc86bc</literal></expr>, <expr><literal type="number">0x60622ca7</literal></expr>, <expr><literal type="number">0x9cab5cab</literal></expr>, <expr><literal type="number">0xb2f3846e</literal></expr>,
            <expr><literal type="number">0x648b1eaf</literal></expr>, <expr><literal type="number">0x19bdf0ca</literal></expr>, <expr><literal type="number">0xa02369b9</literal></expr>, <expr><literal type="number">0x655abb50</literal></expr>,
            <expr><literal type="number">0x40685a32</literal></expr>, <expr><literal type="number">0x3c2ab4b3</literal></expr>, <expr><literal type="number">0x319ee9d5</literal></expr>, <expr><literal type="number">0xc021b8f7</literal></expr>,
            <expr><literal type="number">0x9b540b19</literal></expr>, <expr><literal type="number">0x875fa099</literal></expr>, <expr><literal type="number">0x95f7997e</literal></expr>, <expr><literal type="number">0x623d7da8</literal></expr>,
            <expr><literal type="number">0xf837889a</literal></expr>, <expr><literal type="number">0x97e32d77</literal></expr>, <expr><literal type="number">0x11ed935f</literal></expr>, <expr><literal type="number">0x16681281</literal></expr>,
            <expr><literal type="number">0x0e358829</literal></expr>, <expr><literal type="number">0xc7e61fd6</literal></expr>, <expr><literal type="number">0x96dedfa1</literal></expr>, <expr><literal type="number">0x7858ba99</literal></expr>,
            <expr><literal type="number">0x57f584a5</literal></expr>, <expr><literal type="number">0x1b227263</literal></expr>, <expr><literal type="number">0x9b83c3ff</literal></expr>, <expr><literal type="number">0x1ac24696</literal></expr>,
            <expr><literal type="number">0xcdb30aeb</literal></expr>, <expr><literal type="number">0x532e3054</literal></expr>, <expr><literal type="number">0x8fd948e4</literal></expr>, <expr><literal type="number">0x6dbc3128</literal></expr>,
            <expr><literal type="number">0x58ebf2ef</literal></expr>, <expr><literal type="number">0x34c6ffea</literal></expr>, <expr><literal type="number">0xfe28ed61</literal></expr>, <expr><literal type="number">0xee7c3c73</literal></expr>,
            <expr><literal type="number">0x5d4a14d9</literal></expr>, <expr><literal type="number">0xe864b7e3</literal></expr>, <expr><literal type="number">0x42105d14</literal></expr>, <expr><literal type="number">0x203e13e0</literal></expr>,
            <expr><literal type="number">0x45eee2b6</literal></expr>, <expr><literal type="number">0xa3aaabea</literal></expr>, <expr><literal type="number">0xdb6c4f15</literal></expr>, <expr><literal type="number">0xfacb4fd0</literal></expr>,
            <expr><literal type="number">0xc742f442</literal></expr>, <expr><literal type="number">0xef6abbb5</literal></expr>, <expr><literal type="number">0x654f3b1d</literal></expr>, <expr><literal type="number">0x41cd2105</literal></expr>,
            <expr><literal type="number">0xd81e799e</literal></expr>, <expr><literal type="number">0x86854dc7</literal></expr>, <expr><literal type="number">0xe44b476a</literal></expr>, <expr><literal type="number">0x3d816250</literal></expr>,
            <expr><literal type="number">0xcf62a1f2</literal></expr>, <expr><literal type="number">0x5b8d2646</literal></expr>, <expr><literal type="number">0xfc8883a0</literal></expr>, <expr><literal type="number">0xc1c7b6a3</literal></expr>,
            <expr><literal type="number">0x7f1524c3</literal></expr>, <expr><literal type="number">0x69cb7492</literal></expr>, <expr><literal type="number">0x47848a0b</literal></expr>, <expr><literal type="number">0x5692b285</literal></expr>,
            <expr><literal type="number">0x095bbf00</literal></expr>, <expr><literal type="number">0xad19489d</literal></expr>, <expr><literal type="number">0x1462b174</literal></expr>, <expr><literal type="number">0x23820e00</literal></expr>,
            <expr><literal type="number">0x58428d2a</literal></expr>, <expr><literal type="number">0x0c55f5ea</literal></expr>, <expr><literal type="number">0x1dadf43e</literal></expr>, <expr><literal type="number">0x233f7061</literal></expr>,
            <expr><literal type="number">0x3372f092</literal></expr>, <expr><literal type="number">0x8d937e41</literal></expr>, <expr><literal type="number">0xd65fecf1</literal></expr>, <expr><literal type="number">0x6c223bdb</literal></expr>,
            <expr><literal type="number">0x7cde3759</literal></expr>, <expr><literal type="number">0xcbee7460</literal></expr>, <expr><literal type="number">0x4085f2a7</literal></expr>, <expr><literal type="number">0xce77326e</literal></expr>,
            <expr><literal type="number">0xa6078084</literal></expr>, <expr><literal type="number">0x19f8509e</literal></expr>, <expr><literal type="number">0xe8efd855</literal></expr>, <expr><literal type="number">0x61d99735</literal></expr>,
            <expr><literal type="number">0xa969a7aa</literal></expr>, <expr><literal type="number">0xc50c06c2</literal></expr>, <expr><literal type="number">0x5a04abfc</literal></expr>, <expr><literal type="number">0x800bcadc</literal></expr>,
            <expr><literal type="number">0x9e447a2e</literal></expr>, <expr><literal type="number">0xc3453484</literal></expr>, <expr><literal type="number">0xfdd56705</literal></expr>, <expr><literal type="number">0x0e1e9ec9</literal></expr>,
            <expr><literal type="number">0xdb73dbd3</literal></expr>, <expr><literal type="number">0x105588cd</literal></expr>, <expr><literal type="number">0x675fda79</literal></expr>, <expr><literal type="number">0xe3674340</literal></expr>,
            <expr><literal type="number">0xc5c43465</literal></expr>, <expr><literal type="number">0x713e38d8</literal></expr>, <expr><literal type="number">0x3d28f89e</literal></expr>, <expr><literal type="number">0xf16dff20</literal></expr>,
            <expr><literal type="number">0x153e21e7</literal></expr>, <expr><literal type="number">0x8fb03d4a</literal></expr>, <expr><literal type="number">0xe6e39f2b</literal></expr>, <expr><literal type="number">0xdb83adf7</literal></expr>
        }</block></expr>, <expr><block>{
            <expr><literal type="number">0xe93d5a68</literal></expr>, <expr><literal type="number">0x948140f7</literal></expr>, <expr><literal type="number">0xf64c261c</literal></expr>, <expr><literal type="number">0x94692934</literal></expr>,
            <expr><literal type="number">0x411520f7</literal></expr>, <expr><literal type="number">0x7602d4f7</literal></expr>, <expr><literal type="number">0xbcf46b2e</literal></expr>, <expr><literal type="number">0xd4a20068</literal></expr>,
            <expr><literal type="number">0xd4082471</literal></expr>, <expr><literal type="number">0x3320f46a</literal></expr>, <expr><literal type="number">0x43b7d4b7</literal></expr>, <expr><literal type="number">0x500061af</literal></expr>,
            <expr><literal type="number">0x1e39f62e</literal></expr>, <expr><literal type="number">0x97244546</literal></expr>, <expr><literal type="number">0x14214f74</literal></expr>, <expr><literal type="number">0xbf8b8840</literal></expr>,
            <expr><literal type="number">0x4d95fc1d</literal></expr>, <expr><literal type="number">0x96b591af</literal></expr>, <expr><literal type="number">0x70f4ddd3</literal></expr>, <expr><literal type="number">0x66a02f45</literal></expr>,
            <expr><literal type="number">0xbfbc09ec</literal></expr>, <expr><literal type="number">0x03bd9785</literal></expr>, <expr><literal type="number">0x7fac6dd0</literal></expr>, <expr><literal type="number">0x31cb8504</literal></expr>,
            <expr><literal type="number">0x96eb27b3</literal></expr>, <expr><literal type="number">0x55fd3941</literal></expr>, <expr><literal type="number">0xda2547e6</literal></expr>, <expr><literal type="number">0xabca0a9a</literal></expr>,
            <expr><literal type="number">0x28507825</literal></expr>, <expr><literal type="number">0x530429f4</literal></expr>, <expr><literal type="number">0x0a2c86da</literal></expr>, <expr><literal type="number">0xe9b66dfb</literal></expr>,
            <expr><literal type="number">0x68dc1462</literal></expr>, <expr><literal type="number">0xd7486900</literal></expr>, <expr><literal type="number">0x680ec0a4</literal></expr>, <expr><literal type="number">0x27a18dee</literal></expr>,
            <expr><literal type="number">0x4f3ffea2</literal></expr>, <expr><literal type="number">0xe887ad8c</literal></expr>, <expr><literal type="number">0xb58ce006</literal></expr>, <expr><literal type="number">0x7af4d6b6</literal></expr>,
            <expr><literal type="number">0xaace1e7c</literal></expr>, <expr><literal type="number">0xd3375fec</literal></expr>, <expr><literal type="number">0xce78a399</literal></expr>, <expr><literal type="number">0x406b2a42</literal></expr>,
            <expr><literal type="number">0x20fe9e35</literal></expr>, <expr><literal type="number">0xd9f385b9</literal></expr>, <expr><literal type="number">0xee39d7ab</literal></expr>, <expr><literal type="number">0x3b124e8b</literal></expr>,
            <expr><literal type="number">0x1dc9faf7</literal></expr>, <expr><literal type="number">0x4b6d1856</literal></expr>, <expr><literal type="number">0x26a36631</literal></expr>, <expr><literal type="number">0xeae397b2</literal></expr>,
            <expr><literal type="number">0x3a6efa74</literal></expr>, <expr><literal type="number">0xdd5b4332</literal></expr>, <expr><literal type="number">0x6841e7f7</literal></expr>, <expr><literal type="number">0xca7820fb</literal></expr>,
            <expr><literal type="number">0xfb0af54e</literal></expr>, <expr><literal type="number">0xd8feb397</literal></expr>, <expr><literal type="number">0x454056ac</literal></expr>, <expr><literal type="number">0xba489527</literal></expr>,
            <expr><literal type="number">0x55533a3a</literal></expr>, <expr><literal type="number">0x20838d87</literal></expr>, <expr><literal type="number">0xfe6ba9b7</literal></expr>, <expr><literal type="number">0xd096954b</literal></expr>,
            <expr><literal type="number">0x55a867bc</literal></expr>, <expr><literal type="number">0xa1159a58</literal></expr>, <expr><literal type="number">0xcca92963</literal></expr>, <expr><literal type="number">0x99e1db33</literal></expr>,
            <expr><literal type="number">0xa62a4a56</literal></expr>, <expr><literal type="number">0x3f3125f9</literal></expr>, <expr><literal type="number">0x5ef47e1c</literal></expr>, <expr><literal type="number">0x9029317c</literal></expr>,
            <expr><literal type="number">0xfdf8e802</literal></expr>, <expr><literal type="number">0x04272f70</literal></expr>, <expr><literal type="number">0x80bb155c</literal></expr>, <expr><literal type="number">0x05282ce3</literal></expr>,
            <expr><literal type="number">0x95c11548</literal></expr>, <expr><literal type="number">0xe4c66d22</literal></expr>, <expr><literal type="number">0x48c1133f</literal></expr>, <expr><literal type="number">0xc70f86dc</literal></expr>,
            <expr><literal type="number">0x07f9c9ee</literal></expr>, <expr><literal type="number">0x41041f0f</literal></expr>, <expr><literal type="number">0x404779a4</literal></expr>, <expr><literal type="number">0x5d886e17</literal></expr>,
            <expr><literal type="number">0x325f51eb</literal></expr>, <expr><literal type="number">0xd59bc0d1</literal></expr>, <expr><literal type="number">0xf2bcc18f</literal></expr>, <expr><literal type="number">0x41113564</literal></expr>,
            <expr><literal type="number">0x257b7834</literal></expr>, <expr><literal type="number">0x602a9c60</literal></expr>, <expr><literal type="number">0xdff8e8a3</literal></expr>, <expr><literal type="number">0x1f636c1b</literal></expr>,
            <expr><literal type="number">0x0e12b4c2</literal></expr>, <expr><literal type="number">0x02e1329e</literal></expr>, <expr><literal type="number">0xaf664fd1</literal></expr>, <expr><literal type="number">0xcad18115</literal></expr>,
            <expr><literal type="number">0x6b2395e0</literal></expr>, <expr><literal type="number">0x333e92e1</literal></expr>, <expr><literal type="number">0x3b240b62</literal></expr>, <expr><literal type="number">0xeebeb922</literal></expr>,
            <expr><literal type="number">0x85b2a20e</literal></expr>, <expr><literal type="number">0xe6ba0d99</literal></expr>, <expr><literal type="number">0xde720c8c</literal></expr>, <expr><literal type="number">0x2da2f728</literal></expr>,
            <expr><literal type="number">0xd0127845</literal></expr>, <expr><literal type="number">0x95b794fd</literal></expr>, <expr><literal type="number">0x647d0862</literal></expr>, <expr><literal type="number">0xe7ccf5f0</literal></expr>,
            <expr><literal type="number">0x5449a36f</literal></expr>, <expr><literal type="number">0x877d48fa</literal></expr>, <expr><literal type="number">0xc39dfd27</literal></expr>, <expr><literal type="number">0xf33e8d1e</literal></expr>,
            <expr><literal type="number">0x0a476341</literal></expr>, <expr><literal type="number">0x992eff74</literal></expr>, <expr><literal type="number">0x3a6f6eab</literal></expr>, <expr><literal type="number">0xf4f8fd37</literal></expr>,
            <expr><literal type="number">0xa812dc60</literal></expr>, <expr><literal type="number">0xa1ebddf8</literal></expr>, <expr><literal type="number">0x991be14c</literal></expr>, <expr><literal type="number">0xdb6e6b0d</literal></expr>,
            <expr><literal type="number">0xc67b5510</literal></expr>, <expr><literal type="number">0x6d672c37</literal></expr>, <expr><literal type="number">0x2765d43b</literal></expr>, <expr><literal type="number">0xdcd0e804</literal></expr>,
            <expr><literal type="number">0xf1290dc7</literal></expr>, <expr><literal type="number">0xcc00ffa3</literal></expr>, <expr><literal type="number">0xb5390f92</literal></expr>, <expr><literal type="number">0x690fed0b</literal></expr>,
            <expr><literal type="number">0x667b9ffb</literal></expr>, <expr><literal type="number">0xcedb7d9c</literal></expr>, <expr><literal type="number">0xa091cf0b</literal></expr>, <expr><literal type="number">0xd9155ea3</literal></expr>,
            <expr><literal type="number">0xbb132f88</literal></expr>, <expr><literal type="number">0x515bad24</literal></expr>, <expr><literal type="number">0x7b9479bf</literal></expr>, <expr><literal type="number">0x763bd6eb</literal></expr>,
            <expr><literal type="number">0x37392eb3</literal></expr>, <expr><literal type="number">0xcc115979</literal></expr>, <expr><literal type="number">0x8026e297</literal></expr>, <expr><literal type="number">0xf42e312d</literal></expr>,
            <expr><literal type="number">0x6842ada7</literal></expr>, <expr><literal type="number">0xc66a2b3b</literal></expr>, <expr><literal type="number">0x12754ccc</literal></expr>, <expr><literal type="number">0x782ef11c</literal></expr>,
            <expr><literal type="number">0x6a124237</literal></expr>, <expr><literal type="number">0xb79251e7</literal></expr>, <expr><literal type="number">0x06a1bbe6</literal></expr>, <expr><literal type="number">0x4bfb6350</literal></expr>,
            <expr><literal type="number">0x1a6b1018</literal></expr>, <expr><literal type="number">0x11caedfa</literal></expr>, <expr><literal type="number">0x3d25bdd8</literal></expr>, <expr><literal type="number">0xe2e1c3c9</literal></expr>,
            <expr><literal type="number">0x44421659</literal></expr>, <expr><literal type="number">0x0a121386</literal></expr>, <expr><literal type="number">0xd90cec6e</literal></expr>, <expr><literal type="number">0xd5abea2a</literal></expr>,
            <expr><literal type="number">0x64af674e</literal></expr>, <expr><literal type="number">0xda86a85f</literal></expr>, <expr><literal type="number">0xbebfe988</literal></expr>, <expr><literal type="number">0x64e4c3fe</literal></expr>,
            <expr><literal type="number">0x9dbc8057</literal></expr>, <expr><literal type="number">0xf0f7c086</literal></expr>, <expr><literal type="number">0x60787bf8</literal></expr>, <expr><literal type="number">0x6003604d</literal></expr>,
            <expr><literal type="number">0xd1fd8346</literal></expr>, <expr><literal type="number">0xf6381fb0</literal></expr>, <expr><literal type="number">0x7745ae04</literal></expr>, <expr><literal type="number">0xd736fccc</literal></expr>,
            <expr><literal type="number">0x83426b33</literal></expr>, <expr><literal type="number">0xf01eab71</literal></expr>, <expr><literal type="number">0xb0804187</literal></expr>, <expr><literal type="number">0x3c005e5f</literal></expr>,
            <expr><literal type="number">0x77a057be</literal></expr>, <expr><literal type="number">0xbde8ae24</literal></expr>, <expr><literal type="number">0x55464299</literal></expr>, <expr><literal type="number">0xbf582e61</literal></expr>,
            <expr><literal type="number">0x4e58f48f</literal></expr>, <expr><literal type="number">0xf2ddfda2</literal></expr>, <expr><literal type="number">0xf474ef38</literal></expr>, <expr><literal type="number">0x8789bdc2</literal></expr>,
            <expr><literal type="number">0x5366f9c3</literal></expr>, <expr><literal type="number">0xc8b38e74</literal></expr>, <expr><literal type="number">0xb475f255</literal></expr>, <expr><literal type="number">0x46fcd9b9</literal></expr>,
            <expr><literal type="number">0x7aeb2661</literal></expr>, <expr><literal type="number">0x8b1ddf84</literal></expr>, <expr><literal type="number">0x846a0e79</literal></expr>, <expr><literal type="number">0x915f95e2</literal></expr>,
            <expr><literal type="number">0x466e598e</literal></expr>, <expr><literal type="number">0x20b45770</literal></expr>, <expr><literal type="number">0x8cd55591</literal></expr>, <expr><literal type="number">0xc902de4c</literal></expr>,
            <expr><literal type="number">0xb90bace1</literal></expr>, <expr><literal type="number">0xbb8205d0</literal></expr>, <expr><literal type="number">0x11a86248</literal></expr>, <expr><literal type="number">0x7574a99e</literal></expr>,
            <expr><literal type="number">0xb77f19b6</literal></expr>, <expr><literal type="number">0xe0a9dc09</literal></expr>, <expr><literal type="number">0x662d09a1</literal></expr>, <expr><literal type="number">0xc4324633</literal></expr>,
            <expr><literal type="number">0xe85a1f02</literal></expr>, <expr><literal type="number">0x09f0be8c</literal></expr>, <expr><literal type="number">0x4a99a025</literal></expr>, <expr><literal type="number">0x1d6efe10</literal></expr>,
            <expr><literal type="number">0x1ab93d1d</literal></expr>, <expr><literal type="number">0x0ba5a4df</literal></expr>, <expr><literal type="number">0xa186f20f</literal></expr>, <expr><literal type="number">0x2868f169</literal></expr>,
            <expr><literal type="number">0xdcb7da83</literal></expr>, <expr><literal type="number">0x573906fe</literal></expr>, <expr><literal type="number">0xa1e2ce9b</literal></expr>, <expr><literal type="number">0x4fcd7f52</literal></expr>,
            <expr><literal type="number">0x50115e01</literal></expr>, <expr><literal type="number">0xa70683fa</literal></expr>, <expr><literal type="number">0xa002b5c4</literal></expr>, <expr><literal type="number">0x0de6d027</literal></expr>,
            <expr><literal type="number">0x9af88c27</literal></expr>, <expr><literal type="number">0x773f8641</literal></expr>, <expr><literal type="number">0xc3604c06</literal></expr>, <expr><literal type="number">0x61a806b5</literal></expr>,
            <expr><literal type="number">0xf0177a28</literal></expr>, <expr><literal type="number">0xc0f586e0</literal></expr>, <expr><literal type="number">0x006058aa</literal></expr>, <expr><literal type="number">0x30dc7d62</literal></expr>,
            <expr><literal type="number">0x11e69ed7</literal></expr>, <expr><literal type="number">0x2338ea63</literal></expr>, <expr><literal type="number">0x53c2dd94</literal></expr>, <expr><literal type="number">0xc2c21634</literal></expr>,
            <expr><literal type="number">0xbbcbee56</literal></expr>, <expr><literal type="number">0x90bcb6de</literal></expr>, <expr><literal type="number">0xebfc7da1</literal></expr>, <expr><literal type="number">0xce591d76</literal></expr>,
            <expr><literal type="number">0x6f05e409</literal></expr>, <expr><literal type="number">0x4b7c0188</literal></expr>, <expr><literal type="number">0x39720a3d</literal></expr>, <expr><literal type="number">0x7c927c24</literal></expr>,
            <expr><literal type="number">0x86e3725f</literal></expr>, <expr><literal type="number">0x724d9db9</literal></expr>, <expr><literal type="number">0x1ac15bb4</literal></expr>, <expr><literal type="number">0xd39eb8fc</literal></expr>,
            <expr><literal type="number">0xed545578</literal></expr>, <expr><literal type="number">0x08fca5b5</literal></expr>, <expr><literal type="number">0xd83d7cd3</literal></expr>, <expr><literal type="number">0x4dad0fc4</literal></expr>,
            <expr><literal type="number">0x1e50ef5e</literal></expr>, <expr><literal type="number">0xb161e6f8</literal></expr>, <expr><literal type="number">0xa28514d9</literal></expr>, <expr><literal type="number">0x6c51133c</literal></expr>,
            <expr><literal type="number">0x6fd5c7e7</literal></expr>, <expr><literal type="number">0x56e14ec4</literal></expr>, <expr><literal type="number">0x362abfce</literal></expr>, <expr><literal type="number">0xddc6c837</literal></expr>,
            <expr><literal type="number">0xd79a3234</literal></expr>, <expr><literal type="number">0x92638212</literal></expr>, <expr><literal type="number">0x670efa8e</literal></expr>, <expr><literal type="number">0x406000e0</literal></expr>
        }</block></expr>, <expr><block>{
            <expr><literal type="number">0x3a39ce37</literal></expr>, <expr><literal type="number">0xd3faf5cf</literal></expr>, <expr><literal type="number">0xabc27737</literal></expr>, <expr><literal type="number">0x5ac52d1b</literal></expr>,
            <expr><literal type="number">0x5cb0679e</literal></expr>, <expr><literal type="number">0x4fa33742</literal></expr>, <expr><literal type="number">0xd3822740</literal></expr>, <expr><literal type="number">0x99bc9bbe</literal></expr>,
            <expr><literal type="number">0xd5118e9d</literal></expr>, <expr><literal type="number">0xbf0f7315</literal></expr>, <expr><literal type="number">0xd62d1c7e</literal></expr>, <expr><literal type="number">0xc700c47b</literal></expr>,
            <expr><literal type="number">0xb78c1b6b</literal></expr>, <expr><literal type="number">0x21a19045</literal></expr>, <expr><literal type="number">0xb26eb1be</literal></expr>, <expr><literal type="number">0x6a366eb4</literal></expr>,
            <expr><literal type="number">0x5748ab2f</literal></expr>, <expr><literal type="number">0xbc946e79</literal></expr>, <expr><literal type="number">0xc6a376d2</literal></expr>, <expr><literal type="number">0x6549c2c8</literal></expr>,
            <expr><literal type="number">0x530ff8ee</literal></expr>, <expr><literal type="number">0x468dde7d</literal></expr>, <expr><literal type="number">0xd5730a1d</literal></expr>, <expr><literal type="number">0x4cd04dc6</literal></expr>,
            <expr><literal type="number">0x2939bbdb</literal></expr>, <expr><literal type="number">0xa9ba4650</literal></expr>, <expr><literal type="number">0xac9526e8</literal></expr>, <expr><literal type="number">0xbe5ee304</literal></expr>,
            <expr><literal type="number">0xa1fad5f0</literal></expr>, <expr><literal type="number">0x6a2d519a</literal></expr>, <expr><literal type="number">0x63ef8ce2</literal></expr>, <expr><literal type="number">0x9a86ee22</literal></expr>,
            <expr><literal type="number">0xc089c2b8</literal></expr>, <expr><literal type="number">0x43242ef6</literal></expr>, <expr><literal type="number">0xa51e03aa</literal></expr>, <expr><literal type="number">0x9cf2d0a4</literal></expr>,
            <expr><literal type="number">0x83c061ba</literal></expr>, <expr><literal type="number">0x9be96a4d</literal></expr>, <expr><literal type="number">0x8fe51550</literal></expr>, <expr><literal type="number">0xba645bd6</literal></expr>,
            <expr><literal type="number">0x2826a2f9</literal></expr>, <expr><literal type="number">0xa73a3ae1</literal></expr>, <expr><literal type="number">0x4ba99586</literal></expr>, <expr><literal type="number">0xef5562e9</literal></expr>,
            <expr><literal type="number">0xc72fefd3</literal></expr>, <expr><literal type="number">0xf752f7da</literal></expr>, <expr><literal type="number">0x3f046f69</literal></expr>, <expr><literal type="number">0x77fa0a59</literal></expr>,
            <expr><literal type="number">0x80e4a915</literal></expr>, <expr><literal type="number">0x87b08601</literal></expr>, <expr><literal type="number">0x9b09e6ad</literal></expr>, <expr><literal type="number">0x3b3ee593</literal></expr>,
            <expr><literal type="number">0xe990fd5a</literal></expr>, <expr><literal type="number">0x9e34d797</literal></expr>, <expr><literal type="number">0x2cf0b7d9</literal></expr>, <expr><literal type="number">0x022b8b51</literal></expr>,
            <expr><literal type="number">0x96d5ac3a</literal></expr>, <expr><literal type="number">0x017da67d</literal></expr>, <expr><literal type="number">0xd1cf3ed6</literal></expr>, <expr><literal type="number">0x7c7d2d28</literal></expr>,
            <expr><literal type="number">0x1f9f25cf</literal></expr>, <expr><literal type="number">0xadf2b89b</literal></expr>, <expr><literal type="number">0x5ad6b472</literal></expr>, <expr><literal type="number">0x5a88f54c</literal></expr>,
            <expr><literal type="number">0xe029ac71</literal></expr>, <expr><literal type="number">0xe019a5e6</literal></expr>, <expr><literal type="number">0x47b0acfd</literal></expr>, <expr><literal type="number">0xed93fa9b</literal></expr>,
            <expr><literal type="number">0xe8d3c48d</literal></expr>, <expr><literal type="number">0x283b57cc</literal></expr>, <expr><literal type="number">0xf8d56629</literal></expr>, <expr><literal type="number">0x79132e28</literal></expr>,
            <expr><literal type="number">0x785f0191</literal></expr>, <expr><literal type="number">0xed756055</literal></expr>, <expr><literal type="number">0xf7960e44</literal></expr>, <expr><literal type="number">0xe3d35e8c</literal></expr>,
            <expr><literal type="number">0x15056dd4</literal></expr>, <expr><literal type="number">0x88f46dba</literal></expr>, <expr><literal type="number">0x03a16125</literal></expr>, <expr><literal type="number">0x0564f0bd</literal></expr>,
            <expr><literal type="number">0xc3eb9e15</literal></expr>, <expr><literal type="number">0x3c9057a2</literal></expr>, <expr><literal type="number">0x97271aec</literal></expr>, <expr><literal type="number">0xa93a072a</literal></expr>,
            <expr><literal type="number">0x1b3f6d9b</literal></expr>, <expr><literal type="number">0x1e6321f5</literal></expr>, <expr><literal type="number">0xf59c66fb</literal></expr>, <expr><literal type="number">0x26dcf319</literal></expr>,
            <expr><literal type="number">0x7533d928</literal></expr>, <expr><literal type="number">0xb155fdf5</literal></expr>, <expr><literal type="number">0x03563482</literal></expr>, <expr><literal type="number">0x8aba3cbb</literal></expr>,
            <expr><literal type="number">0x28517711</literal></expr>, <expr><literal type="number">0xc20ad9f8</literal></expr>, <expr><literal type="number">0xabcc5167</literal></expr>, <expr><literal type="number">0xccad925f</literal></expr>,
            <expr><literal type="number">0x4de81751</literal></expr>, <expr><literal type="number">0x3830dc8e</literal></expr>, <expr><literal type="number">0x379d5862</literal></expr>, <expr><literal type="number">0x9320f991</literal></expr>,
            <expr><literal type="number">0xea7a90c2</literal></expr>, <expr><literal type="number">0xfb3e7bce</literal></expr>, <expr><literal type="number">0x5121ce64</literal></expr>, <expr><literal type="number">0x774fbe32</literal></expr>,
            <expr><literal type="number">0xa8b6e37e</literal></expr>, <expr><literal type="number">0xc3293d46</literal></expr>, <expr><literal type="number">0x48de5369</literal></expr>, <expr><literal type="number">0x6413e680</literal></expr>,
            <expr><literal type="number">0xa2ae0810</literal></expr>, <expr><literal type="number">0xdd6db224</literal></expr>, <expr><literal type="number">0x69852dfd</literal></expr>, <expr><literal type="number">0x09072166</literal></expr>,
            <expr><literal type="number">0xb39a460a</literal></expr>, <expr><literal type="number">0x6445c0dd</literal></expr>, <expr><literal type="number">0x586cdecf</literal></expr>, <expr><literal type="number">0x1c20c8ae</literal></expr>,
            <expr><literal type="number">0x5bbef7dd</literal></expr>, <expr><literal type="number">0x1b588d40</literal></expr>, <expr><literal type="number">0xccd2017f</literal></expr>, <expr><literal type="number">0x6bb4e3bb</literal></expr>,
            <expr><literal type="number">0xdda26a7e</literal></expr>, <expr><literal type="number">0x3a59ff45</literal></expr>, <expr><literal type="number">0x3e350a44</literal></expr>, <expr><literal type="number">0xbcb4cdd5</literal></expr>,
            <expr><literal type="number">0x72eacea8</literal></expr>, <expr><literal type="number">0xfa6484bb</literal></expr>, <expr><literal type="number">0x8d6612ae</literal></expr>, <expr><literal type="number">0xbf3c6f47</literal></expr>,
            <expr><literal type="number">0xd29be463</literal></expr>, <expr><literal type="number">0x542f5d9e</literal></expr>, <expr><literal type="number">0xaec2771b</literal></expr>, <expr><literal type="number">0xf64e6370</literal></expr>,
            <expr><literal type="number">0x740e0d8d</literal></expr>, <expr><literal type="number">0xe75b1357</literal></expr>, <expr><literal type="number">0xf8721671</literal></expr>, <expr><literal type="number">0xaf537d5d</literal></expr>,
            <expr><literal type="number">0x4040cb08</literal></expr>, <expr><literal type="number">0x4eb4e2cc</literal></expr>, <expr><literal type="number">0x34d2466a</literal></expr>, <expr><literal type="number">0x0115af84</literal></expr>,
            <expr><literal type="number">0xe1b00428</literal></expr>, <expr><literal type="number">0x95983a1d</literal></expr>, <expr><literal type="number">0x06b89fb4</literal></expr>, <expr><literal type="number">0xce6ea048</literal></expr>,
            <expr><literal type="number">0x6f3f3b82</literal></expr>, <expr><literal type="number">0x3520ab82</literal></expr>, <expr><literal type="number">0x011a1d4b</literal></expr>, <expr><literal type="number">0x277227f8</literal></expr>,
            <expr><literal type="number">0x611560b1</literal></expr>, <expr><literal type="number">0xe7933fdc</literal></expr>, <expr><literal type="number">0xbb3a792b</literal></expr>, <expr><literal type="number">0x344525bd</literal></expr>,
            <expr><literal type="number">0xa08839e1</literal></expr>, <expr><literal type="number">0x51ce794b</literal></expr>, <expr><literal type="number">0x2f32c9b7</literal></expr>, <expr><literal type="number">0xa01fbac9</literal></expr>,
            <expr><literal type="number">0xe01cc87e</literal></expr>, <expr><literal type="number">0xbcc7d1f6</literal></expr>, <expr><literal type="number">0xcf0111c3</literal></expr>, <expr><literal type="number">0xa1e8aac7</literal></expr>,
            <expr><literal type="number">0x1a908749</literal></expr>, <expr><literal type="number">0xd44fbd9a</literal></expr>, <expr><literal type="number">0xd0dadecb</literal></expr>, <expr><literal type="number">0xd50ada38</literal></expr>,
            <expr><literal type="number">0x0339c32a</literal></expr>, <expr><literal type="number">0xc6913667</literal></expr>, <expr><literal type="number">0x8df9317c</literal></expr>, <expr><literal type="number">0xe0b12b4f</literal></expr>,
            <expr><literal type="number">0xf79e59b7</literal></expr>, <expr><literal type="number">0x43f5bb3a</literal></expr>, <expr><literal type="number">0xf2d519ff</literal></expr>, <expr><literal type="number">0x27d9459c</literal></expr>,
            <expr><literal type="number">0xbf97222c</literal></expr>, <expr><literal type="number">0x15e6fc2a</literal></expr>, <expr><literal type="number">0x0f91fc71</literal></expr>, <expr><literal type="number">0x9b941525</literal></expr>,
            <expr><literal type="number">0xfae59361</literal></expr>, <expr><literal type="number">0xceb69ceb</literal></expr>, <expr><literal type="number">0xc2a86459</literal></expr>, <expr><literal type="number">0x12baa8d1</literal></expr>,
            <expr><literal type="number">0xb6c1075e</literal></expr>, <expr><literal type="number">0xe3056a0c</literal></expr>, <expr><literal type="number">0x10d25065</literal></expr>, <expr><literal type="number">0xcb03a442</literal></expr>,
            <expr><literal type="number">0xe0ec6e0e</literal></expr>, <expr><literal type="number">0x1698db3b</literal></expr>, <expr><literal type="number">0x4c98a0be</literal></expr>, <expr><literal type="number">0x3278e964</literal></expr>,
            <expr><literal type="number">0x9f1f9532</literal></expr>, <expr><literal type="number">0xe0d392df</literal></expr>, <expr><literal type="number">0xd3a0342b</literal></expr>, <expr><literal type="number">0x8971f21e</literal></expr>,
            <expr><literal type="number">0x1b0a7441</literal></expr>, <expr><literal type="number">0x4ba3348c</literal></expr>, <expr><literal type="number">0xc5be7120</literal></expr>, <expr><literal type="number">0xc37632d8</literal></expr>,
            <expr><literal type="number">0xdf359f8d</literal></expr>, <expr><literal type="number">0x9b992f2e</literal></expr>, <expr><literal type="number">0xe60b6f47</literal></expr>, <expr><literal type="number">0x0fe3f11d</literal></expr>,
            <expr><literal type="number">0xe54cda54</literal></expr>, <expr><literal type="number">0x1edad891</literal></expr>, <expr><literal type="number">0xce6279cf</literal></expr>, <expr><literal type="number">0xcd3e7e6f</literal></expr>,
            <expr><literal type="number">0x1618b166</literal></expr>, <expr><literal type="number">0xfd2c1d05</literal></expr>, <expr><literal type="number">0x848fd2c5</literal></expr>, <expr><literal type="number">0xf6fb2299</literal></expr>,
            <expr><literal type="number">0xf523f357</literal></expr>, <expr><literal type="number">0xa6327623</literal></expr>, <expr><literal type="number">0x93a83531</literal></expr>, <expr><literal type="number">0x56cccd02</literal></expr>,
            <expr><literal type="number">0xacf08162</literal></expr>, <expr><literal type="number">0x5a75ebb5</literal></expr>, <expr><literal type="number">0x6e163697</literal></expr>, <expr><literal type="number">0x88d273cc</literal></expr>,
            <expr><literal type="number">0xde966292</literal></expr>, <expr><literal type="number">0x81b949d0</literal></expr>, <expr><literal type="number">0x4c50901b</literal></expr>, <expr><literal type="number">0x71c65614</literal></expr>,
            <expr><literal type="number">0xe6c6c7bd</literal></expr>, <expr><literal type="number">0x327a140a</literal></expr>, <expr><literal type="number">0x45e1d006</literal></expr>, <expr><literal type="number">0xc3f27b9a</literal></expr>,
            <expr><literal type="number">0xc9aa53fd</literal></expr>, <expr><literal type="number">0x62a80f00</literal></expr>, <expr><literal type="number">0xbb25bfe2</literal></expr>, <expr><literal type="number">0x35bdd2f6</literal></expr>,
            <expr><literal type="number">0x71126905</literal></expr>, <expr><literal type="number">0xb2040222</literal></expr>, <expr><literal type="number">0xb6cbcf7c</literal></expr>, <expr><literal type="number">0xcd769c2b</literal></expr>,
            <expr><literal type="number">0x53113ec0</literal></expr>, <expr><literal type="number">0x1640e3d3</literal></expr>, <expr><literal type="number">0x38abbd60</literal></expr>, <expr><literal type="number">0x2547adf0</literal></expr>,
            <expr><literal type="number">0xba38209c</literal></expr>, <expr><literal type="number">0xf746ce76</literal></expr>, <expr><literal type="number">0x77afa1c5</literal></expr>, <expr><literal type="number">0x20756060</literal></expr>,
            <expr><literal type="number">0x85cbfe4e</literal></expr>, <expr><literal type="number">0x8ae88dd8</literal></expr>, <expr><literal type="number">0x7aaaf9b0</literal></expr>, <expr><literal type="number">0x4cf9aa7e</literal></expr>,
            <expr><literal type="number">0x1948c25c</literal></expr>, <expr><literal type="number">0x02fb8a8c</literal></expr>, <expr><literal type="number">0x01c36ae4</literal></expr>, <expr><literal type="number">0xd6ebe1f9</literal></expr>,
            <expr><literal type="number">0x90d4f869</literal></expr>, <expr><literal type="number">0xa65cdea0</literal></expr>, <expr><literal type="number">0x3f09252d</literal></expr>, <expr><literal type="number">0xc208e69f</literal></expr>,
            <expr><literal type="number">0xb74e6132</literal></expr>, <expr><literal type="number">0xce77e25b</literal></expr>, <expr><literal type="number">0x578fdfe3</literal></expr>, <expr><literal type="number">0x3ac372e6</literal></expr>
        }</block></expr>
    }</block></expr>, <expr><block>{
        <expr><literal type="number">0x243f6a88</literal></expr>, <expr><literal type="number">0x85a308d3</literal></expr>, <expr><literal type="number">0x13198a2e</literal></expr>, <expr><literal type="number">0x03707344</literal></expr>,
        <expr><literal type="number">0xa4093822</literal></expr>, <expr><literal type="number">0x299f31d0</literal></expr>, <expr><literal type="number">0x082efa98</literal></expr>, <expr><literal type="number">0xec4e6c89</literal></expr>,
        <expr><literal type="number">0x452821e6</literal></expr>, <expr><literal type="number">0x38d01377</literal></expr>, <expr><literal type="number">0xbe5466cf</literal></expr>, <expr><literal type="number">0x34e90c6c</literal></expr>,
        <expr><literal type="number">0xc0ac29b7</literal></expr>, <expr><literal type="number">0xc97c50dd</literal></expr>, <expr><literal type="number">0x3f84d5b5</literal></expr>, <expr><literal type="number">0xb5470917</literal></expr>,
        <expr><literal type="number">0x9216d5d9</literal></expr>, <expr><literal type="number">0x8979fb1b</literal></expr>
    }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>unsigned</name> <name>char</name></type> <name><name>BF_itoa64</name><index>[<expr><literal type="number">64</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <init>=
<expr><literal type="string">"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>unsigned</name> <name>char</name></type> <name><name>BF_atoi64</name><index>[<expr><literal type="number">0x60</literal></expr>]</index></name> <init>= <expr><block>{
    <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>,
    <expr><literal type="number">54</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>,
    <expr><literal type="number">64</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>,
    <expr><literal type="number">17</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>,
    <expr><literal type="number">64</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">42</literal></expr>,
    <expr><literal type="number">43</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_safe_atoi64</name><parameter_list>(<parameter><type><name>dst</name></type></parameter>, <parameter><type><name>src</name></type></parameter>)</parameter_list></cpp:macro> \
<cpp:value>do { \
    tmp = (unsigned char)(src); \
    if ((unsigned int)(tmp -= 0x20) &gt;= 0x60) return -1; \
    tmp = BF_atoi64[tmp]; \
    if (tmp &gt; 63) return -1; \
    (dst) = tmp; \
} while (0)</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>BF_decode</name><parameter_list>(<parameter><decl><type><name>BF_word</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dptr</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>dst</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>end</name> <init>= <expr><name>dptr</name> <operator>+</operator> <name>size</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>sptr</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>src</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>tmp</name></decl>,
                <decl><type ref="prev"/><name>c1</name></decl>,
                <decl><type ref="prev"/><name>c2</name></decl>,
                <decl><type ref="prev"/><name>c3</name></decl>,
                <decl><type ref="prev"/><name>c4</name></decl>;</decl_stmt>

    <do>do
    <block>{<block_content>
        <expr_stmt><expr><call><name>BF_safe_atoi64</name><argument_list>(<argument><expr><name>c1</name></expr></argument>, <argument><expr><operator>*</operator><name>sptr</name><operator>++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>BF_safe_atoi64</name><argument_list>(<argument><expr><name>c2</name></expr></argument>, <argument><expr><operator>*</operator><name>sptr</name><operator>++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <operator>(</operator><name>c1</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>c2</name> <operator>&amp;</operator> <literal type="number">0x30</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>dptr</name> <operator>&gt;=</operator> <name>end</name></expr>)</condition><block type="pseudo"><block_content>
            <break>break;</break></block_content></block></if></if_stmt>

        <expr_stmt><expr><call><name>BF_safe_atoi64</name><argument_list>(<argument><expr><name>c3</name></expr></argument>, <argument><expr><operator>*</operator><name>sptr</name><operator>++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <operator>(</operator><operator>(</operator><name>c2</name> <operator>&amp;</operator> <literal type="number">0x0F</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>c3</name> <operator>&amp;</operator> <literal type="number">0x3C</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>dptr</name> <operator>&gt;=</operator> <name>end</name></expr>)</condition><block type="pseudo"><block_content>
            <break>break;</break></block_content></block></if></if_stmt>

        <expr_stmt><expr><call><name>BF_safe_atoi64</name><argument_list>(<argument><expr><name>c4</name></expr></argument>, <argument><expr><operator>*</operator><name>sptr</name><operator>++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <operator>(</operator><operator>(</operator><name>c3</name> <operator>&amp;</operator> <literal type="number">0x03</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <name>c4</name></expr>;</expr_stmt>
    </block_content>}</block> while <condition>(<expr><name>dptr</name> <operator>&lt;</operator> <name>end</name></expr>)</condition>;</do>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>BF_encode</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>BF_word</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>sptr</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>src</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>end</name> <init>= <expr><name>sptr</name> <operator>+</operator> <name>size</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dptr</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>dst</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>c1</name></decl>,
                <decl><type ref="prev"/><name>c2</name></decl>;</decl_stmt>

    <do>do
    <block>{<block_content>
        <expr_stmt><expr><name>c1</name> <operator>=</operator> <operator>*</operator><name>sptr</name><operator>++</operator></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <name><name>BF_itoa64</name><index>[<expr><name>c1</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>c1</name> <operator>=</operator> <operator>(</operator><name>c1</name> <operator>&amp;</operator> <literal type="number">0x03</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>sptr</name> <operator>&gt;=</operator> <name>end</name></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <name><name>BF_itoa64</name><index>[<expr><name>c1</name></expr>]</index></name></expr>;</expr_stmt>
            <break>break;</break>
        </block_content>}</block></if></if_stmt>

        <expr_stmt><expr><name>c2</name> <operator>=</operator> <operator>*</operator><name>sptr</name><operator>++</operator></expr>;</expr_stmt>
        <expr_stmt><expr><name>c1</name> <operator>|=</operator> <name>c2</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <name><name>BF_itoa64</name><index>[<expr><name>c1</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>c1</name> <operator>=</operator> <operator>(</operator><name>c2</name> <operator>&amp;</operator> <literal type="number">0x0f</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>sptr</name> <operator>&gt;=</operator> <name>end</name></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <name><name>BF_itoa64</name><index>[<expr><name>c1</name></expr>]</index></name></expr>;</expr_stmt>
            <break>break;</break>
        </block_content>}</block></if></if_stmt>

        <expr_stmt><expr><name>c2</name> <operator>=</operator> <operator>*</operator><name>sptr</name><operator>++</operator></expr>;</expr_stmt>
        <expr_stmt><expr><name>c1</name> <operator>|=</operator> <name>c2</name> <operator>&gt;&gt;</operator> <literal type="number">6</literal></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <name><name>BF_itoa64</name><index>[<expr><name>c1</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <name><name>BF_itoa64</name><index>[<expr><name>c2</name> <operator>&amp;</operator> <literal type="number">0x3f</literal></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block> while <condition>(<expr><name>sptr</name> <operator>&lt;</operator> <name>end</name></expr>)</condition>;</do>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>BF_swap</name><parameter_list>(<parameter><decl><type><name>BF_word</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="block">/* Swap on little-endian hardware, else do nothing */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifndef>
    <decl_stmt><decl><type><name>BF_word</name></type>        <name>tmp</name></decl>;</decl_stmt>

    <do>do
    <block>{<block_content>
        <expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>*</operator><name>x</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>tmp</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>tmp</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><name>x</name><operator>++</operator> <operator>=</operator> <operator>(</operator><operator>(</operator><name>tmp</name> <operator>&amp;</operator> <literal type="number">0x00FF00FF</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><name>tmp</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x00FF00FF</literal><operator>)</operator></expr>;</expr_stmt>
    </block_content>}</block> while <condition>(<expr><operator>--</operator><name>count</name></expr>)</condition>;</do>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BF_SCALE</name></expr></cpp:if>
<comment type="block">/* Architectures which can shift addresses left by 2 bits with no extra cost */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_ROUND</name><parameter_list>(<parameter><type><name>L</name></type></parameter>, <parameter><type><name>R</name></type></parameter>, <parameter><type><name>N</name></type></parameter>)</parameter_list></cpp:macro> \
    <cpp:value>tmp1 = (L) &amp; 0xFF; \
    tmp2 = (L) &gt;&gt; 8; \
    tmp2 &amp;= 0xFF; \
    tmp3 = (L) &gt;&gt; 16; \
    tmp3 &amp;= 0xFF; \
    tmp4 = (L) &gt;&gt; 24; \
    tmp1 = data.ctx.S[3][tmp1]; \
    tmp2 = data.ctx.S[2][tmp2]; \
    tmp3 = data.ctx.S[1][tmp3]; \
    tmp3 += data.ctx.S[0][tmp4]; \
    tmp3 ^= tmp2; \
    (R) ^= data.ctx.P[(N) + 1]; \
    tmp3 += tmp1; \
    (R) ^= tmp3;</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<comment type="block">/* Architectures with no complicated addressing modes supported */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_INDEX</name><parameter_list>(<parameter><type><name>S</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> \
    <cpp:value>(*((BF_word *)(((unsigned char *)(S)) + (i))))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_ROUND</name><parameter_list>(<parameter><type><name>L</name></type></parameter>, <parameter><type><name>R</name></type></parameter>, <parameter><type><name>N</name></type></parameter>)</parameter_list></cpp:macro> \
    <cpp:value>tmp1 = (L) &amp; 0xFF; \
    tmp1 &lt;&lt;= 2; \
    tmp2 = (L) &gt;&gt; 6; \
    tmp2 &amp;= 0x3FC; \
    tmp3 = (L) &gt;&gt; 14; \
    tmp3 &amp;= 0x3FC; \
    tmp4 = (L) &gt;&gt; 22; \
    tmp4 &amp;= 0x3FC; \
    tmp1 = BF_INDEX(data.ctx.S[3], tmp1); \
    tmp2 = BF_INDEX(data.ctx.S[2], tmp2); \
    tmp3 = BF_INDEX(data.ctx.S[1], tmp3); \
    tmp3 += BF_INDEX(data.ctx.S[0], tmp4); \
    tmp3 ^= tmp2; \
    (R) ^= data.ctx.P[(N) + 1]; \
    tmp3 += tmp1; \
    (R) ^= tmp3;</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/*
 * Encrypt one block, BF_N is hardcoded here.
 */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_ENCRYPT</name></cpp:macro> \
    <cpp:value>L ^= data.ctx.P[0]; \
    BF_ROUND(L, R, 0); \
    BF_ROUND(R, L, 1); \
    BF_ROUND(L, R, 2); \
    BF_ROUND(R, L, 3); \
    BF_ROUND(L, R, 4); \
    BF_ROUND(R, L, 5); \
    BF_ROUND(L, R, 6); \
    BF_ROUND(R, L, 7); \
    BF_ROUND(L, R, 8); \
    BF_ROUND(R, L, 9); \
    BF_ROUND(L, R, 10); \
    BF_ROUND(R, L, 11); \
    BF_ROUND(L, R, 12); \
    BF_ROUND(R, L, 13); \
    BF_ROUND(L, R, 14); \
    BF_ROUND(R, L, 15); \
    tmp4 = R; \
    R = L; \
    L = tmp4 ^ data.ctx.P[BF_N + 1];</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BF_ASM</name></expr></cpp:if>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>_BF_body_r</name><parameter_list>(<parameter><decl><type><name>BF_ctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_body</name><parameter_list>()</parameter_list></cpp:macro> \
    <cpp:value>_BF_body_r(&amp;data.ctx);</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_body</name><parameter_list>()</parameter_list></cpp:macro> \
    <cpp:value>L = R = 0; \
    ptr = data.ctx.P; \
    do { \
        ptr += 2; \
        BF_ENCRYPT; \
        *(ptr - 2) = L; \
        *(ptr - 1) = R; \
    } while (ptr &lt; &amp;data.ctx.P[BF_N + 2]); \
\
    ptr = data.ctx.S[0]; \
    do { \
        ptr += 2; \
        BF_ENCRYPT; \
        *(ptr - 2) = L; \
        *(ptr - 1) = R; \
    } while (ptr &lt; &amp;data.ctx.S[3][0xFF]);</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>BF_set_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>BF_key</name></type> <name>expanded</name></decl></parameter>, <parameter><decl><type><name>BF_key</name></type> <name>initial</name></decl></parameter>,
           <parameter><decl><type><name>int</name></type> <name>sign_extension_bug</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ptr</name> <init>= <expr><name>key</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>            <name>i</name></decl>,
                <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BF_word</name></type>        <name>tmp</name></decl>;</decl_stmt>

    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>BF_N</name> <operator>+</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{<block_content>
        <expr_stmt><expr><name>tmp</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
        <for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
        <block>{<block_content>
            <expr_stmt><expr><name>tmp</name> <operator>&lt;&lt;=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><name>sign_extension_bug</name></expr>)</condition><block type="pseudo"><block_content>
                <expr_stmt><expr><name>tmp</name> <operator>|=</operator> <operator>(</operator><name>BF_word_signed</name><operator>)</operator> <operator>(</operator><name>signed</name> <name>char</name><operator>)</operator> <operator>*</operator><name>ptr</name></expr>;</expr_stmt></block_content></block></if>
            <else>else<block type="pseudo"><block_content>
                <expr_stmt><expr><name>tmp</name> <operator>|=</operator> <operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator> <operator>*</operator><name>ptr</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>*</operator><name>ptr</name></expr>)</condition><block type="pseudo"><block_content>
                <expr_stmt><expr><name>ptr</name> <operator>=</operator> <name>key</name></expr>;</expr_stmt></block_content></block></if>
            <else>else<block type="pseudo"><block_content>
                <expr_stmt><expr><name>ptr</name><operator>++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></for>

        <expr_stmt><expr><name><name>expanded</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>initial</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>BF_init_state</name><operator>.</operator><name>P</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^</operator> <name>tmp</name></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>char</name> <modifier>*</modifier></type>
<name>_crypt_blowfish_rn</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>setting</name></decl></parameter>,
                   <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <struct>struct
    <block>{
        <decl_stmt><decl><type><name>BF_ctx</name></type>        <name>ctx</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>BF_key</name></type>        <name>expanded_key</name></decl>;</decl_stmt>
        <union>union
        <block>{
            <decl_stmt><decl><type><name>BF_word</name></type>        <name><name>salt</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>BF_word</name></type>        <name><name>output</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
        }</block>            <decl><name>binary</name></decl>;</union>
    }</block>            <decl><name>data</name></decl>;</struct>
    <decl_stmt><decl><type><name>BF_word</name></type>        <name>L</name></decl>,
                <decl><type ref="prev"/><name>R</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BF_word</name></type>        <name>tmp1</name></decl>,
                <decl><type ref="prev"/><name>tmp2</name></decl>,
                <decl><type ref="prev"/><name>tmp3</name></decl>,
                <decl><type ref="prev"/><name>tmp4</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BF_word</name>    <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>BF_word</name></type>        <name>count</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>            <name>i</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>size</name> <operator>&lt;</operator> <literal type="number">7</literal> <operator>+</operator> <literal type="number">22</literal> <operator>+</operator> <literal type="number">31</literal> <operator>+</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block">/*
     * Blowfish salt value must be formatted as follows: "$2a$" or "$2x$", a
     * two digit cost parameter, "$", and 22 digits from the alphabet
     * "./0-9A-Za-z". -- from the PHP crypt docs. Apparently we enforce a few
     * more restrictions on the count in the salt as well.
     */</comment>
    <if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>setting</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">29</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
                <argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INVALID_PARAMETER_VALUE</name></expr></argument>)</argument_list></call><operator>,</operator>
                 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"invalid salt"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name><name>setting</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'$'</literal> <operator>||</operator>
        <name><name>setting</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'2'</literal> <operator>||</operator>
        <operator>(</operator><name><name>setting</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'a'</literal> <operator>&amp;&amp;</operator> <name><name>setting</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'x'</literal><operator>)</operator> <operator>||</operator>
        <name><name>setting</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'$'</literal> <operator>||</operator>
        <name><name>setting</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>&lt;</operator> <literal type="char">'0'</literal> <operator>||</operator> <name><name>setting</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>&gt;</operator> <literal type="char">'3'</literal> <operator>||</operator>
        <name><name>setting</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>&lt;</operator> <literal type="char">'0'</literal> <operator>||</operator> <name><name>setting</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>&gt;</operator> <literal type="char">'9'</literal> <operator>||</operator>
        <operator>(</operator><name><name>setting</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'3'</literal> <operator>&amp;&amp;</operator> <name><name>setting</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>&gt;</operator> <literal type="char">'1'</literal><operator>)</operator> <operator>||</operator>
        <name><name>setting</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'$'</literal></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
                <argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INVALID_PARAMETER_VALUE</name></expr></argument>)</argument_list></call><operator>,</operator>
                 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"invalid salt"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><name>count</name> <operator>=</operator> <operator>(</operator><name>BF_word</name><operator>)</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <operator>(</operator><operator>(</operator><name><name>setting</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>-</operator> <literal type="char">'0'</literal><operator>)</operator> <operator>*</operator> <literal type="number">10</literal> <operator>+</operator> <operator>(</operator><name><name>setting</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>-</operator> <literal type="char">'0'</literal><operator>)</operator><operator>)</operator></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>count</name> <operator>&lt;</operator> <literal type="number">16</literal> <operator>||</operator> <call><name>BF_decode</name><argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>setting</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>px_memset</name><argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
                <argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INVALID_PARAMETER_VALUE</name></expr></argument>)</argument_list></call><operator>,</operator>
                 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"invalid salt"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt><expr><call><name>BF_swap</name><argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>BF_set_key</name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name><name>data</name><operator>.</operator><name>expanded_key</name></name></expr></argument>, <argument><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name></name></expr></argument>, <argument><expr><name><name>setting</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'x'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>S</name></name></expr></argument>, <argument><expr><name><name>BF_init_state</name><operator>.</operator><name>S</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>S</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>L</name> <operator>=</operator> <name>R</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>BF_N</name> <operator>+</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>
    <block>{<block_content>
        <expr_stmt><expr><name>L</name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><name>i</name> <operator>&amp;</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>R</name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>BF_ENCRYPT</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>L</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>R</name></expr>;</expr_stmt>
    </block_content>}</block></for>

    <expr_stmt><expr><name>ptr</name> <operator>=</operator> <name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>S</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <do>do
    <block>{<block_content>
        <expr_stmt><expr><name>ptr</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>L</name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><operator>(</operator><name>BF_N</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>R</name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><operator>(</operator><name>BF_N</name> <operator>+</operator> <literal type="number">3</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>BF_ENCRYPT</name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><operator>(</operator><name>ptr</name> <operator>-</operator> <literal type="number">4</literal><operator>)</operator> <operator>=</operator> <name>L</name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><operator>(</operator><name>ptr</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator> <operator>=</operator> <name>R</name></expr>;</expr_stmt>

        <expr_stmt><expr><name>L</name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><operator>(</operator><name>BF_N</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>R</name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><operator>(</operator><name>BF_N</name> <operator>+</operator> <literal type="number">5</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>BF_ENCRYPT</name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><operator>(</operator><name>ptr</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator> <operator>=</operator> <name>L</name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>*</operator><operator>(</operator><name>ptr</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>=</operator> <name>R</name></expr>;</expr_stmt>
    </block_content>}</block> while <condition>(<expr><name>ptr</name> <operator>&lt;</operator> <operator>&amp;</operator><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>S</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0xFF</literal></expr>]</index></name></expr>)</condition>;</do>

    <do>do
    <block>{<block_content>
        <expr_stmt><expr><call><name>CHECK_FOR_INTERRUPTS</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>^=</operator> <name><name>data</name><operator>.</operator><name>expanded_key</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>BF_body</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>tmp1</name> <operator>=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>tmp2</name> <operator>=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>tmp3</name> <operator>=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>tmp4</name> <operator>=</operator> <name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>salt</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <name>tmp1</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^=</operator> <name>tmp2</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^=</operator> <name>tmp3</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^=</operator> <name>tmp4</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>^=</operator> <name>tmp1</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>^=</operator> <name>tmp2</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>^=</operator> <name>tmp3</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>^=</operator> <name>tmp4</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>^=</operator> <name>tmp1</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>^=</operator> <name>tmp2</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>^=</operator> <name>tmp3</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^=</operator> <name>tmp4</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>^=</operator> <name>tmp1</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>^=</operator> <name>tmp2</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>^=</operator> <name>tmp3</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>^=</operator> <name>tmp4</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>^=</operator> <name>tmp1</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>ctx</name><operator>.</operator><name>P</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>^=</operator> <name>tmp2</name></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>BF_body</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block> while <condition>(<expr><operator>--</operator><name>count</name></expr>)</condition>;</do>

    <for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>
    <block>{<block_content>
        <expr_stmt><expr><name>L</name> <operator>=</operator> <name><name>BF_magic_w</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>R</name> <operator>=</operator> <name><name>BF_magic_w</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
        <do>do
        <block>{<block_content>
            <expr_stmt><expr><name>BF_ENCRYPT</name></expr>;</expr_stmt>
        </block_content>}</block> while <condition>(<expr><operator>--</operator><name>count</name></expr>)</condition>;</do>

        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>output</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>L</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>output</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>R</name></expr>;</expr_stmt>
    </block_content>}</block></for>

    <expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><name>setting</name></expr></argument>, <argument><expr><literal type="number">7</literal> <operator>+</operator> <literal type="number">22</literal> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>output</name><index>[<expr><literal type="number">7</literal> <operator>+</operator> <literal type="number">22</literal> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>BF_itoa64</name><index>[<expr><operator>(</operator><name>int</name><operator>)</operator>
                                   <name><name>BF_atoi64</name><index>[<expr><operator>(</operator><name>int</name><operator>)</operator> <name><name>setting</name><index>[<expr><literal type="number">7</literal> <operator>+</operator> <literal type="number">22</literal> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <literal type="number">0x20</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x30</literal></expr>]</index></name></expr>;</expr_stmt>

<comment type="block">/* This has to be bug-compatible with the original implementation, so
 * only encode 23 of the 24 bytes. :-) */</comment>
    <expr_stmt><expr><call><name>BF_swap</name><argument_list>(<argument><expr><name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>output</name></name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>BF_encode</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>output</name><index>[<expr><literal type="number">7</literal> <operator>+</operator> <literal type="number">22</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>data</name><operator>.</operator><name>binary</name><operator>.</operator><name>output</name></name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>output</name><index>[<expr><literal type="number">7</literal> <operator>+</operator> <literal type="number">22</literal> <operator>+</operator> <literal type="number">31</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<comment type="block">/* Overwrite the most obvious sensitive data we have on the stack. Note
 * that this does not guarantee there's no sensitive data left on the
 * stack and/or in registers; I'm not aware of portable code that does. */</comment>
    <expr_stmt><expr><call><name>px_memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>data</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>output</name></expr>;</return>
</block_content>}</block></function>
</unit>
