<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TBase/src/backend/access/rmgrdesc/replslotdesc.c"><comment type="block">/*
 * Tencent is pleased to support the open source community by making TBase available.  
 * 
 * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.
 * 
 * TBase is licensed under the BSD 3-Clause License, except for the third-party component listed below. 
 * 
 * A copy of the BSD 3-Clause License is included in this file.
 * 
 * Other dependencies and licenses:
 * 
 * Open Source Software Licensed Under the PostgreSQL License: 
 * --------------------------------------------------------------------
 * 1. Postgres-XL XL9_5_STABLE
 * Portions Copyright (c) 2015-2016, 2ndQuadrant Ltd
 * Portions Copyright (c) 2012-2015, TransLattice, Inc.
 * Portions Copyright (c) 2010-2017, Postgres-XC Development Group
 * Portions Copyright (c) 1996-2015, The PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, The Regents of the University of California
 * 
 * Terms of the PostgreSQL License: 
 * --------------------------------------------------------------------
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without a written agreement
 * is hereby granted, provided that the above copyright notice and this
 * paragraph and the following two paragraphs appear in all copies.
 * 
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
 * LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS
 * DOCUMENTATION, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 * 
 * 
 * Terms of the BSD 3-Clause License:
 * --------------------------------------------------------------------
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation 
 * and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of THL A29 Limited nor the names of its contributors may be used to endorse or promote products derived from this software without 
 * specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS 
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH 
 * DAMAGE.
 * 
 */</comment>
<comment type="block">/*-------------------------------------------------------------------------
 *
 * replslotdesc.c
 *    rmgr descriptor routines for replication/slot.c
 *
 * Portions Copyright (c) 2019, TBase Development Group
 *
 *
 * IDENTIFICATION
 *    src/backend/access/rmgrdesc/replslotdesc.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/replslotdesc.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>replication_slot_desc</name><parameter_list>(<parameter><decl><type><name>StringInfo</name></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>XLogReaderState</name> <modifier>*</modifier></type><name>record</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>char</name>       <modifier>*</modifier></type><name>rec</name> <init>= <expr><call><name>XLogRecGetData</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint8</name></type>       <name>info</name> <init>= <expr><call><name>XLogRecGetInfo</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name></expr></init></decl>;</decl_stmt>

    <switch>switch <condition>(<expr><name>info</name></expr>)</condition>
    <block>{<block_content>
        <case>case <expr><name>XLOG_REPLORIGIN_SLOT_LSN_REPLICA</name></expr>:</case>
        <block>{<block_content>
            <decl_stmt><decl><type><name>xl_replication_slot_lsn_replica</name> <modifier>*</modifier></type><name>xlrec</name></decl>;</decl_stmt>

            <expr_stmt><expr><name>xlrec</name> <operator>=</operator> <operator>(</operator><name>xl_replication_slot_lsn_replica</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"info in xlrec, id:%d, xmin:%u, catalog_xmin:%u, restart_lsn %X/%X, confirmed_flush %X/%X"</literal></expr></argument>,
                             <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>slotid</name></name></expr></argument>,
                             <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>xmin</name></name></expr></argument>,
                             <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>catalog_xmin</name></name></expr></argument>,
                             <argument><expr><operator>(</operator><name>uint32</name><operator>)</operator> <operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>restart_lsn</name></name> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator></expr></argument>,
                             <argument><expr><operator>(</operator><name>uint32</name><operator>)</operator> <name><name>xlrec</name><operator>-&gt;</operator><name>restart_lsn</name></name></expr></argument>,
                             <argument><expr><operator>(</operator><name>uint32</name><operator>)</operator> <operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>confirmed_flush</name></name> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator></expr></argument>,
                             <argument><expr><operator>(</operator><name>uint32</name><operator>)</operator> <name><name>xlrec</name><operator>-&gt;</operator><name>confirmed_flush</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
        </block_content>}</block>
        <case>case <expr><name>XLOG_REPLORIGIN_SLOT_CREATE</name></expr>:</case>
        <block>{<block_content>
            <decl_stmt><decl><type><name>xl_replication_slot_create</name> <modifier>*</modifier></type><name>xlrec</name></decl>;</decl_stmt>

            <expr_stmt><expr><name>xlrec</name> <operator>=</operator> <operator>(</operator><name>xl_replication_slot_create</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"info in xlrec, id:%d, name:%s, database:%u, persistency:%d, xmin:%u, catalog_xmin:%u, "</literal>
                            <literal type="string">"restart_lsn:%X/%X, confirmed_flush:%X/%X, effective_xmin:%d, effective_catalog_xmin:%d, "</literal>
                            <literal type="string">"pgoutput:%d, subid:%u, subname:%s, relid:%u"</literal></expr></argument>, 
                            <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>slotid</name></name></expr></argument>,
                            <argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>slotname</name></name></expr></argument>)</argument_list></call></expr></argument>,
                            <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>database</name></name></expr></argument>,
                            <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>persistency</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>xmin</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>catalog_xmin</name></name></expr></argument>,
                            <argument><expr><operator>(</operator><name>uint32</name><operator>)</operator> <operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>restart_lsn</name></name> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name>uint32</name><operator>)</operator> <name><name>xlrec</name><operator>-&gt;</operator><name>restart_lsn</name></name></expr></argument>,
                            <argument><expr><operator>(</operator><name>uint32</name><operator>)</operator> <operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>confirmed_flush</name></name> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name>uint32</name><operator>)</operator> <name><name>xlrec</name><operator>-&gt;</operator><name>confirmed_flush</name></name></expr></argument>,
                            <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>effective_xmin</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>effective_catalog_xmin</name></name></expr></argument>,
                            <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>pgoutput</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>subid</name></name></expr></argument>, <argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>subname</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>relid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
        </block_content>}</block>
        <case>case <expr><name>XLOG_REPLORIGIN_SLOT_DROP</name></expr>:</case>
        <block>{<block_content>
            <decl_stmt><decl><type><name>xl_replication_slot_drop</name> <modifier>*</modifier></type><name>xlrec</name></decl>;</decl_stmt>

            <expr_stmt><expr><name>xlrec</name> <operator>=</operator> <operator>(</operator><name>xl_replication_slot_drop</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"info in xlrec, id:%d, name:%s"</literal></expr></argument>, 
                            <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>slotid</name></name></expr></argument>,
                            <argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>slotname</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
        </block_content>}</block>
        <case>case <expr><name>XLOG_REPLORIGIN_SLOT_RENAME</name></expr>:</case>
        <block>{<block_content>
            <decl_stmt><decl><type><name>xl_replication_slot_rename</name> <modifier>*</modifier></type><name>xlrec</name></decl>;</decl_stmt>

            <expr_stmt><expr><name>xlrec</name> <operator>=</operator> <operator>(</operator><name>xl_replication_slot_rename</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"info in xlrec, id:%d, old_name:%s, new_name:%s"</literal></expr></argument>,
                             <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>slotid</name></name></expr></argument>,
                             <argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>old_slotname</name></name></expr></argument>)</argument_list></call></expr></argument>,
                             <argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>new_slotname</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
        </block_content>}</block>
        <default>default:</default>
            <break>break;</break>
    </block_content>}</block></switch>
    <return>return;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>replication_slot_identify</name><parameter_list>(<parameter><decl><type><name>uint8</name></type> <name>info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <switch>switch <condition>(<expr><name>info</name></expr>)</condition>
    <block>{<block_content>
        <case>case <expr><name>XLOG_REPLORIGIN_SLOT_LSN_REPLICA</name></expr>:</case>
            <return>return <expr><literal type="string">"REPLORIGIN_SLOT_LSN_REPLICA"</literal></expr>;</return>
        <case>case <expr><name>XLOG_REPLORIGIN_SLOT_CREATE</name></expr>:</case>
            <return>return <expr><literal type="string">"REPLORIGIN_SLOT_CREATE"</literal></expr>;</return>
        <case>case <expr><name>XLOG_REPLORIGIN_SLOT_DROP</name></expr>:</case>
            <return>return <expr><literal type="string">"REPLORIGIN_SLOT_DROP"</literal></expr>;</return>
        <case>case <expr><name>XLOG_REPLORIGIN_SLOT_RENAME</name></expr>:</case>
            <return>return <expr><literal type="string">"REPLORIGIN_SLOT_RENAME"</literal></expr>;</return>
        <default>default:</default>
            <break>break;</break>
    </block_content>}</block></switch>
    <return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>
</unit>
