<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TBase/src/backend/access/rmgrdesc/logicalmsgdesc.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * logicalmsgdesc.c
 *      rmgr descriptor routines for replication/logical/message.c
 *
 * Portions Copyright (c) 2015-2017, PostgreSQL Global Development Group
 *
 *
 * IDENTIFICATION
 *      src/backend/access/rmgrdesc/logicalmsgdesc.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"replication/message.h"</cpp:file></cpp:include>

<function><type><name>void</name></type>
<name>logicalmsg_desc</name><parameter_list>(<parameter><decl><type><name>StringInfo</name></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>XLogReaderState</name> <modifier>*</modifier></type><name>record</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>char</name>       <modifier>*</modifier></type><name>rec</name> <init>= <expr><call><name>XLogRecGetData</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint8</name></type>        <name>info</name> <init>= <expr><call><name>XLogRecGetInfo</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name></expr></init></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><name>info</name> <operator>==</operator> <name>XLOG_LOGICAL_MESSAGE</name></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>xl_logical_message</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_logical_message</name> <operator>*</operator><operator>)</operator> <name>rec</name></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"%s message size %zu bytes"</literal></expr></argument>,
                         <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>transactional</name></name></expr> ?</condition><then> <expr><literal type="string">"transactional"</literal></expr> </then><else>: <expr><literal type="string">"nontransactional"</literal></expr></else></ternary></expr></argument>,
                         <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>message_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>logicalmsg_identify</name><parameter_list>(<parameter><decl><type><name>uint8</name></type> <name>info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><operator>(</operator><name>info</name> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name><operator>)</operator> <operator>==</operator> <name>XLOG_LOGICAL_MESSAGE</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><literal type="string">"MESSAGE"</literal></expr>;</return></block_content></block></if></if_stmt>

    <return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>
</unit>
