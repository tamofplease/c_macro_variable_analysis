<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TBase/src/backend/optimizer/geqo/geqo_mutation.c"><comment type="block">/*------------------------------------------------------------------------
*
* geqo_mutation.c
*
*     TSP mutation routines
*
* src/backend/optimizer/geqo/geqo_mutation.c
*
*-------------------------------------------------------------------------
*/</comment>

<comment type="block">/* contributed by:
   =*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
   *  Martin Utesch                 * Institute of Automatic Control       *
   =                             = University of Mining and Technology =
   *  utesch@aut.tu-freiberg.de  * Freiberg, Germany                   *
   =*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
 */</comment>

<comment type="block">/* this is adopted from Genitor : */</comment>
<comment type="block" format="doxygen">/*************************************************************/</comment>
<comment type="block">/*                                                             */</comment>
<comment type="block">/*    Copyright (c) 1990                                         */</comment>
<comment type="block">/*    Darrell L. Whitley                                         */</comment>
<comment type="block">/*    Computer Science Department                                 */</comment>
<comment type="block">/*    Colorado State University                                 */</comment>
<comment type="block">/*                                                             */</comment>
<comment type="block">/*    Permission is hereby granted to copy all or any part of  */</comment>
<comment type="block">/*    this program for free distribution.   The author's name  */</comment>
<comment type="block">/*    and this copyright notice must be included in any copy.  */</comment>
<comment type="block">/*                                                             */</comment>
<comment type="block" format="doxygen">/*************************************************************/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"optimizer/geqo_mutation.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"optimizer/geqo_random.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>CX</name></expr></argument>)</argument_list></call></expr></cpp:if>                    <comment type="block">/* currently used only in CX mode */</comment>

<function><type><name>void</name></type>
<name>geqo_mutation</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>Gene</name> <modifier>*</modifier></type><name>tour</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_gene</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type>            <name>swap1</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>            <name>swap2</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type>            <name>num_swaps</name> <init>= <expr><call><name>geqo_randint</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>num_gene</name> <operator>/</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>Gene</name></type>        <name>temp</name></decl>;</decl_stmt>


    <while>while <condition>(<expr><name>num_swaps</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><name>swap1</name> <operator>=</operator> <call><name>geqo_randint</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>num_gene</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>swap2</name> <operator>=</operator> <call><name>geqo_randint</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>num_gene</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while>while <condition>(<expr><name>swap1</name> <operator>==</operator> <name>swap2</name></expr>)</condition><block type="pseudo"><block_content>
            <expr_stmt><expr><name>swap2</name> <operator>=</operator> <call><name>geqo_randint</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>num_gene</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

        <expr_stmt><expr><name>temp</name> <operator>=</operator> <name><name>tour</name><index>[<expr><name>swap1</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>tour</name><index>[<expr><name>swap1</name></expr>]</index></name> <operator>=</operator> <name><name>tour</name><index>[<expr><name>swap2</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>tour</name><index>[<expr><name>swap2</name></expr>]</index></name> <operator>=</operator> <name>temp</name></expr>;</expr_stmt>


        <expr_stmt><expr><name>num_swaps</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    </block_content>}</block></while>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>                            <comment type="block">/* defined(CX) */</comment>
</unit>
