<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TBase/src/backend/optimizer/geqo/geqo_ox2.c"><comment type="block">/*------------------------------------------------------------------------
*
* geqo_ox2.c
*
*     order crossover [OX] routines;
*     OX2 operator according to Syswerda
*     (The Genetic Algorithms Handbook, ed L Davis)
*
* src/backend/optimizer/geqo/geqo_ox2.c
*
*-------------------------------------------------------------------------
*/</comment>

<comment type="block">/* contributed by:
   =*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
   *  Martin Utesch                 * Institute of Automatic Control       *
   =                             = University of Mining and Technology =
   *  utesch@aut.tu-freiberg.de  * Freiberg, Germany                   *
   =*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
 */</comment>

<comment type="block">/* the ox algorithm is adopted from Genitor : */</comment>
<comment type="block" format="doxygen">/*************************************************************/</comment>
<comment type="block">/*                                                             */</comment>
<comment type="block">/*    Copyright (c) 1990                                         */</comment>
<comment type="block">/*    Darrell L. Whitley                                         */</comment>
<comment type="block">/*    Computer Science Department                                 */</comment>
<comment type="block">/*    Colorado State University                                 */</comment>
<comment type="block">/*                                                             */</comment>
<comment type="block">/*    Permission is hereby granted to copy all or any part of  */</comment>
<comment type="block">/*    this program for free distribution.   The author's name  */</comment>
<comment type="block">/*    and this copyright notice must be included in any copy.  */</comment>
<comment type="block">/*                                                             */</comment>
<comment type="block" format="doxygen">/*************************************************************/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"optimizer/geqo_random.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"optimizer/geqo_recombination.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>OX2</name></expr></argument>)</argument_list></call></expr></cpp:if>

<comment type="block">/* ox2
 *
 *     position crossover
 */</comment>
<function><type><name>void</name></type>
<name>ox2</name><parameter_list>(<parameter><decl><type><name>PlannerInfo</name> <modifier>*</modifier></type><name>root</name></decl></parameter>, <parameter><decl><type><name>Gene</name> <modifier>*</modifier></type><name>tour1</name></decl></parameter>, <parameter><decl><type><name>Gene</name> <modifier>*</modifier></type><name>tour2</name></decl></parameter>, <parameter><decl><type><name>Gene</name> <modifier>*</modifier></type><name>offspring</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_gene</name></decl></parameter>, <parameter><decl><type><name>City</name> <modifier>*</modifier></type> <name>city_table</name></decl></parameter>)</parameter_list>
<block>{<block_content><comment type="line">// #lizard forgives</comment>
    <decl_stmt><decl><type><name>int</name></type>            <name>k</name></decl>,
                <decl><type ref="prev"/><name>j</name></decl>,
                <decl><type ref="prev"/><name>count</name></decl>,
                <decl><type ref="prev"/><name>pos</name></decl>,
                <decl><type ref="prev"/><name>select</name></decl>,
                <decl><type ref="prev"/><name>num_positions</name></decl>;</decl_stmt>

    <comment type="block">/* initialize city table */</comment>
    <for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;=</operator> <name>num_gene</name></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control>
    <block>{<block_content>
        <expr_stmt><expr><name><name>city_table</name><index>[<expr><name>k</name></expr>]</index></name><operator>.</operator><name>used</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>city_table</name><index>[<expr><name>k</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>select_list</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
    </block_content>}</block></for>

    <comment type="block">/* determine the number of positions to be inherited from tour1  */</comment>
    <expr_stmt><expr><name>num_positions</name> <operator>=</operator> <call><name>geqo_randint</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><literal type="number">2</literal> <operator>*</operator> <name>num_gene</name> <operator>/</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><name>num_gene</name> <operator>/</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block">/* make a list of selected cities */</comment>
    <for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <name>num_positions</name></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control>
    <block>{<block_content>
        <expr_stmt><expr><name>pos</name> <operator>=</operator> <call><name>geqo_randint</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>num_gene</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>city_table</name><index>[<expr><name>pos</name></expr>]</index></name><operator>.</operator><name>select_list</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator> <name><name>tour1</name><index>[<expr><name>pos</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>city_table</name><index>[<expr><operator>(</operator><name>int</name><operator>)</operator> <name><name>tour1</name><index>[<expr><name>pos</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>used</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>    <comment type="block">/* mark used */</comment>
    </block_content>}</block></for>


    <expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <comment type="block">/* consolidate the select list to adjacent positions */</comment>
    <while>while <condition>(<expr><name>count</name> <operator>&lt;</operator> <name>num_positions</name></expr>)</condition>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name><name>city_table</name><index>[<expr><name>k</name></expr>]</index></name><operator>.</operator><name>select_list</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><name>j</name> <operator>=</operator> <name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
            <while>while <condition>(<expr><operator>(</operator><name><name>city_table</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>select_list</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>j</name> <operator>&lt;</operator> <name>num_gene</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
                <expr_stmt><expr><name>j</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while>

            <expr_stmt><expr><name><name>city_table</name><index>[<expr><name>k</name></expr>]</index></name><operator>.</operator><name>select_list</name> <operator>=</operator> <name><name>city_table</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>select_list</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>city_table</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>select_list</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else>else<block type="pseudo"><block_content>
            <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <expr_stmt><expr><name>k</name><operator>++</operator></expr>;</expr_stmt>
    </block_content>}</block></while>

    <expr_stmt><expr><name>select</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <name>num_gene</name></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name><name>city_table</name><index>[<expr><operator>(</operator><name>int</name><operator>)</operator> <name><name>tour2</name><index>[<expr><name>k</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>used</name></expr>)</condition>
        <block>{<block_content>
            <expr_stmt><expr><name><name>offspring</name><index>[<expr><name>k</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>Gene</name><operator>)</operator> <name><name>city_table</name><index>[<expr><name>select</name></expr>]</index></name><operator>.</operator><name>select_list</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>select</name><operator>++</operator></expr>;</expr_stmt>            <comment type="block">/* next city in  the select list   */</comment>
        </block_content>}</block></if>
        <else>else<block type="pseudo"><block_content>
            <comment type="block">/* city isn't used yet, so inherit from tour2 */</comment>
            <expr_stmt><expr><name><name>offspring</name><index>[<expr><name>k</name></expr>]</index></name> <operator>=</operator> <name><name>tour2</name><index>[<expr><name>k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></for>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>                            <comment type="block">/* defined(OX2) */</comment>
</unit>
