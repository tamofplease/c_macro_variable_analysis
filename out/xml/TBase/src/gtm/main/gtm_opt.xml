<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TBase/src/gtm/main/gtm_opt.c"><comment type="block">/*--------------------------------------------------------------------
 * guc.c
 *
 * Support for grand unified configuration scheme, including SET
 * command, configuration file, and
 command line options.
 * See src/backend/utils/misc/README for more information.
 *
 *
 * Copyright (c) 2000-2011, PostgreSQL Global Development Group
 * Portions Copyright (c) 2010-2012 Postgres-XC Development Group
 * Written by Peter Eisentraut &lt;peter_e@gmx.net&gt;.
 *
 * IDENTIFICATION
 *	  src/backend/utils/misc/guc.c
 *
 *--------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/gtm_c.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ctype.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;float.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;math.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/gtm.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/path.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/gtm_opt_tables.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/gtm_opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/gtm_standby.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/gtm_time.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONFIG_FILENAME</name></cpp:macro> <cpp:value>"gtm.conf"</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>config_filename</name> <init>= <expr><name>CONFIG_FILENAME</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>volatile</specifier> <name>sig_atomic_t</name></type> <name>ConfigReloadPending</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * Variables declared elsewhere for gtm, mainly option variables.
 */</comment>

<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>NodeName</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>ListenAddresses</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type> <name>Backup_synchronously</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>GTMPortNumber</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>active_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>active_port</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>GTM_StandbyMode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>error_reporter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>status_reader</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>log_min_messages</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>tcp_keepalives_idle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>tcp_keepalives_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>tcp_keepalives_interval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>GTMDataDir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>			<name>scale_factor_threads</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>			<name>worker_thread_number</name></decl>;</decl_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__TBASE__</name></cpp:ifdef>
<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type>	<name>enable_gtm_sequence_debug</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>      <name>wal_writer_delay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>      <name>checkpoint_interval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name>     <modifier>*</modifier></type><name>archive_command</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type>     <name>archive_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>      <name>max_reserved_wal_number</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>      <name>max_wal_sender</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name>     <modifier>*</modifier></type><name>synchronous_standby_names</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name>     <modifier>*</modifier></type><name>application_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type>      <name>enalbe_gtm_xlog_debug</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name>     <modifier>*</modifier></type><name>recovery_command</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name>     <modifier>*</modifier></type><name>recovery_target_timestamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name><modifier>*</modifier></type>   <name>GTMStartupGTSSet</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type>    <name>GTMClusterReadOnly</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>     <name>GTMStartupGTSDelta</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>     <name>GTMGTSFreezeLimit</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name><modifier>*</modifier></type>   <name>unix_socket_directory</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name><modifier>*</modifier></type>   <name>unix_socket_group</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>     <name>unix_socket_permissions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>Log_filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>	<name>Log_RotationAge</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type>	<name>Log_RotationSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type>	<name>Log_truncate_on_rotation</name></decl>;</decl_stmt>

<comment type="block">/*
 * We have different sets for client and server message level options because
 * they sort slightly different (see "log" level)
 */</comment>

<expr_stmt><expr><call><name>Server_Message_Level_Options</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Gtm_Startup_Mode_Options</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<comment type="block">/*
 * GTM option variables that are exported from this module
 */</comment>
<decl_stmt><decl><type><name>char</name>	   <modifier>*</modifier></type><name>data_directory</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name>	   <modifier>*</modifier></type><name>GTMConfigFileName</name></decl>;</decl_stmt>

<comment type="block">/*
 * Displayable names for context types (enum GtmContext)
 */</comment>
<expr_stmt><expr><call><name>gtmOptContext_Names</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<comment type="block">/*
 * Displayable names for source types (enum GtmSource)
 */</comment>
<expr_stmt><expr><call><name>gtmOptSource_Names</name><argument_list>()</argument_list></call></expr>;</expr_stmt>


<comment type="block">/*
 * Displayable names for GTM variable types (enum config_type)
 */</comment>
<expr_stmt><expr><call><name>Config_Type_Names</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<comment type="block">/*
 * Contents of GTM tables
 *
 * See src/backend/utils/misc/README for design notes.
 *
 * TO ADD AN OPTION:
 *
 * 1. Declare a global variable of type bool, int, double, or char*
 *	  and make use of it.
 *
 * 2. Decide at what times it's safe to set the option. See guc.h for
 *	  details.
 *
 * 3. Decide on a name, a default value, upper and lower bounds (if
 *	  applicable), etc.
 *
 * 4. Add a record below.
 *
 * 5. Add it to src/backend/utils/misc/postgresql.conf.sample, if
 *	  appropriate.
 *
 * 6. Don't forget to document the option (at least in config.sgml).
 *
 * 7. If it's a new GTMOPT_LIST option you must edit pg_dumpall.c to ensure
 *	  it is not single quoted at dump time.
 */</comment>

<comment type="block">/*
 * Definition of option name strings are given in gtm_opt.h, which are shared
 * with command line option handling.  Naming is GTM_OPTNAME_*.
 */</comment>


<comment type="block" format="doxygen">/******** option records follow ********/</comment>

<decl_stmt><decl><type><name><name>struct</name> <name>config_bool</name></name></type> <name><name>ConfigureNamesBool</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_SYNCHRONOUS_BACKUP</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Specifies if backup to GTM-Standby is taken in synchronous manner."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Default value is off."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>Backup_synchronously</name></expr>,
		<expr><name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__TBASE__</name></cpp:ifdef>	
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_SYNCHRONOUS_COMMIT</name></expr>, <expr><name>GTMC_SIGHUP</name></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"enable GTM synchronous commit."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Standby must be connected when set."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>enable_sync_commit</name></expr>,
		<expr><name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_ENABLE_DEBUG</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"enable GTM debug print."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Default value is off."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>enable_gtm_debug</name></expr>,
		<expr><name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__XLOG__</name></cpp:ifdef>
    <expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_ARCHIVE_MODE</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"enable archive."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Default value is off."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>archive_mode</name></expr>,
		<expr><name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_ENABLE_XLOG_DEBUG</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"enable GTM xlog debug print."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Default value is off."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>enalbe_gtm_xlog_debug</name></expr>,
		<expr><name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<comment type="block">/* Set it as a GUC only if we are running regression. */</comment>
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_ENABLE_SEQ_DEBUG</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"enable GTM sequence debug."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Default value is off."</literal></expr></argument>)</argument_list></call></expr>,
		   <expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>enable_gtm_sequence_debug</name></expr>,
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>_PG_REGRESS_</name></cpp:ifdef>
		<expr><name>true</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
		<name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<expr><block>{
        <expr><block>{<expr><name>GTM_OPTNAME_CLUSTER_READ_ONLY</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
         <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Nodes connected with gtm will be readonly."</literal></expr></argument>)</argument_list></call></expr>,
         <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Default value is off."</literal></expr></argument>)</argument_list></call></expr>,
         <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>GTMClusterReadOnly</name></expr>,
        <expr><name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

    <expr><block>{
        <expr><block>{<expr><name>GTM_OPTNAME_LOG_TRUNCATE_ON_ROTATION</name></expr>, <expr><name>GTMC_SIGHUP</name></expr>,
         <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Truncate existing log files of same name during log rotation."</literal></expr></argument>)</argument_list></call></expr>,
         <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Default value is off."</literal></expr></argument>)</argument_list></call></expr>,
         <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>Log_truncate_on_rotation</name></expr>,
        <expr><name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
    }</block></expr>,

	<comment type="block">/* End-of-list marker */</comment>
	<expr><block>{
		<expr><block>{<expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>false</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>config_int</name></name></type> <name><name>ConfigureNamesInt</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_PORT</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Listen Port of GTM or GTM standby server."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>GTMPortNumber</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_ACTIVE_PORT</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"GTM server port number when it works as GTM-Standby."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>active_port</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
	    <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_KEEPALIVES_IDLE</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Sets \"keepalives_idle\" option for the connection to GTM."</literal></expr></argument>)</argument_list></call></expr>,
		 	<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"This option is effective only when it runs as GTM-Standby."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>GTMOPT_UNIT_TIME</name></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>tcp_keepalives_idle</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_KEEPALIVES_INTERVAL</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Sets \"keepalives_interval\" option fo the connetion to GTM."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"This option is effective only when it runs as GTM-Standby."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>GTMOPT_UNIT_TIME</name></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>tcp_keepalives_interval</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_KEEPALIVES_COUNT</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Sets \"keepalives_count\" option to the connection to GTM."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"This option is effective only when it runs as GTM-Standby."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>tcp_keepalives_count</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{
			<expr><name>GTM_OPTNAME_SCALE_FACTOR_THREADS</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"The scale factor of the number of worker thread, zero means disabled."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>scale_factor_threads</name></expr>,
		<expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{
			<expr><name>GTM_OPTNAME_WORKER_THREADS_NUMBER</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"The number of worker thread, zero means disabled."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>worker_thread_number</name></expr>,
		<expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,			
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__XLOG__</name></cpp:ifdef>
	<expr><block>{
		<expr><block>{
			<expr><name>GTM_OPTNAME_WAL_WRITER_DELAY</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Wal_writer will flush xlog every wal_writer_delay ms."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>wal_writer_delay</name></expr>,
		<expr><literal type="number">100</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{
			<expr><name>GTM_OPTNAME_CHECKPOINT_INTERVAL</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Checkpointer will do checkpoint every checkpoint_interval minute."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>checkpoint_interval</name></expr>,
		<expr><literal type="number">30</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{
			<expr><name>GTM_OPTNAME_MAX_RESERVED_WAL_NUMBER</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Max number of reserved xlog segments."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>max_reserved_wal_number</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{
			<expr><name>GTM_OPTNAME_MAX_WAL_SENDER</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Max number of wal senders."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>max_wal_sender</name></expr>,
		<expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{
			<expr><name>GTM_OPTNAME_MAX_WAL_SENDER</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"print time cost in ms when cost is larger then it."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>warnning_time_cost</name></expr>,
		<expr><literal type="number">500</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>,
		<expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<expr><block>{
        <expr><block>{
            <expr><name>GTM_OPTNAME_GTS_FREEZE_TIME_LIMIT</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
            <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"refuse to start gtm before GTS has n days left,default 100 years"</literal></expr></argument>)</argument_list></call></expr>,
            <expr><name>NULL</name></expr>,
            <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>GTMGTSFreezeLimit</name></expr>,
        <expr><literal type="number">365</literal> <operator>*</operator> <literal type="number">100</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
        <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
        <expr><block>{
            <expr><name>GTM_OPTNAME_STARTUP_GTS_DELTA</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
            <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Add -d seconds to GTS when started"</literal></expr></argument>)</argument_list></call></expr>,
            <expr><name>NULL</name></expr>,
            <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>GTMStartupGTSDelta</name></expr>,
        <expr><literal type="number">300</literal></expr> , <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
        <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

    <expr><block>{
        <expr><block>{
            <expr><name>GTM_OPTNAME_UNIX_SOCKET_PERMISSIONS</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
            <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Sets the access permissions of the Unix-domain socket."</literal>
                         <literal type="string">"Unix-domain sockets use the usual Unix file system "</literal>
                         <literal type="string">"permission set. The parameter value is expected "</literal>
                         <literal type="string">"to be a numeric mode specification in the form "</literal>
                         <literal type="string">"accepted by the chmod and umask system calls. "</literal>
                         <literal type="string">"(To use the customary octal format the number must "</literal>
                         <literal type="string">"start with a 0 (zero).)"</literal></expr></argument>)</argument_list></call></expr>,
            <expr><name>NULL</name></expr>,
            <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>unix_socket_permissions</name></expr>,
        <expr><literal type="number">0777</literal></expr>, <expr><literal type="number">0000</literal></expr>, <expr><literal type="number">0777</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
        <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
    }</block></expr>,

    <expr><block>{
        <expr><block>{
            <expr><name>GTM_OPTNAME_LOG_ROTATION_AGE</name></expr>, <expr><name>GTMC_SIGHUP</name></expr>,
            <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Automatic log file rotation will occur after N minutes."</literal></expr></argument>)</argument_list></call></expr>,
            <expr><name>NULL</name></expr>,
            <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>Log_RotationAge</name></expr>,
        <expr><name>HOURS_PER_DAY</name> <operator>*</operator> <name>MINS_PER_HOUR</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name> <operator>/</operator> <name>SECS_PER_MINUTE</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
        <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
    }</block></expr>,

    <expr><block>{
        <expr><block>{
            <expr><name>GTM_OPTNAME_LOG_ROTATION_SIZE</name></expr>, <expr><name>GTMC_SIGHUP</name></expr>,
            <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Automatic log file rotation will occur after N kilobytes."</literal></expr></argument>)</argument_list></call></expr>,
            <expr><name>NULL</name></expr>,
            <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>Log_RotationSize</name></expr>,
        <expr><literal type="number">10</literal> <operator>*</operator> <literal type="number">1024</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name> <operator>/</operator> <literal type="number">1024</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
        <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
    }</block></expr>,

	<comment type="block">/* End-of-list marker */</comment>
	<expr><block>{
		<expr><block>{<expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>config_real</name></name></type> <name><name>ConfigureNamesReal</name><index>[]</index></name> <init>=
<expr><block>{
	<comment type="block">/* End-of-list marker */</comment>
	<expr><block>{
		<expr><block>{<expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>config_string</name></name></type> <name><name>ConfigureNamesString</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_DATA_DIR</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Work directory."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>GTMDataDir</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>
	}</block></expr>,

	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_CONFIG_FILE</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		 	<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Configuration file name."</literal></expr></argument>)</argument_list></call></expr>,
		 	<expr><name>NULL</name></expr>,
		 	<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>GTMConfigFileName</name></expr>,
		<expr><name>CONFIG_FILENAME</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>
	}</block></expr>,

	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_NODENAME</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Name of this GTM/GTM-Standby."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>NodeName</name></expr>,
		<expr><literal type="string">"gtm"</literal></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>
	}</block></expr>,

	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_LISTEN_ADDRESSES</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Listen address."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>ListenAddresses</name></expr>,
		<expr><literal type="string">"*"</literal></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_ACTIVE_HOST</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Address of target GTM ACT."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"This parameter is effective only when it runs as GTM-Standby"</literal></expr></argument>)</argument_list></call></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>active_addr</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_LOG_FILE</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Log file name."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>GTMLogFile</name></expr>,
		<expr><literal type="string">"gtm.log"</literal></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

    <expr><block>{
        <expr><block>{<expr><name>GTM_OPTNAME_LOG_FILENAME_PATTERN</name></expr>, <expr><name>GTMC_SIGHUP</name></expr>,
         <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Sets the file name pattern for log files."</literal></expr></argument>)</argument_list></call></expr>,
         <expr><name>NULL</name></expr>,
         <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>Log_filename</name></expr>,
        <expr><literal type="string">"gtm-%Y-%m-%d_%H%M%S.log"</literal></expr>,
        <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
        <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
    }</block></expr>,

	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_ERROR_REPORTER</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Command to report various errors."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>error_reporter</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_STATUS_READER</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Command to get status of global XC node status."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Runs when configuration file is read by SIGHUP"</literal></expr></argument>)</argument_list></call></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>status_reader</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__XLOG__</name></cpp:ifdef>
    <expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_ARCHIVE_COMMAND</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Archive use this command to backup xlog."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>archive_command</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

    <expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_SYNCHRONOUS_STANDBY_NAMES</name></expr>, <expr><name>GTMC_SIGHUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"to indicate which are synchronous slaves."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>synchronous_standby_names</name></expr>,
		<expr><literal type="string">""</literal></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_APPLICATION_NAME</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"application name used in sync replication indication"</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>application_name</name></expr>,
		<expr><literal type="string">""</literal></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_RECOVERY_COMMAND</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		 	<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Point in time recovery,recovery command"</literal></expr></argument>)</argument_list></call></expr>,
		 	<expr><name>NULL</name></expr>,
		 	<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>recovery_command</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_RECOVERY_TARGET_GLOBALTIMESTAMP</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		 <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Point in time recovery,recovery timestamp"</literal></expr></argument>)</argument_list></call></expr>,
		 <expr><name>NULL</name></expr>,
		 <expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>recovery_target_timestamp</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_STARTUP_GTS_SET</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
		 <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Force start GTM with this GTS"</literal></expr></argument>)</argument_list></call></expr>,
		 <expr><name>NULL</name></expr>,
		 <expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>GTMStartupGTSSet</name></expr>,
		<expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
		<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

    <expr><block>{
        <expr><block>{<expr><name>GTM_OPTNAME_UNIX_SOCKET_DIRECTORY</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
         <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Sets the directory where Unix-domain sockets will be created."</literal></expr></argument>)</argument_list></call></expr>,
         <expr><name>NULL</name></expr>,
         <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>unix_socket_directory</name></expr>,
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>HAVE_UNIX_SOCKETS</name></cpp:ifdef>
        <expr><name>DEFAULT_PGSOCKET_DIR</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
        <expr><literal type="string">""</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
        <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
        <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
    }</block></expr>,

    <expr><block>{
        <expr><block>{<expr><name>GTM_OPTNAME_UNIX_SOCKET_GROUP</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
         <expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Sets the owning group of the Unix-domain socket."</literal></expr></argument>)</argument_list></call></expr>,
         <expr><name>NULL</name></expr>,
         <expr><literal type="number">0</literal></expr>
        }</block></expr>,
        <expr><operator>&amp;</operator><name>unix_socket_group</name></expr>,
        <expr><literal type="string">""</literal></expr>,
        <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
        <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
    }</block></expr>,

	<comment type="block">/* End-of-list marker */</comment>
	<expr><block>{
		<expr><block>{<expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>}</block></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>config_enum</name></name></type> <name><name>ConfigureNamesEnum</name><index>[]</index></name> <init>=
<expr><block>{
	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_LOG_MIN_MESSAGES</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Minimum message level to write to the log file."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
		 	<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>log_min_messages</name></expr>,
		<expr><name>WARNING</name></expr>,
		<expr><name>server_message_level_options</name></expr>,
		<expr><name>NULL</name></expr>,<expr><name>NULL</name></expr>,
		<expr><name>WARNING</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

	<expr><block>{
		<expr><block>{<expr><name>GTM_OPTNAME_STARTUP</name></expr>, <expr><name>GTMC_STARTUP</name></expr>,
			<expr><call><name>gettext_noop</name><argument_list>(<argument><expr><literal type="string">"Specifies startup mode, act or standby."</literal></expr></argument>)</argument_list></call></expr>,
			<expr><name>NULL</name></expr>,
			<expr><literal type="number">0</literal></expr>
		}</block></expr>,
		<expr><operator>&amp;</operator><name>GTM_StandbyMode</name></expr>,
		<expr><name>GTM_ACT_MODE</name></expr>,
		<expr><name>gtm_startup_mode_options</name></expr>,
		<expr><name>NULL</name></expr>,<expr><name>NULL</name></expr>,
		<expr><name>GTM_ACT_MODE</name></expr>, <expr><name>NULL</name></expr>
	}</block></expr>,

	<comment type="block">/* End-of-list marker */</comment>
	<expr><block>{
		<expr><block>{<expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>,<expr><name>NULL</name></expr>,<expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>
	}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block" format="doxygen">/******** end of options list ********/</comment>

<comment type="block">/*
 * Actual lookup of variables is done through this single, sorted array.
 */</comment>
<decl_stmt><decl><type><name><name>struct</name> <name>config_generic</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>gtm_opt_variables</name></decl>;</decl_stmt>

<comment type="block">/* Current number of variables contained in the vector */</comment>
<decl_stmt><decl><type><name>int</name></type>	<name>num_gtm_opt_variables</name></decl>;</decl_stmt>

<comment type="block">/* Vector capacity */</comment>
<decl_stmt><decl><type><name>int</name></type>	<name>size_gtm_opt_variables</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>reporting_enabled</name></decl>;</decl_stmt>	<comment type="block">/* TRUE to enable GTMOPT_REPORT */</comment>

<decl_stmt><decl><type><name>int</name></type>	<name>GTMOptUpdateCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt> <comment type="block">/* Indicates when specific option is updated */</comment>
</unit>
