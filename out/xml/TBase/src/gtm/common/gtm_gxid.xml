<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/TBase/src/gtm/common/gtm_gxid.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/gtm_c.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtm/gtm_gxid.h"</cpp:file></cpp:include>

<comment type="block">/*
 * GlobalTransactionIdPrecedes --- is id1 logically &lt; id2?
 */</comment>
<function><type><name>bool</name></type>
<name>GlobalTransactionIdPrecedes</name><parameter_list>(<parameter><decl><type><name>GlobalTransactionId</name></type> <name>id1</name></decl></parameter>, <parameter><decl><type><name>GlobalTransactionId</name></type> <name>id2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="block">/*
     * If either ID is a permanent XID then we can just do unsigned
     * comparison.    If both are normal, do a modulo-2^31 comparison.
     */</comment>
    <decl_stmt><decl><type><name>int32</name></type>        <name>diff</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>GlobalTransactionIdIsNormal</name><argument_list>(<argument><expr><name>id1</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>GlobalTransactionIdIsNormal</name><argument_list>(<argument><expr><name>id2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><operator>(</operator><name>id1</name> <operator>&lt;</operator> <name>id2</name><operator>)</operator></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt><expr><name>diff</name> <operator>=</operator> <operator>(</operator><name>int32</name><operator>)</operator> <operator>(</operator><name>id1</name> <operator>-</operator> <name>id2</name><operator>)</operator></expr>;</expr_stmt>
    <return>return <expr><operator>(</operator><name>diff</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * GlobalTransactionIdPrecedesOrEquals --- is id1 logically &lt;= id2?
 */</comment>
<function><type><name>bool</name></type>
<name>GlobalTransactionIdPrecedesOrEquals</name><parameter_list>(<parameter><decl><type><name>GlobalTransactionId</name></type> <name>id1</name></decl></parameter>, <parameter><decl><type><name>GlobalTransactionId</name></type> <name>id2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>int32</name></type>        <name>diff</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>GlobalTransactionIdIsNormal</name><argument_list>(<argument><expr><name>id1</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>GlobalTransactionIdIsNormal</name><argument_list>(<argument><expr><name>id2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><operator>(</operator><name>id1</name> <operator>&lt;=</operator> <name>id2</name><operator>)</operator></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt><expr><name>diff</name> <operator>=</operator> <operator>(</operator><name>int32</name><operator>)</operator> <operator>(</operator><name>id1</name> <operator>-</operator> <name>id2</name><operator>)</operator></expr>;</expr_stmt>
    <return>return <expr><operator>(</operator><name>diff</name> <operator>&lt;=</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * GlobalTransactionIdFollows --- is id1 logically &gt; id2?
 */</comment>
<function><type><name>bool</name></type>
<name>GlobalTransactionIdFollows</name><parameter_list>(<parameter><decl><type><name>GlobalTransactionId</name></type> <name>id1</name></decl></parameter>, <parameter><decl><type><name>GlobalTransactionId</name></type> <name>id2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>int32</name></type>        <name>diff</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>GlobalTransactionIdIsNormal</name><argument_list>(<argument><expr><name>id1</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>GlobalTransactionIdIsNormal</name><argument_list>(<argument><expr><name>id2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><operator>(</operator><name>id1</name> <operator>&gt;</operator> <name>id2</name><operator>)</operator></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt><expr><name>diff</name> <operator>=</operator> <operator>(</operator><name>int32</name><operator>)</operator> <operator>(</operator><name>id1</name> <operator>-</operator> <name>id2</name><operator>)</operator></expr>;</expr_stmt>
    <return>return <expr><operator>(</operator><name>diff</name> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * GlobalTransactionIdFollowsOrEquals --- is id1 logically &gt;= id2?
 */</comment>
<function><type><name>bool</name></type>
<name>GlobalTransactionIdFollowsOrEquals</name><parameter_list>(<parameter><decl><type><name>GlobalTransactionId</name></type> <name>id1</name></decl></parameter>, <parameter><decl><type><name>GlobalTransactionId</name></type> <name>id2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>int32</name></type>        <name>diff</name></decl>;</decl_stmt>

    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>GlobalTransactionIdIsNormal</name><argument_list>(<argument><expr><name>id1</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>GlobalTransactionIdIsNormal</name><argument_list>(<argument><expr><name>id2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><operator>(</operator><name>id1</name> <operator>&gt;=</operator> <name>id2</name><operator>)</operator></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt><expr><name>diff</name> <operator>=</operator> <operator>(</operator><name>int32</name><operator>)</operator> <operator>(</operator><name>id1</name> <operator>-</operator> <name>id2</name><operator>)</operator></expr>;</expr_stmt>
    <return>return <expr><operator>(</operator><name>diff</name> <operator>&gt;=</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

</unit>
