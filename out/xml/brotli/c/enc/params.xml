<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/brotli/c/enc/params.h"><comment type="block">/* Copyright 2017 Google Inc. All Rights Reserved.

   Distributed under MIT license.
   See file LICENSE for detail or copy at https://opensource.org/licenses/MIT
*/</comment>

<comment type="block">/* Parameters for the Brotli encoder with chosen quality levels. */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BROTLI_ENC_PARAMS_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BROTLI_ENC_PARAMS_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;brotli/encode.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"encoder_dict.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>BrotliHasherParams</name> <block>{
  <decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>bucket_bits</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>block_bits</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>hash_len</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>num_last_distances_to_check</name></decl>;</decl_stmt>
}</block></struct></type> <name>BrotliHasherParams</name>;</typedef>

<typedef>typedef <type><struct>struct <name>BrotliDistanceParams</name> <block>{
  <decl_stmt><decl><type><name>uint32_t</name></type> <name>distance_postfix_bits</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>uint32_t</name></type> <name>num_direct_distance_codes</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>uint32_t</name></type> <name>alphabet_size_max</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>uint32_t</name></type> <name>alphabet_size_limit</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>size_t</name></type> <name>max_distance</name></decl>;</decl_stmt>
}</block></struct></type> <name>BrotliDistanceParams</name>;</typedef>

<comment type="block">/* Encoding parameters */</comment>
<typedef>typedef <type><struct>struct <name>BrotliEncoderParams</name> <block>{
  <decl_stmt><decl><type><name>BrotliEncoderMode</name></type> <name>mode</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>quality</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>lgwin</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>lgblock</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>size_t</name></type> <name>stream_offset</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>size_t</name></type> <name>size_hint</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>BROTLI_BOOL</name></type> <name>disable_literal_context_modeling</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>BROTLI_BOOL</name></type> <name>large_window</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>BrotliHasherParams</name></type> <name>hasher</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>BrotliDistanceParams</name></type> <name>dist</name></decl>;</decl_stmt>
  <comment type="block">/* TODO(eustas): rename to BrotliShared... */</comment>
  <decl_stmt><decl><type><name>SharedEncoderDictionary</name></type> <name>dictionary</name></decl>;</decl_stmt>
}</block></struct></type> <name>BrotliEncoderParams</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="block">/* BROTLI_ENC_PARAMS_H_ */</comment>
</unit>
