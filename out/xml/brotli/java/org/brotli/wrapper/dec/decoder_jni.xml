<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/brotli/java/org/brotli/wrapper/dec/decoder_jni.h"><comment type="block">/* Copyright 2017 Google Inc. All Rights Reserved.

   Distributed under MIT license.
   See file LICENSE for detail or copy at https://opensource.org/licenses/MIT
*/</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BROTLI_WRAPPER_DEC_DECODER_JNI_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BROTLI_WRAPPER_DEC_DECODER_JNI_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen">/**
 * Creates a new Decoder.
 *
 * Cookie to address created decoder is stored in out_cookie. In case of failure
 * cookie is 0.
 *
 * @param ctx {out_cookie, in_directBufferSize} tuple
 * @returns direct ByteBuffer if directBufferSize is not 0; otherwise null
 */</comment>
<function_decl><type><name>JNIEXPORT</name> <name>jobject</name> <name>JNICALL</name></type>
<name>Java_org_brotli_wrapper_dec_DecoderJNI_nativeCreate</name><parameter_list>(
    <parameter><decl><type><name>JNIEnv</name><modifier>*</modifier></type> <name>env</name></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter> <comment type="block">/*jobj*/</comment>, <parameter><decl><type><name>jlongArray</name></type> <name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block" format="doxygen">/**
 * Push data to decoder.
 *
 * status codes:
 *  - 0 error happened
 *  - 1 stream is finished, no more input / output expected
 *  - 2 needs more input to process further
 *  - 3 needs more output to process further
 *  - 4 ok, can proceed further without additional input
 *
 * @param ctx {in_cookie, out_status} tuple
 * @param input_length number of bytes provided in input or direct input;
 *                     0 to process further previous input
 */</comment>
<function_decl><type><name>JNIEXPORT</name> <name>void</name> <name>JNICALL</name></type>
<name>Java_org_brotli_wrapper_dec_DecoderJNI_nativePush</name><parameter_list>(
    <parameter><decl><type><name>JNIEnv</name><modifier>*</modifier></type> <name>env</name></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter> <comment type="block">/*jobj*/</comment>, <parameter><decl><type><name>jlongArray</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>jint</name></type> <name>input_length</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block" format="doxygen">/**
 * Pull decompressed data from decoder.
 *
 * @param ctx {in_cookie, out_status} tuple
 * @returns direct ByteBuffer; all the produced data MUST be consumed before
 *          any further invocation; null in case of error
 */</comment>
<function_decl><type><name>JNIEXPORT</name> <name>jobject</name> <name>JNICALL</name></type>
<name>Java_org_brotli_wrapper_dec_DecoderJNI_nativePull</name><parameter_list>(
    <parameter><decl><type><name>JNIEnv</name><modifier>*</modifier></type> <name>env</name></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter> <comment type="block">/*jobj*/</comment>, <parameter><decl><type><name>jlongArray</name></type> <name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="block" format="doxygen">/**
 * Releases all used resources.
 *
 * @param ctx {in_cookie} tuple
 */</comment>
<function_decl><type><name>JNIEXPORT</name> <name>void</name> <name>JNICALL</name></type>
<name>Java_org_brotli_wrapper_dec_DecoderJNI_nativeDestroy</name><parameter_list>(
    <parameter><decl><type><name>JNIEnv</name><modifier>*</modifier></type> <name>env</name></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter> <comment type="block">/*jobj*/</comment>, <parameter><decl><type><name>jlongArray</name></type> <name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>JNIEXPORT</name> <name>jboolean</name> <name>JNICALL</name></type>
<name>Java_org_brotli_wrapper_dec_DecoderJNI_nativeAttachDictionary</name><parameter_list>(
    <parameter><decl><type><name>JNIEnv</name><modifier>*</modifier></type> <name>env</name></decl></parameter>, <parameter><decl><type><name>jobject</name></type></decl></parameter> <comment type="block">/*jobj*/</comment>, <parameter><decl><type><name>jlongArray</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>jobject</name></type> <name>dictionary</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// BROTLI_WRAPPER_DEC_DECODER_JNI_H_</comment>
</unit>
