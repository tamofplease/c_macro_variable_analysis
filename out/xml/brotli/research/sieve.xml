<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/brotli/research/sieve.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>BROTLI_RESEARCH_SIEVE_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BROTLI_RESEARCH_SIEVE_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstddef&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdint&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<comment type="block" format="doxygen">/**
 * Generate a dictionary for given samples.
 *
 * @param dictionary_size_limit maximal dictionary size
 * @param slice_len text slice size
 * @param sample_sizes vector with sample sizes
 * @param sample_data concatenated samples
 * @return generated dictionary
 */</comment>
<expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <macro><name>sieve_generate</name><argument_list>(<argument>size_t dictionary_size_limit</argument>, <argument>size_t slice_len</argument>,
    <argument>const std::vector&lt;size_t&gt;&amp; sample_sizes</argument>, <argument>const uint8_t* sample_data</argument>)</argument_list></macro></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>  <comment type="line">// BROTLI_RESEARCH_SIEVE_H_</comment>
</unit>
