<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/citus/src/backend/distributed/utils/priority.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * priority.c
 *	  Utilities for managing CPU priority.
 *
 * Copyright (c) Citus Data, Inc.
 *-------------------------------------------------------------------------
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/resource.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/time.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"distributed/priority.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>int</name></type> <name>CpuPriority</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>CpuPriorityLogicalRepSender</name> <init>= <expr><name>CPU_PRIORITY_INHERIT</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>MaxHighPriorityBackgroundProcesess</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>


<comment type="block">/*
 * SetOwnPriority changes the CPU priority of the current backend to the given
 * priority. If the OS disallows us to set the priority to the given value, we
 * only warn about it.
 */</comment>
<function><type><name>void</name></type>
<name>SetOwnPriority</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>priority</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name>priority</name> <operator>==</operator> <name>CPU_PRIORITY_INHERIT</name></expr>)</condition>
	<block>{<block_content>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>setpriority</name><argument_list>(<argument><expr><name>PRIO_PROCESS</name></expr></argument>, <argument><expr><call><name>getpid</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>priority</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>WARNING</name></expr></argument>, <argument><expr><operator>(</operator>
					<call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"could not set cpu priority to %d: %m"</literal></expr></argument>, <argument><expr><name>priority</name></expr></argument>)</argument_list></call><operator>,</operator>
					<call><name>errhint</name><argument_list>(<argument><expr><literal type="string">"Try changing the 'nice' resource limit by changing "</literal>
							<literal type="string">"/etc/security/limits.conf for the postgres user "</literal>
							<literal type="string">"and/or by setting LimitNICE in your the systemd "</literal>
							<literal type="string">"service file (depending on how you start "</literal>
							<literal type="string">"postgres)."</literal></expr></argument>
							)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<comment type="block">/*
 * GetOwnPriority returns the current CPU priority value of the backend.
 */</comment>
<function><type><name>int</name></type>
<name>GetOwnPriority</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><name>errno</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><call><name>getpriority</name><argument_list>(<argument><expr><name>PRIO_PROCESS</name></expr></argument>, <argument><expr><call><name>getpid</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="block">/*
	 * We explicitly check errno too because getpriority can return -1 on
	 * success too, if the actual priority value is -1
	 */</comment>
	<if_stmt><if>if <condition>(<expr><name>result</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>errno</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>WARNING</name></expr></argument>, <argument><expr><operator>(</operator><call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"could not get current cpu priority value, "</literal>
								 <literal type="string">"assuming 0: %m"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>
</unit>
