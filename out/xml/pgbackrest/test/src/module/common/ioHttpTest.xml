<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/pgbackrest/test/src/module/common/ioHttpTest.c"><comment type="block" format="doxygen">/***********************************************************************************************************************************
Test HTTP
***********************************************************************************************************************************/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/fdRead.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/fdWrite.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/tls/client.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/socket/client.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessFork.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessServer.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
HTTP user agent header
***********************************************************************************************************************************/</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_USER_AGENT</name></cpp:macro>                                                                                                            \
    <cpp:value>HTTP_HEADER_USER_AGENT ":" PROJECT_NAME "/" PROJECT_VERSION "\r\n"</cpp:value></cpp:define>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Run
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testRun</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>FUNCTION_HARNESS_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"httpUriEncode() and httpUriDecode()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>httpUriEncode</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"null encodes to null"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUriEncode</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"0-9_~/A Z.az"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"0-9_~%2FA%20Z.az"</literal></expr></argument>, <argument><expr><literal type="string">"non-path encoding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUriEncode</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"0-9_~/A Z.az"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"0-9_~/A%20Z.az"</literal></expr></argument>, <argument><expr><literal type="string">"path encoding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"decode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>httpUriDecode</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"null decodes to null"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUriDecode</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"0-9_~%2FA%20Z.az"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"0-9_~/A Z.az"</literal></expr></argument>, <argument><expr><literal type="string">"valid decode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>httpUriDecode</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"%A"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"invalid escape sequence length in '%A'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>httpUriDecode</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"%XX"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"unable to convert base 16 string 'XX' to unsigned int"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"httpDateToTime() and httpDateFromTime()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>httpDateToTime</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"Wed, 21 Bog 2015 07:28:00 GMT"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"invalid month 'Bog'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>httpDateToTime</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"Wed,  1 Oct 2015 07:28:00 GMT"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"unable to convert base 10 string ' 1' to int"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>httpDateToTime</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"Wed, 21 Oct 2015 07:28:00 GMT"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1445412480</literal></expr></argument>, <argument><expr><literal type="string">"convert HTTP date to time_t"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpDateFromTime</name><argument_list>(<argument><expr><literal type="number">1592743579</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Sun, 21 Jun 2020 12:46:19 GMT"</literal></expr></argument>, <argument><expr><literal type="string">"convert time_t to HTTP date"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"HttpHeader"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>HttpHeader</name> <modifier>*</modifier></type><name>header</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <macro><name>MEM_CONTEXT_TEMP_BEGIN</name><argument_list>()</argument_list></macro>
        <block>{<block_content>
            <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>httpHeaderNew</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpHeaderMove</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>memContextPrior</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="string">"move to new context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpHeaderMove</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><call><name>memContextPrior</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"move null to new context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <expr_stmt><expr><call><name>MEM_CONTEXT_TEMP_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpHeaderAdd</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="string">"add header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpHeaderPut</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"value2a"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="string">"put header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpHeaderAdd</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"value2b"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="string">"add header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpHeaderAdd</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"value1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="string">"add header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(<argument><expr><call><name>httpHeaderList</name><argument_list>(<argument><expr><name>header</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"key1\nkey2\n"</literal></expr></argument>, <argument><expr><literal type="string">"header list"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpHeaderGet</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"value1"</literal></expr></argument>, <argument><expr><literal type="string">"get value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpHeaderGet</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"value2a, value2b"</literal></expr></argument>, <argument><expr><literal type="string">"get value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>httpHeaderGet</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>BOGUS_STR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"get missing value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>httpHeaderGet</name><argument_list>(<argument><expr><call><name>httpHeaderPutRange</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>HTTP_HEADER_RANGE_STR</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"do not put range header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>httpHeaderGet</name><argument_list>(<argument><expr><call><name>httpHeaderPutRange</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>VARUINT64</name><argument_list>(<argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>HTTP_HEADER_RANGE_STR</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"bytes=1-21"</literal></expr></argument>,
            <argument><expr><literal type="string">"put range header with offset and limit"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>httpHeaderGet</name><argument_list>(<argument><expr><call><name>httpHeaderPutRange</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>VARUINT64</name><argument_list>(<argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>HTTP_HEADER_RANGE_STR</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"bytes=0-20"</literal></expr></argument>,
            <argument><expr><literal type="string">"put range header with offset and limit"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>httpHeaderGet</name><argument_list>(<argument><expr><call><name>httpHeaderPutRange</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><literal type="number">44</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>HTTP_HEADER_RANGE_STR</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"bytes=44-"</literal></expr></argument>,
            <argument><expr><literal type="string">"put range header with offset"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><name>header</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{key1: 'value1', key2: 'value2a, value2b', range: 'bytes=44-'}"</literal></expr></argument>, <argument><expr><literal type="string">"log output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>httpHeaderFree</name><argument_list>(<argument><expr><name>header</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"free header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Redacted headers</comment>
        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>redact</name> <init>= <expr><call><name>strLstNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>strLstAddZ</name><argument_list>(<argument><expr><name>redact</name></expr></argument>, <argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>httpHeaderNew</name><argument_list>(<argument><expr><name>redact</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new header with redaction"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>httpHeaderAdd</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"secret"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"secret-value"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>httpHeaderAdd</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"public"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"public-value"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><name>header</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{public: 'public-value', secret: &lt;redacted&gt;}"</literal></expr></argument>, <argument><expr><literal type="string">"log output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Duplicate</comment>
        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><name>redact</name> <operator>=</operator> <call><name>strLstNew</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>strLstAddZ</name><argument_list>(<argument><expr><name>redact</name></expr></argument>, <argument><expr><literal type="string">"public"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpHeaderDup</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{public: 'public-value', secret: &lt;redacted&gt;}"</literal></expr></argument>,
            <argument><expr><literal type="string">"dup and keep redactions"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpHeaderDup</name><argument_list>(<argument><expr><name>header</name></expr></argument>, <argument><expr><name>redact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{public: &lt;redacted&gt;, secret: 'secret-value'}"</literal></expr></argument>,
            <argument><expr><literal type="string">"dup and change redactions"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpHeaderDup</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"dup null header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"HttpQuery"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>HttpQuery</name> <modifier>*</modifier></type><name>query</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <macro><name>MEM_CONTEXT_TEMP_BEGIN</name><argument_list>()</argument_list></macro>
        <block>{<block_content>
            <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>redactList</name> <init>= <expr><call><name>strLstNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>strLstAddZ</name><argument_list>(<argument><expr><name>redactList</name></expr></argument>, <argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>httpQueryNewP</name><argument_list>(<argument><expr><operator>.</operator><name>redactList</name> <operator>=</operator> <name>redactList</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpQueryMove</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>memContextPrior</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"move to new context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpQueryMove</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><call><name>memContextPrior</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"move null to new context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <expr_stmt><expr><call><name>MEM_CONTEXT_TEMP_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>httpQueryRenderP</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"null query renders null"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>httpQueryRenderP</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"empty query renders null"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpQueryAdd</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"add query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>httpQueryAdd</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"value2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>AssertError</name></expr></argument>, <argument><expr><literal type="string">"key 'key2' already exists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpQueryPut</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"value2a"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"put query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpQueryRenderP</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"key2=value2a"</literal></expr></argument>, <argument><expr><literal type="string">"render one query item"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>httpQueryAdd</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"value 1?"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"add query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(<argument><expr><call><name>httpQueryList</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"key1\nkey2\n"</literal></expr></argument>, <argument><expr><literal type="string">"query list"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpQueryRenderP</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"key1=value%201%3F&amp;key2=value2a"</literal></expr></argument>, <argument><expr><literal type="string">"render two query items"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>httpQueryRenderP</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><operator>.</operator><name>redact</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"key1=value%201%3F&amp;key2=&lt;redacted&gt;"</literal></expr></argument>, <argument><expr><literal type="string">"render two query items with redaction"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpQueryGet</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"value 1?"</literal></expr></argument>, <argument><expr><literal type="string">"get value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpQueryGet</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"key2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"value2a"</literal></expr></argument>, <argument><expr><literal type="string">"get value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>httpQueryGet</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>BOGUS_STR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"get missing value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpQueryToLog</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{key1: 'value 1?', key2: &lt;redacted&gt;}"</literal></expr></argument>, <argument><expr><literal type="string">"log output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"dup query with redaction"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>redactList</name> <init>= <expr><call><name>strLstNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>strLstAddZ</name><argument_list>(<argument><expr><name>redactList</name></expr></argument>, <argument><expr><literal type="string">"key1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>httpQueryDupP</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><operator>.</operator><name>redactList</name> <operator>=</operator> <name>redactList</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"dup query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpQueryToLog</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{key1: &lt;redacted&gt;, key2: 'value2a'}"</literal></expr></argument>, <argument><expr><literal type="string">"log output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"new query from string"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>httpQueryNewStr</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"a=b&amp;c"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"invalid key/value 'c' in query 'a=b&amp;c'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>HttpQuery</name> <modifier>*</modifier></type><name>query2</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>query2</name></expr></argument>, <argument><expr><call><name>httpQueryNewStr</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"?a=%2Bb&amp;c=d%3D"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"query from string"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpQueryRenderP</name><argument_list>(<argument><expr><name>query2</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"a=%2Bb&amp;c=d%3D"</literal></expr></argument>, <argument><expr><literal type="string">"render query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"merge queries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>httpQueryRenderP</name><argument_list>(<argument><expr><call><name>httpQueryMerge</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><name>query2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"a=%2Bb&amp;c=d%3D&amp;key1=value%201%3F&amp;key2=value2a"</literal></expr></argument>, <argument><expr><literal type="string">"render merge"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"free query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>httpQueryFree</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"free"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"HttpUrl"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>HttpUrl</name> <modifier>*</modifier></type><name>url</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"invalid url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>httpUrlNewParseP</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"ftp://"</literal> <name>BOGUS_STR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"invalid URL 'ftp://BOGUS'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"HttpProtocolTypeStr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpProtocolTypeStr</name><argument_list>(<argument><expr><name>httpProtocolTypeHttp</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"http"</literal></expr></argument>, <argument><expr><literal type="string">"check http"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpProtocolTypeStr</name><argument_list>(<argument><expr><name>httpProtocolTypeAny</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"check any"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"simple http"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><call><name>httpUrlNewParseP</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"http://test"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>type</name> <operator>=</operator> <name>httpProtocolTypeHttp</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrl</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"http://test"</literal></expr></argument>, <argument><expr><literal type="string">"check url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlHost</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"test"</literal></expr></argument>, <argument><expr><literal type="string">"check host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlPath</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>, <argument><expr><literal type="string">"check path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlPort</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">80</literal></expr></argument>, <argument><expr><literal type="string">"check port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlProtocolType</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>httpProtocolTypeHttp</name></expr></argument>, <argument><expr><literal type="string">"check protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlToLog</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{http://test:80/}"</literal></expr></argument>, <argument><expr><literal type="string">"check log"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"host and port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><call><name>httpUrlNewParseP</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"gcs:4443"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>type</name> <operator>=</operator> <name>httpProtocolTypeHttps</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrl</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"gcs:4443"</literal></expr></argument>, <argument><expr><literal type="string">"check url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlHost</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"gcs"</literal></expr></argument>, <argument><expr><literal type="string">"check host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlPath</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>, <argument><expr><literal type="string">"check path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlPort</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">4443</literal></expr></argument>, <argument><expr><literal type="string">"check port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlProtocolType</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>httpProtocolTypeHttps</name></expr></argument>, <argument><expr><literal type="string">"check protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlToLog</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{https://gcs:4443/}"</literal></expr></argument>, <argument><expr><literal type="string">"check log"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"http but expected https"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>httpUrlNewParseP</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"http://test"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>type</name> <operator>=</operator> <name>httpProtocolTypeHttps</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
            <argument><expr><literal type="string">"expected protocol 'https' in URL 'http://test'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"https with port and path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><call><name>httpUrlNewParseP</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"https://test.com:445/path"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrl</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"https://test.com:445/path"</literal></expr></argument>, <argument><expr><literal type="string">"check url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlHost</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"test.com"</literal></expr></argument>, <argument><expr><literal type="string">"check host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlPath</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"/path"</literal></expr></argument>, <argument><expr><literal type="string">"check path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlPort</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">445</literal></expr></argument>, <argument><expr><literal type="string">"check port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlProtocolType</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>httpProtocolTypeHttps</name></expr></argument>, <argument><expr><literal type="string">"check protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlToLog</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{https://test.com:445/path}"</literal></expr></argument>, <argument><expr><literal type="string">"check log"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"host only"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><call><name>httpUrlNewParseP</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"test.com"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>type</name> <operator>=</operator> <name>httpProtocolTypeHttps</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrl</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"test.com"</literal></expr></argument>, <argument><expr><literal type="string">"check url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlHost</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"test.com"</literal></expr></argument>, <argument><expr><literal type="string">"check host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlPath</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>, <argument><expr><literal type="string">"check path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlPort</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">443</literal></expr></argument>, <argument><expr><literal type="string">"check port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlProtocolType</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>httpProtocolTypeHttps</name></expr></argument>, <argument><expr><literal type="string">"check protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlToLog</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{https://test.com:443/}"</literal></expr></argument>, <argument><expr><literal type="string">"check log"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"IPv6"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><call><name>httpUrlNewParseP</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"http://[2001:db8::ff00:42:8329]:81"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>type</name> <operator>=</operator> <name>httpProtocolTypeHttp</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrl</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"http://[2001:db8::ff00:42:8329]:81"</literal></expr></argument>, <argument><expr><literal type="string">"check url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlHost</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"2001:db8::ff00:42:8329"</literal></expr></argument>, <argument><expr><literal type="string">"check host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlPath</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>, <argument><expr><literal type="string">"check path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlPort</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">81</literal></expr></argument>, <argument><expr><literal type="string">"check port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlProtocolType</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>httpProtocolTypeHttp</name></expr></argument>, <argument><expr><literal type="string">"check protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlToLog</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{http://[2001:db8::ff00:42:8329]:81/}"</literal></expr></argument>, <argument><expr><literal type="string">"check log"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"IPv6 no port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><call><name>httpUrlNewParseP</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"http://[2001:db8::ff00:42:8329]/url"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>type</name> <operator>=</operator> <name>httpProtocolTypeHttp</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrl</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"http://[2001:db8::ff00:42:8329]/url"</literal></expr></argument>, <argument><expr><literal type="string">"check url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlHost</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"2001:db8::ff00:42:8329"</literal></expr></argument>, <argument><expr><literal type="string">"check host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlPath</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"/url"</literal></expr></argument>, <argument><expr><literal type="string">"check path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlPort</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">80</literal></expr></argument>, <argument><expr><literal type="string">"check port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpUrlProtocolType</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>httpProtocolTypeHttp</name></expr></argument>, <argument><expr><literal type="string">"check protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpUrlToLog</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{http://[2001:db8::ff00:42:8329]:80/url}"</literal></expr></argument>, <argument><expr><literal type="string">"check log"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"free"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>httpUrlFree</name><argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"free"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"HttpClient"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>HttpClient</name> <modifier>*</modifier></type><name>client</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>httpClientNew</name><argument_list>(<argument><expr><call><name>sckClientNew</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"localhost"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>hrnServerPort</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">500</literal></expr></argument>, <argument><expr><literal type="number">500</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">500</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new client"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR_FMT</name><argument_list>(
            <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>HostConnectError</name></expr></argument>,
            <argument><expr><literal type="string">"unable to connect to 'localhost:%u': [111] Connection refused"</literal></expr></argument>, <argument><expr><call><name>hrnServerPort</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_FORK_BEGIN</name><argument_list>()</argument_list></macro>
        <block>{<block_content>
            <macro><name>HRN_FORK_CHILD_BEGIN</name><argument_list>(<argument>.prefix = <literal type="string">"test server"</literal></argument>, <argument>.timeout = <literal type="number">5000</literal></argument>)</argument_list></macro>
            <block>{<block_content>
                <comment type="line">// Start HTTP test server</comment>
                <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>hrnServerRunP</name><argument_list>(<argument><expr><call><name>HRN_FORK_CHILD_READ</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hrnServerProtocolSocket</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"http server run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block>
            <expr_stmt><expr><call><name>HRN_FORK_CHILD_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

            <macro><name>HRN_FORK_PARENT_BEGIN</name><argument_list>()</argument_list></macro>
            <block>{<block_content>
                <decl_stmt><decl><type><name>IoWrite</name> <modifier>*</modifier></type><name>http</name> <init>= <expr><call><name>hrnServerScriptBegin</name><argument_list>(<argument><expr><call><name>HRN_FORK_PARENT_WRITE</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"create client"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>ioBufferSizeSet</name><argument_list>(<argument><expr><literal type="number">35</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>httpClientNew</name><argument_list>(<argument><expr><call><name>sckClientNew</name><argument_list>(<argument><expr><call><name>hrnServerHost</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>hrnServerPort</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">5000</literal></expr></argument>, <argument><expr><literal type="number">5000</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">5000</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new client"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"no output from server"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name><name>client</name><operator>-&gt;</operator><name>pub</name><operator>.</operator><name>timeout</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptSleep</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="number">600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FileReadError</name></expr></argument>,
                    <argument><expr><literal type="string">"unexpected eof while reading line"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"no CR at end of status"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.0 200 OK\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
                    <argument><expr><literal type="string">"HTTP response status 'HTTP/1.0 200 OK' should be CR-terminated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"status too short"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.0 200\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
                    <argument><expr><literal type="string">"HTTP response 'HTTP/1.0 200' has invalid length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"invalid HTTP version"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1 200 OK\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
                    <argument><expr><literal type="string">"HTTP version of response 'HTTP/1 200 OK' must be HTTP/1.1 or HTTP/1.0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"no space in status"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200OK\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
                    <argument><expr><literal type="string">"response status '200OK' must have a space after the status code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"unexpected end of headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FileReadError</name></expr></argument>,
                    <argument><expr><literal type="string">"unexpected eof while reading line"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"missing colon in header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\nheader-value\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
                    <argument><expr><literal type="string">"header 'header-value' missing colon"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"invalid transfer encoding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\ntransfer-encoding:bogus\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
                    <argument><expr><literal type="string">"only 'chunked' is supported for 'transfer-encoding' header"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"content length and transfer encoding both set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\ntransfer-encoding:chunked\r\ncontent-length:777\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
                    <argument><expr><literal type="string">"'transfer-encoding' and 'content-length' headers are both set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"5xx error with no retry"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 503 Slow Down\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ServiceError</name></expr></argument>,
                    <argument><expr><literal type="string">"[503] Slow Down"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"request with no content (with an internal error)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>,
                    <argument><expr><literal type="string">"GET /?name=%2Fpath%2FA%20Z.txt&amp;type=test HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"host:myhost.com\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 500 Internal Error\r\nConnection:close\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(
                    <argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET /?name=%2Fpath%2FA%20Z.txt&amp;type=test HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"host:myhost.com\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(
                    <argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\nkey1:0\r\n key2 : value2\r\nConnection:ack\r\ncontent-length:0\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name>HttpHeader</name> <modifier>*</modifier></type><name>headerRequest</name> <init>= <expr><call><name>httpHeaderNew</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name>httpHeaderAdd</name><argument_list>(<argument><expr><name>headerRequest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"host"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"myhost.com"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name>HttpQuery</name> <modifier>*</modifier></type><name>query</name> <init>= <expr><call><name>httpQueryNewP</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name>httpQueryAdd</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/path/A Z.txt"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>httpQueryAdd</name><argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"type"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"test"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name><name>client</name><operator>-&gt;</operator><name>pub</name><operator>.</operator><name>timeout</name></name> <operator>=</operator> <literal type="number">5000</literal></expr>;</expr_stmt>

                <decl_stmt><decl><type><name>HttpRequest</name> <modifier>*</modifier></type><name>request</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name>HttpResponse</name> <modifier>*</modifier></type><name>response</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

                <macro><name>MEM_CONTEXT_TEMP_BEGIN</name><argument_list>()</argument_list></macro>
                <block>{<block_content>
                    <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
                        <argument><expr><name>request</name></expr></argument>, <argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>query</name> <operator>=</operator> <name>query</name></expr></argument>, <argument><expr><operator>.</operator><name>header</name> <operator>=</operator> <name>headerRequest</name></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>httpRequestMove</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><call><name>memContextPrior</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"move request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>httpResponseMove</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>memContextPrior</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"move response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block>
                <expr_stmt><expr><call><name>MEM_CONTEXT_TEMP_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpRequestVerb</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"GET"</literal></expr></argument>, <argument><expr><literal type="string">"check request verb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpRequestPath</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>, <argument><expr><literal type="string">"check request path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpQueryRenderP</name><argument_list>(<argument><expr><call><name>httpRequestQuery</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"name=%2Fpath%2FA%20Z.txt&amp;type=test"</literal></expr></argument>, <argument><expr><literal type="string">"check request query"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_PTR_NE</name><argument_list>(<argument><expr><call><name>httpRequestHeader</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"check request headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseCode</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="string">"check response code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>httpResponseCodeOk</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"check response code ok"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpResponseReason</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="string">"check response message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseEof</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"io is eof"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><literal type="string">"{connection: 'ack', content-length: '0', key1: '0', key2: 'value2'}"</literal></expr></argument>, <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>bufSize</name><argument_list>(<argument><expr><call><name>httpResponseContent</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"content is empty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>httpResponseFree</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"free response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>httpRequestFree</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"free request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"head request with content-length but no content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HEAD / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.0 200 OK\r\ncontent-length:380\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"HEAD"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseCode</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="string">"check response code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpResponseReason</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="string">"check response message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>httpResponseEof</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"io is eof"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><name><name>response</name><operator>-&gt;</operator><name>session</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"session is not busy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{content-length: '380'}"</literal></expr></argument>, <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"head request with transfer encoding but no content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HEAD / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\nTransfer-Encoding: chunked\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"HEAD"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseCode</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="string">"check response code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpResponseReason</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="string">"check response message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>httpResponseEof</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"io is eof"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><name><name>response</name><operator>-&gt;</operator><name>session</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"session is not busy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{transfer-encoding: 'chunked'}"</literal></expr></argument>, <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"head request with connection close but no content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HEAD / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\nConnection:close\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"HEAD"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseCode</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="string">"check response code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpResponseReason</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="string">"check response message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>httpResponseEof</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"io is eof"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><name><name>response</name><operator>-&gt;</operator><name>session</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"session is not busy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{connection: 'close'}"</literal></expr></argument>, <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"error with content (with a few slow down errors)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 503 Slow Down\r\ncontent-length:3\r\nConnection:close\r\n\r\n123"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(
                    <argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 503 Slow Down\r\nTransfer-Encoding:chunked\r\nConnection:close\r\n\r\n0\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 404 Not Found\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseCode</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">404</literal></expr></argument>, <argument><expr><literal type="string">"check response code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>httpResponseCodeOk</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"check response code error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpResponseReason</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Not Found"</literal></expr></argument>, <argument><expr><literal type="string">"check response message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{}"</literal></expr></argument>, <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestError</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ProtocolError</name></expr></argument>,
                    <argument><expr><literal type="string">"HTTP request failed with 404 (Not Found):\n"</literal>
                    <literal type="string">"*** Path/Query ***:\n"</literal>
                    <literal type="string">"GET /"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"error with content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET /?a=b HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"hdr1:1\r\nhdr2:2\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 403 \r\nconnection:close\r\ncontent-type:application/json\r\n\r\nCONTENT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>headerRedact</name> <init>= <expr><call><name>strLstNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name>strLstAddZ</name><argument_list>(<argument><expr><name>headerRedact</name></expr></argument>, <argument><expr><literal type="string">"hdr2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>headerRequest</name> <operator>=</operator> <call><name>httpHeaderNew</name><argument_list>(<argument><expr><name>headerRedact</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>httpHeaderAdd</name><argument_list>(<argument><expr><name>headerRequest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"hdr1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>httpHeaderAdd</name><argument_list>(<argument><expr><name>headerRequest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"hdr2"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
                    <argument><expr><name>request</name></expr></argument>,
                    <argument><expr><call><name>httpRequestNewP</name><argument_list>(
                        <argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>query</name> <operator>=</operator> <call><name>httpQueryAdd</name><argument_list>(<argument><expr><call><name>httpQueryNewP</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"a"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"b"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><operator>.</operator><name>header</name> <operator>=</operator> <name>headerRequest</name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseCode</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">403</literal></expr></argument>, <argument><expr><literal type="string">"check response code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>httpResponseReason</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">"check empty response message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{connection: 'close', content-type: 'application/json'}"</literal></expr></argument>,
                    <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><call><name>httpResponseContent</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"CONTENT"</literal></expr></argument>, <argument><expr><literal type="string">"check response content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
                    <argument><expr><call><name>httpRequestError</name><argument_list>(<argument><expr><name>request</name></expr></argument>, <argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ProtocolError</name></expr></argument>,
                    <argument><expr><literal type="string">"HTTP request failed with 403:\n"</literal>
                    <literal type="string">"*** Path/Query ***:\n"</literal>
                    <literal type="string">"GET /?a=b\n"</literal>
                    <literal type="string">"*** Request Headers ***:\n"</literal>
                    <literal type="string">"hdr1: 1\n"</literal>
                    <literal type="string">"hdr2: &lt;redacted&gt;\n"</literal>
                    <literal type="string">"*** Response Headers ***:\n"</literal>
                    <literal type="string">"connection: close\n"</literal>
                    <literal type="string">"content-type: application/json\n"</literal>
                    <literal type="string">"*** Response Content ***:\n"</literal>
                    <literal type="string">"CONTENT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"end server process"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptEnd</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block>
            <expr_stmt><expr><call><name>HRN_FORK_PARENT_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <expr_stmt><expr><call><name>HRN_FORK_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_FORK_BEGIN</name><argument_list>()</argument_list></macro>
        <block>{<block_content>
            <comment type="line">// Start HTTPS test server</comment>
            <macro><name>HRN_FORK_CHILD_BEGIN</name><argument_list>(<argument>.prefix = <literal type="string">"test server"</literal></argument>, <argument>.timeout = <literal type="number">5000</literal></argument>)</argument_list></macro>
            <block>{<block_content>
                <comment type="line">// Set buffer size large enough for server to read expect messages</comment>
                <expr_stmt><expr><call><name>ioBufferSizeSet</name><argument_list>(<argument><expr><literal type="number">65536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>hrnServerRunP</name><argument_list>(<argument><expr><call><name>HRN_FORK_CHILD_READ</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>hrnServerProtocolTls</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"http server run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block>
            <expr_stmt><expr><call><name>HRN_FORK_CHILD_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

            <macro><name>HRN_FORK_PARENT_BEGIN</name><argument_list>()</argument_list></macro>
            <block>{<block_content>
                <decl_stmt><decl><type><name>IoWrite</name> <modifier>*</modifier></type><name>http</name> <init>= <expr><call><name>hrnServerScriptBegin</name><argument_list>(<argument><expr><call><name>HRN_FORK_PARENT_WRITE</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"create client"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>ioBufferSizeSet</name><argument_list>(<argument><expr><literal type="number">35</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
                    <argument><expr><name>client</name></expr></argument>,
                    <argument><expr><call><name>httpClientNew</name><argument_list>(
                        <argument><expr><call><name>tlsClientNewP</name><argument_list>(
                            <argument><expr><call><name>sckClientNew</name><argument_list>(<argument><expr><call><name>hrnServerHost</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>hrnServerPort</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">5000</literal></expr></argument>, <argument><expr><literal type="number">5000</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>hrnServerHost</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>TEST_IN_CONTAINER</name></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><literal type="number">5000</literal></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><literal type="string">"new client"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"request with content using content-length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(
                    <argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET /path/file%201.txt HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"content-length:30\r\n\r\n"</literal>
                        <literal type="string">"012345678901234567890123456789"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(
                    <argument><expr><name>http</name></expr></argument>,
                    <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\nConnection:ClosE\r\ncontent-type:application/xml\r\n\r\n01234567890123456789012345678901"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// Abort connect without proper TLS shutdown to show that all bytes are read correctly for content type xml</comment>
                <expr_stmt><expr><call><name>hrnServerScriptAbort</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>ioBufferSizeSet</name><argument_list>(<argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name>HttpResponse</name> <modifier>*</modifier></type><name>response</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
                    <argument><expr><name>response</name></expr></argument>,
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(
                        <argument><expr><call><name>httpRequestNewP</name><argument_list>(
                            <argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>httpUriEncode</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/path/file 1.txt"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>,
                            <argument><expr><operator>.</operator><name>header</name> <operator>=</operator> <call><name>httpHeaderAdd</name><argument_list>(<argument><expr><call><name>httpHeaderNew</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"content-length"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"30"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                            <argument><expr><operator>.</operator><name>content</name> <operator>=</operator> <call><name>BUFSTRDEF</name><argument_list>(<argument><expr><literal type="string">"012345678901234567890123456789"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>httpResponseReadIgnoreUnexpectedEof</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"check unexpected eof allowed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{connection: 'close', content-type: 'application/xml'}"</literal></expr></argument>,
                    <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><call><name>httpResponseContent</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"01234567890123456789012345678901"</literal></expr></argument>, <argument><expr><literal type="string">"check response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseRead</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"call internal read to check eof"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"request with eof before content complete with retry"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET /path/file%201.txt HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\ncontent-length:32\r\n\r\n0123456789012345678901234567890"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET /path/file%201.txt HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\ncontent-length:32\r\n\r\n01234567890123456789012345678901"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
                    <argument><expr><name>response</name></expr></argument>,
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(
                        <argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>httpUriEncode</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/path/file 1.txt"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><call><name>httpResponseContent</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"01234567890123456789012345678901"</literal></expr></argument>, <argument><expr><literal type="string">"check response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>httpResponseRead</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"call internal read to check eof"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"request with eof before content complete"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET /path/file%201.txt HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\ncontent-length:32\r\n\r\n0123456789012345678901234567890"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
                    <argument><expr><name>response</name></expr></argument>,
                    <argument><expr><call><name>httpRequestResponse</name><argument_list>(
                        <argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>httpUriEncode</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/path/file 1.txt"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_PTR_NE</name><argument_list>(<argument><expr><name><name>response</name><operator>-&gt;</operator><name>session</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"session is busy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>ioRead</name><argument_list>(<argument><expr><call><name>httpResponseIoRead</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FileReadError</name></expr></argument>, <argument><expr><literal type="string">"unexpected EOF reading HTTP content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_PTR_NE</name><argument_list>(<argument><expr><name><name>response</name><operator>-&gt;</operator><name>session</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"session is still busy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"request with chunked content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptAccept</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(
                    <argument><expr><name>http</name></expr></argument>,
                    <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\nTransfer-Encoding:chunked\r\n\r\n"</literal>
                    <literal type="string">"20\r\n01234567890123456789012345678901\r\n"</literal>
                    <literal type="string">"10\r\n0123456789012345\r\n"</literal>
                    <literal type="string">"0\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{transfer-encoding: 'chunked'}"</literal></expr></argument>, <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name>Buffer</name> <modifier>*</modifier></type><name>buffer</name> <init>= <expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">35</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>ioRead</name><argument_list>(<argument><expr><call><name>httpResponseIoRead</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"read response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"01234567890123456789012345678901012"</literal></expr></argument>, <argument><expr><literal type="string">"check response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"request with zero-length chunked content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptExpectZ</name><argument_list>(<argument><expr><name>http</name></expr></argument>, <argument><expr><literal type="string">"GET / HTTP/1.1\r\n"</literal> <name>TEST_USER_AGENT</name> <literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptReplyZ</name><argument_list>(
                    <argument><expr><name>http</name></expr></argument>,
                    <argument><expr><literal type="string">"HTTP/1.1 200 OK\r\nTransfer-Encoding:chunked\r\n\r\n"</literal>
                    <literal type="string">"0\r\n\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><call><name>httpRequestResponse</name><argument_list>(<argument><expr><call><name>httpRequestNewP</name><argument_list>(<argument><expr><name>client</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"GET"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"request"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
                    <argument><expr><call><name>httpHeaderToLog</name><argument_list>(<argument><expr><call><name>httpResponseHeader</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{transfer-encoding: 'chunked'}"</literal></expr></argument>, <argument><expr><literal type="string">"check response headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name>buffer</name> <operator>=</operator> <call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>ioRead</name><argument_list>(<argument><expr><call><name>httpResponseIoRead</name><argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"read response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">"check response"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line">// -----------------------------------------------------------------------------------------------------------------</comment>
                <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"close connection and end server process"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name>hrnServerScriptClose</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>hrnServerScriptEnd</name><argument_list>(<argument><expr><name>http</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block>
            <expr_stmt><expr><call><name>HRN_FORK_PARENT_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <expr_stmt><expr><call><name>HRN_FORK_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"statistics exist"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_PTR_NE</name><argument_list>(<argument><expr><call><name>statToJson</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"check"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name>FUNCTION_HARNESS_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
