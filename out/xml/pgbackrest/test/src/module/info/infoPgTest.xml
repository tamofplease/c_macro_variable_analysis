<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/pgbackrest/test/src/module/info/infoPgTest.c"><comment type="block" format="doxygen">/***********************************************************************************************************************************
Test PostgreSQL Info Handler
***********************************************************************************************************************************/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/bufferRead.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/bufferWrite.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessInfo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessPostgres.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test save callback
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testInfoBackupSaveCallback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>String</name> <modifier>*</modifier></type><name>sectionNext</name></decl></parameter>, <parameter><decl><type><name>InfoSave</name> <modifier>*</modifier></type><name>infoSaveData</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>data</name></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><call><name>infoSaveSection</name><argument_list>(<argument><expr><name>infoSaveData</name></expr></argument>, <argument><expr><literal type="string">"backup:current"</literal></expr></argument>, <argument><expr><name>sectionNext</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>infoSaveValue</name><argument_list>(<argument><expr><name>infoSaveData</name></expr></argument>, <argument><expr><literal type="string">"backup:current"</literal></expr></argument>, <argument><expr><literal type="string">"20161219-212741F"</literal></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"{}"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name>infoSaveSection</name><argument_list>(<argument><expr><name>infoSaveData</name></expr></argument>, <argument><expr><literal type="string">"db:backup"</literal></expr></argument>, <argument><expr><name>sectionNext</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>infoSaveValue</name><argument_list>(<argument><expr><name>infoSaveData</name></expr></argument>, <argument><expr><literal type="string">"db:backup"</literal></expr></argument>, <argument><expr><literal type="string">"key"</literal></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"\"value\""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><call><name>infoSaveSection</name><argument_list>(<argument><expr><name>infoSaveData</name></expr></argument>, <argument><expr><literal type="string">"later"</literal></expr></argument>, <argument><expr><name>sectionNext</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>infoSaveValue</name><argument_list>(<argument><expr><name>infoSaveData</name></expr></argument>, <argument><expr><literal type="string">"later"</literal></expr></argument>, <argument><expr><literal type="string">"key"</literal></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"\"value\""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Run
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testRun</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"infoPgNew(), infoPgNewInternal(), infoPgSet()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>InfoPg</name> <modifier>*</modifier></type><name>infoPg</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>infoPgNew</name><argument_list>(<argument><expr><name>infoPgBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoPgNew(cipherTypeNone, NULL)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  0 history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>infoCipherPass</name><argument_list>(<argument><expr><call><name>infoPgInfo</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"  cipherPass NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrentId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  0 historyCurrent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>infoPgNew</name><argument_list>(<argument><expr><name>infoPgArchive</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"123xyz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoPgNew(cipherTypeAes256Cbc, 123xyz)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  0 history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>infoCipherPass</name><argument_list>(<argument><expr><call><name>infoPgInfo</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"123xyz"</literal></expr></argument>, <argument><expr><literal type="string">"  cipherPass set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrentId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  0 historyCurrent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoPg</name></expr></argument>,
            <argument><expr><call><name>infoPgSet</name><argument_list>(
                <argument><expr><call><name>infoPgNew</name><argument_list>(<argument><expr><name>infoPgArchive</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>infoPgArchive</name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>,
                <argument><expr><call><name>hrnPgCatalogVersion</name><argument_list>(<argument><expr><name>PG_VERSION_94</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"infoPgSet - infoPgArchive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"  1 history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrentId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  0 historyCurrent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>InfoPgData</name></type> <name>pgData</name> <init>= <expr><call><name>infoPgData</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>infoPgDataCurrentId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"  id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><literal type="string">"  system-id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="string">"  version set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>catalogVersion</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  catalog version not set for archive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>infoPgSet</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><name>infoPgArchive</name></expr></argument>, <argument><expr><name>PG_VERSION_95</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><call><name>hrnPgCatalogVersion</name><argument_list>(<argument><expr><name>PG_VERSION_95</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"infoPgSet - infoPgArchive second db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"  2 history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrentId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  0 historyCurrent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>pgData</name> <operator>=</operator> <call><name>infoPgData</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>infoPgDataCurrentId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"  current id updated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><literal type="string">"  system-id updated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_95</name></expr></argument>, <argument><expr><literal type="string">"  version updated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>catalogVersion</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  catalog version not set for archive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>infoCipherPass</name><argument_list>(<argument><expr><call><name>infoPgInfo</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"  cipherPass not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoPg</name></expr></argument>,
            <argument><expr><call><name>infoPgSet</name><argument_list>(
                <argument><expr><call><name>infoPgNew</name><argument_list>(<argument><expr><name>infoPgBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"123xyz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>infoPgBackup</name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>,
                <argument><expr><call><name>hrnPgCatalogVersion</name><argument_list>(<argument><expr><name>PG_VERSION_94</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"infoPgSet - infoPgBackup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"  1 history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrentId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"  0 historyCurrent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>pgData</name> <operator>=</operator> <call><name>infoPgData</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>infoPgDataCurrentId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"  id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><literal type="string">"  system-id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="string">"  version set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>catalogVersion</name></name></expr></argument>, <argument><expr><literal type="number">201409291</literal></expr></argument>, <argument><expr><literal type="string">"  catalog version updated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>infoCipherPass</name><argument_list>(<argument><expr><call><name>infoPgInfo</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"123xyz"</literal></expr></argument>, <argument><expr><literal type="string">"  cipherPass set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"infoPgNewLoad(), infoPgFree(), infoPgDataCurrent(), infoPgDataToLog(), infoPgAdd(), infoPgSave()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Archive info</comment>
        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>contentLoad</name> <init>= <expr><call><name>harnessInfoChecksumZ</name><argument_list>(
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20161219-212741F={}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6569239123849665679\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:backup]\n"</literal>
            <literal type="string">"key=\"value\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6569239123849665679,\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[later]\n"</literal>
            <literal type="string">"key=\"value\"\n"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>String</name> <modifier>*</modifier></type><name>callbackContent</name> <init>= <expr><call><name>strNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>InfoPg</name> <modifier>*</modifier></type><name>infoPg</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>infoPgNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>infoPgArchive</name></expr></argument>, <argument><expr><name>harnessInfoLoadNewCallback</name></expr></argument>, <argument><expr><name>callbackContent</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"load file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><name>callbackContent</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current] 20161219-212741F={}\n"</literal>
                <literal type="string">"[db:backup] key=\"value\"\n"</literal>
                <literal type="string">"[later] key=\"value\"\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"    check callback content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>lstSize</name><argument_list>(<argument><expr><name><name>infoPg</name><operator>-&gt;</operator><name>pub</name><operator>.</operator><name>history</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"    history record added"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoPgData</name></type> <name>pgData</name> <init>= <expr><call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"    id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="string">"    version set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><literal type="string">"    system-id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"    check pg data total"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>infoPgArchiveId</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"    check pg archive id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>infoPgCipherPass</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"    no cipher passphrase"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Buffer</name> <modifier>*</modifier></type><name>contentSave</name> <init>= <expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoPgSave</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>testInfoBackupSaveCallback</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"info save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"   check save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Backup info</comment>
        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONTENT_DB</name></cpp:macro>                                                                                                         \
            <cpp:value>"[db]\n"                                                                                                               \
            "db-catalog-version=201510051\n"                                                                                       \
            "db-control-version=942\n"                                                                                             \
            "db-id=2\n"                                                                                                            \
            "db-system-id=6365925855999999999\n"                                                                                   \
            "db-version=\"9.5\"\n"</cpp:value></cpp:define>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONTENT_DB_HISTORY</name></cpp:macro>                                                                                                 \
            <cpp:value>"\n"                                                                                                                   \
            "[db:history]\n"                                                                                                       \
            "1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6569239123849665679,"                 \
                "\"db-version\":\"9.4\"}\n"                                                                                        \
            "2={\"db-catalog-version\":201510051,\"db-control-version\":942,\"db-system-id\":6365925855999999999,"                 \
                "\"db-version\":\"9.5\"}\n"</cpp:value></cpp:define>

        <expr_stmt><expr><name>contentLoad</name> <operator>=</operator> <call><name>harnessInfoChecksumZ</name><argument_list>(
            <argument><expr><name>CONTENT_DB</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20161219-212741F={}\n"</literal>
            <name>CONTENT_DB_HISTORY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>callbackContent</name> <operator>=</operator> <call><name>strNew</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>infoPgNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>infoPgBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name>callbackContent</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">"    check callback content"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"    check pg data total"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>pgData</name> <operator>=</operator> <call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"    id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_95</name></expr></argument>, <argument><expr><literal type="string">"    version set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><literal type="number">6365925855999999999</literal></expr></argument>, <argument><expr><literal type="string">"    system-id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>pgData</name> <operator>=</operator> <call><name>infoPgData</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"    id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="string">"    version set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgData</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><literal type="string">"    system-id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>contentSave</name> <operator>=</operator> <call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoPgSave</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"info save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><macro><name>harnessInfoChecksumZ</name><argument_list>(<argument>CONTENT_DB CONTENT_DB_HISTORY</argument>)</argument_list></macro></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"   check save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// infoPgAdd</comment>
        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><name><name>pgData</name><operator>.</operator><name>id</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>pgData</name><operator>.</operator><name>version</name></name> <operator>=</operator> <name>PG_VERSION_96</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>pgData</name><operator>.</operator><name>systemId</name></name> <operator>=</operator> <name>HRN_PG_SYSTEMID_96</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoPgAdd</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pgData</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoPgAdd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoPgData</name></type> <name>pgDataTest</name> <init>= <expr><call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><name>infoPg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgDataTest</name><operator>.</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="string">"    id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>pgDataTest</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_96</name></expr></argument>, <argument><expr><literal type="string">"    version set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>pgDataTest</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><name>HRN_PG_SYSTEMID_96</name></expr></argument>, <argument><expr><literal type="string">"    system-id set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// infoPgDataToLog</comment>
        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <comment type="line">// test max values</comment>
        <expr_stmt><expr><name><name>pgDataTest</name><operator>.</operator><name>id</name></name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator><literal type="number">4294967295</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>pgDataTest</name><operator>.</operator><name>version</name></name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator><literal type="number">4294967295</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>pgDataTest</name><operator>.</operator><name>systemId</name></name> <operator>=</operator> <literal type="number">18446744073709551615U</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>pgDataTest</name><operator>.</operator><name>catalogVersion</name></name> <operator>=</operator> <literal type="number">200101011</literal></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>infoPgDataToLog</name><argument_list>(<argument><expr><operator>&amp;</operator><name>pgDataTest</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"{id: 4294967295, version: 4294967295, systemId: 18446744073709551615, catalogVersion: 200101011}"</literal></expr></argument>,
            <argument><expr><literal type="string">"    check max format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
