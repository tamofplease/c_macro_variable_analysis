<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/pgbackrest/test/src/module/info/infoArchiveTest.c"><comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Archive Info Handler
***********************************************************************************************************************************/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/bufferRead.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/bufferWrite.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/posix/storage.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessInfo.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Run
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testRun</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="line">// Create default storage object for testing</comment>
    <decl_stmt><decl><type><name>Storage</name> <modifier>*</modifier></type><name>storageTest</name> <init>= <expr><call><name>storagePosixNewP</name><argument_list>(<argument><expr><name>TEST_PATH_STR</name></expr></argument>, <argument><expr><operator>.</operator><name>write</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"InfoArchive"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"move infoArchive to new memory context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>contentLoad</name> <init>= <expr><call><name>harnessInfoChecksumZ</name>
        <argument_list>(
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6569239123849665679\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6569239123849665679,\"db-version\":\"9.4\"}\n"</literal></expr></argument>
        )</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>InfoArchive</name> <modifier>*</modifier></type><name>info</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <comment type="line">// Load and test move function</comment>
        <macro><name>MEM_CONTEXT_TEMP_BEGIN</name><argument_list>()</argument_list></macro>
        <block>{<block_content>
            <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><call><name>infoArchiveNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load new archive info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoArchiveMove</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><call><name>memContextPrior</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"move info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <expr_stmt><expr><call><name>MEM_CONTEXT_TEMP_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>infoArchiveId</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"archiveId set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>pub</name><operator>.</operator><name>infoPg</name></name></expr></argument>, <argument><expr><literal type="string">"infoPg set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>infoArchiveCipherPass</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"no cipher sub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoArchive save (in memory)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Save info and verify</comment>
        <decl_stmt><decl><type><name>Buffer</name> <modifier>*</modifier></type><name>contentSave</name> <init>= <expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoArchiveSave</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"info archive save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"check save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"create content via new object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create the same content by creating a new object</comment>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>info</name></expr></argument>, <argument><expr><call><name>infoArchiveNew</name><argument_list>(<argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoArchiveNew() - no sub cipher"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>infoArchiveId</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"archiveId set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>pub</name><operator>.</operator><name>infoPg</name></name></expr></argument>, <argument><expr><literal type="string">"infoPg set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>infoArchiveCipherPass</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"no cipher sub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"history set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Buffer</name> <modifier>*</modifier></type><name>contentCompare</name> <init>= <expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoArchiveSave</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentCompare</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"info archive save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentCompare</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"check save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"create with cipher"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Recreate from scratch with cipher</comment>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>info</name></expr></argument>,
            <argument><expr><call><name>infoArchiveNew</name><argument_list>(
                <argument><expr><name>PG_VERSION_10</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"zWa/6Xtp-IVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"infoArchiveNew() - cipher sub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>contentSave</name> <operator>=</operator> <call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoArchiveSave</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"save new with cipher"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><call><name>infoArchiveNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load encrypted archive info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>infoArchiveId</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"10-1"</literal></expr></argument>, <argument><expr><literal type="string">"archiveId set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoPg set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>infoArchiveCipherPass</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"zWa/6Xtp-IVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO"</literal></expr></argument>, <argument><expr><literal type="string">"cipher sub set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"history set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"increment history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoPgData</name></type> <name>infoPgData</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoArchivePgSet</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"add another infoPg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"history incremented"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoPgData</name></expr></argument>, <argument><expr><call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get current infoPgData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>infoPgData</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="string">"version set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>infoPgData</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><literal type="string">"systemId set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"object free"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoArchiveFree</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoArchiveFree() - free archive info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoArchiveIdHistoryMatch()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>contentLoad</name> <operator>=</operator> <call><name>harnessInfoChecksumZ</name>
        <argument_list>(
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"9.5\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6625592122879095702,\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-id\":6626363367545678089,\"db-version\":\"9.5\"}\n"</literal></expr></argument>
        )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><call><name>infoArchiveNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new archive info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>infoArchiveIdHistoryMatch</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">90500</literal></expr></argument>, <argument><expr><literal type="number">6626363367545678089</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"9.5-2"</literal></expr></argument>, <argument><expr><literal type="string">"full match found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><call><name>infoArchiveIdHistoryMatch</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">90400</literal></expr></argument>, <argument><expr><literal type="number">6625592122879095702</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"partial match found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>infoArchiveIdHistoryMatch</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">90400</literal></expr></argument>, <argument><expr><literal type="number">6625592122879095799</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ArchiveMismatchError</name></expr></argument>,
            <argument><expr><literal type="string">"unable to retrieve the archive id for database version '9.4' and system-id '6625592122879095799'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>infoArchiveIdHistoryMatch</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">90400</literal></expr></argument>, <argument><expr><literal type="number">6626363367545678089</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ArchiveMismatchError</name></expr></argument>,
            <argument><expr><literal type="string">"unable to retrieve the archive id for database version '9.4' and system-id '6626363367545678089'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"infoArchiveLoadFile() and infoArchiveSaveFile()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"load archive info file - error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>infoArchiveLoadFile</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>INFO_ARCHIVE_FILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FileMissingError</name></expr></argument>,
            <argument><expr><literal type="string">"unable to load info file '"</literal> <name>TEST_PATH</name> <literal type="string">"/archive.info' or '"</literal> <name>TEST_PATH</name> <literal type="string">"/archive.info.copy':\n"</literal>
            <literal type="string">"FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/archive.info' for read\n"</literal>
            <literal type="string">"FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/archive.info.copy' for read\n"</literal>
            <literal type="string">"HINT: archive.info cannot be opened but is required to push/get WAL segments.\n"</literal>
            <literal type="string">"HINT: is archive_command configured correctly in postgresql.conf?\n"</literal>
            <literal type="string">"HINT: has a stanza-create been performed?\n"</literal>
            <literal type="string">"HINT: use --no-archive-check to disable archive checks during backup if you have an alternate archiving scheme."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"save and load archive info file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoArchive</name> <modifier>*</modifier></type><name>infoArchive</name> <init>= <expr><call><name>infoArchiveNew</name><argument_list>(<argument><expr><name>PG_VERSION_10</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoArchiveSaveFile</name><argument_list>(<argument><expr><name>infoArchive</name></expr></argument>, <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>INFO_ARCHIVE_FILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"save archive info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoArchive</name></expr></argument>, <argument><expr><call><name>infoArchiveLoadFile</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>INFO_ARCHIVE_FILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load main"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>infoArchive</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><name>systemId</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><literal type="string">"check file loaded"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_REMOVE</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>INFO_ARCHIVE_FILE</name></expr></argument>, <argument><expr><operator>.</operator><name>errorOnMissing</name> <operator>=</operator> <name>true</name></expr></argument>, <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"remove main so only copy exists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoArchive</name></expr></argument>, <argument><expr><call><name>infoArchiveLoadFile</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>INFO_ARCHIVE_FILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><call><name>infoArchivePg</name><argument_list>(<argument><expr><name>infoArchive</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><name>systemId</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><literal type="string">"check file loaded"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
