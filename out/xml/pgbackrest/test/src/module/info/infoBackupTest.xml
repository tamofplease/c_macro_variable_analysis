<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/pgbackrest/test/src/module/info/infoBackupTest.c"><comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Backup Info Handler
***********************************************************************************************************************************/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"command/backup/common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/bufferRead.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/bufferWrite.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/posix/storage.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessConfig.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessInfo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessPostgres.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Run
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testRun</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="line">// Create default storage object for testing</comment>
    <decl_stmt><decl><type><name>Storage</name> <modifier>*</modifier></type><name>storageTest</name> <init>= <expr><call><name>storagePosixNewP</name><argument_list>(<argument><expr><name>TEST_PATH_STR</name></expr></argument>, <argument><expr><operator>.</operator><name>write</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"InfoBackup"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"Load and test move function and make sure ignore-section is ignored"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// File with section to ignore</comment>
        <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>contentLoad</name> <init>= <expr><call><name>harnessInfoChecksumZ</name>
        <argument_list>(
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201409291\n"</literal>
            <literal type="string">"db-control-version=942\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6569239123849665679\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[ignore-section]\n"</literal>
            <literal type="string">"key1=\"value1\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6569239123849665679,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}\n"</literal></expr></argument>
        )</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <comment type="line">// Load and test move function then make sure ignore-section is ignored</comment>
        <macro><name>MEM_CONTEXT_TEMP_BEGIN</name><argument_list>()</argument_list></macro>
        <block>{<block_content>
            <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupMove</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>memContextPrior</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"move info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block>
        <expr_stmt><expr><call><name>MEM_CONTEXT_TEMP_END</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackup save (in memory)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Save to verify with newly created info backup</comment>
        <decl_stmt><decl><type><name>Buffer</name> <modifier>*</modifier></type><name>contentSave</name> <init>= <expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupSave</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"info backup save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create new info backup</comment>
        <decl_stmt><decl><type><name>Buffer</name> <modifier>*</modifier></type><name>contentCompare</name> <init>= <expr><call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNew</name><argument_list>(<argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><call><name>hrnPgCatalogVersion</name><argument_list>(<argument><expr><name>PG_VERSION_94</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"infoBackupNew() - no cipher sub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupSave</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentCompare</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"save backup info from new"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentCompare</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"check save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentCompare</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>infoBackup</name><operator>-&gt;</operator><name>pub</name><operator>.</operator><name>infoPg</name></name></expr></argument>, <argument><expr><literal type="string">"infoPg set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>infoBackupCipherPass</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"cipher sub not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"infoBackupDataTotal returns 0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"check cipher pass"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>,
            <argument><expr><call><name>infoBackupNew</name><argument_list>(
                <argument><expr><name>PG_VERSION_10</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><call><name>hrnPgCatalogVersion</name><argument_list>(<argument><expr><name>PG_VERSION_10</name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"zWa/6Xtp-IVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"infoBackupNew() - cipher sub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>contentSave</name> <operator>=</operator> <call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupSave</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"save new with cipher sub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>infoBackup</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load backup info with cipher sub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoPg set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupCipherPass</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"zWa/6Xtp-IVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO"</literal></expr></argument>, <argument><expr><literal type="string">"cipher sub set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"history set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"add pg info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoPgData</name></type> <name>infoPgData</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoBackupPgSet</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><call><name>hrnPgCatalogVersion</name><argument_list>(<argument><expr><name>PG_VERSION_94</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"add another infoPg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"history incremented"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoPgData</name></expr></argument>, <argument><expr><call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get current infoPgData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>infoPgData</name><operator>.</operator><name>version</name></name></expr></argument>, <argument><expr><name>PG_VERSION_94</name></expr></argument>, <argument><expr><literal type="string">"version set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>infoPgData</name><operator>.</operator><name>systemId</name></name></expr></argument>, <argument><expr><literal type="number">6569239123849665679</literal></expr></argument>, <argument><expr><literal type="string">"systemId set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>infoPgData</name><operator>.</operator><name>catalogVersion</name></name></expr></argument>, <argument><expr><literal type="number">201409291</literal></expr></argument>, <argument><expr><literal type="string">"catalogVersion set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"object free"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupFree</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"infoBackupFree() - free backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"backup:current section exists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>contentLoad</name> <operator>=</operator> <call><name>harnessInfoChecksumZ</name><argument_list>(
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20161219-212741F={\"backrest-format\":5,\"backrest-version\":\"2.04\","</literal>
            <literal type="string">"\"backup-archive-start\":\"00000007000000000000001C\",\"backup-archive-stop\":\"00000007000000000000001C\","</literal>
            <literal type="string">"\"backup-error\":false,"</literal>
            <literal type="string">"\"backup-info-repo-size\":3159776,\"backup-info-repo-size-delta\":3159776,\"backup-info-size\":26897030,"</literal>
            <literal type="string">"\"backup-info-size-delta\":26897030,\"backup-timestamp-start\":1482182846,\"backup-timestamp-stop\":1482182861,"</literal>
            <literal type="string">"\"backup-type\":\"full\",\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,"</literal>
            <literal type="string">"\"option-backup-standby\":false,\"option-checksum-page\":false,\"option-compress\":true,\"option-hardlink\":false,"</literal>
            <literal type="string">"\"option-online\":true}\n"</literal>
            <literal type="string">"20161219-212741F_20161219-212803D={\"backrest-format\":5,\"backrest-version\":\"2.04\","</literal>
            <literal type="string">"\"backup-archive-start\":\"00000008000000000000001E\",\"backup-archive-stop\":\"00000008000000000000001E\","</literal>
            <literal type="string">"\"backup-error\":true,"</literal>
            <literal type="string">"\"backup-info-repo-size\":3159811,\"backup-info-repo-size-delta\":15765,\"backup-info-size\":26897030,"</literal>
            <literal type="string">"\"backup-info-size-delta\":163866,\"backup-prior\":\"20161219-212741F\",\"backup-reference\":[\"20161219-212741F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1482182877,\"backup-timestamp-stop\":1482182883,\"backup-type\":\"diff\",\"db-id\":1,"</literal>
            <literal type="string">"\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":false,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20161219-212741F_20161219-212918I={\"backrest-format\":5,\"backrest-version\":\"2.04\","</literal>
            <literal type="string">"\"backup-archive-start\":null,\"backup-archive-stop\":null,"</literal>
            <literal type="string">"\"backup-info-repo-size\":3159811,\"backup-info-repo-size-delta\":15765,\"backup-info-size\":26897030,"</literal>
            <literal type="string">"\"backup-info-size-delta\":163866,\"backup-prior\":\"20161219-212741F\",\"backup-reference\":[\"20161219-212741F\","</literal>
            <literal type="string">"\"20161219-212741F_20161219-212803D\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1482182877,\"backup-timestamp-stop\":1482182883,\"backup-type\":\"incr\",\"db-id\":1,"</literal>
            <literal type="string">"\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":false,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201409291\n"</literal>
            <literal type="string">"db-control-version=942\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6569239123849665679\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6569239123849665679,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="string">"backup list contains backups"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoBackupData</name></type> <name>backupData</name> <init>= <expr><call><name>infoBackupData</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupLabel</name></name></expr></argument>, <argument><expr><literal type="string">"20161219-212741F"</literal></expr></argument>, <argument><expr><literal type="string">"full backup label"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupType</name></name></expr></argument>, <argument><expr><name>backupTypeFull</name></expr></argument>, <argument><expr><literal type="string">"backup type full"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backrestFormat</name></name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"backrest format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backrestVersion</name></name></expr></argument>, <argument><expr><literal type="string">"2.04"</literal></expr></argument>, <argument><expr><literal type="string">"backrest version"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupArchiveStart</name></name></expr></argument>, <argument><expr><literal type="string">"00000007000000000000001C"</literal></expr></argument>, <argument><expr><literal type="string">"archive start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupArchiveStop</name></name></expr></argument>, <argument><expr><literal type="string">"00000007000000000000001C"</literal></expr></argument>, <argument><expr><literal type="string">"archive stop"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoRepoSize</name></name></expr></argument>, <argument><expr><literal type="number">3159776</literal></expr></argument>, <argument><expr><literal type="string">"repo size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoRepoSizeDelta</name></name></expr></argument>, <argument><expr><literal type="number">3159776</literal></expr></argument>, <argument><expr><literal type="string">"repo delta"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoSize</name></name></expr></argument>, <argument><expr><literal type="number">26897030</literal></expr></argument>, <argument><expr><literal type="string">"backup size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoSizeDelta</name></name></expr></argument>, <argument><expr><literal type="number">26897030</literal></expr></argument>, <argument><expr><literal type="string">"backup delta"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupPgId</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"pg id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupPrior</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"backup prior NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupReference</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"backup reference NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupTimestampStart</name></name></expr></argument>, <argument><expr><literal type="number">1482182846</literal></expr></argument>, <argument><expr><literal type="string">"timestamp start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupTimestampStop</name></name></expr></argument>, <argument><expr><literal type="number">1482182861</literal></expr></argument>, <argument><expr><literal type="string">"timestamp stop"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>varBool</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupError</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"no backup error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoBackupData</name> <modifier>*</modifier></type><name>backupDataPtr</name> <init>= <expr><call><name>infoBackupDataByLabel</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20161219-212741F_20161219-212803D"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupLabel</name></name></expr></argument>, <argument><expr><literal type="string">"20161219-212741F_20161219-212803D"</literal></expr></argument>, <argument><expr><literal type="string">"diff backup label"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupType</name></name></expr></argument>, <argument><expr><name>backupTypeDiff</name></expr></argument>, <argument><expr><literal type="string">"backup type diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupInfoRepoSize</name></name></expr></argument>, <argument><expr><literal type="number">3159811</literal></expr></argument>, <argument><expr><literal type="string">"repo size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupInfoRepoSizeDelta</name></name></expr></argument>, <argument><expr><literal type="number">15765</literal></expr></argument>, <argument><expr><literal type="string">"repo delta"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupInfoSize</name></name></expr></argument>, <argument><expr><literal type="number">26897030</literal></expr></argument>, <argument><expr><literal type="string">"backup size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupInfoSizeDelta</name></name></expr></argument>, <argument><expr><literal type="number">163866</literal></expr></argument>, <argument><expr><literal type="string">"backup delta"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupPrior</name></name></expr></argument>, <argument><expr><literal type="string">"20161219-212741F"</literal></expr></argument>, <argument><expr><literal type="string">"backup prior exists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><operator>(</operator><call><name>strLstSize</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupReference</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator>
                <call><name>strLstExists</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupReference</name></name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20161219-212741F"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>,
            <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"backup reference exists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>infoBackupLabelExists</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20161219-12345"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"backup label does not exist"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><call><name>varBool</name><argument_list>(<argument><expr><name><name>backupDataPtr</name><operator>-&gt;</operator><name>backupError</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"backup error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>backupData</name> <operator>=</operator> <call><name>infoBackupData</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupLabel</name></name></expr></argument>, <argument><expr><literal type="string">"20161219-212741F_20161219-212918I"</literal></expr></argument>, <argument><expr><literal type="string">"incr backup label"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupArchiveStart</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"archive start NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupArchiveStop</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"archive stop NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupType</name></name></expr></argument>, <argument><expr><name>backupTypeIncr</name></expr></argument>, <argument><expr><literal type="string">"backup type incr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupPrior</name></name></expr></argument>, <argument><expr><literal type="string">"20161219-212741F"</literal></expr></argument>, <argument><expr><literal type="string">"backup prior exists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><operator>(</operator><call><name>strLstSize</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupReference</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <call><name>strLstExists</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupReference</name></name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20161219-212741F"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
                <call><name>strLstExists</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupReference</name></name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20161219-212741F_20161219-212803D"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>,
            <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"backup reference exists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupError</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"null backup error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionArchiveCheck</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option archive check"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionArchiveCopy</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"option archive copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionBackupStandby</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"option backup standby"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionChecksumPage</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"option checksum page"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionCompress</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option compress"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionHardlink</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"option hardlink"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionOnline</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option online"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Save info and verify</comment>
        <expr_stmt><expr><name>contentSave</name> <operator>=</operator> <call><name>bufNew</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupSave</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>ioBufferWriteNew</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"info backup save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentSave</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strNewBuf</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"check save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackupDataLabelList(), infoBackupDataDelete()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>strLstSort</name><argument_list>(<argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>sortOrderAsc</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20161219-212741F\n20161219-212741F_20161219-212803D\n20161219-212741F_20161219-212918I\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"infoBackupDataLabelList without expression"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>strLstSort</name><argument_list>(
                <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(
                    <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>backupRegExpP</name><argument_list>(<argument><expr><operator>.</operator><name>full</name> <operator>=</operator> <name>true</name></expr></argument>, <argument><expr><operator>.</operator><name>differential</name> <operator>=</operator> <name>true</name></expr></argument>, <argument><expr><operator>.</operator><name>incremental</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>sortOrderAsc</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20161219-212741F\n20161219-212741F_20161219-212803D\n20161219-212741F_20161219-212918I\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"infoBackupDataLabelList with expression"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>backupRegExpP</name><argument_list>(<argument><expr><operator>.</operator><name>full</name><operator>=</operator><name>true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"20161219-212741F\n"</literal></expr></argument>, <argument><expr><literal type="string">"full=true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>backupRegExpP</name><argument_list>(<argument><expr><operator>.</operator><name>differential</name><operator>=</operator><name>true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"20161219-212741F_20161219-212803D\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"differential=true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>backupRegExpP</name><argument_list>(<argument><expr><operator>.</operator><name>incremental</name><operator>=</operator><name>true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"20161219-212741F_20161219-212918I\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"incremental=true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupDataDelete</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20161219-212741F_20161219-212918I"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"delete a backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>strLstSort</name><argument_list>(<argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>sortOrderAsc</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20161219-212741F\n20161219-212741F_20161219-212803D\n"</literal></expr></argument>, <argument><expr><literal type="string">"backup deleted"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupDataDelete</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20161219-212741F_20161219-212803D"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"delete all backups"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupDataDelete</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20161219-212741F"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"deleted"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>strLstSize</name><argument_list>(<argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"no backups remain"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackupDataToLog()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataToLog</name><argument_list>(<argument><expr><operator>&amp;</operator><name>backupData</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"{label: 20161219-212741F_20161219-212918I, pgId: 1}"</literal></expr></argument>, <argument><expr><literal type="string">"check log format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackupDataAdd - full backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_MANIFEST_BACKUPDB</name></cpp:macro>                                                                                             \
            <cpp:value>"\n"                                                                                                                   \
            "[backup:db]\n"                                                                                                        \
            "db-catalog-version=201409291\n"                                                                                       \
            "db-control-version=942\n"                                                                                             \
            "db-id=1\n"                                                                                                            \
            "db-system-id=6569239123849665679\n"                                                                                   \
            "db-version=\"9.4\"\n"</cpp:value></cpp:define>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_MANIFEST_FILE_DEFAULT</name></cpp:macro>                                                                                         \
            <cpp:value>"\n"                                                                                                                   \
            "[target:file:default]\n"                                                                                              \
            "group=\"group1\"\n"                                                                                                   \
            "mode=\"0600\"\n"                                                                                                      \
            "user=\"user1\"\n"</cpp:value></cpp:define>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_MANIFEST_LINK_DEFAULT</name></cpp:macro>                                                                                         \
            <cpp:value>"\n"                                                                                                                   \
            "[target:link:default]\n"                                                                                              \
            "group=\"group1\"\n"                                                                                                   \
            "user=false\n"</cpp:value></cpp:define>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_MANIFEST_PATH_DEFAULT</name></cpp:macro>                                                                                         \
            <cpp:value>"\n"                                                                                                                   \
            "[target:path:default]\n"                                                                                              \
            "group=false\n"                                                                                                        \
            "mode=\"0700\"\n"                                                                                                      \
            "user=\"user1\"\n"</cpp:value></cpp:define>

        <decl_stmt><decl><type><name>Manifest</name> <modifier>*</modifier></type><name>manifest</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>manifestContent</name> <init>= <expr><call><name>harnessInfoChecksumZ</name>
        <argument_list>(
            <argument><expr><literal type="string">"[backup]\n"</literal>
            <literal type="string">"backup-label=\"20190818-084502F\"\n"</literal>
            <literal type="string">"backup-timestamp-copy-start=1565282141\n"</literal>
            <literal type="string">"backup-timestamp-start=1565282140\n"</literal>
            <literal type="string">"backup-timestamp-stop=1565282142\n"</literal>
            <literal type="string">"backup-type=\"full\"\n"</literal>
            <name>TEST_MANIFEST_BACKUPDB</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:option]\n"</literal>
            <literal type="string">"option-archive-check=true\n"</literal>
            <literal type="string">"option-archive-copy=true\n"</literal>
            <literal type="string">"option-compress=false\n"</literal>
            <literal type="string">"option-hardlink=false\n"</literal>
            <literal type="string">"option-online=false\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:target]\n"</literal>
            <literal type="string">"pg_data={\"path\":\"/pg/base\",\"type\":\"path\"}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[cipher]\n"</literal>
            <literal type="string">"cipher-pass=\"somepass\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file]\n"</literal>
            <literal type="string">"pg_data/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"size\":4,\"timestamp\":1565282114}\n"</literal>
            <literal type="string">"pg_data/postgresql.conf={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"repo-size\":24,\"size\":7,"</literal>
            <literal type="string">"\"timestamp\":1565282214}\n"</literal>
            <name>TEST_MANIFEST_FILE_DEFAULT</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path]\n"</literal>
            <literal type="string">"pg_data={}\n"</literal>
            <name>TEST_MANIFEST_PATH_DEFAULT</name></expr></argument>
        )</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>manifest</name></expr></argument>, <argument><expr><call><name>manifestNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>manifestContent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load manifest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupDataAdd</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>manifest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"add a backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"backup added to current"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>backupData</name></expr></argument>, <argument><expr><call><name>infoBackupData</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get added backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupLabel</name></name></expr></argument>, <argument><expr><literal type="string">"20190818-084502F"</literal></expr></argument>, <argument><expr><literal type="string">"backup label set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backrestFormat</name></name></expr></argument>, <argument><expr><name>REPOSITORY_FORMAT</name></expr></argument>, <argument><expr><literal type="string">"backrest format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backrestVersion</name></name></expr></argument>, <argument><expr><name>PROJECT_VERSION</name></expr></argument>, <argument><expr><literal type="string">"backuprest version"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupPgId</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"pg id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupArchiveStart</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"archive start NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupArchiveStop</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"archive stop NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupType</name></name></expr></argument>, <argument><expr><name>backupTypeFull</name></expr></argument>, <argument><expr><literal type="string">"backup type set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupPrior</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"no backup prior"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_PTR</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupReference</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"no backup reference"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupTimestampStart</name></name></expr></argument>, <argument><expr><literal type="number">1565282140</literal></expr></argument>, <argument><expr><literal type="string">"timestamp start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupTimestampStop</name></name></expr></argument>, <argument><expr><literal type="number">1565282142</literal></expr></argument>, <argument><expr><literal type="string">"timestamp stop"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionArchiveCheck</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option archive check"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionArchiveCopy</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option archive copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionBackupStandby</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"no option backup standby"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionChecksumPage</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"no option checksum page"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionCompress</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"option compress"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionHardlink</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"option hardlink"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionOnline</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"option online"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoSize</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="string">"database size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoSizeDelta</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="string">"backup size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoRepoSize</name></name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>, <argument><expr><literal type="string">"repo size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoRepoSizeDelta</name></name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>, <argument><expr><literal type="string">"repo backup size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackupDataAdd - incr backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_MANIFEST_DB</name></cpp:macro>                                                                                                   \
            <cpp:value>"\n"                                                                                                                   \
            "[db]\n"                                                                                                               \
            "mail={\"db-id\":16456,\"db-last-system-id\":12168}\n"                                                                 \
            "postgres={\"db-id\":12173,\"db-last-system-id\":12168}\n"                                                             \
            "template0={\"db-id\":12168,\"db-last-system-id\":12168}\n"                                                            \
            "template1={\"db-id\":1,\"db-last-system-id\":12168}\n"                                                                \

        #define TEST_MANIFEST_INCR                                                                                                 \
            "[backup]\n"                                                                                                           \
            "backup-archive-start=\"000000030000028500000089\"\n"                                                                  \
            "backup-archive-stop=\"000000030000028500000090\"\n"                                                                   \
            "backup-label=\"20190818-084502F_20190820-084502I\"\n"                                                                 \
            "backup-lsn-start=\"285/89000028\"\n"                                                                                  \
            "backup-lsn-stop=\"285/89001F88\"\n"                                                                                   \
            "backup-prior=\"20190818-084502F\"\n"                                                                                  \
            "backup-timestamp-copy-start=1565282141\n"                                                                             \
            "backup-timestamp-start=1565282140\n"                                                                                  \
            "backup-timestamp-stop=1565282142\n"                                                                                   \
            "backup-type=\"diff\"\n"                                                                                               \
            TEST_MANIFEST_BACKUPDB                                                                                                 \
            "\n"                                                                                                                   \
            "[backup:option]\n"                                                                                                    \
            "option-archive-check=true\n"                                                                                          \
            "option-archive-copy=true\n"                                                                                           \
            "option-backup-standby=true\n"                                                                                         \
            "option-buffer-size=16384\n"                                                                                           \
            "option-checksum-page=true\n"                                                                                          \
            "option-compress=true\n"                                                                                               \
            "option-compress-level=3\n"                                                                                            \
            "option-compress-level-network=3\n"                                                                                    \
            "option-delta=false\n"                                                                                                 \
            "option-hardlink=true\n"                                                                                               \
            "option-online=true\n"                                                                                                 \
            "option-process-max=32\n"                                                                                              \
            "\n"                                                                                                                   \
            "[backup:target]\n"                                                                                                    \
            "pg_data={\"path\":\"/pg/base\",\"type\":\"path\"}\n"                                                                  \
            "pg_data/base/1={\"path\":\"../../base-1\",\"type\":\"link\"}\n"                                                       \
            "pg_data/pg_hba.conf={\"file\":\"pg_hba.conf\",\"path\":\"../pg_config\",\"type\":\"link\"}\n"                         \
            "pg_data/pg_stat={\"path\":\"../pg_stat\",\"type\":\"link\"}\n"                                                        \
            "pg_data/postgresql.conf={\"file\":\"postgresql.conf\",\"path\":\"../pg_config\",\"type\":\"link\"}\n"                 \
            "pg_tblspc/1={\"path\":\"/tblspc/ts1\",\"tablespace-id\":\"1\",\"tablespace-name\":\"ts1\",\"type\":\"link\"}\n"       \
            TEST_MANIFEST_DB                                                                                                       \
            "\n"                                                                                                                   \
            "[target:file]\n"                                                                                                      \
            "pg_data/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\""                                        \
                ",\"reference\":\"20190818-084502F_20190819-084506D\",\"size\":4,\"timestamp\":1565282114}\n"                      \
            "pg_data/base/16384/17000={\"checksum\":\"e0101dd8ffb910c9c202ca35b5f828bcb9697bed\",\"checksum-page\":false"          \
                ",\"checksum-page-error\":[1],\"repo-size\":4096,\"size\":8192,\"timestamp\":1565282114}\n"                        \
            "pg_data/base/16384/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"group\":false,\"size\":4"  \
                ",\"timestamp\":1565282115}\n"                                                                                     \
            "pg_data/base/32768/33000={\"checksum\":\"7a16d165e4775f7c92e8cdf60c0af57313f0bf90\",\"checksum-page\":true"           \
                ",\"reference\":\"20190818-084502F\",\"size\":1073741824,\"timestamp\":1565282116}\n"                              \
            "pg_data/base/32768/33000.32767={\"checksum\":\"6e99b589e550e68e934fd235ccba59fe5b592a9e\",\"checksum-page\":true"     \
                ",\"reference\":\"20190818-084502F_20190819-084506I\",\"size\":32768,\"timestamp\":1565282114}\n"                  \
            "pg_data/postgresql.conf={\"checksum\":\"6721d92c9fcdf4248acff1f9a1377127d9064807\",\"size\":4457"                     \
                ",\"timestamp\":1565282114}\n"                                                                                     \
            "pg_data/special={\"mode\":\"0640\",\"size\":0,\"timestamp\":1565282120,\"user\":false}\n"                             \
            "pg_data/dupref={\"mode\":\"0640\",\"reference\":\"20190818-084502F\",\"size\":0"                                      \
                ",\"timestamp\":1565282120,\"user\":false}\n"                                                                      \
            TEST_MANIFEST_FILE_DEFAULT                                                                                             \
            "\n"                                                                                                                   \
            "[target:link]\n"                                                                                                      \
            "pg_data/pg_stat={\"destination\":\"../pg_stat\"}\n"                                                                   \
            "pg_data/postgresql.conf={\"destination\":\"../pg_config/postgresql.conf\",\"group\":false,\"user\":\"user1\"}\n"      \
            TEST_MANIFEST_LINK_DEFAULT                                                                                             \
            "\n"                                                                                                                   \
            "[target:path]\n"                                                                                                      \
            "pg_data={\"user\":\"user2\"}\n"                                                                                       \
            "pg_data/base={\"group\":\"group2\"}\n"                                                                                \
            "pg_data/base/16384={\"mode\":\"0750\"}\n"                                                                             \
            "pg_data/base/32768={}\n"                                                                                              \
            "pg_data/base/65536={\"user\":false}\n"                                                                                \
            TEST_MANIFEST_PATH_DEFAULT</cpp:value></cpp:define>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>manifest</name></expr></argument>, <argument><expr><call><name>manifestNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><call><name>harnessInfoChecksumZ</name><argument_list>(<argument><expr><name>TEST_MANIFEST_INCR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load manifest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>infoBackupDataAdd</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>manifest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"add a backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"backup added to current"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>backupData</name></expr></argument>, <argument><expr><call><name>infoBackupData</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get added backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupLabel</name></name></expr></argument>, <argument><expr><literal type="string">"20190818-084502F_20190820-084502I"</literal></expr></argument>, <argument><expr><literal type="string">"backup label set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backrestFormat</name></name></expr></argument>, <argument><expr><name>REPOSITORY_FORMAT</name></expr></argument>, <argument><expr><literal type="string">"backrest format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backrestVersion</name></name></expr></argument>, <argument><expr><name>PROJECT_VERSION</name></expr></argument>, <argument><expr><literal type="string">"backuprest version"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupArchiveStart</name></name></expr></argument>, <argument><expr><literal type="string">"000000030000028500000089"</literal></expr></argument>, <argument><expr><literal type="string">"archive start set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupArchiveStop</name></name></expr></argument>, <argument><expr><literal type="string">"000000030000028500000090"</literal></expr></argument>, <argument><expr><literal type="string">"archive stop set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupType</name></name></expr></argument>, <argument><expr><name>backupTypeDiff</name></expr></argument>, <argument><expr><literal type="string">"backup type set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupPrior</name></name></expr></argument>, <argument><expr><literal type="string">"20190818-084502F"</literal></expr></argument>, <argument><expr><literal type="string">"backup prior set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><name><name>backupData</name><operator>.</operator><name>backupReference</name></name></expr></argument>,
            <argument><expr><literal type="string">"20190818-084502F\n20190818-084502F_20190819-084506D\n20190818-084502F_20190819-084506I\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"backup reference set and ordered"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionArchiveCheck</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option archive check"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionArchiveCopy</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option archive copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionBackupStandby</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option backup standby"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionChecksumPage</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"no option checksum page"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionCompress</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option compress"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionHardlink</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option hardlink"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>optionOnline</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"option online"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoSize</name></name></expr></argument>, <argument><expr><literal type="number">1073787249</literal></expr></argument>, <argument><expr><literal type="string">"database size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoSizeDelta</name></name></expr></argument>, <argument><expr><literal type="number">12653</literal></expr></argument>, <argument><expr><literal type="string">"backup size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoRepoSize</name></name></expr></argument>, <argument><expr><literal type="number">1073783153</literal></expr></argument>, <argument><expr><literal type="string">"repo size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><name><name>backupData</name><operator>.</operator><name>backupInfoRepoSizeDelta</name></name></expr></argument>, <argument><expr><literal type="number">8557</literal></expr></argument>, <argument><expr><literal type="string">"repo backup size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackupDataAnnotationSet()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>KeyValue</name> <modifier>*</modifier></type><name>annotationKV</name> <init>= <expr><call><name>kvNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>kvPut</name><argument_list>(<argument><expr><name>annotationKV</name></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"empty key"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>kvPut</name><argument_list>(<argument><expr><name>annotationKV</name></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"key to remove"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"step 1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoBackupDataAnnotationSet</name><argument_list>(
                <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20190818-084502F_20190820-084502I"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>annotationKV</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"add annotation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>kvPut</name><argument_list>(<argument><expr><name>annotationKV</name></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"key to remove"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoBackupDataAnnotationSet</name><argument_list>(
                <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20190818-084502F_20190820-084502I"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>annotationKV</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"remove empty annotation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>kvPut</name><argument_list>(<argument><expr><name>annotationKV</name></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"extra key"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"this is an annotation"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>kvPut</name><argument_list>(<argument><expr><name>annotationKV</name></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"source"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"this is another annotation"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoBackupDataAnnotationSet</name><argument_list>(
                <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20190818-084502F_20190820-084502I"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>annotationKV</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"add annotations"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackupLoadFileReconstruct - skip/add backups"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load configuration to set repo-path and stanza</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptStanza</name></expr></argument>, <argument><expr><literal type="string">"db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptPgPath</name></expr></argument>, <argument><expr><literal type="string">"/path/to/pg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdArchiveGet</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create manifest for upgrade db (id=2), save to disk</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20190923-164324F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup]\n"</literal>
            <literal type="string">"backup-archive-start=\"000000030000028500000066\"\n"</literal>
            <literal type="string">"backup-archive-stop=\"000000030000028500000070\"\n"</literal>
            <literal type="string">"backup-label=\"20190923-164324F\"\n"</literal>
            <literal type="string">"backup-lsn-start=\"0/66000028\"\n"</literal>
            <literal type="string">"backup-lsn-stop=\"0/700000F8\"\n"</literal>
            <literal type="string">"backup-timestamp-copy-start=1569257007\n"</literal>
            <literal type="string">"backup-timestamp-start=1569257004\n"</literal>
            <literal type="string">"backup-timestamp-stop=1569257014\n"</literal>
            <literal type="string">"backup-type=\"full\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:db]\n"</literal>
            <literal type="string">"db-catalog-version=201809051\n"</literal>
            <literal type="string">"db-control-version=1100\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6739907367085689196\n"</literal>
            <literal type="string">"db-version=\"11\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:option]\n"</literal>
            <literal type="string">"option-archive-check=true\n"</literal>
            <literal type="string">"option-archive-copy=false\n"</literal>
            <literal type="string">"option-backup-standby=false\n"</literal>
            <literal type="string">"option-buffer-size=1048576\n"</literal>
            <literal type="string">"option-checksum-page=false\n"</literal>
            <literal type="string">"option-compress=true\n"</literal>
            <literal type="string">"option-compress-level=6\n"</literal>
            <literal type="string">"option-compress-level-network=3\n"</literal>
            <literal type="string">"option-delta=false\n"</literal>
            <literal type="string">"option-hardlink=false\n"</literal>
            <literal type="string">"option-online=true\n"</literal>
            <literal type="string">"option-process-max=3\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:target]\n"</literal>
            <literal type="string">"pg_data={\"path\":\"/pg/base\",\"type\":\"path\"}\n"</literal>
            <name>TEST_MANIFEST_DB</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file]\n"</literal>
            <literal type="string">"pg_data/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\""</literal>
                <literal type="string">",\"reference\":\"20190818-084502F_20190819-084506D\",\"size\":4,\"timestamp\":1569256970}\n"</literal>
            <literal type="string">"pg_data/backup_label={\"checksum\":\"e0101dd8ffb910c9c202ca35b5f828bcb9697bed\",\"checksum-page\":false"</literal>
                <literal type="string">",\"checksum-page-error\":[1],\"size\":249,\"timestamp\":1569257013}\n"</literal>
            <literal type="string">"pg_data/base/13050/PG_VERSION={\"checksum\":\"dd71038f3463f511ee7403dbcbc87195302d891c\",\"repo-size\":23,\"size\":3"</literal>
                <literal type="string">",\"timestamp\":1569256971}\n"</literal>
            <name>TEST_MANIFEST_FILE_DEFAULT</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path]\n"</literal>
            <literal type="string">"pg_data={}\n"</literal>
            <literal type="string">"pg_data/base={}\n"</literal>
            <literal type="string">"pg_data/base/13050={}\n"</literal>
            <name>TEST_MANIFEST_PATH_DEFAULT</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"write main manifest for pgId=2 - valid backup to add"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_INFO_PUT</name><argument_list>(
            <argument>storageRepoWrite()</argument>, <argument>STORAGE_REPO_BACKUP <literal type="string">"/20190818-084444F/"</literal> BACKUP_MANIFEST_FILE INFO_COPY_EXT</argument>,
            <argument><literal type="string">"[backup]\n"</literal>
            <literal type="string">"backup-label=\"20190818-084444F\"\n"</literal>
            <literal type="string">"backup-timestamp-copy-start=1565282141\n"</literal>
            <literal type="string">"backup-timestamp-start=1565282140\n"</literal>
            <literal type="string">"backup-timestamp-stop=1565282142\n"</literal>
            <literal type="string">"backup-type=\"full\"\n"</literal>
            TEST_MANIFEST_BACKUPDB
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:option]\n"</literal>
            <literal type="string">"option-archive-check=true\n"</literal>
            <literal type="string">"option-archive-copy=true\n"</literal>
            <literal type="string">"option-compress=false\n"</literal>
            <literal type="string">"option-hardlink=false\n"</literal>
            <literal type="string">"option-online=false\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:target]\n"</literal>
            <literal type="string">"pg_data={\"path\":\"/pg/base\",\"type\":\"path\"}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[cipher]\n"</literal>
            <literal type="string">"cipher-pass=\"somepass\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file]\n"</literal>
            <literal type="string">"pg_data/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"size\":4,\"timestamp\":1565282114}\n"</literal>
            <literal type="string">"pg_data/postgresql.conf={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"repo-size\":24,\"size\":7,"</literal>
            <literal type="string">"\"timestamp\":1565282214}\n"</literal>
            TEST_MANIFEST_FILE_DEFAULT
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path]\n"</literal>
            <literal type="string">"pg_data={}\n"</literal>
            TEST_MANIFEST_PATH_DEFAULT</argument>,
            <argument>.comment = <literal type="string">"write manifest copy for pgId=1"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20190818-084555F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup]\n"</literal>
            <literal type="string">"backup-label=\"20190818-084555F\"\n"</literal>
            <literal type="string">"backup-timestamp-copy-start=1565282141\n"</literal>
            <literal type="string">"backup-timestamp-start=1565282140\n"</literal>
            <literal type="string">"backup-timestamp-stop=1565282142\n"</literal>
            <literal type="string">"backup-type=\"full\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:db]\n"</literal>
            <literal type="string">"db-catalog-version=201809051\n"</literal>
            <literal type="string">"db-control-version=1100\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6739907367085689196\n"</literal>
            <literal type="string">"db-version=\"11\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:option]\n"</literal>
            <literal type="string">"option-archive-check=true\n"</literal>
            <literal type="string">"option-archive-copy=true\n"</literal>
            <literal type="string">"option-compress=false\n"</literal>
            <literal type="string">"option-hardlink=false\n"</literal>
            <literal type="string">"option-online=false\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:target]\n"</literal>
            <literal type="string">"pg_data={\"path\":\"/pg/base\",\"type\":\"path\"}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[cipher]\n"</literal>
            <literal type="string">"cipher-pass=\"somepass\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file]\n"</literal>
            <literal type="string">"pg_data/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"size\":4,\"timestamp\":1565282114}\n"</literal>
            <name>TEST_MANIFEST_FILE_DEFAULT</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path]\n"</literal>
            <literal type="string">"pg_data={}\n"</literal>
            <name>TEST_MANIFEST_PATH_DEFAULT</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"write manifest - invalid backup pgId mismatch"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20190818-084666F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup]\n"</literal>
            <literal type="string">"backup-label=\"20190818-084666F\"\n"</literal>
            <literal type="string">"backup-timestamp-copy-start=1565282141\n"</literal>
            <literal type="string">"backup-timestamp-start=1565282140\n"</literal>
            <literal type="string">"backup-timestamp-stop=1565282142\n"</literal>
            <literal type="string">"backup-type=\"full\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:db]\n"</literal>
            <literal type="string">"db-catalog-version=201809051\n"</literal>
            <literal type="string">"db-control-version=1100\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6739907367085689666\n"</literal>
            <literal type="string">"db-version=\"11\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:option]\n"</literal>
            <literal type="string">"option-archive-check=true\n"</literal>
            <literal type="string">"option-archive-copy=true\n"</literal>
            <literal type="string">"option-compress=false\n"</literal>
            <literal type="string">"option-hardlink=false\n"</literal>
            <literal type="string">"option-online=false\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:target]\n"</literal>
            <literal type="string">"pg_data={\"path\":\"/pg/base\",\"type\":\"path\"}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[cipher]\n"</literal>
            <literal type="string">"cipher-pass=\"somepass\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file]\n"</literal>
            <literal type="string">"pg_data/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"size\":4,\"timestamp\":1565282114}\n"</literal>
            <name>TEST_MANIFEST_FILE_DEFAULT</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path]\n"</literal>
            <literal type="string">"pg_data={}\n"</literal>
            <name>TEST_MANIFEST_PATH_DEFAULT</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"write manifest - invalid backup system-id mismatch"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20190818-084777F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup]\n"</literal>
            <literal type="string">"backup-label=\"20190818-084777F\"\n"</literal>
            <literal type="string">"backup-timestamp-copy-start=1565282141\n"</literal>
            <literal type="string">"backup-timestamp-start=1565282140\n"</literal>
            <literal type="string">"backup-timestamp-stop=1565282142\n"</literal>
            <literal type="string">"backup-type=\"full\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:db]\n"</literal>
            <literal type="string">"db-catalog-version=201809051\n"</literal>
            <literal type="string">"db-control-version=1100\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6739907367085689196\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:option]\n"</literal>
            <literal type="string">"option-archive-check=true\n"</literal>
            <literal type="string">"option-archive-copy=true\n"</literal>
            <literal type="string">"option-compress=false\n"</literal>
            <literal type="string">"option-hardlink=false\n"</literal>
            <literal type="string">"option-online=false\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:target]\n"</literal>
            <literal type="string">"pg_data={\"path\":\"/pg/base\",\"type\":\"path\"}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[cipher]\n"</literal>
            <literal type="string">"cipher-pass=\"somepass\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file]\n"</literal>
            <literal type="string">"pg_data/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"size\":4,\"timestamp\":1565282114}\n"</literal>
            <name>TEST_MANIFEST_FILE_DEFAULT</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path]\n"</literal>
            <literal type="string">"pg_data={}\n"</literal>
            <name>TEST_MANIFEST_PATH_DEFAULT</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"write manifest - invalid backup version mismatch"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20190818-084502F_20190820-084502I/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>, <argument><expr><name>TEST_MANIFEST_INCR</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"write manifest for dependent backup that will be removed from backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PATH_CREATE</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20190818-084502F"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"create backup on disk that is in current but no manifest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20190818-084444F/\n"</literal>
            <literal type="string">"20190818-084502F/\n"</literal>
            <literal type="string">"20190818-084502F_20190820-084502I/\n"</literal>
            <literal type="string">"20190818-084555F/\n"</literal>
            <literal type="string">"20190818-084666F/\n"</literal>
            <literal type="string">"20190818-084777F/\n"</literal>
            <literal type="string">"20190923-164324F/\n"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>expression</name> <operator>=</operator> <call><name>strZ</name><argument_list>(<argument><expr><call><name>backupRegExpP</name><argument_list>(<argument><expr><operator>.</operator><name>full</name> <operator>=</operator> <name>true</name></expr></argument>, <argument><expr><operator>.</operator><name>differential</name> <operator>=</operator> <name>true</name></expr></argument>, <argument><expr><operator>.</operator><name>incremental</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"confirm backups on disk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// With the infoBackup from above, upgrade the DB so there a 2 histories then save to disk</comment>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupPgSet</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>PG_VERSION_11</name></expr></argument>, <argument><expr><literal type="number">6739907367085689196</literal></expr></argument>, <argument><expr><call><name>hrnPgCatalogVersion</name><argument_list>(<argument><expr><name>PG_VERSION_11</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"upgrade db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoBackupSaveFile</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"save backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>infoBackup</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"get saved backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"backup list contains backups to be removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoPgDataTotal</name><argument_list>(<argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"multiple DB history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFileReconstruct</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"reconstruct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_INT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"backup list contains 1 backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>backupData</name></expr></argument>, <argument><expr><call><name>infoBackupData</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get the backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><name><name>backupData</name><operator>.</operator><name>backupLabel</name></name></expr></argument>, <argument><expr><literal type="string">"20190923-164324F"</literal></expr></argument>, <argument><expr><literal type="string">"backups not on disk removed, dependent backup removed and not added back, "</literal>
            <literal type="string">"valid backup on disk added, manifest copy-only ignored"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: backup '20190818-084502F_20190820-084502I' missing manifest removed from backup.info\n"</literal>
            <literal type="string">"P00   WARN: backup '20190818-084502F' missing manifest removed from backup.info\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084502F_20190820-084502I' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084555F' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084666F' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084777F' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: backup '20190923-164324F' found in repository added to backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackupLoadFileReconstruct() - missing dependent not added"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PATH_REMOVE</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20190818-084502F_20190820-084502I"</literal></expr></argument>, <argument><expr><operator>.</operator><name>recurse</name> <operator>=</operator> <name>true</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"remove dependent backup from disk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFileReconstruct</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"reconstruct does not attempt to add back dependent backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: backup '20190818-084502F_20190820-084502I' missing manifest removed from backup.info\n"</literal>
            <literal type="string">"P00   WARN: backup '20190818-084502F' missing manifest removed from backup.info\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084555F' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084666F' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084777F' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: backup '20190923-164324F' found in repository added to backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"infoBackupLoadFileReconstruct() - valid dependent added"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_COPY</name><argument_list>(
            <argument>storageRepo()</argument>, <argument>STORAGE_REPO_BACKUP <literal type="string">"/20190818-084444F/"</literal> BACKUP_MANIFEST_FILE INFO_COPY_EXT</argument>,
            <argument>storageRepoWrite()</argument>, <argument>STORAGE_REPO_BACKUP <literal type="string">"/20190818-084444F/"</literal> BACKUP_MANIFEST_FILE</argument>,
            <argument>.comment = <literal type="string">"write manifest from copy-only for pgId=1"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20190818-084444F_20190924-084502D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup]\n"</literal>
            <literal type="string">"backup-archive-start=\"000000030000028500000089\"\n"</literal>
            <literal type="string">"backup-archive-stop=\"000000030000028500000090\"\n"</literal>
            <literal type="string">"backup-label=\"20190818-084444F_20190924-084502D\"\n"</literal>
            <literal type="string">"backup-lsn-start=\"285/89000028\"\n"</literal>
            <literal type="string">"backup-lsn-stop=\"285/89001F88\"\n"</literal>
            <literal type="string">"backup-prior=\"20190818-084444F\"\n"</literal>
            <literal type="string">"backup-timestamp-copy-start=1565282141\n"</literal>
            <literal type="string">"backup-timestamp-start=1565282140\n"</literal>
            <literal type="string">"backup-timestamp-stop=1565282142\n"</literal>
            <literal type="string">"backup-type=\"diff\"\n"</literal>
            <name>TEST_MANIFEST_BACKUPDB</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:option]\n"</literal>
            <literal type="string">"option-archive-check=true\n"</literal>
            <literal type="string">"option-archive-copy=true\n"</literal>
            <literal type="string">"option-backup-standby=true\n"</literal>
            <literal type="string">"option-buffer-size=16384\n"</literal>
            <literal type="string">"option-checksum-page=true\n"</literal>
            <literal type="string">"option-compress=true\n"</literal>
            <literal type="string">"option-compress-level=3\n"</literal>
            <literal type="string">"option-compress-level-network=3\n"</literal>
            <literal type="string">"option-delta=false\n"</literal>
            <literal type="string">"option-hardlink=true\n"</literal>
            <literal type="string">"option-online=true\n"</literal>
            <literal type="string">"option-process-max=32\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:target]\n"</literal>
            <literal type="string">"pg_data={\"path\":\"/pg/base\",\"type\":\"path\"}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file]\n"</literal>
            <literal type="string">"pg_data/PG_VERSION={\"checksum\":\"184473f470864e067ee3a22e64b47b0a1c356f29\",\"size\":4,\"timestamp\":1565282114}\n"</literal>
            <name>TEST_MANIFEST_FILE_DEFAULT</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path]\n"</literal>
            <literal type="string">"pg_data={}\n"</literal>
            <name>TEST_MANIFEST_PATH_DEFAULT</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"write manifest for dependent backup to be added to full already in backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoBackupSaveFile</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"save updated backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>infoBackup</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFileReconstruct</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"reconstruct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20190818-084444F\n20190818-084444F_20190924-084502D\n20190923-164324F\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"previously ignored pgId=1 manifest copy-only now added before existing, and add dependent found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: backup '20190818-084444F' found in repository added to backup.info\n"</literal>
            <literal type="string">"P00   WARN: backup '20190818-084444F_20190924-084502D' found in repository added to backup.info\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084555F' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084666F' cannot be added to current backups\n"</literal>
            <literal type="string">"P00   WARN: invalid backup '20190818-084777F' cannot be added to current backups"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"infoBackupLoadFile() and infoBackupSaveFile()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"load backup info file - error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>INFO_BACKUP_FILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FileMissingError</name></expr></argument>,
            <argument><expr><literal type="string">"unable to load info file '"</literal> <name>TEST_PATH</name> <literal type="string">"/backup.info' or '"</literal> <name>TEST_PATH</name> <literal type="string">"/backup.info.copy':\n"</literal>
            <literal type="string">"FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/backup.info' for read\n"</literal>
            <literal type="string">"FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/backup.info.copy' for read\n"</literal>
            <literal type="string">"HINT: backup.info cannot be opened and is required to perform a backup.\n"</literal>
            <literal type="string">"HINT: has a stanza-create been performed?"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"save and load backup info file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><call><name>infoBackupNew</name><argument_list>(<argument><expr><name>PG_VERSION_10</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><call><name>hrnPgCatalogVersion</name><argument_list>(<argument><expr><name>PG_VERSION_10</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoBackupSaveFile</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>INFO_BACKUP_FILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"save backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>INFO_BACKUP_FILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load main"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><name>systemId</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><literal type="string">"check file loaded"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_REMOVE</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>INFO_BACKUP_FILE</name></expr></argument>, <argument><expr><operator>.</operator><name>errorOnMissing</name> <operator>=</operator> <name>true</name></expr></argument>, <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"remove main so only copy exists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>INFO_BACKUP_FILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"load copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoPgDataCurrent</name><argument_list>(<argument><expr><call><name>infoBackupPg</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><name>systemId</name></expr></argument>, <argument><expr><literal type="number">6569239123849665999</literal></expr></argument>, <argument><expr><literal type="string">"check file loaded"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"infoBackupDataDependentList()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>contentLoad</name> <init>= <expr><call><name>harnessInfoChecksumZ</name><argument_list>(
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20200317-181416F={\"backrest-format\":5,\"backrest-version\":\"2.25dev\","</literal>
            <literal type="string">"\"backup-info-repo-size\":3687611,\"backup-info-repo-size-delta\":3687611,\"backup-info-size\":31230816,"</literal>
            <literal type="string">"\"backup-info-size-delta\":31230816,\"backup-timestamp-start\":1584468856,\"backup-timestamp-stop\":1584468864,"</literal>
            <literal type="string">"\"backup-type\":\"full\",\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,"</literal>
            <literal type="string">"\"option-backup-standby\":false,\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,"</literal>
            <literal type="string">"\"option-online\":false}\n"</literal>
            <literal type="string">"20200317-181625F={\"backrest-format\":5,\"backrest-version\":\"2.25dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000038\",\"backup-archive-stop\":\"000000010000000000000038\","</literal>
            <literal type="string">"\"backup-info-repo-size\":3768898,\"backup-info-repo-size-delta\":3768898,\"backup-info-size\":31533937,"</literal>
            <literal type="string">"\"backup-info-size-delta\":31533937,\"backup-timestamp-start\":1584468985,\"backup-timestamp-stop\":1584468992,"</literal>
            <literal type="string">"\"backup-type\":\"full\",\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,"</literal>
            <literal type="string">"\"option-backup-standby\":false,\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,"</literal>
            <literal type="string">"\"option-online\":true}\n"</literal>
            <literal type="string">"20200317-181625F_20200317-182239D={\"backrest-format\":5,\"backrest-version\":\"2.25dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"00000001000000000000003A\",\"backup-archive-stop\":\"00000001000000000000003A\","</literal>
            <literal type="string">"\"backup-info-repo-size\":3768734,\"backup-info-repo-size-delta\":138783,\"backup-info-size\":31558514,"</literal>
            <literal type="string">"\"backup-info-size-delta\":1204491,\"backup-prior\":\"20200317-181625F\",\"backup-reference\":[\"20200317-181625F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1584469359,\"backup-timestamp-stop\":1584469362,\"backup-type\":\"diff\",\"db-id\":2,"</literal>
            <literal type="string">"\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":true,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20200317-181625F_20200317-182300D={\"backrest-format\":5,\"backrest-version\":\"2.25dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"00000001000000000000003C\",\"backup-archive-stop\":\"00000001000000000000003C\","</literal>
            <literal type="string">"\"backup-info-repo-size\":3768733,\"backup-info-repo-size-delta\":138782,\"backup-info-size\":31558514,"</literal>
            <literal type="string">"\"backup-info-size-delta\":1204491,\"backup-prior\":\"20200317-181625F\",\"backup-reference\":[\"20200317-181625F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1584469380,\"backup-timestamp-stop\":1584469383,\"backup-type\":\"diff\",\"db-id\":2,"</literal>
            <literal type="string">"\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":true,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20200317-181625F_20200317-182324I={\"backrest-format\":5,\"backrest-version\":\"2.25dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"00000001000000000000003E\",\"backup-archive-stop\":\"00000001000000000000003E\","</literal>
            <literal type="string">"\"backup-info-repo-size\":3768731,\"backup-info-repo-size-delta\":431,\"backup-info-size\":31558514,"</literal>
            <literal type="string">"\"backup-info-size-delta\":8459,\"backup-prior\":\"20200317-181625F_20200317-182300D\","</literal>
            <literal type="string">"\"backup-reference\":[\"20200317-181625F\",\"20200317-181625F_20200317-182300D\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1584469404,\"backup-timestamp-stop\":1584469406,\"backup-type\":\"incr\",\"db-id\":2,"</literal>
            <literal type="string">"\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":true,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20200317-181625F_20200317-182340I={\"backrest-format\":5,\"backrest-version\":\"2.25dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000040\",\"backup-archive-stop\":\"000000010000000000000040\","</literal>
            <literal type="string">"\"backup-info-repo-size\":3768733,\"backup-info-repo-size-delta\":433,\"backup-info-size\":31558514,"</literal>
            <literal type="string">"\"backup-info-size-delta\":8459,\"backup-prior\":\"20200317-181625F_20200317-182324I\","</literal>
            <literal type="string">"\"backup-reference\":[\"20200317-181625F\",\"20200317-181625F_20200317-182300D\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1584469420,\"backup-timestamp-stop\":1584469423,\"backup-type\":\"incr\",\"db-id\":2,"</literal>
            <literal type="string">"\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":true,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20200317-181625F_20200317-182340D={\"backrest-format\":5,\"backrest-version\":\"2.25dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000041\",\"backup-archive-stop\":\"000000010000000000000041\","</literal>
            <literal type="string">"\"backup-info-repo-size\":3768733,\"backup-info-repo-size-delta\":433,\"backup-info-size\":31558514,"</literal>
            <literal type="string">"\"backup-info-size-delta\":8459,\"backup-prior\":\"20200317-181625F\",\"backup-reference\":[\"20200317-181625F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1584469420,\"backup-timestamp-stop\":1584469423,\"backup-type\":\"incr\",\"db-id\":2,"</literal>
            <literal type="string">"\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":true,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20200318-153815F={\"backrest-format\":5,\"backrest-version\":\"2.25dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000042\",\"backup-archive-stop\":\"000000010000000000000042\","</literal>
            <literal type="string">"\"backup-info-repo-size\":3768732,\"backup-info-repo-size-delta\":3768732,\"backup-info-size\":31558514,"</literal>
            <literal type="string">"\"backup-info-size-delta\":31558514,\"backup-timestamp-start\":1584545895,\"backup-timestamp-stop\":1584545905,"</literal>
            <literal type="string">"\"backup-type\":\"full\",\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,"</literal>
            <literal type="string">"\"option-backup-standby\":true,\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,"</literal>
            <literal type="string">"\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201409291\n"</literal>
            <literal type="string">"db-control-version=942\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6569239123849665679\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6569239123849665679,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}\n"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>dependencyList</name></decl>;</decl_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"check dependency lists"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>contentLoad</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"new backup info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>dependencyList</name></expr></argument>, <argument><expr><call><name>infoBackupDataDependentList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20200317-181625F"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"full"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><name>dependencyList</name></expr></argument>,
            <argument><expr><literal type="string">"20200317-181625F\n20200317-181625F_20200317-182239D\n20200317-181625F_20200317-182300D\n"</literal>
                <literal type="string">"20200317-181625F_20200317-182324I\n20200317-181625F_20200317-182340I\n20200317-181625F_20200317-182340D\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"all dependents"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>dependencyList</name></expr></argument>, <argument><expr><call><name>infoBackupDataDependentList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20200317-181416F"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"full"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(<argument><expr><name>dependencyList</name></expr></argument>, <argument><expr><literal type="string">"20200317-181416F\n"</literal></expr></argument>, <argument><expr><literal type="string">"no dependents"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>dependencyList</name></expr></argument>, <argument><expr><call><name>infoBackupDataDependentList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20200317-181625F_20200317-182300D"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><name>dependencyList</name></expr></argument>,
            <argument><expr><literal type="string">"20200317-181625F_20200317-182300D\n20200317-181625F_20200317-182324I\n20200317-181625F_20200317-182340I\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"all dependents"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>dependencyList</name></expr></argument>, <argument><expr><call><name>infoBackupDataDependentList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20200317-181625F_20200317-182324I"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"incr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><name>dependencyList</name></expr></argument>, <argument><expr><literal type="string">"20200317-181625F_20200317-182324I\n20200317-181625F_20200317-182340I\n"</literal></expr></argument>, <argument><expr><literal type="string">"all dependents"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
