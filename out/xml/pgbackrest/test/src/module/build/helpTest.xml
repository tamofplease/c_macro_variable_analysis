<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/pgbackrest/test/src/module/build/helpTest.c"><comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Build Help
***********************************************************************************************************************************/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/posix/storage.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessPack.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessStorage.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Run
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testRun</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>FUNCTION_HARNESS_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Create default storage object for testing</comment>
    <decl_stmt><decl><type><name>Storage</name> <modifier>*</modifier></type><name>storageTest</name> <init>= <expr><call><name>storagePosixNewP</name><argument_list>(<argument><expr><name>TEST_PATH_STR</name></expr></argument>, <argument><expr><operator>.</operator><name>write</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"bldHlpRenderXml()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"format errors"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>bldHlpRenderXml</name><argument_list>(<argument><expr><call><name>xmlDocumentRoot</name><argument_list>(<argument><expr><call><name>xmlDocumentNewBuf</name><argument_list>(<argument><expr><call><name>BUFSTRDEF</name><argument_list>(<argument><expr><literal type="string">"&lt;doc&gt;&lt;bogus/&gt;&lt;/doc&gt;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
            <argument><expr><literal type="string">"unknown tag 'bogus'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>bldHlpRenderXml</name><argument_list>(<argument><expr><call><name>xmlDocumentRoot</name><argument_list>(<argument><expr><call><name>xmlDocumentNewBuf</name><argument_list>(<argument><expr><call><name>BUFSTRDEF</name><argument_list>(<argument><expr><literal type="string">"&lt;doc&gt;bogus\n&lt;/doc&gt;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
            <argument><expr><literal type="string">"text 'bogus\n' is invalid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"xml to text"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>bldHlpRenderXml</name><argument_list>(<argument><expr><call><name>xmlDocumentRoot</name><argument_list>(<argument><expr><call><name>xmlDocumentNewBuf</name><argument_list>(<argument><expr><call><name>BUFSTRDEF</name><argument_list>(
                <argument><expr><literal type="string">"&lt;doc&gt;"</literal>
                <literal type="string">"&lt;p&gt;&lt;backrest/&gt; &lt;postgres/&gt; {[dash]} "</literal>
                    <literal type="string">"&lt;b&gt;&lt;br-option&gt;&lt;cmd&gt;&lt;code&gt;&lt;exe&gt;&lt;file&gt;&lt;host&gt;&lt;i&gt;&lt;id&gt;&lt;link&gt;&lt;path&gt;&lt;pg-setting&gt;&lt;proper&gt;&lt;setting&gt;"</literal>
                    <literal type="string">"&lt;!-- COMMENT --&gt;"</literal>
                    <literal type="string">"info"</literal>
                    <literal type="string">"&lt;/setting&gt;&lt;/proper&gt;&lt;/pg-setting&gt;&lt;/path&gt;&lt;/link&gt;&lt;/id&gt;&lt;/i&gt;&lt;/host&gt;&lt;/file&gt;&lt;/exe&gt;&lt;/code&gt;&lt;/cmd&gt;&lt;/br-option&gt;&lt;/b&gt;&lt;/p&gt;\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"&lt;admonition&gt;think &lt;quote&gt;about&lt;/quote&gt; it&lt;/admonition&gt;\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"&lt;p&gt;List:&lt;/p&gt;\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"&lt;list&gt;\n"</literal>
                  <literal type="string">"&lt;list-item&gt;item1&lt;/list-item&gt;\n"</literal>
                  <literal type="string">"&lt;list-item&gt;item2&lt;/list-item&gt;\n"</literal>
                <literal type="string">"&lt;/list&gt;\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"&lt;p&gt;last para&lt;/p&gt;"</literal>
                <literal type="string">"&lt;/doc&gt;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"pgBackRest PostgreSQL - info\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"NOTE: think \"about\" it\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"List:\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"* item1\n"</literal>
            <literal type="string">"* item2\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"last para"</literal></expr></argument>,
            <argument><expr><literal type="string">"render"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"bldHlpParse() and bldHlpRender()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"error on missing command"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/build/config/config.yaml"</literal></expr></argument>,
            <argument><expr><literal type="string">"command:\n"</literal>
            <literal type="string">"  backup: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"optionGroup:\n"</literal>
            <literal type="string">"  pg: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  buffer:\n"</literal>
            <literal type="string">"    section: general\n"</literal>
            <literal type="string">"    type: size\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  pg:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      local: {}"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  stanza:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  xfer:\n"</literal>
            <literal type="string">"    type: bool\n"</literal>
            <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>BldCfg</name></type> <name>bldCfgErr</name> <init>= <expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/build/help/help.xml"</literal></expr></argument>,
            <argument><expr><literal type="string">"&lt;doc&gt;\n"</literal>
            <literal type="string">"    &lt;config&gt;\n"</literal>
            <literal type="string">"       &lt;config-section-list&gt;\n"</literal>
            <literal type="string">"       &lt;/config-section-list&gt;\n"</literal>
            <literal type="string">"    &lt;/config&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"    &lt;operation&gt;\n"</literal>
            <literal type="string">"        &lt;operation-general&gt;\n"</literal>
            <literal type="string">"           &lt;option-list&gt;\n"</literal>
            <literal type="string">"           &lt;/option-list&gt;\n"</literal>
            <literal type="string">"        &lt;/operation-general&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"       &lt;command-list&gt;\n"</literal>
            <literal type="string">"       &lt;/command-list&gt;\n"</literal>
            <literal type="string">"    &lt;/operation&gt;\n"</literal>
            <literal type="string">"&lt;/doc&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldHlpParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>bldCfgErr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"command 'backup' must have help"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"error on missing config option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/build/help/help.xml"</literal></expr></argument>,
            <argument><expr><literal type="string">"&lt;doc&gt;\n"</literal>
            <literal type="string">"    &lt;config&gt;\n"</literal>
            <literal type="string">"       &lt;config-section-list&gt;\n"</literal>
            <literal type="string">"       &lt;/config-section-list&gt;\n"</literal>
            <literal type="string">"    &lt;/config&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"    &lt;operation&gt;\n"</literal>
            <literal type="string">"        &lt;operation-general&gt;\n"</literal>
            <literal type="string">"           &lt;option-list&gt;\n"</literal>
            <literal type="string">"           &lt;/option-list&gt;\n"</literal>
            <literal type="string">"        &lt;/operation-general&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"       &lt;command-list&gt;\n"</literal>
            <literal type="string">"           &lt;command id=\"backup\" name=\"Backup\"&gt;\n"</literal>
            <literal type="string">"               &lt;summary&gt;Backup.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"               &lt;text&gt;\n"</literal>
            <literal type="string">"                   &lt;p&gt;Backup.&lt;/p&gt;\n"</literal>
            <literal type="string">"               &lt;/text&gt;\n"</literal>
            <literal type="string">"           &lt;/command&gt;\n"</literal>
            <literal type="string">"       &lt;/command-list&gt;\n"</literal>
            <literal type="string">"    &lt;/operation&gt;\n"</literal>
            <literal type="string">"&lt;/doc&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldHlpParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>bldCfgErr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"option 'buffer' must have help for command 'backup'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"error on missing command-line option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/build/help/help.xml"</literal></expr></argument>,
            <argument><expr><literal type="string">"&lt;doc&gt;\n"</literal>
            <literal type="string">"    &lt;config&gt;\n"</literal>
            <literal type="string">"       &lt;config-section-list&gt;\n"</literal>
            <literal type="string">"           &lt;config-section id=\"general\" name=\"General\"&gt;\n"</literal>
            <literal type="string">"               &lt;config-key-list&gt;\n"</literal>
            <literal type="string">"                   &lt;config-key id=\"buffer\" name=\"Buffer\"&gt;\n"</literal>
            <literal type="string">"                       &lt;summary&gt;Buffer.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                       &lt;text&gt;\n"</literal>
            <literal type="string">"                           &lt;p&gt;Buffer.&lt;/p&gt;\n"</literal>
            <literal type="string">"                       &lt;/text&gt;\n"</literal>
            <literal type="string">"                   &lt;/config-key&gt;\n"</literal>
            <literal type="string">"               &lt;/config-key-list&gt;\n"</literal>
            <literal type="string">"           &lt;/config-section&gt;\n"</literal>
            <literal type="string">"       &lt;/config-section-list&gt;\n"</literal>
            <literal type="string">"    &lt;/config&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"    &lt;operation&gt;\n"</literal>
            <literal type="string">"        &lt;operation-general&gt;\n"</literal>
            <literal type="string">"           &lt;option-list&gt;\n"</literal>
            <literal type="string">"           &lt;/option-list&gt;\n"</literal>
            <literal type="string">"        &lt;/operation-general&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"       &lt;command-list&gt;\n"</literal>
            <literal type="string">"           &lt;command id=\"backup\" name=\"Backup\"&gt;\n"</literal>
            <literal type="string">"               &lt;summary&gt;Backup.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"               &lt;text&gt;\n"</literal>
            <literal type="string">"                   &lt;p&gt;Backup.&lt;/p&gt;\n"</literal>
            <literal type="string">"               &lt;/text&gt;\n"</literal>
            <literal type="string">"           &lt;/command&gt;\n"</literal>
            <literal type="string">"       &lt;/command-list&gt;\n"</literal>
            <literal type="string">"    &lt;/operation&gt;\n"</literal>
            <literal type="string">"&lt;/doc&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldHlpParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>bldCfgErr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"option 'stanza' must have help for command 'backup'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"parse and render"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/build/config/config.yaml"</literal></expr></argument>,
            <argument><expr><literal type="string">"command:\n"</literal>
            <literal type="string">"  backup:\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      async: {}\n"</literal>
            <literal type="string">"      local: {}\n"</literal>
            <literal type="string">"      remote: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  check: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  restore:\n"</literal>
            <literal type="string">"    internal: true\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      local: {}\n"</literal>
            <literal type="string">"      remote: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"optionGroup:\n"</literal>
            <literal type="string">"  pg: {}\n"</literal>
            <literal type="string">"  repo: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    required: false\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup:\n"</literal>
            <literal type="string">"        internal: true\n"</literal>
            <literal type="string">"      restore: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  buffer-size:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: integer\n"</literal>
            <literal type="string">"    default: 1024\n"</literal>
            <literal type="string">"    allow-list: [512, 1024, 2048, 4096]\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  force:\n"</literal>
            <literal type="string">"    type: boolean\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      check: {}\n"</literal>
            <literal type="string">"      restore: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  stanza:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    required: false\n"</literal>
            <literal type="string">"    deprecate:\n"</literal>
            <literal type="string">"      stanza: {}\n"</literal>
            <literal type="string">"      stanza1: {}\n"</literal>
            <literal type="string">"      stanza2: {}\n"</literal>
            <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>BldCfg</name></type> <name>bldCfg</name> <init>= <expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/build/help/help.xml"</literal></expr></argument>,
            <argument><expr><literal type="string">"&lt;doc&gt;\n"</literal>
            <literal type="string">"    &lt;config&gt;\n"</literal>
            <literal type="string">"       &lt;config-section-list&gt;\n"</literal>
            <literal type="string">"           &lt;config-section id=\"general\" name=\"General\"&gt;\n"</literal>
            <literal type="string">"               &lt;config-key-list&gt;\n"</literal>
            <literal type="string">"                   &lt;config-key id=\"buffer-size\" name=\"Buffer Size\"&gt;\n"</literal>
            <literal type="string">"                       &lt;summary&gt;Buffer size for file operations.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                       &lt;text&gt;\n"</literal>
            <literal type="string">"                           &lt;p&gt;Buffer.&lt;/p&gt;\n"</literal>
            <literal type="string">"                       &lt;/text&gt;\n"</literal>
            <literal type="string">"                   &lt;/config-key&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                   &lt;config-key id=\"stanza\" name=\"Stanza\"&gt;\n"</literal>
            <literal type="string">"                       &lt;summary&gt;Defines the stanza.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                       &lt;text&gt;\n"</literal>
            <literal type="string">"                           &lt;p&gt;Stanza.&lt;/p&gt;\n"</literal>
            <literal type="string">"                       &lt;/text&gt;\n"</literal>
            <literal type="string">"                   &lt;/config-key&gt;\n"</literal>
            <literal type="string">"               &lt;/config-key-list&gt;\n"</literal>
            <literal type="string">"           &lt;/config-section&gt;\n"</literal>
            <literal type="string">"       &lt;/config-section-list&gt;\n"</literal>
            <literal type="string">"    &lt;/config&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"    &lt;operation&gt;\n"</literal>
            <literal type="string">"        &lt;operation-general&gt;\n"</literal>
            <literal type="string">"           &lt;option-list&gt;\n"</literal>
            <literal type="string">"               &lt;option id=\"config\" section=\"stanza\" name=\"Config\"&gt;\n"</literal>
            <literal type="string">"                   &lt;summary&gt;&lt;backrest/&gt; configuration file.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                   &lt;text&gt;\n"</literal>
            <literal type="string">"                       &lt;p&gt;Use this option to specify a different configuration file than the default.&lt;/p&gt;\n"</literal>
            <literal type="string">"                   &lt;/text&gt;\n"</literal>
            <literal type="string">"               &lt;/option&gt;\n"</literal>
            <literal type="string">"           &lt;/option-list&gt;\n"</literal>
            <literal type="string">"        &lt;/operation-general&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"       &lt;command-list&gt;\n"</literal>
            <literal type="string">"           &lt;command id=\"backup\" name=\"Backup\"&gt;\n"</literal>
            <literal type="string">"               &lt;summary&gt;Backup cluster.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"               &lt;text&gt;\n"</literal>
            <literal type="string">"                   &lt;p&gt;&lt;backrest/&gt; backup.&lt;/p&gt;\n"</literal>
            <literal type="string">"               &lt;/text&gt;\n"</literal>
            <literal type="string">"           &lt;/command&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"           &lt;command id=\"check\" name=\"Check\"&gt;\n"</literal>
            <literal type="string">"               &lt;summary&gt;Check cluster.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"               &lt;text&gt;\n"</literal>
            <literal type="string">"                   &lt;p&gt;&lt;backrest/&gt; check.&lt;/p&gt;\n"</literal>
            <literal type="string">"               &lt;/text&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"               &lt;option-list&gt;\n"</literal>
            <literal type="string">"                   &lt;option id=\"force\" name=\"Force\"&gt;\n"</literal>
            <literal type="string">"                       &lt;summary&gt;Force delete.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                       &lt;text&gt;\n"</literal>
            <literal type="string">"                           &lt;p&gt;Longer description.&lt;/p&gt;\n"</literal>
            <literal type="string">"                       &lt;/text&gt;\n"</literal>
            <literal type="string">"                   &lt;/option&gt;\n"</literal>
            <literal type="string">"               &lt;/option-list&gt;\n"</literal>
            <literal type="string">"           &lt;/command&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"           &lt;command id=\"restore\" name=\"Restore\"&gt;\n"</literal>
            <literal type="string">"               &lt;summary&gt;Restore cluster.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"               &lt;text&gt;\n"</literal>
            <literal type="string">"                   &lt;p&gt;&lt;backrest/&gt; restore.&lt;/p&gt;\n"</literal>
            <literal type="string">"               &lt;/text&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"               &lt;option-list&gt;\n"</literal>
            <literal type="string">"                   &lt;option id=\"force\" name=\"Force\"&gt;\n"</literal>
            <literal type="string">"                       &lt;summary&gt;Force delete.&lt;/summary&gt;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                       &lt;text&gt;\n"</literal>
            <literal type="string">"                           &lt;p&gt;Longer description.&lt;/p&gt;\n"</literal>
            <literal type="string">"                       &lt;/text&gt;\n"</literal>
            <literal type="string">"                   &lt;/option&gt;\n"</literal>
            <literal type="string">"               &lt;/option-list&gt;\n"</literal>
            <literal type="string">"           &lt;/command&gt;\n"</literal>
            <literal type="string">"       &lt;/command-list&gt;\n"</literal>
            <literal type="string">"    &lt;/operation&gt;\n"</literal>
            <literal type="string">"&lt;/doc&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>hrnPackReadToStr</name><argument_list>(<argument><expr><call><name>pckReadNew</name><argument_list>(<argument><expr><call><name>pckWriteResult</name><argument_list>(<argument><expr><call><name>bldHlpRenderHelpAutoCPack</name><argument_list>(<argument><expr><name>bldCfg</name></expr></argument>, <argument><expr><call><name>bldHlpParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>bldCfg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"1:array:"</literal>
            <literal type="string">"["</literal>
                <comment type="line">// backup command</comment>
                <literal type="string">"2:str:Backup cluster."</literal>
                <literal type="string">", 3:str:pgBackRest backup."</literal>
                <comment type="line">// check command</comment>
                <literal type="string">", 5:str:Check cluster."</literal>
                <literal type="string">", 6:str:pgBackRest check."</literal>
                <comment type="line">// restore command</comment>
                <literal type="string">", 7:bool:true"</literal>
                <literal type="string">", 8:str:Restore cluster."</literal>
                <literal type="string">", 9:str:pgBackRest restore."</literal>
            <literal type="string">"]"</literal>
            <literal type="string">", 2:array:"</literal>
            <literal type="string">"["</literal>
                <comment type="line">// buffer-size option</comment>
                <literal type="string">"2:str:general"</literal>
                <literal type="string">", 3:str:Buffer size for file operations."</literal>
                <literal type="string">", 4:str:Buffer."</literal>
                <comment type="line">// config option</comment>
                <literal type="string">", 8:str:stanza"</literal>
                <literal type="string">", 9:str:pgBackRest configuration file."</literal>
                <literal type="string">", 10:str:Use this option to specify a different configuration file than the default."</literal>
                <literal type="string">", 12:array:"</literal>
                <literal type="string">"["</literal>
                    <comment type="line">// backup command override</comment>
                    <literal type="string">"1:obj:"</literal>
                    <literal type="string">"{"</literal>
                        <literal type="string">"1:bool:true"</literal>
                    <literal type="string">"}"</literal>
                <literal type="string">"]"</literal>
                <comment type="line">// force option</comment>
                <literal type="string">", 18:array:"</literal>
                <literal type="string">"["</literal>
                    <comment type="line">// check command override</comment>
                    <literal type="string">"2:obj:"</literal>
                    <literal type="string">"{"</literal>
                        <literal type="string">"2:str:Force delete."</literal>
                        <literal type="string">", 3:str:Longer description."</literal>
                    <literal type="string">"}"</literal>
                    <comment type="line">// restore command override</comment>
                    <literal type="string">", 3:obj:"</literal>
                    <literal type="string">"{"</literal>
                        <literal type="string">"2:str:Force delete."</literal>
                        <literal type="string">", 3:str:Longer description."</literal>
                    <literal type="string">"}"</literal>
                <literal type="string">"]"</literal>
                <comment type="line">// stanza option</comment>
                <literal type="string">", 20:str:general"</literal>
                <literal type="string">", 21:str:Defines the stanza."</literal>
                <literal type="string">", 22:str:Stanza."</literal>
                <literal type="string">", 23:array:"</literal>
                <literal type="string">"["</literal>
                    <literal type="string">"1:str:stanza1"</literal>
                    <literal type="string">", 2:str:stanza2"</literal>
                <literal type="string">"]"</literal>
            <literal type="string">"]"</literal></expr></argument>,
            <argument><expr><literal type="string">"parse and render"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"check help file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>bldHlpRender</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>bldCfg</name></expr></argument>, <argument><expr><call><name>bldHlpParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>bldCfg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"write file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_EXISTS</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/command/help/help.auto.c.inc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name>FUNCTION_HARNESS_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
