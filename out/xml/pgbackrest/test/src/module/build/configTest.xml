<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/pgbackrest/test/src/module/build/configTest.c"><comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Build Config
***********************************************************************************************************************************/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessStorage.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Run
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testRun</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>FUNCTION_HARNESS_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Create default storage object for testing</comment>
    <decl_stmt><decl><type><name>Storage</name> <modifier>*</modifier></type><name>storageTest</name> <init>= <expr><call><name>storagePosixNewP</name><argument_list>(<argument><expr><name>TEST_PATH_STR</name></expr></argument>, <argument><expr><operator>.</operator><name>write</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"bldCfgParse() and bldCfgRender()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"render with label"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>bldCfgRenderLabel</name><argument_list>(<argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"line"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"label"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"line                                                                                                                  "</literal>
                <literal type="string">"      // label"</literal></expr></argument>,
            <argument><expr><literal type="string">"render"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"render without label due to long line"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR_Z</name><argument_list>(
            <argument><expr><call><name>bldCfgRenderLabel</name><argument_list>(
                <argument><expr><call><name>STRDEF</name><argument_list>(
                    <argument><expr><literal type="string">"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"</literal>
                        <literal type="string">"12345678901234567890"</literal></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><name>true</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"label"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678"</literal>
                <literal type="string">"901234567890"</literal></expr></argument>,
            <argument><expr><literal type="string">"render"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"command parse errors"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/build/config/config.yaml"</literal></expr></argument>,
            <argument><expr><literal type="string">"command:\n"</literal>
            <literal type="string">"  archive-get:\n"</literal>
            <literal type="string">"    bogus: test\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"unknown command definition 'bogus'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_COMMAND_VALID</name></cpp:macro>                                                                                                 \
            <cpp:value>"command:\n"                                                                                                           \
            "  archive-get:\n"                                                                                                     \
            "    internal: true\n"                                                                                                 \
            "\n"</cpp:value></cpp:define>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_OPTION_GROUP_VALID</name></cpp:macro>                                                                                            \
            <cpp:value>"optionGroup:\n"                                                                                                       \
            "  repo: {}\n"                                                                                                         \
            "\n"</cpp:value></cpp:define>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"option parse errors"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    bogus: test\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"unknown option definition 'bogus'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    section: global\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"option 'config' requires 'type'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    depend:\n"</literal>
            <literal type="string">"      bogus: test\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"unknown depend definition 'bogus'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup:\n"</literal>
            <literal type="string">"        bogus: test\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"unknown option command definition 'bogus'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    depend: bogus\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"dependency inherited from option 'bogus' before it is defined"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      bogus: {}\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"invalid command 'bogus' in option 'config' command list"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    depend:\n"</literal>
            <literal type="string">"      option: bogus\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"dependency on undefined option 'bogus'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    group: bogus\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"option 'config' has invalid group 'bogus'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  stanza:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    depend:\n"</literal>
            <literal type="string">"      option: online\n"</literal>
            <literal type="string">"  online:\n"</literal>
            <literal type="string">"    type: boolean\n"</literal>
            <literal type="string">"    depend:\n"</literal>
            <literal type="string">"      option: config\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>,
            <argument><expr><literal type="string">"unable to resolve dependencies for option(s) 'config, online'\n"</literal>
            <literal type="string">"HINT: are there circular dependencies?"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"option 'stanza' must exist"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"  stanza:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    depend:\n"</literal>
            <literal type="string">"      option: config\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"option 'stanza' may not depend on other option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"  stanza:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      archive-get:\n"</literal>
            <literal type="string">"        depend:\n"</literal>
            <literal type="string">"          option: config\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"option 'stanza' command 'archive-get' may not depend on other option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument>storageTest</argument>, <argument><literal type="string">"src/build/config/config.yaml"</literal></argument>,
            <argument>TEST_COMMAND_VALID
            TEST_OPTION_GROUP_VALID
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: bool\n"</literal>
            <literal type="string">"  stanza:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      archive-get:\n"</literal>
            <literal type="string">"        depend:\n"</literal>
            <literal type="string">"          option: config\n"</literal>
            <literal type="string">"          default: false\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FormatError</name></expr></argument>, <argument><expr><literal type="string">"dependency default invalid for non-boolean option 'stanza'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"parse and render config"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"src/build/config/config.yaml"</literal></expr></argument>,
            <argument><expr><literal type="string">"command:\n"</literal>
            <literal type="string">"  archive-get:\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      async: {}\n"</literal>
            <literal type="string">"      local: {}\n"</literal>
            <literal type="string">"      remote: {}\n"</literal>
            <literal type="string">"    lock-type: archive\n"</literal>
            <literal type="string">"    log-file: false\n"</literal>
            <literal type="string">"    log-level-default: debug\n"</literal>
            <literal type="string">"    parameter-allowed: true\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  backup:\n"</literal>
            <literal type="string">"    internal: true\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      local: {}\n"</literal>
            <literal type="string">"      remote: {}\n"</literal>
            <literal type="string">"    lock-type: backup\n"</literal>
            <literal type="string">"    lock-required: true\n"</literal>
            <literal type="string">"    lock-remote-required: true\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  help: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  version: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"optionGroup:\n"</literal>
            <literal type="string">"  pg: {}\n"</literal>
            <literal type="string">"  repo: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"option:\n"</literal>
            <literal type="string">"  timeout:\n"</literal>
            <literal type="string">"    type: time\n"</literal>
            <literal type="string">"    default: 10\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup:\n"</literal>
            <literal type="string">"        default: 20\n"</literal>
            <literal type="string">"      archive-get:\n"</literal>
            <literal type="string">"        default: 30\n"</literal>
            <literal type="string">"    allow-range: [5, 50]\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  buffer-size:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: size\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup: {}\n"</literal>
            <literal type="string">"      archive-get:\n"</literal>
            <literal type="string">"        default: 32768\n"</literal>
            <literal type="string">"        allow-list:\n"</literal>
            <literal type="string">"          - 32768\n"</literal>
            <literal type="string">"    allow-list:\n"</literal>
            <literal type="string">"      - 8192\n"</literal>
            <literal type="string">"      - 16384\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      main: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  compress-network:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: string-id\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup:\n"</literal>
            <literal type="string">"        allow-list:\n"</literal>
            <literal type="string">"          - gz\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      main: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  compress-type:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    default: gz\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup: {}\n"</literal>
            <literal type="string">"      archive-get:\n"</literal>
            <literal type="string">"        depend:\n"</literal>
            <literal type="string">"          option: config\n"</literal>
            <literal type="string">"    command-role: {}\n"</literal>
            <literal type="string">"    deprecate:\n"</literal>
            <literal type="string">"      compress: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  compress-level:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: integer\n"</literal>
            <literal type="string">"    required: false\n"</literal>
            <literal type="string">"    allow-range: [0, 9]\n"</literal>
            <literal type="string">"    command: compress-type\n"</literal>
            <literal type="string">"    depend: compress-type\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  compress-level-network:\n"</literal>
            <literal type="string">"    inherit: compress-level\n"</literal>
            <literal type="string">"    internal: true\n"</literal>
            <literal type="string">"    secure: true\n"</literal>
            <literal type="string">"    default: ~\n"</literal>
            <literal type="string">"    depend:\n"</literal>
            <literal type="string">"      option: compress-type\n"</literal>
            <literal type="string">"      list:\n"</literal>
            <literal type="string">"        - none\n"</literal>
            <literal type="string">"        - gz\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  config:\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    default: CFGOPTDEF_CONFIG_PATH \"/\" PROJECT_CONFIG_FILE\n"</literal>
            <literal type="string">"    default-literal: true\n"</literal>
            <literal type="string">"    negate: true\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup: {}\n"</literal>
            <literal type="string">"      archive-get:\n"</literal>
            <literal type="string">"        default: CFGOPTDEF_CONFIG_PATH \"/.\" PROJECT_CONFIG_FILE\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  config-include:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: path\n"</literal>
            <literal type="string">"    default: /include\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      main: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  log-level-console:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: string-id\n"</literal>
            <literal type="string">"    default: warn\n"</literal>
            <literal type="string">"    allow-list:\n"</literal>
            <literal type="string">"      - off\n"</literal>
            <literal type="string">"      - error\n"</literal>
            <literal type="string">"      - warn\n"</literal>
            <literal type="string">"      - debug1\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  log-level-file:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: string-id\n"</literal>
            <literal type="string">"    default: info\n"</literal>
            <literal type="string">"    allow-list: log-level-console\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup:\n"</literal>
            <literal type="string">"        internal: true\n"</literal>
            <literal type="string">"        required: false\n"</literal>
            <literal type="string">"        default: warn\n"</literal>
            <literal type="string">"        allow-list:\n"</literal>
            <literal type="string">"          - off\n"</literal>
            <literal type="string">"          - warn\n"</literal>
            <literal type="string">"        depend:\n"</literal>
            <literal type="string">"          option: log-level-console\n"</literal>
            <literal type="string">"          list:\n"</literal>
            <literal type="string">"            - warn\n"</literal>
            <literal type="string">"        command-role:\n"</literal>
            <literal type="string">"          main: {}\n"</literal>
            <literal type="string">"      help: {}\n"</literal>
            <literal type="string">"      archive-get:\n"</literal>
            <literal type="string">"        default: ~\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  stanza:\n"</literal>
            <literal type="string">"    type: list\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      archive-get: {}\n"</literal>
            <literal type="string">"      backup: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  online:\n"</literal>
            <literal type="string">"    type: boolean\n"</literal>
            <literal type="string">"    default: true\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup:\n"</literal>
            <literal type="string">"        default: false\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      main: {}\n"</literal>
            <literal type="string">"    deprecate:\n"</literal>
            <literal type="string">"      online-old: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  backup-standby:\n"</literal>
            <literal type="string">"    section: global\n"</literal>
            <literal type="string">"    type: boolean\n"</literal>
            <literal type="string">"    default: false\n"</literal>
            <literal type="string">"    depend:\n"</literal>
            <literal type="string">"      option: online\n"</literal>
            <literal type="string">"      default: true\n"</literal>
            <literal type="string">"      list:\n"</literal>
            <literal type="string">"        - true\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      backup: {}\n"</literal>
            <literal type="string">"    command-role:\n"</literal>
            <literal type="string">"      async: {}\n"</literal>
            <literal type="string">"      main: {}\n"</literal>
            <literal type="string">"    deprecate:\n"</literal>
            <literal type="string">"      backup-standby-old: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  pg-path:\n"</literal>
            <literal type="string">"    section: stanza\n"</literal>
            <literal type="string">"    group: pg\n"</literal>
            <literal type="string">"    type: hash\n"</literal>
            <literal type="string">"    deprecate:\n"</literal>
            <literal type="string">"      pg-path: {}\n"</literal>
            <literal type="string">"      pg?-path-indexed: {}\n"</literal>
            <literal type="string">"      db-path: {}\n"</literal>
            <literal type="string">"      db?-path: {}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"  pg-host:\n"</literal>
            <literal type="string">"    section: stanza\n"</literal>
            <literal type="string">"    group: pg\n"</literal>
            <literal type="string">"    type: string\n"</literal>
            <literal type="string">"    command:\n"</literal>
            <literal type="string">"      archive-get:\n"</literal>
            <literal type="string">"        default: host1\n"</literal>
            <literal type="string">"      backup: {}\n"</literal>
            <literal type="string">"    deprecate:\n"</literal>
            <literal type="string">"      pg?-host: {}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>bldCfgRender</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><call><name>bldCfgParse</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"parse and render"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"bldCfgRenderVar128Size()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>bldCfgRenderVar128Size</name><argument_list>(<argument><expr><literal type="number">10000</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"check size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"check config.auto.h"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_GET</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>,
            <argument><expr><literal type="string">"src/config/config.auto.h"</literal></expr></argument>,
            <argument><expr><name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Command and Option Configuration\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"Automatically generated by 'build-code config' -- do not modify directly.\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#ifndef CONFIG_CONFIG_AUTO_H\n"</literal>
            <literal type="string">"#define CONFIG_CONFIG_AUTO_H\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Command constants\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define CFGCMD_ARCHIVE_GET                                          \"archive-get\"\n"</literal>
            <literal type="string">"#define CFGCMD_BACKUP                                               \"backup\"\n"</literal>
            <literal type="string">"#define CFGCMD_HELP                                                 \"help\"\n"</literal>
            <literal type="string">"#define CFGCMD_VERSION                                              \"version\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"#define CFG_COMMAND_TOTAL                                           4\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Option group constants\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define CFG_OPTION_GROUP_TOTAL                                      2\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Option constants\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define CFGOPT_BACKUP_STANDBY                                       \"backup-standby\"\n"</literal>
            <literal type="string">"#define CFGOPT_BUFFER_SIZE                                          \"buffer-size\"\n"</literal>
            <literal type="string">"#define CFGOPT_COMPRESS_LEVEL                                       \"compress-level\"\n"</literal>
            <literal type="string">"#define CFGOPT_COMPRESS_LEVEL_NETWORK                               \"compress-level-network\"\n"</literal>
            <literal type="string">"#define CFGOPT_COMPRESS_NETWORK                                     \"compress-network\"\n"</literal>
            <literal type="string">"#define CFGOPT_COMPRESS_TYPE                                        \"compress-type\"\n"</literal>
            <literal type="string">"#define CFGOPT_CONFIG                                               \"config\"\n"</literal>
            <literal type="string">"#define CFGOPT_CONFIG_INCLUDE                                       \"config-include\"\n"</literal>
            <literal type="string">"#define CFGOPT_LOG_LEVEL_CONSOLE                                    \"log-level-console\"\n"</literal>
            <literal type="string">"#define CFGOPT_LOG_LEVEL_FILE                                       \"log-level-file\"\n"</literal>
            <literal type="string">"#define CFGOPT_ONLINE                                               \"online\"\n"</literal>
            <literal type="string">"#define CFGOPT_STANZA                                               \"stanza\"\n"</literal>
            <literal type="string">"#define CFGOPT_TIMEOUT                                              \"timeout\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"#define CFG_OPTION_TOTAL                                            15\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Option value constants\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_COMPRESS_NETWORK_GZ                               STRID5(\"gz\", 0x3470)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_COMPRESS_NETWORK_GZ_Z                             \"gz\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_CONSOLE_DEBUG1                          STRID6(\"debug1\", 0x7475421441)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_CONSOLE_DEBUG1_Z                        \"debug1\"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_CONSOLE_ERROR                           STRID5(\"error\", 0x127ca450)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_CONSOLE_ERROR_Z                         \"error\"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_CONSOLE_OFF                             STRID5(\"off\", 0x18cf0)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_CONSOLE_OFF_Z                           \"off\"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_CONSOLE_WARN                            STRID5(\"warn\", 0x748370)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_CONSOLE_WARN_Z                          \"warn\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_FILE_DEBUG1                             STRID6(\"debug1\", 0x7475421441)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_FILE_DEBUG1_Z                           \"debug1\"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_FILE_ERROR                              STRID5(\"error\", 0x127ca450)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_FILE_ERROR_Z                            \"error\"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_FILE_OFF                                STRID5(\"off\", 0x18cf0)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_FILE_OFF_Z                              \"off\"\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_FILE_WARN                               STRID5(\"warn\", 0x748370)\n"</literal>
            <literal type="string">"#define CFGOPTVAL_LOG_LEVEL_FILE_WARN_Z                             \"warn\"\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Command enum\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"typedef enum\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    cfgCmdArchiveGet,\n"</literal>
            <literal type="string">"    cfgCmdBackup,\n"</literal>
            <literal type="string">"    cfgCmdHelp,\n"</literal>
            <literal type="string">"    cfgCmdVersion,\n"</literal>
            <literal type="string">"    cfgCmdNone,\n"</literal>
            <literal type="string">"} ConfigCommand;\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Option group enum\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"typedef enum\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    cfgOptGrpPg,\n"</literal>
            <literal type="string">"    cfgOptGrpRepo,\n"</literal>
            <literal type="string">"} ConfigOptionGroup;\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Option enum\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"typedef enum\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    cfgOptBackupStandby,\n"</literal>
            <literal type="string">"    cfgOptBufferSize,\n"</literal>
            <literal type="string">"    cfgOptCompressLevel,\n"</literal>
            <literal type="string">"    cfgOptCompressLevelNetwork,\n"</literal>
            <literal type="string">"    cfgOptCompressNetwork,\n"</literal>
            <literal type="string">"    cfgOptCompressType,\n"</literal>
            <literal type="string">"    cfgOptConfig,\n"</literal>
            <literal type="string">"    cfgOptConfigInclude,\n"</literal>
            <literal type="string">"    cfgOptLogLevelConsole,\n"</literal>
            <literal type="string">"    cfgOptLogLevelFile,\n"</literal>
            <literal type="string">"    cfgOptOnline,\n"</literal>
            <literal type="string">"    cfgOptPgHost,\n"</literal>
            <literal type="string">"    cfgOptPgPath,\n"</literal>
            <literal type="string">"    cfgOptStanza,\n"</literal>
            <literal type="string">"    cfgOptTimeout,\n"</literal>
            <literal type="string">"} ConfigOption;\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"#endif\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"check parse.auto.c.inc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_GET</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>,
            <argument><expr><literal type="string">"src/config/parse.auto.c.inc"</literal></expr></argument>,
            <argument><expr><name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Config Parse Rules\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"Automatically generated by 'build-code config' -- do not modify directly.\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Rule Strings\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define PARSE_RULE_VAL_STR(value)                                   PARSE_RULE_U32_1(value)\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"static const StringPub parseRuleValueStr[] =\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"/include\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"10\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"20\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"30\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"32768\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"gz\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"host1\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"info\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(\"warn\"),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(CFGOPTDEF_CONFIG_PATH \"/\" PROJECT_CONFIG_FILE),\n"</literal>
            <literal type="string">"    PARSE_RULE_STRPUB(CFGOPTDEF_CONFIG_PATH \"/.\" PROJECT_CONFIG_FILE),\n"</literal>
            <literal type="string">"};\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"typedef enum\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    parseRuleValStrQT_FS_include_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrQT_10_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrQT_20_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrQT_30_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrQT_32768_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrQT_gz_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrQT_host1_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrQT_info_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrQT_warn_QT,\n"</literal>
            <literal type="string">"    parseRuleValStrCFGOPTDEF_CONFIG_PATH_SP_QT_FS_QT_SP_PROJECT_CONFIG_FILE,\n"</literal>
            <literal type="string">"    parseRuleValStrCFGOPTDEF_CONFIG_PATH_SP_QT_FS_DT_QT_SP_PROJECT_CONFIG_FILE,\n"</literal>
            <literal type="string">"} ParseRuleValueStr;\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Rule StringIds\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define PARSE_RULE_VAL_STRID(value)                                 PARSE_RULE_U32_1(value)\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"static const StringId parseRuleValueStrId[] =\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    STRID6(\"debug1\", 0x7475421441),\n"</literal>
            <literal type="string">"    STRID5(\"error\", 0x127ca450),\n"</literal>
            <literal type="string">"    STRID5(\"gz\", 0x3470),\n"</literal>
            <literal type="string">"    STRID5(\"info\", 0x799c90),\n"</literal>
            <literal type="string">"    STRID5(\"off\", 0x18cf0),\n"</literal>
            <literal type="string">"    STRID5(\"warn\", 0x748370),\n"</literal>
            <literal type="string">"};\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"typedef enum\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    parseRuleValStrIdDebug1,\n"</literal>
            <literal type="string">"    parseRuleValStrIdError,\n"</literal>
            <literal type="string">"    parseRuleValStrIdGz,\n"</literal>
            <literal type="string">"    parseRuleValStrIdInfo,\n"</literal>
            <literal type="string">"    parseRuleValStrIdOff,\n"</literal>
            <literal type="string">"    parseRuleValStrIdWarn,\n"</literal>
            <literal type="string">"} ParseRuleValueStrId;\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Rule Ints\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define PARSE_RULE_VAL_INT(value)                                   PARSE_RULE_U32_1(value)\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"static const int64_t parseRuleValueInt[] =\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    0,\n"</literal>
            <literal type="string">"    9,\n"</literal>
            <literal type="string">"    5000,\n"</literal>
            <literal type="string">"    8192,\n"</literal>
            <literal type="string">"    10000,\n"</literal>
            <literal type="string">"    16384,\n"</literal>
            <literal type="string">"    20000,\n"</literal>
            <literal type="string">"    30000,\n"</literal>
            <literal type="string">"    32768,\n"</literal>
            <literal type="string">"    50000,\n"</literal>
            <literal type="string">"};\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"typedef enum\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    parseRuleValInt0,\n"</literal>
            <literal type="string">"    parseRuleValInt9,\n"</literal>
            <literal type="string">"    parseRuleValInt5000,\n"</literal>
            <literal type="string">"    parseRuleValInt8192,\n"</literal>
            <literal type="string">"    parseRuleValInt10000,\n"</literal>
            <literal type="string">"    parseRuleValInt16384,\n"</literal>
            <literal type="string">"    parseRuleValInt20000,\n"</literal>
            <literal type="string">"    parseRuleValInt30000,\n"</literal>
            <literal type="string">"    parseRuleValInt32768,\n"</literal>
            <literal type="string">"    parseRuleValInt50000,\n"</literal>
            <literal type="string">"} ParseRuleValueInt;\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Command parse data\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define PARSE_RULE_VAL_CMD(value)                                   PARSE_RULE_U32_1(value)\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"static const ParseRuleCommand parseRuleCommand[CFG_COMMAND_TOTAL] =\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    PARSE_RULE_COMMAND\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_NAME(\"archive-get\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOCK_TYPE(lockTypeArchive),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOG_LEVEL_DEFAULT(logLevelDebug),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_PARAMETER_ALLOWED(true),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_ROLE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleAsync)\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleLocal)\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleMain)\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleRemote)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_COMMAND\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_NAME(\"backup\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOCK_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOCK_REMOTE_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOCK_TYPE(lockTypeBackup),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOG_FILE(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOG_LEVEL_DEFAULT(logLevelInfo),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_ROLE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleLocal)\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleMain)\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleRemote)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_COMMAND\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_NAME(\"help\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOCK_TYPE(lockTypeNone),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOG_FILE(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOG_LEVEL_DEFAULT(logLevelInfo),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_ROLE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleMain)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_COMMAND\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_NAME(\"version\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOCK_TYPE(lockTypeNone),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOG_FILE(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_LOG_LEVEL_DEFAULT(logLevelInfo),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_COMMAND_ROLE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_COMMAND_ROLE(cfgCmdRoleMain)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <literal type="string">"};\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Option group parse data\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"static const ParseRuleOptionGroup parseRuleOptionGroup[CFG_OPTION_GROUP_TOTAL] =\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION_GROUP\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_GROUP_NAME(\"pg\"),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION_GROUP\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_GROUP_NAME(\"repo\"),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <literal type="string">"};\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Option parse data\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define PARSE_RULE_VAL_OPT(value)                                   PARSE_RULE_U32_1(value)\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"static const ParseRuleOption parseRuleOption[CFG_OPTION_TOTAL] =\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"backup-standby\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeBoolean),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NEGATE(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEPEND\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_OPTIONAL_DEPEND_DEFAULT(PARSE_RULE_VAL_BOOL_TRUE),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_OPT(cfgOptOnline),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_BOOL_TRUE,\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_BOOL_FALSE,\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"buffer-size\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeSize),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdArchiveGet),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_LIST\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt32768),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt32768),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_32768_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_LIST\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt8192),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt16384),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"compress-level\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeInteger),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(false),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdArchiveGet),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEPEND\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_OPT(cfgOptConfig),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_RANGE\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt0),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt9),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_RANGE\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt0),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt9),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"compress-level-network\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeInteger),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(false),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECURE(true),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdArchiveGet),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEPEND\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_OPT(cfgOptConfig),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_RANGE\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt0),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt9),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEPEND\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_OPT(cfgOptCompressType),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdNone),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdGz),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_RANGE\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt0),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt9),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"compress-network\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeStringId),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdBackup),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_LIST\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdGz),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"compress-type\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeString),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdArchiveGet),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEPEND\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_OPT(cfgOptConfig),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_gz_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_gz_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"config\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeString),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NEGATE(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionCommandLine),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdArchiveGet),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrCFGOPTDEF_CONFIG_PATH_SP_QT_FS_DT_QT_SP_PROJECT_CONFIG_FILE),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrCFGOPTDEF_CONFIG_PATH_SP_QT_FS_QT_SP_PROJECT_CONFIG_FILE),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"config-include\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypePath),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_FS_include_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"log-level-console\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeStringId),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_LIST\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdOff),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdError),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdWarn),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdDebug1),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdWarn),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_warn_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"log-level-file\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeStringId),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionGlobal),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdHelp)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdBackup),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEPEND\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_OPT(cfgOptLogLevelConsole),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdWarn),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_LIST\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdOff),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdWarn),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdWarn),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_warn_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_NOT_REQUIRED(),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_LIST\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdOff),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdError),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdWarn),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdDebug1),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STRID(parseRuleValStrIdInfo),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_info_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"online\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeBoolean),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionCommandLine),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdBackup),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_BOOL_FALSE,\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_BOOL_TRUE,\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"pg-host\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeString),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionStanza),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_GROUP_MEMBER(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_GROUP_ID(cfgOptGrpPg),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdArchiveGet),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_host1_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"pg-path\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeHash),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_RESET(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionStanza),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_MULTI(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_GROUP_MEMBER(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_GROUP_ID(cfgOptGrpPg),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_DEPRECATE_MATCH(true),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"stanza\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeList),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionCommandLine),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_MULTI(true),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    PARSE_RULE_OPTION\n"</literal>
            <literal type="string">"    (\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_NAME(\"timeout\"),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_TYPE(cfgOptTypeTime),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_REQUIRED(true),\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_SECTION(cfgSectionCommandLine),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_MAIN_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_ASYNC_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_LOCAL_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTION_COMMAND_ROLE_REMOTE_VALID_LIST\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdArchiveGet)\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTION_COMMAND(cfgCmdBackup)\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"        PARSE_RULE_OPTIONAL\n"</literal>
            <literal type="string">"        (\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdArchiveGet),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_RANGE\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt5000),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt50000),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt30000),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_30_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_FILTER_CMD\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_CMD(cfgCmdBackup),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_RANGE\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt5000),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt50000),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt20000),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_20_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"            PARSE_RULE_OPTIONAL_GROUP\n"</literal>
            <literal type="string">"            (\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_ALLOW_RANGE\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt5000),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt50000),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"                PARSE_RULE_OPTIONAL_DEFAULT\n"</literal>
            <literal type="string">"                (\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_INT(parseRuleValInt10000),\n"</literal>
            <literal type="string">"                    PARSE_RULE_VAL_STR(parseRuleValStrQT_10_QT),\n"</literal>
            <literal type="string">"                ),\n"</literal>
            <literal type="string">"            ),\n"</literal>
            <literal type="string">"        ),\n"</literal>
            <literal type="string">"    ),\n"</literal>
            <literal type="string">"};\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Option deprecations\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"#define CFG_OPTION_DEPRECATE_TOTAL                                  7\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"static const ParseRuleOptionDeprecate parseRuleOptionDeprecate[CFG_OPTION_DEPRECATE_TOTAL] =\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    {\n"</literal>
            <literal type="string">"        .name = \"backup-standby-old\",\n"</literal>
            <literal type="string">"        .id = cfgOptBackupStandby,\n"</literal>
            <literal type="string">"        .unindexed = true,\n"</literal>
            <literal type="string">"    },\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    {\n"</literal>
            <literal type="string">"        .name = \"compress\",\n"</literal>
            <literal type="string">"        .id = cfgOptCompressType,\n"</literal>
            <literal type="string">"        .unindexed = true,\n"</literal>
            <literal type="string">"    },\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    {\n"</literal>
            <literal type="string">"        .name = \"db-path\",\n"</literal>
            <literal type="string">"        .id = cfgOptPgPath,\n"</literal>
            <literal type="string">"        .indexed = true,\n"</literal>
            <literal type="string">"        .unindexed = true,\n"</literal>
            <literal type="string">"    },\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    {\n"</literal>
            <literal type="string">"        .name = \"online-old\",\n"</literal>
            <literal type="string">"        .id = cfgOptOnline,\n"</literal>
            <literal type="string">"        .unindexed = true,\n"</literal>
            <literal type="string">"    },\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    {\n"</literal>
            <literal type="string">"        .name = \"pg-host\",\n"</literal>
            <literal type="string">"        .id = cfgOptPgHost,\n"</literal>
            <literal type="string">"        .indexed = true,\n"</literal>
            <literal type="string">"    },\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    {\n"</literal>
            <literal type="string">"        .name = \"pg-path\",\n"</literal>
            <literal type="string">"        .id = cfgOptPgPath,\n"</literal>
            <literal type="string">"        .unindexed = true,\n"</literal>
            <literal type="string">"    },\n"</literal>
            <name>COMMENT_SEPARATOR</name> <literal type="string">"\n"</literal>
            <literal type="string">"    {\n"</literal>
            <literal type="string">"        .name = \"pg-path-indexed\",\n"</literal>
            <literal type="string">"        .id = cfgOptPgPath,\n"</literal>
            <literal type="string">"        .indexed = true,\n"</literal>
            <literal type="string">"    },\n"</literal>
            <literal type="string">"};\n"</literal>
            <literal type="string">"\n"</literal>
            <name>COMMENT_BLOCK_BEGIN</name> <literal type="string">"\n"</literal>
            <literal type="string">"Order for option parse resolution\n"</literal>
            <name>COMMENT_BLOCK_END</name> <literal type="string">"\n"</literal>
            <literal type="string">"static const uint8_t optionResolveOrder[] =\n"</literal>
            <literal type="string">"{\n"</literal>
            <literal type="string">"    cfgOptStanza,\n"</literal>
            <literal type="string">"    cfgOptBufferSize,\n"</literal>
            <literal type="string">"    cfgOptCompressNetwork,\n"</literal>
            <literal type="string">"    cfgOptConfig,\n"</literal>
            <literal type="string">"    cfgOptConfigInclude,\n"</literal>
            <literal type="string">"    cfgOptLogLevelConsole,\n"</literal>
            <literal type="string">"    cfgOptLogLevelFile,\n"</literal>
            <literal type="string">"    cfgOptOnline,\n"</literal>
            <literal type="string">"    cfgOptPgHost,\n"</literal>
            <literal type="string">"    cfgOptPgPath,\n"</literal>
            <literal type="string">"    cfgOptTimeout,\n"</literal>
            <literal type="string">"    cfgOptBackupStandby,\n"</literal>
            <literal type="string">"    cfgOptCompressLevel,\n"</literal>
            <literal type="string">"    cfgOptCompressType,\n"</literal>
            <literal type="string">"    cfgOptCompressLevelNetwork,\n"</literal>
            <literal type="string">"};\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name>FUNCTION_HARNESS_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
