<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/pgbackrest/test/src/module/config/execTest.c"><comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Exec Configuration
***********************************************************************************************************************************/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessConfig.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/crypto/common.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Run
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testRun</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>FUNCTION_HARNESS_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"cfgExecParam()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptStanza</name></expr></argument>, <argument><expr><literal type="string">"test1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptArchiveTimeout</name></expr></argument>, <argument><expr><literal type="string">"5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptBufferSize</name></expr></argument>, <argument><expr><literal type="string">"64KiB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptPgPath</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/db path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptPgPath</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"/db2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptLogSubprocess</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptConfig</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawReset</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptNeutralUmask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawStrId</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoCipherType</name></expr></argument>, <argument><expr><name>cipherTypeAes256Cbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptArchiveAsync</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Set repo1-cipher-pass to make sure it is not passed on the command line</comment>
        <expr_stmt><expr><call><name>hrnCfgEnvRawZ</name><argument_list>(<argument><expr><name>cfgOptRepoCipherPass</name></expr></argument>, <argument><expr><name>TEST_CIPHER_PASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdArchiveGet</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>, <argument><expr><operator>.</operator><name>noStd</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgEnvRemoveRaw</name><argument_list>(<argument><expr><name>cfgOptRepoCipherPass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>cfgExecParam</name><argument_list>(<argument><expr><name>cfgCmdArchiveGet</name></expr></argument>, <argument><expr><name>cfgCmdRoleAsync</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"--archive-async\n--buffer-size=64KiB\n--no-config\n--exec-id=1-test\n--log-subprocess\n--reset-neutral-umask\n"</literal>
                <literal type="string">"--pg1-path=\""</literal> <name>TEST_PATH</name> <literal type="string">"/db path\"\n--pg2-path=/db2\n--repo1-path="</literal> <name>TEST_PATH</name> <literal type="string">"/repo\n--stanza=test1\n"</literal>
                <literal type="string">"archive-get:async\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"exec archive-get -&gt; archive-get:async"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>cfgExecParam</name><argument_list>(<argument><expr><name>cfgCmdBackup</name></expr></argument>, <argument><expr><name>cfgCmdRoleMain</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"--archive-timeout=5\n--buffer-size=64KiB\n--no-config\n--exec-id=1-test\n--log-subprocess\n--reset-neutral-umask\n"</literal>
                <literal type="string">"--pg1-path="</literal> <name>TEST_PATH</name> <literal type="string">"/db path\n--pg2-path=/db2\n--repo1-path="</literal> <name>TEST_PATH</name> <literal type="string">"/repo\n--stanza=test1\nbackup\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"exec archive-get -&gt; backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// -------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstNew</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptStanza</name></expr></argument>, <argument><expr><literal type="string">"test1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptPgPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/db path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDbInclude</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDbInclude</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRecoveryOption</name></expr></argument>, <argument><expr><literal type="string">"a=b"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRecoveryOption</name></expr></argument>, <argument><expr><literal type="string">"c=d"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawReset</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptLogPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>hrnCfgEnvRawZ</name><argument_list>(<argument><expr><name>cfgOptRepoHost</name></expr></argument>, <argument><expr><literal type="string">"bogus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdRestore</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>, <argument><expr><operator>.</operator><name>noStd</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgEnvRemoveRaw</name><argument_list>(<argument><expr><name>cfgOptRepoHost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>KeyValue</name> <modifier>*</modifier></type><name>optionReplace</name> <init>= <expr><call><name>kvNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>kvPut</name><argument_list>(<argument><expr><name>optionReplace</name></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"repo1-path"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"/replace/path"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>kvPut</name><argument_list>(<argument><expr><name>optionReplace</name></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"stanza"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>kvPut</name><argument_list>(<argument><expr><name>optionReplace</name></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><name>CFGOPT_LOG_PATH</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>VARSTRDEF</name><argument_list>(<argument><expr><literal type="string">"/log"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>cfgExecParam</name><argument_list>(<argument><expr><name>cfgCmdRestore</name></expr></argument>, <argument><expr><name>cfgCmdRoleMain</name></expr></argument>, <argument><expr><name>optionReplace</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"--db-include=1\n--db-include=2\n--exec-id=1-test\n--log-path=/log\n--pg1-path="</literal> <name>TEST_PATH</name> <literal type="string">"/db path\n"</literal>
                <literal type="string">"--recovery-option=a=b\n--recovery-option=c=d\n--repo1-path=/replace/path\nrestore\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"exec restore -&gt; restore"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name>FUNCTION_HARNESS_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
