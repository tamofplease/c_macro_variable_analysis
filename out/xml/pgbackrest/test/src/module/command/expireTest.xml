<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/pgbackrest/test/src/module/command/expireTest.c"><comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Expire Command
***********************************************************************************************************************************/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/io/bufferRead.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"command/backup/common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/posix/storage.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessConfig.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessInfo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/harnessStorage.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Helper functions
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>archiveGenerate</name><parameter_list>(
    <parameter><decl><type><specifier>const</specifier> <name>Storage</name> <modifier>*</modifier></type><name>storage</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name>archiveStanzaPath</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>archiveId</name></decl></parameter>,
    <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>majorWal</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <comment type="line">// For simplicity, only allow 2 digits</comment>
    <if_stmt><if>if <condition>(<expr><name>end</name> <operator>&gt;</operator> <literal type="number">99</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>end</name> <operator>=</operator> <literal type="number">99</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>String</name> <modifier>*</modifier></type><name>wal</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><name>start</name></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>end</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>)</condition><block type="pseudo"><block_content>
            <expr_stmt><expr><name>wal</name> <operator>=</operator> <call><name>strNewFmt</name><argument_list>(<argument><expr><literal type="string">"%s0000000%u-9baedd24b61aa15305732ac678c4e2c102435a09"</literal></expr></argument>, <argument><expr><name>majorWal</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else>else<block type="pseudo"><block_content>
            <expr_stmt><expr><name>wal</name> <operator>=</operator> <call><name>strNewFmt</name><argument_list>(<argument><expr><literal type="string">"%s000000%u-9baedd24b61aa15305732ac678c4e2c102435a09"</literal></expr></argument>, <argument><expr><name>majorWal</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt><expr><call><name>storagePutP</name><argument_list>(
            <argument><expr><call><name>storageNewWriteP</name><argument_list>(<argument><expr><name>storage</name></expr></argument>, <argument><expr><call><name>strNewFmt</name><argument_list>(<argument><expr><literal type="string">"%s/%s/%s/%s"</literal></expr></argument>, <argument><expr><name>archiveStanzaPath</name></expr></argument>, <argument><expr><name>archiveId</name></expr></argument>, <argument><expr><name>majorWal</name></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>wal</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name>BUFSTRDEF</name><argument_list>(<argument><expr><name>BOGUS_STR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>archiveExpectList</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>majorWal</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>String</name> <modifier>*</modifier></type><name>result</name> <init>= <expr><call><name>strNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// For simplicity, only allow 2 digits</comment>
    <if_stmt><if>if <condition>(<expr><name>end</name> <operator>&gt;</operator> <literal type="number">99</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>end</name> <operator>=</operator> <literal type="number">99</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>String</name> <modifier>*</modifier></type><name>wal</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

    <for>for <control>(<init><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><name>start</name></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>end</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>)</condition><block type="pseudo"><block_content>
            <expr_stmt><expr><name>wal</name> <operator>=</operator> <call><name>strNewFmt</name><argument_list>(<argument><expr><literal type="string">"%s0000000%u-9baedd24b61aa15305732ac678c4e2c102435a09"</literal></expr></argument>, <argument><expr><name>majorWal</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else>else<block type="pseudo"><block_content>
            <expr_stmt><expr><name>wal</name> <operator>=</operator> <call><name>strNewFmt</name><argument_list>(<argument><expr><literal type="string">"%s000000%u-9baedd24b61aa15305732ac678c4e2c102435a09"</literal></expr></argument>, <argument><expr><name>majorWal</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt><expr><call><name>strCatFmt</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><literal type="string">"%s\n"</literal></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>wal</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>

    <return>return <expr><call><name>strZ</name><argument_list>(<argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/***********************************************************************************************************************************
Test Run
***********************************************************************************************************************************/</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>testRun</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>FUNCTION_HARNESS_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argListBase</name> <init>= <expr><call><name>strLstNew</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>, <argument><expr><name>cfgOptStanza</name></expr></argument>, <argument><expr><literal type="string">"db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>, <argument><expr><name>cfgOptRepoPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Initialize a configuration list that avoids the retention warning</comment>
    <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argListAvoidWarn</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// Set time in seconds since Epoch</comment>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>timeNow</name> <init>= <expr><operator>(</operator><name>uint64_t</name><operator>)</operator><call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name> <modifier>*</modifier></type><name>backupInfoContent</name> <init>= <expr><call><name>strNewFmt</name><argument_list>(
        <argument><expr><literal type="string">"[backup:current]\n"</literal>
        <literal type="string">"20181119-152138F={"</literal>
        <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
        <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000002\","</literal>
        <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
        <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
        <literal type="string">"\"backup-timestamp-start\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-timestamp-stop\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-type\":\"full\","</literal>
        <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
        <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
        <literal type="string">"20181119-152800F={"</literal>
        <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
        <literal type="string">"\"backup-archive-start\":\"000000010000000000000004\",\"backup-archive-stop\":\"000000010000000000000004\","</literal>
        <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
        <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
        <literal type="string">"\"backup-timestamp-start\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-timestamp-stop\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-type\":\"full\","</literal>
        <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
        <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
        <literal type="string">"20181119-152800F_20181119-152152D={"</literal>
        <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000010000000000000006\","</literal>
        <literal type="string">"\"backup-archive-stop\":\"000000010000000000000006\",\"backup-info-repo-size\":2369186,"</literal>
        <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
        <literal type="string">"\"backup-prior\":\"20181119-152800F\",\"backup-reference\":[\"20181119-152800F\"],"</literal>
        <literal type="string">"\"backup-timestamp-start\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-timestamp-stop\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-type\":\"diff\","</literal>
        <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
        <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
        <literal type="string">"20181119-152800F_20181119-152155I={"</literal>
        <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000010000000000000007\","</literal>
        <literal type="string">"\"backup-archive-stop\":\"000000010000000000000007\",\"backup-info-repo-size\":2369186,"</literal>
        <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
        <literal type="string">"\"backup-prior\":\"20181119-152800F_20181119-152152D\","</literal>
        <literal type="string">"\"backup-reference\":[\"20181119-152800F\",\"20181119-152800F_20181119-152152D\"],"</literal>
        <literal type="string">"\"backup-timestamp-start\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-timestamp-stop\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-type\":\"incr\","</literal>
        <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
        <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
        <literal type="string">"20181119-152900F={"</literal>
        <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
        <literal type="string">"\"backup-archive-start\":\"000000010000000000000009\",\"backup-archive-stop\":\"000000010000000000000009\","</literal>
        <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
        <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
        <literal type="string">"\"backup-timestamp-start\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-timestamp-stop\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-type\":\"full\","</literal>
        <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
        <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
        <literal type="string">"20181119-152900F_20181119-152600D={"</literal>
        <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000010000000000000011\","</literal>
        <literal type="string">"\"backup-archive-stop\":\"000000010000000000000011\",\"backup-info-repo-size\":2369186,"</literal>
        <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
        <literal type="string">"\"backup-prior\":\"20181119-152900F\",\"backup-reference\":[\"20181119-152900F\"],"</literal>
        <literal type="string">"\"backup-timestamp-start\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-timestamp-stop\":%"</literal> <name>PRIu64</name> <literal type="string">",\"backup-type\":\"diff\","</literal>
        <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
        <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
        <literal type="string">"\n"</literal>
        <literal type="string">"[db]\n"</literal>
        <literal type="string">"db-catalog-version=201409291\n"</literal>
        <literal type="string">"db-control-version=942\n"</literal>
        <literal type="string">"db-id=1\n"</literal>
        <literal type="string">"db-system-id=6625592122879095702\n"</literal>
        <literal type="string">"db-version=\"9.4\"\n"</literal>
        <literal type="string">"\n"</literal>
        <literal type="string">"[db:history]\n"</literal>
        <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
            <literal type="string">"\"db-version\":\"9.4\"}"</literal></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">41</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">40</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">30</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>,
        <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">30</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">25</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">25</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">20</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>,
        <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">20</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">10</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">10</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>, <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>,
        <argument><expr><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>backupInfoBase</name> <init>= <expr><call><name>harnessInfoChecksumZ</name><argument_list>(<argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>backupInfoContent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// Sleep the remainder of the current second. If cmdExpire() gets the same time as timeNow then expiration won't work as</comment>
    <comment type="line">// expected in the tests.</comment>
    <expr_stmt><expr><call><name>sleepMSec</name><argument_list>(<argument><expr><name>MSEC_PER_SEC</name> <operator>-</operator> <operator>(</operator><call><name>timeMSec</name><argument_list>()</argument_list></call> <operator>%</operator> <name>MSEC_PER_SEC</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"expireBackup()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"manifest file removal"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info</comment>
        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>backupInfoBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Write out manifest files so they exist for full backup</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <macro><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument>storageRepoWrite()</argument>, <argument>STORAGE_REPO_BACKUP <literal type="string">"/20181119-152138F/"</literal> BACKUP_MANIFEST_FILE INFO_COPY_EXT</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <comment type="line">// Put extra file in 20181119-152138F backup directory</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BOGUS_STR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>storagePathCreateP</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"full2 empty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Expire 20181119-152138F - only manifest files removed (extra file remains)</comment>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>expireBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20181119-152138F"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire backup with both manifest files"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F"</literal></expr></argument>, <argument><expr><name>BOGUS_STR</name> <literal type="string">"\n"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"file in backup remains - only manifest files removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>expireBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20181119-152800F"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire backup with no manifest - does not error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20181119-152900F\n20181119-152900F_20181119-152600D\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"only backups in set passed to expireBackup are removed from backup:current (result is sorted)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"expireFullBackup()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Create backup.info</comment>
        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>backupInfoBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-full not set - nothing expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireFullBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"retention-full not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: option 'repo1-retention-full' is not set for 'repo1-retention-full-type=count', the repository may run out"</literal>
                <literal type="string">" of space\n"</literal>
            <literal type="string">"            HINT: to retain full backups indefinitely (without warning), set option 'repo1-retention-full' to the"</literal>
                <literal type="string">" maximum."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-full set - full backup no dependencies expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireFullBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"retention-full=2 - one full backup expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"current backups reduced by 1 full - no dependencies"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20181119-152800F\n20181119-152800F_20181119-152152D\n20181119-152800F_20181119-152155I\n20181119-152900F\n"</literal>
                <literal type="string">"20181119-152900F_20181119-152600D\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"remaining backups correct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(<argument><expr><literal type="string">"P00   INFO: repo1: expire full backup 20181119-152138F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-full set - full backup with dependencies expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireFullBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="string">"retention-full=1 - one full backup and dependencies expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"current backups reduced by 1 full and dependencies"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"20181119-152900F\n20181119-152900F_20181119-152600D\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"remaining backups correct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire full backup set 20181119-152800F, 20181119-152800F_20181119-152152D,"</literal>
                <literal type="string">" 20181119-152800F_20181119-152155I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-full set - no backups expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireFullBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"retention-full=1 - not enough backups to expire any"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"20181119-152900F\n20181119-152900F_20181119-152600D\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"remaining backups correct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"expireDiffBackup()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Create backup.info</comment>
        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>backupInfoBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-diff not set - nothing expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireDiffBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"retention-diff not set - nothing expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="string">"current backups not expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-diff set - nothing yet to expire"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add retention-diff</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argListTemp</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argListTemp</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionDiff</name></expr></argument>, <argument><expr><literal type="string">"6"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argListTemp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireDiffBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"retention-diff set - too soon to expire"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="string">"current backups not expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-diff set - diff and dependent incr expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionDiff</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireDiffBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"retention-diff=2 - full considered in diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"current backups reduced by 2 - one diff and its dependent increment"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20181119-152138F\n20181119-152800F\n20181119-152900F\n20181119-152900F_20181119-152600D\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"remaining backups correct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire diff backup set 20181119-152800F_20181119-152152D, 20181119-152800F_20181119-152155I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireDiffBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"retention-diff=2 but no more to expire"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"current backups not reduced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-diff set - diff with no dependents expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info with two diff - oldest to be expired - no "set:"</comment>
        <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>backupInfoContent</name> <init>= <expr><call><name>harnessInfoChecksumZ</name>
        <argument_list>(
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152800F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152152D={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000010000000000000003\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000010000000000000003\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152800F\",\"backup-reference\":[\"20181119-152800F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"diff\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152155D={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000010000000000000004\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000010000000000000004\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152800F\",\"backup-reference\":[\"20181119-152800F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"diff\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201409291\n"</literal>
            <literal type="string">"db-control-version=942\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6625592122879095702\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}"</literal></expr></argument>
        )</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>backupInfoContent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load parameters</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionDiff</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireDiffBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"retention-diff set - only oldest diff expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"current backups reduced by one"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"20181119-152800F\n20181119-152800F_20181119-152155D\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"remaining backups correct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(<argument><expr><literal type="string">"P00   INFO: repo1: expire diff backup 20181119-152800F_20181119-152152D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"removeExpiredBackup()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"remove expired backup from disk - backup not in current backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152138F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201409291\n"</literal>
            <literal type="string">"db-control-version=942\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6625592122879095702\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Put some files in the backup directories</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152100F/"</literal> <name>BOGUS_STR</name></expr></argument>, <argument><expr><name>BOGUS_STR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BOGUS_STR</name> <literal type="string">"2"</literal></expr></argument>, <argument><expr><name>BOGUS_STR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PATH_CREATE</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152100F_20181119-152152D"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"empty backup directory must not error on delete"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PATH_CREATE</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/"</literal> <name>BOGUS_STR</name></expr></argument>, <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"other path must not be removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_Z</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181118-152100F_20181119-152152D.save"</literal></expr></argument>, <argument><expr><name>BOGUS_STR</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"directory look-alike file must not be removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>removeExpiredBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"remove backups not in backup.info current"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152100F_20181119-152152D\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152100F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20181118-152100F_20181119-152152D.save\n"</literal>
            <literal type="string">"20181119-152138F/\n"</literal>
            <literal type="string">"20181119-152138F/BOGUS2\n"</literal>
            <name>BOGUS_STR</name> <literal type="string">"/\n"</literal>
            <literal type="string">"backup.info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"remove expired backup from disk - no current backups"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info without current backups</comment>
        <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>backupInfoContent</name> <init>= <expr><call><name>harnessInfoChecksumZ</name>
        <argument_list>(
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201409291\n"</literal>
            <literal type="string">"db-control-version=942\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6625592122879095702\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}"</literal></expr></argument>
        )</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>backupInfoContent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>removeExpiredBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"remove backups - backup.info current empty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(<argument><expr><literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152138F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20181118-152100F_20181119-152152D.save\n"</literal>
            <name>BOGUS_STR</name> <literal type="string">"/\n"</literal>
            <literal type="string">"backup.info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"removeExpiredArchive() &amp; cmdExpire()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"check repo local"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoHost</name></expr></argument>, <argument><expr><literal type="string">"/repo/not/local"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>HostInvalidError</name></expr></argument>, <argument><expr><literal type="string">"expire command must be run on the repository host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"check stop file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create the stop file</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storagePosixNewP</name><argument_list>(<argument><expr><name>HRN_PATH_STR</name></expr></argument>, <argument><expr><operator>.</operator><name>write</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><call><name>lockStopFileName</name><argument_list>(<argument><expr><call><name>cfgOptionStr</name><argument_list>(<argument><expr><name>cfgOptStanza</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>StopError</name></expr></argument>, <argument><expr><literal type="string">"stop file exists for stanza db"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Remove the stop file</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_REMOVE</name><argument_list>(<argument><expr><call><name>storagePosixNewP</name><argument_list>(<argument><expr><name>HRN_PATH_STR</name></expr></argument>, <argument><expr><operator>.</operator><name>write</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><call><name>lockStopFileName</name><argument_list>(<argument><expr><call><name>cfgOptionStr</name><argument_list>(<argument><expr><name>cfgOptStanza</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-archive not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info without current backups</comment>
        <decl_stmt><decl><type><specifier>const</specifier> <name>Buffer</name> <modifier>*</modifier></type><name>backupInfoContent</name> <init>= <expr><call><name>harnessInfoChecksumZ</name>
        <argument_list>(
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201409291\n"</literal>
            <literal type="string">"db-control-version=942\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6625592122879095702\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}"</literal></expr></argument>
        )</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>backupInfoContent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"archive retention not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: option 'repo1-retention-full' is not set for 'repo1-retention-full-type=count', the repository may run out"</literal>
                <literal type="string">" of space\n"</literal>
            <literal type="string">"            HINT: to retain full backups indefinitely (without warning), set option 'repo1-retention-full' to the"</literal>
                <literal type="string">" maximum.\n"</literal>
            <literal type="string">"P00   INFO: option 'repo1-retention-archive' is not set - archive logs will not be expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"archive retention not set - retention-full-type=time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(<argument><expr><literal type="string">"P00   INFO: repo1: time-based archive retention not met - archive logs will not be expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-archive set - no current backups"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Set archive retention, archive retention type default but no current backups - code path test</comment>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"archive retention set, retention type default, no current backups"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: option 'repo1-retention-full' is not set for 'repo1-retention-full-type=count', the repository may run out"</literal>
                <literal type="string">" of space\n"</literal>
            <literal type="string">"            HINT: to retain full backups indefinitely (without warning), set option 'repo1-retention-full' to the"</literal>
                <literal type="string">" maximum."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-archive set - no archive on disk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info with current backups spread over different timelines</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152138F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000020000000000000002\",\"backup-archive-stop\":\"000000020000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152152D={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000020000000000000004\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000020000000000000005\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152800F\",\"backup-reference\":[\"20181119-152800F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"diff\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152155I={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000020000000000000007\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000020000000000000007\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152800F_20181119-152152D\","</literal>
            <literal type="string">"\"backup-reference\":[\"20181119-152800F\",\"20181119-152800F_20181119-152152D\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"incr\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000020000000000000009\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000020000000000000009\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152800F\",\"backup-reference\":[\"20181119-152800F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"diff\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152900F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000003\",\"backup-archive-stop\":\"000000010000000000000004\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152900F_20181119-152500I={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000010000000000000006\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000010000000000000006\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152900F\",\"backup-reference\":[\"20181119-152900F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"incr\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201707211\n"</literal>
            <literal type="string">"db-control-version=1002\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-catalog-version\":201707211,\"db-control-version\":1002,\"db-system-id\":6626363367545678089,"</literal>
                <literal type="string">"\"db-version\":\"10\"}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6625592122879095702,\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-id\":6626363367545678089,\"db-version\":\"10\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"no archive on disk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-archive set - remove archives across timelines"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"10-2"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"archive retention type = full (default), repo1-retention-archive=3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only 9.4-1/0000000100000000/000000010000000000000001 removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000200000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"none removed from 9.4-1/0000000200000000 - crossing timelines to play through PITR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"000000010000000000000001 and 000000010000000000000002 removed from 10-2/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000010000000000000001, stop = 000000010000000000000001\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 remove archive, start = 000000010000000000000001, stop = 000000010000000000000002"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-archive set - latest archive not expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"archive retention type = full (default), repo1-retention-archive=2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only 9.4-1/0000000100000000/000000010000000000000002 remains in major wal 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000200000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only 9.4-1/0000000200000000/000000010000000000000001 removed from major wal 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"none removed from 10-2/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">// Only last 2 full backups and dependents are PITRable, first full backup is not</comment>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000010000000000000003, stop = 000000020000000000000001\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-archive set to lowest - keep PITR for each archiveId"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"archive retention type = full (default), repo1-retention-archive=1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only 9.4-1/0000000100000000/000000010000000000000002 remains in major wal 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000200000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"nothing removed from 9.4-1/0000000200000000 major wal 2 - each archiveId must have one backup to play"</literal>
            <literal type="string">" through PITR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"none removed from 10-2/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-archive, retention-archive-type=diff, retention-diff set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="string">"diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionDiff</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"full counts as differential and incremental associated with differential expires"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name> <modifier>*</modifier></type><name>result</name> <init>= <expr><call><name>strNewFmt</name><argument_list>(
            <argument><expr><literal type="string">"%s%s%s%s"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only 9.4-1/0000000100000000/000000010000000000000002 remains in major wal 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000200000000"</literal></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>result</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"all in-between removed from 9.4-1/0000000200000000 major wal 2 - last backup able to play through PITR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"none removed from 10-2/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000020000000000000003, stop = 000000020000000000000003\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000020000000000000006, stop = 000000020000000000000006\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000020000000000000008, stop = 000000020000000000000008\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention-archive, retention-archive-type=incr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="string">"incr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Regenerate archive</comment>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"differential and full count as an incremental"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>strNewFmt</name><argument_list>(
            <argument><expr><literal type="string">"%s%s%s"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only 9.4-1/0000000100000000/000000010000000000000002 remains in major wal 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000200000000"</literal></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>result</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"incremental and after remain in 9.4-1/0000000200000000 major wal 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"none removed from 10-2/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000020000000000000001, stop = 000000020000000000000001\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000020000000000000003, stop = 000000020000000000000003\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000020000000000000006, stop = 000000020000000000000006\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire command - dry run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Write backup.manifest so infoBackup reconstruct produces same results as backup.info on disk</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152152D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152155I/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152252D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F_20181119-152500I/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionDiff</name></expr></argument>, <argument><expr><literal type="string">"3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="string">"diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire (dry-run) do not remove last backup in archive sub path or sub path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><call><name>storagePathExistsP</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>,
            <argument><expr><literal type="string">"archive sub path not removed because of dry-run, else would be removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_EXISTS</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"backup not removed because of dry-run, else would be removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: [DRY-RUN] repo1: expire full backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 0000000100000000, stop = 0000000100000000\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000020000000000000008, stop = 000000020000000000000008\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire via backup command"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Copy the repo to another repo</comment>
        <expr_stmt><expr><call><name>HRN_SYSTEM</name><argument_list>(<argument><expr><literal type="string">"mkdir "</literal> <name>TEST_PATH</name> <literal type="string">"/repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_SYSTEM</name><argument_list>(<argument><expr><literal type="string">"cp -r "</literal> <name>TEST_PATH</name> <literal type="string">"/repo/* "</literal> <name>TEST_PATH</name> <literal type="string">"/repo2/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Configure multi-repo and set the repo option to expire the second repo (non-default) files</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionDiff</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoPath</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionDiff</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList2</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList2</name></expr></argument>, <argument><expr><name>cfgOptRepo</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList2</name></expr></argument>, <argument><expr><name>cfgOptPgPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/pg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdBackup</name></expr></argument>, <argument><expr><name>argList2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"via backup command: expire last backup in archive sub path and remove sub path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><call><name>storagePathExistsP</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>,
            <argument><expr><literal type="string">"archive sub path removed repo2 (default)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><call><name>storagePathExistsP</name><argument_list>(<argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>,
            <argument><expr><literal type="string">"archive sub path repo1 not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"get backup.info repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><call><name>strLstExists</name><argument_list>(<argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20181119-152138F"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>,
            <argument><expr><literal type="string">"backup removed from repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"get backup.info repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><call><name>strLstExists</name><argument_list>(<argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20181119-152138F"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><literal type="string">"backup exists repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo2: expire full backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo2: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo2: 9.4-1 remove archive, start = 0000000100000000, stop = 0000000100000000\n"</literal>
            <literal type="string">"P00   INFO: repo2: 9.4-1 remove archive, start = 000000020000000000000008, stop = 000000020000000000000008\n"</literal>
            <literal type="string">"P00   INFO: repo2: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire command - no dry run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add to previous list and specify repo</comment>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepo</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire last backup in archive sub path and remove sub path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><call><name>storagePathExistsP</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>,
            <argument><expr><literal type="string">"archive sub path removed repo1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire full backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 0000000100000000, stop = 0000000100000000\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000020000000000000008, stop = 000000020000000000000008\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire command - multi-repo errors, continue to next repo after error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoPath</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionDiff</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create default storage object for dry-run testing</comment>
        <decl_stmt><decl><type><name>Storage</name> <modifier>*</modifier></type><name>storageTest</name> <init>= <expr><call><name>storagePosixNewP</name><argument_list>(<argument><expr><name>TEST_PATH_STR</name></expr></argument>, <argument><expr><operator>.</operator><name>write</name> <operator>=</operator> <name>true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>harnessLogLevelSet</name><argument_list>(<argument><expr><name>logLevelDetail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Rename backup.info files on repo1 to cause error</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_MOVE</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo/backup/db/"</literal> <name>INFO_BACKUP_FILE</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo/backup/db/"</literal> <name>INFO_BACKUP_FILE</name> <literal type="string">".save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <macro><name>HRN_STORAGE_MOVE</name><argument_list>(
            <argument>storageTest</argument>, <argument>TEST_PATH <literal type="string">"/repo/backup/db/"</literal> INFO_BACKUP_FILE INFO_COPY_EXT</argument>,
            <argument>TEST_PATH <literal type="string">"/repo/backup/db/"</literal> INFO_BACKUP_FILE INFO_COPY_EXT <literal type="string">".save"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <comment type="line">// Rename archive.info file on repo2 to cause error</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_MOVE</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo2/archive/db/"</literal> <name>INFO_ARCHIVE_FILE</name></expr></argument>,
            <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo2/archive/db/"</literal> <name>INFO_ARCHIVE_FILE</name> <literal type="string">".save"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Configure dry-run</comment>
        <expr_stmt><expr><name>argList2</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList2</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CommandError</name></expr></argument>, <argument><expr><name>CFGCMD_EXPIRE</name> <literal type="string">" command encountered 2 error(s), check the log file for details"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00  ERROR: [055]: [DRY-RUN] repo1: unable to load info file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo/backup/db/backup.info' or '"</literal>
                         <name>TEST_PATH</name> <literal type="string">"/repo/backup/db/backup.info.copy':\n"</literal>
            <literal type="string">"            FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo/backup/db/backup.info' for read\n"</literal>
            <literal type="string">"            FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo/backup/db/backup.info.copy' for read\n"</literal>
            <literal type="string">"            HINT: backup.info cannot be opened and is required to perform a backup.\n"</literal>
            <literal type="string">"            HINT: has a stanza-create been performed?\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: expire diff backup set 20181119-152800F_20181119-152152D,"</literal>
                <literal type="string">" 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: remove expired backup 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: remove expired backup 20181119-152800F_20181119-152152D\n"</literal>
            <literal type="string">"P00  ERROR: [055]: [DRY-RUN] repo2: unable to load info file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo2/archive/db/archive.info' or '"</literal>
                         <name>TEST_PATH</name> <literal type="string">"/repo2/archive/db/archive.info.copy':\n"</literal>
            <literal type="string">"            FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo2/archive/db/archive.info' for read\n"</literal>
            <literal type="string">"            FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo2/archive/db/archive.info.copy'"</literal>
                <literal type="string">" for read\n"</literal>
            <literal type="string">"            HINT: archive.info cannot be opened but is required to push/get WAL segments.\n"</literal>
            <literal type="string">"            HINT: is archive_command configured correctly in postgresql.conf?\n"</literal>
            <literal type="string">"            HINT: has a stanza-create been performed?\n"</literal>
            <literal type="string">"            HINT: use --no-archive-check to disable archive checks during backup if you have an alternate"</literal>
                         <literal type="string">" archiving scheme."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Restore saved archive.info file</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_MOVE</name><argument_list>(<argument><expr><name>storageTest</name></expr></argument>, <argument><expr><literal type="string">"repo2/archive/db/"</literal> <name>INFO_ARCHIVE_FILE</name> <literal type="string">".save"</literal></expr></argument>, <argument><expr><literal type="string">"repo2/archive/db/"</literal> <name>INFO_ARCHIVE_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire command - multi-repo, continue to next repo after error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CommandError</name></expr></argument>, <argument><expr><name>CFGCMD_EXPIRE</name> <literal type="string">" command encountered 1 error(s), check the log file for details"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00  ERROR: [055]: [DRY-RUN] repo1: unable to load info file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo/backup/db/backup.info' or '"</literal>
                         <name>TEST_PATH</name> <literal type="string">"/repo/backup/db/backup.info.copy':\n"</literal>
            <literal type="string">"            FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo/backup/db/backup.info' for read\n"</literal>
            <literal type="string">"            FileMissingError: unable to open missing file '"</literal> <name>TEST_PATH</name> <literal type="string">"/repo/backup/db/backup.info.copy' for read\n"</literal>
            <literal type="string">"            HINT: backup.info cannot be opened and is required to perform a backup.\n"</literal>
            <literal type="string">"            HINT: has a stanza-create been performed?\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: expire diff backup set 20181119-152800F_20181119-152152D,"</literal>
                <literal type="string">" 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: remove expired backup 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: remove expired backup 20181119-152800F_20181119-152152D\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo2: 9.4-1 archive retention on backup 20181119-152800F, start = 000000020000000000000002,"</literal>
                <literal type="string">" stop = 000000020000000000000002\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo2: 9.4-1 archive retention on backup 20181119-152800F_20181119-152252D,"</literal>
                <literal type="string">" start = 000000020000000000000009\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: 9.4-1 remove archive, start = 000000020000000000000004,"</literal>
                <literal type="string">" stop = 000000020000000000000007\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo2: 10-2 archive retention on backup 20181119-152900F, start = 000000010000000000000003\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Restore saved backup.info files</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_MOVE</name><argument_list>(
            <argument><expr><name>storageTest</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo/backup/db/"</literal> <name>INFO_BACKUP_FILE</name> <literal type="string">".save"</literal></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo/backup/db/"</literal> <name>INFO_BACKUP_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <macro><name>HRN_STORAGE_MOVE</name><argument_list>(
            <argument>storageTest</argument>, <argument>TEST_PATH <literal type="string">"/repo/backup/db/"</literal> INFO_BACKUP_FILE INFO_COPY_EXT <literal type="string">".save"</literal></argument>,
            <argument>TEST_PATH <literal type="string">"/repo/backup/db/"</literal> INFO_BACKUP_FILE INFO_COPY_EXT</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire command - multi-repo, dry run: archive and backups not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire (dry-run) - log expired backups and archive path to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="string">"10-2/\n9.4-1/\narchive.info\n"</literal></expr></argument>, <argument><expr><operator>.</operator><name>noRecurse</name> <operator>=</operator> <name>true</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"repo1: 9.4-1 archive path not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="string">"10-2/\n9.4-1/\narchive.info\n"</literal></expr></argument>, <argument><expr><operator>.</operator><name>noRecurse</name> <operator>=</operator> <name>true</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"repo2: 9.4-1 archive path not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/"</literal></expr></argument>,
            <argument><expr><literal type="string">"0000000200000000/\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000002-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000004-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000005-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000007-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000009-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000010-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"repo2: 9.4-1 nothing removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20181119-152800F/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152152D/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152155I/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D/\n"</literal>
            <literal type="string">"20181119-152900F/\n"</literal>
            <literal type="string">"20181119-152900F_20181119-152500I/\n"</literal>
            <literal type="string">"backup.info\n"</literal>
            <literal type="string">"backup.info.copy\n"</literal></expr></argument>, <argument><expr><operator>.</operator><name>noRecurse</name> <operator>=</operator> <name>true</name></expr></argument>, <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"repo1: backups not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20181119-152800F/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152152D/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152155I/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D/\n"</literal>
            <literal type="string">"20181119-152900F/\n"</literal>
            <literal type="string">"20181119-152900F_20181119-152500I/\n"</literal>
            <literal type="string">"backup.info\n"</literal>
            <literal type="string">"backup.info.copy\n"</literal></expr></argument>, <argument><expr><operator>.</operator><name>noRecurse</name> <operator>=</operator> <name>true</name></expr></argument>, <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"repo2: backups not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: [DRY-RUN] repo1: expire full backup set 20181119-152800F, 20181119-152800F_20181119-152152D, "</literal>
                <literal type="string">"20181119-152800F_20181119-152155I, 20181119-152800F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152800F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152800F_20181119-152152D\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152800F\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove archive path "</literal> <name>TEST_PATH</name> <literal type="string">"/repo/archive/db/9.4-1\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 10-2 archive retention on backup 20181119-152900F, start = 000000010000000000000003\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: expire diff backup set 20181119-152800F_20181119-152152D,"</literal>
                <literal type="string">" 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: remove expired backup 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: remove expired backup 20181119-152800F_20181119-152152D\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo2: 9.4-1 archive retention on backup 20181119-152800F, start = 000000020000000000000002,"</literal>
                <literal type="string">" stop = 000000020000000000000002\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo2: 9.4-1 archive retention on backup 20181119-152800F_20181119-152252D,"</literal>
                <literal type="string">" start = 000000020000000000000009\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: 9.4-1 remove archive, start = 000000020000000000000004,"</literal>
                <literal type="string">" stop = 000000020000000000000007\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo2: 10-2 archive retention on backup 20181119-152900F, start = 000000010000000000000003\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo2: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire command - multi-repo, archive and backups removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Rerun previous test without dry-run</comment>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire backups and remove archive path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="string">"10-2/\narchive.info\n"</literal></expr></argument>, <argument><expr><operator>.</operator><name>noRecurse</name> <operator>=</operator> <name>true</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"repo1: retention-archive-type=full so 9.4-1 archive path removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="string">"10-2/\n9.4-1/\narchive.info\n"</literal></expr></argument>, <argument><expr><operator>.</operator><name>noRecurse</name> <operator>=</operator> <name>true</name></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"repo2: retention-archive-type=diff so 9.4-1 archive path not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/"</literal></expr></argument>,
            <argument><expr><literal type="string">"0000000200000000/\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000002-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000009-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal>
            <literal type="string">"0000000200000000/000000020000000000000010-9baedd24b61aa15305732ac678c4e2c102435a09\n"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"repo2: 9.4-1 only archives not meeting retention for archive-retention-type=diff are removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire full backup set 20181119-152800F, 20181119-152800F_20181119-152152D, "</literal>
                <literal type="string">"20181119-152800F_20181119-152155I, 20181119-152800F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F_20181119-152152D\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove archive path "</literal> <name>TEST_PATH</name> <literal type="string">"/repo/archive/db/9.4-1\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 10-2 archive retention on backup 20181119-152900F, start = 000000010000000000000003\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo2: expire diff backup set 20181119-152800F_20181119-152152D,"</literal>
                <literal type="string">" 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: repo2: remove expired backup 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: repo2: remove expired backup 20181119-152800F_20181119-152152D\n"</literal>
            <literal type="string">"P00 DETAIL: repo2: 9.4-1 archive retention on backup 20181119-152800F, start = 000000020000000000000002,"</literal>
                <literal type="string">" stop = 000000020000000000000002\n"</literal>
            <literal type="string">"P00 DETAIL: repo2: 9.4-1 archive retention on backup 20181119-152800F_20181119-152252D,"</literal>
                <literal type="string">" start = 000000020000000000000009\n"</literal>
            <literal type="string">"P00   INFO: repo2: 9.4-1 remove archive, start = 000000020000000000000004, stop = 000000020000000000000007\n"</literal>
            <literal type="string">"P00 DETAIL: repo2: 10-2 archive retention on backup 20181119-152900F, start = 000000010000000000000003\n"</literal>
            <literal type="string">"P00   INFO: repo2: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"repo1: get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"repo1: backup.info updated on disk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>strLstSort</name><argument_list>(<argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>sortOrderAsc</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20181119-152900F\n20181119-152900F_20181119-152500I\n"</literal></expr></argument>, <argument><expr><literal type="string">"repo1: remaining current backups correct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"repo2: get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"repo2: backup.info updated on disk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>strLstSort</name><argument_list>(<argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>sortOrderAsc</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20181119-152800F\n20181119-152800F_20181119-152252D\n20181119-152900F\n20181119-152900F_20181119-152500I\n"</literal></expr></argument>,
            <argument><expr><literal type="string">"repo2: remaining current backups correct"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>harnessLogLevelReset</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire command - multi-repo, adhoc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// With multi-repo config from previous test, adhoc expire on backup that doesn't exist</comment>
        <expr_stmt><expr><name>argList2</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList2</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20201119-123456F_20201119-234567I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"label format OK but backup does not exist on any repo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   WARN: backup 20201119-123456F_20201119-234567I does not exist\n"</literal>
            <literal type="string">"            HINT: run the info command and confirm the backup is listed\n"</literal>
            <literal type="string">"P00   INFO: repo2: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo2: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Rerun on single repo</comment>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList2</name></expr></argument>, <argument><expr><name>cfgOptRepo</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"label format OK but backup does not exist on requested repo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: backup 20201119-123456F_20201119-234567I does not exist\n"</literal>
            <literal type="string">"            HINT: run the info command and confirm the backup is listed\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// With multiple repos, adhoc expire backup only on one repo</comment>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152900F_20181119-152500I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepo</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Incremental removed but no archives expired because the only remaining full backups must be able to play through PITR</comment>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"label format OK and expired on specified repo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: [DRY-RUN] repo1: expiring latest backup 20181119-152900F_20181119-152500I - the ability to perform"</literal>
                <literal type="string">" point-in-time-recovery (PITR) may be affected\n"</literal>
            <literal type="string">"            HINT: non-default settings for 'repo1-retention-archive'/'repo1-retention-archive-type' (even in prior"</literal>
                <literal type="string">" expires) can cause gaps in the WAL.\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: expire adhoc backup 20181119-152900F_20181119-152500I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152900F_20181119-152500I\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Incorrect backup label format provided</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><name>BOGUS_STR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>OptionInvalidValueError</name></expr></argument>, <argument><expr><literal type="string">"'"</literal> <name>BOGUS_STR</name> <literal type="string">"' is not a valid backup label format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire command - archive removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptPgPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/pg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdBackup</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire remove archive path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: remove archive path "</literal> <name>TEST_PATH</name> <literal type="string">"/repo/archive/db/9.4-1\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152138F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152900F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000004\",\"backup-archive-stop\":\"000000010000000000000004\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201707211\n"</literal>
            <literal type="string">"db-control-version=1002\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-catalog-version\":201707211,\"db-control-version\":1002,\"db-system-id\":6626363367545678089,"</literal>
                <literal type="string">"\"db-version\":\"10\"}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"retention backup no archive-start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="string">"full"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"backup selected for retention does not have archive-start so do nothing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"nothing removed from 9.4-1/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"prior backup has no archive-start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="string">"full"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>harnessLogLevelSet</name><argument_list>(<argument><expr><name>logLevelDetail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>removeExpiredArchive</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"backup earlier than selected for retention does not have archive-start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152138F, start = 000000010000000000000002,"</literal>
                <literal type="string">" stop = 000000010000000000000002\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152900F, start = 000000010000000000000004\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000010000000000000001, stop = 000000010000000000000001\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000010000000000000003, stop = 000000010000000000000003"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire history files - dry run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info and archives spread over different timelines</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152138F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152900F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000030000000000000006\",\"backup-archive-stop\":\"000000030000000000000006\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152900F_20181119-152500I={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000030000000000000008\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000030000000000000008\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152900F\",\"backup-reference\":[\"20181119-152900F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"incr\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201707211\n"</literal>
            <literal type="string">"db-control-version=1002\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-catalog-version\":201707211,\"db-control-version\":1002,\"db-system-id\":6626363367545678089,"</literal>
                <literal type="string">"\"db-version\":\"10\"}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6625592122879095702,\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-id\":6626363367545678089,\"db-version\":\"10\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PATH_REMOVE</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/0000000100000000"</literal></expr></argument>, <argument><expr><operator>.</operator><name>recurse</name><operator>=</operator><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"10-2"</literal></expr></argument>, <argument><expr><literal type="string">"0000000300000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/00000002.history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/00000003.history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire (dry-run) do not remove 00000002.history file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_EXISTS</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/00000002.history"</literal></expr></argument>, <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"history file not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152138F, start = 000000010000000000000002\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 10-2 archive retention on backup 20181119-152900F, start = 000000030000000000000006\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 10-2 remove history file 00000002.history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire history files - no dry run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire remove 00000002.history file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><call><name>storageExistsP</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/00000002.history"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"history file removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_EXISTS</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/00000003.history"</literal></expr></argument>, <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"history file not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152138F, start = 000000010000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 10-2 archive retention on backup 20181119-152900F, start = 000000030000000000000006\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 remove history file 00000002.history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire history files via backup command"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptPgPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/pg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdBackup</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Restore the history file</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/00000002.history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire history files via backup command"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_BOOL</name><argument_list>(
            <argument><expr><call><name>storageExistsP</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/00000002.history"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><literal type="string">"history file removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_EXISTS</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/00000003.history"</literal></expr></argument>, <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"history file not removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152138F, start = 000000010000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 10-2 archive retention on backup 20181119-152900F, start = 000000030000000000000006\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 remove history file 00000002.history"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>harnessLogLevelReset</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire backup history manifests older than 20 days - dry run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Get number of days since latest unexpired backup 20181119-152138F</comment>
        <decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>historyRetentionDays</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator><operator>(</operator><operator>(</operator><name>timeNow</name> <operator>-</operator> <literal type="number">1542640898</literal><operator>)</operator> <operator>/</operator> <name>SEC_PER_DAY</name><operator>)</operator> <operator>+</operator> <literal type="number">20</literal></expr></init></decl>;</decl_stmt>

        <comment type="line">// Add history manifests for unexpired backups</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2018/20181119-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2018/20181119-152900F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2018/20181119-152900F_20181119-152500I.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add 21 day-old full backup</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2018/20181029-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add 15 day-old incr backup</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2018/20181029-152138F_20181104-152138I.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add 14 day-old full backup</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2018/20181105-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add one year old full backup</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2017/20171119-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawFmt</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionHistory</name></expr></argument>, <argument><expr><literal type="string">"%u"</literal></expr></argument>, <argument><expr><name>historyRetentionDays</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history"</literal></expr></argument>,
            <argument><expr><literal type="string">"2017/\n"</literal>
            <comment type="line">// Previous year history</comment>
            <literal type="string">"2017/20171119-152138F.manifest.gz\n"</literal>
            <literal type="string">"2018/\n"</literal>
            <comment type="line">// 21 day-old history manifest</comment>
            <literal type="string">"2018/20181029-152138F.manifest.gz\n"</literal>
            <comment type="line">// 15 day-old history manifest</comment>
            <literal type="string">"2018/20181029-152138F_20181104-152138I.manifest.gz\n"</literal>
            <comment type="line">// 14 day-old history manifest</comment>
            <literal type="string">"2018/20181105-152138F.manifest.gz\n"</literal>
            <comment type="line">// Manifests for current backups</comment>
            <literal type="string">"2018/20181119-152138F.manifest.gz\n"</literal>
            <literal type="string">"2018/20181119-152900F.manifest.gz\n"</literal>
            <literal type="string">"2018/20181119-152900F_20181119-152500I.manifest.gz\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup history path 2017\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup history manifest 20181029-152138F_20181104-152138I.manifest.gz\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup history manifest 20181029-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire backup history manifests older than 20 days"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load config with the backup command to be sure repo-retention-history is valid</comment>
        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawFmt</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionHistory</name></expr></argument>, <argument><expr><literal type="string">"%u"</literal></expr></argument>, <argument><expr><name>historyRetentionDays</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2019/20191119-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history"</literal></expr></argument>,
            <argument><expr><literal type="string">"2018/\n"</literal>
            <comment type="line">// 14 day-old history manifest</comment>
            <literal type="string">"2018/20181105-152138F.manifest.gz\n"</literal>
            <comment type="line">// Manifests for current backups</comment>
            <literal type="string">"2018/20181119-152138F.manifest.gz\n"</literal>
            <literal type="string">"2018/20181119-152900F.manifest.gz\n"</literal>
            <literal type="string">"2018/20181119-152900F_20181119-152500I.manifest.gz\n"</literal>
            <literal type="string">"2019/\n"</literal>
            <literal type="string">"2019/20191119-152138F.manifest.gz\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup history path 2017\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup history manifest 20181029-152138F_20181104-152138I.manifest.gz\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup history manifest 20181029-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire backup history manifests older than 20 days using backup config"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add 21 day-old full backup</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2018/20181029-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add one year old full backup</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history/2017/20171119-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptPgPath</name></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/pg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdBackup</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/backup.history"</literal></expr></argument>,
            <argument><expr><literal type="string">"2018/\n"</literal>
            <comment type="line">// 14 day-old history manifest</comment>
            <literal type="string">"2018/20181105-152138F.manifest.gz\n"</literal>
            <comment type="line">// Manifests for current backups are kept</comment>
            <literal type="string">"2018/20181119-152138F.manifest.gz\n"</literal>
            <literal type="string">"2018/20181119-152900F.manifest.gz\n"</literal>
            <literal type="string">"2018/20181119-152900F_20181119-152500I.manifest.gz\n"</literal>
            <literal type="string">"2019/\n"</literal>
            <literal type="string">"2019/20191119-152138F.manifest.gz\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 no archive to remove\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup history path 2017\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup history manifest 20181029-152138F.manifest.gz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"info files mismatch"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"archive.info has only current db with different db history id as backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load Parameters</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152138F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000004\",\"backup-archive-stop\":\"000000010000000000000004\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152900F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000006\",\"backup-archive-stop\":\"000000010000000000000006\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201707211\n"</literal>
            <literal type="string">"db-control-version=1002\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":1002,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"10\"}\n"</literal>
            <literal type="string">"2={\"db-catalog-version\":201707211,\"db-control-version\":1002,\"db-system-id\":6626363367545678089,"</literal>
                <literal type="string">"\"db-version\":\"10\"}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Write backup.manifest so infoBackup reconstruct produces same results as backup.info on disk and removeExpiredBackup</comment>
        <comment type="line">// will find backup directories to remove</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6626363367545678089,\"db-version\":\"10\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create 10-1 and 10-2 although 10-2 is not realistic since the archive.info knows nothing about it - it is just to</comment>
        <comment type="line">// confirm that nothing from disk is removed and it will also be used for the next test.</comment>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="string">"10-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="string">"10-2"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CommandError</name></expr></argument>, <argument><expr><name>CFGCMD_EXPIRE</name> <literal type="string">" command encountered 1 error(s), check the log file for details"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire full backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00  ERROR: [029]: repo1: archive expiration cannot continue - archive and backup history lists do not match"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"none removed from 10-1/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"none removed from 10-2/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"archive.info old history db system id not the same as backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6626363367545671234,\"db-version\":\"10\"}\n"</literal>
            <literal type="string">"2={\"db-id\":6626363367545678089,\"db-version\":\"10\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CommandError</name></expr></argument>, <argument><expr><name>CFGCMD_EXPIRE</name> <literal type="string">" command encountered 1 error(s), check the log file for details"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00  ERROR: [029]: repo1: archive expiration cannot continue - archive and backup history lists do not match"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"archive.info old history db version not the same as backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6625592122879095702,\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-id\":6626363367545678089,\"db-version\":\"10\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CommandError</name></expr></argument>, <argument><expr><name>CFGCMD_EXPIRE</name> <literal type="string">" command encountered 1 error(s), check the log file for details"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00  ERROR: [029]: repo1: archive expiration cannot continue - archive and backup history lists do not match"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"archive.info has only current db with same db history id as backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152138F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000004\",\"backup-archive-stop\":\"000000010000000000000004\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152900F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000006\",\"backup-archive-stop\":\"000000010000000000000006\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201707211\n"</literal>
            <literal type="string">"db-control-version=1002\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":1002,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"10\"}\n"</literal>
            <literal type="string">"2={\"db-catalog-version\":201707211,\"db-control-version\":1002,\"db-system-id\":6626363367545678089,"</literal>
                <literal type="string">"\"db-version\":\"10\"}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Write backup.manifest so infoBackup reconstruct produces same results as backup.info on disk and removeExpiredBackup</comment>
        <comment type="line">// will find backup directories to remove</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"10\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"2={\"db-id\":6626363367545678089,\"db-version\":\"10\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Here, although backup 20181119-152138F of 10-1 will be expired, the WAL in 10-1 will not since the archive.info</comment>
        <comment type="line">// does not know about that dir. Again, not really realistic since if it is on disk and reconstructed it would have. So</comment>
        <comment type="line">// here we are testing that things on disk that we are not aware of are not touched.</comment>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire archive that archive.info is aware of"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire full backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo1: expire full backup 20181119-152800F\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo1: 10-2 remove archive, start = 000000010000000000000001, stop = 000000010000000000000005"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"none removed from 10-1/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/10-2/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"all prior to 000000010000000000000006 removed from 10-2/0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"expireAdhocBackup()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">// Test setup for this section</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152138F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000020000000000000001\",\"backup-archive-stop\":\"000000020000000000000001\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000020000000000000002\",\"backup-archive-stop\":\"000000020000000000000002\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152152D={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000020000000000000004\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000020000000000000005\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152800F\",\"backup-reference\":[\"20181119-152800F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"diff\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152155I={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000020000000000000007\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000020000000000000007\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152800F_20181119-152152D\","</literal>
            <literal type="string">"\"backup-reference\":[\"20181119-152800F\",\"20181119-152800F_20181119-152152D\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"incr\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000020000000000000009\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000020000000000000009\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152800F\",\"backup-reference\":[\"20181119-152800F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"diff\","</literal>
            <literal type="string">"\"db-id\":1,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152850F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000004\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152900F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000006\",\"backup-archive-stop\":\"000000010000000000000007\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201909212\n"</literal>
            <literal type="string">"db-control-version=1201\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"12\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-catalog-version\":201909212,\"db-control-version\":1201,\"db-system-id\":6626363367545678089,"</literal>
                    <literal type="string">"\"db-version\":\"12\"}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add backup directories with manifest file including a resumable backup dependent on last backup</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152152D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152155I/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152252D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152850F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Resumable backup</comment>
        <macro><name>HRN_INFO_PUT</name><argument_list>(
            <argument>storageRepoWrite()</argument>, <argument>STORAGE_REPO_BACKUP <literal type="string">"/20181119-152900F_20181119-153000I/"</literal> BACKUP_MANIFEST_FILE INFO_COPY_EXT</argument>,
            <argument><literal type="string">"[backup]\n"</literal>
            <literal type="string">"backup-archive-start=\"000000010000000000000008\"\n"</literal>
            <literal type="string">"backup-label=null\n"</literal>
            <literal type="string">"backup-prior=\"20181119-152900F\"\n"</literal>
            <literal type="string">"backup-timestamp-copy-start=0\n"</literal>
            <literal type="string">"backup-timestamp-start=0\n"</literal>
            <literal type="string">"backup-timestamp-stop=0\n"</literal>
            <literal type="string">"backup-type=\"incr\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:db]\n"</literal>
            <literal type="string">"db-catalog-version=201909212\n"</literal>
            <literal type="string">"db-control-version=1201\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"12\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:option]\n"</literal>
            <literal type="string">"option-archive-check=false\n"</literal>
            <literal type="string">"option-archive-copy=false\n"</literal>
            <literal type="string">"option-checksum-page=false\n"</literal>
            <literal type="string">"option-compress=false\n"</literal>
            <literal type="string">"option-compress-type=\"none\"\n"</literal>
            <literal type="string">"option-hardlink=false\n"</literal>
            <literal type="string">"option-online=false\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[backup:target]\n"</literal>
            <literal type="string">"pg_data={\"path\":\""</literal> TEST_PATH <literal type="string">"/pg\",\"type\":\"path\"}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"postgres={\"db-id\":12980,\"db-last-system-id\":12979}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file]\n"</literal>
            <literal type="string">"pg_data/PG_VERSION={\"size\":3,\"timestamp\":1565282100}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:file:default]\n"</literal>
            <literal type="string">"group=\"postgres\"\n"</literal>
            <literal type="string">"mode=\"0600\"\n"</literal>
            <literal type="string">"user=\"postgres\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path]\n"</literal>
            <literal type="string">"pg_data={}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[target:path:default]\n"</literal>
            <literal type="string">"group=\"postgres\"\n"</literal>
            <literal type="string">"mode=\"0700\"\n"</literal>
            <literal type="string">"user=\"postgres\"\n"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create "latest" symlink</comment>
        <decl_stmt><decl><type><specifier>const</specifier> <name>String</name> <modifier>*</modifier></type><name>latestLink</name> <init>= <expr><call><name>storagePathP</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/latest"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>THROW_ON_SYS_ERROR_FMT</name><argument_list>(
            <argument><expr><call><name>symlink</name><argument_list>(<argument><expr><call><name>strZ</name><argument_list>(<argument><expr><call><name>infoBackupData</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><name>backupLabel</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>latestLink</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
            <argument><expr><name>FileOpenError</name></expr></argument>, <argument><expr><literal type="string">"unable to create symlink '%s' to '%s'"</literal></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>latestLink</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><call><name>infoBackupData</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupDataTotal</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call><operator>.</operator><name>backupLabel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create archive info</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"12\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6625592122879095702,\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-id\":6626363367545678089,\"db-version\":\"12\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create archive directories and generate archive</comment>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000200000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"12-2"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire backup and dependent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152800F_20181119-152152D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Set the log level to detail so archive expiration messages are seen</comment>
        <expr_stmt><expr><call><name>harnessLogLevelSet</name><argument_list>(<argument><expr><name>logLevelDetail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"adhoc expire only backup and dependent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20181119-152138F/\n"</literal>
            <literal type="string">"20181119-152138F/backup.manifest\n"</literal>
            <literal type="string">"20181119-152800F/\n"</literal>
            <literal type="string">"20181119-152800F/backup.manifest\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D/backup.manifest\n"</literal>
            <literal type="string">"20181119-152850F/\n"</literal>
            <literal type="string">"20181119-152850F/backup.manifest\n"</literal>
            <literal type="string">"20181119-152900F/\n"</literal>
            <literal type="string">"20181119-152900F/backup.manifest\n"</literal>
            <literal type="string">"20181119-152900F_20181119-153000I/\n"</literal>
            <literal type="string">"20181119-152900F_20181119-153000I/backup.manifest.copy\n"</literal>
            <literal type="string">"backup.info\n"</literal>
            <literal type="string">"backup.info.copy\n"</literal>
            <literal type="string">"latest&gt;\n"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only adhoc and dependents removed - resumable and all other backups remain"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>storageInfoP</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/latest"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><name>linkDestination</name></expr></argument>,
            <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20181119-152900F"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"latest link not updated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire adhoc backup set 20181119-152800F_20181119-152152D, 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F_20181119-152152D\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152138F, start = 000000020000000000000001,"</literal>
                <literal type="string">" stop = 000000020000000000000001\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152800F, start = 000000020000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 12-2 archive retention on backup 20181119-152850F, start = 000000010000000000000002,"</literal>
                <literal type="string">" stop = 000000010000000000000004\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 12-2 archive retention on backup 20181119-152900F, start = 000000010000000000000006\n"</literal>
            <literal type="string">"P00   INFO: repo1: 12-2 remove archive, start = 000000010000000000000001, stop = 000000010000000000000001\n"</literal>
            <literal type="string">"P00   INFO: repo1: 12-2 remove archive, start = 000000010000000000000005, stop = 000000010000000000000005"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire full and archive (no dependents)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152138F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"adhoc expire full backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20181119-152800F/\n"</literal>
            <literal type="string">"20181119-152800F/backup.manifest\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D/backup.manifest\n"</literal>
            <literal type="string">"20181119-152850F/\n"</literal>
            <literal type="string">"20181119-152850F/backup.manifest\n"</literal>
            <literal type="string">"20181119-152900F/\n"</literal>
            <literal type="string">"20181119-152900F/backup.manifest\n"</literal>
            <literal type="string">"20181119-152900F_20181119-153000I/\n"</literal>
            <literal type="string">"20181119-152900F_20181119-153000I/backup.manifest.copy\n"</literal>
            <literal type="string">"backup.info\n"</literal>
            <literal type="string">"backup.info.copy\n"</literal>
            <literal type="string">"latest&gt;\n"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only adhoc full removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire adhoc backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152800F, start = 000000020000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000020000000000000001, stop = 000000020000000000000001\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 12-2 archive retention on backup 20181119-152850F, start = 000000010000000000000002,"</literal>
                <literal type="string">" stop = 000000010000000000000004\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 12-2 archive retention on backup 20181119-152900F, start = 000000010000000000000006\n"</literal>
            <literal type="string">"P00   INFO: repo1: 12-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire latest and resumable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152900F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"adhoc expire latest backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20181119-152800F/\n"</literal>
            <literal type="string">"20181119-152800F/backup.manifest\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D/\n"</literal>
            <literal type="string">"20181119-152800F_20181119-152252D/backup.manifest\n"</literal>
            <literal type="string">"20181119-152850F/\n"</literal>
            <literal type="string">"20181119-152850F/backup.manifest\n"</literal>
            <literal type="string">"backup.info\n"</literal>
            <literal type="string">"backup.info.copy\n"</literal>
            <literal type="string">"latest&gt;\n"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"latest backup and resumable removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: repo1: expiring latest backup 20181119-152900F - the ability to perform point-in-time-recovery (PITR) may"</literal>
                <literal type="string">" be affected\n"</literal>
            <literal type="string">"            HINT: non-default settings for 'repo1-retention-archive'/'repo1-retention-archive-type' (even in prior"</literal>
                <literal type="string">" expires) can cause gaps in the WAL.\n"</literal>
            <literal type="string">"P00   INFO: repo1: expire adhoc backup 20181119-152900F\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152900F_20181119-153000I\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152900F\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152800F, start = 000000020000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 no archive to remove\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 12-2 archive retention on backup 20181119-152850F, start = 000000010000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo1: 12-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>storageInfoP</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/latest"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><name>linkDestination</name></expr></argument>,
            <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20181119-152850F"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"latest link updated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/12-2/0000000100000000"</literal></expr></argument>,
            <argument><expr><call><name>zNewFmt</name><argument_list>(<argument><expr><literal type="string">"%s%s"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"no archives removed from latest except what was already removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"error on expire last full backup in current db-id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152850F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CommandError</name></expr></argument>, <argument><expr><name>CFGCMD_EXPIRE</name> <literal type="string">" command encountered 1 error(s), check the log file for details"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00  ERROR: [075]: repo1: full backup 20181119-152850F cannot be expired until another full backup has been created on"</literal>
                <literal type="string">" this repo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"allow adhoc expire on last full backup in prior db-id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152800F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"adhoc expire last prior db-id backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name></expr></argument>,
            <argument><expr><literal type="string">"20181119-152850F/\n"</literal>
            <literal type="string">"20181119-152850F/backup.manifest\n"</literal>
            <literal type="string">"backup.info\n"</literal>
            <literal type="string">"backup.info.copy\n"</literal>
            <literal type="string">"latest&gt;\n"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"only last prior backup removed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire adhoc backup set 20181119-152800F, 20181119-152800F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove archive path "</literal> <name>TEST_PATH</name> <literal type="string">"/repo/archive/db/9.4-1\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 12-2 archive retention on backup 20181119-152850F, start = 000000010000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo1: 12-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"error on expire last full backup on disk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152850F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ERROR</name><argument_list>(
            <argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>CommandError</name></expr></argument>, <argument><expr><name>CFGCMD_EXPIRE</name> <literal type="string">" command encountered 1 error(s), check the log file for details"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00  ERROR: [075]: repo1: full backup 20181119-152850F cannot be expired until another full backup has been created on"</literal>
                <literal type="string">" this repo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"adhoc dry-run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup:current]\n"</literal>
            <literal type="string">"20181119-152850F={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\","</literal>
            <literal type="string">"\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000004\","</literal>
            <literal type="string">"\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"</literal>
            <literal type="string">"\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"20181119-152850F_20181119-152252D={"</literal>
            <literal type="string">"\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000010000000000000006\","</literal>
            <literal type="string">"\"backup-archive-stop\":\"000000010000000000000007\",\"backup-info-repo-size\":2369186,"</literal>
            <literal type="string">"\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"</literal>
            <literal type="string">"\"backup-prior\":\"20181119-152850F\",\"backup-reference\":[\"20181119-152850F\"],"</literal>
            <literal type="string">"\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"diff\","</literal>
            <literal type="string">"\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"</literal>
            <literal type="string">"\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201909212\n"</literal>
            <literal type="string">"db-control-version=1201\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"12\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-catalog-version\":201909212,\"db-control-version\":1201,\"db-system-id\":6626363367545678089,"</literal>
                <literal type="string">"\"db-version\":\"12\"}\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Load the backup info. Do not store a manifest file for the adhoc backup for code coverage</comment>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(
            <argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupLoadFile</name><argument_list>(<argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>HRN_STORAGE_PATH_CREATE</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152850F_20181119-152252D"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"create empty backup directory for code coverage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152850F_20181119-152252D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><specifier>const</specifier> <name>String</name> <modifier>*</modifier></type><name>adhocBackupLabel</name> <init>= <expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20181119-152850F_20181119-152252D"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireAdhocBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>adhocBackupLabel</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"adhoc expire last dependent backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>removeExpiredBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>adhocBackupLabel</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"code coverage: removeExpireBackup with no manifests"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: [DRY-RUN] repo1: expiring latest backup 20181119-152850F_20181119-152252D - the ability to perform"</literal>
                <literal type="string">" point-in-time-recovery (PITR) may be affected\n"</literal>
            <literal type="string">"            HINT: non-default settings for 'repo1-retention-archive'/'repo1-retention-archive-type' (even in prior"</literal>
                <literal type="string">" expires) can cause gaps in the WAL.\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: expire adhoc backup 20181119-152850F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152850F_20181119-152252D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"resumable possibly based on adhoc expire backup, multi-repo, encryption"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListAvoidWarn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptSet</name></expr></argument>, <argument><expr><literal type="string">"20181119-152850F_20181119-152252D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoPath</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawStrId</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoCipherType</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>cipherTypeAes256Cbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgEnvKeyRawZ</name><argument_list>(<argument><expr><name>cfgOptRepoCipherPass</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>TEST_CIPHER_PASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info</comment>
        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_BACKUP_CURRENT</name></cpp:macro>                                                                                                \
            <cpp:value>"[backup:current]\n"                                                                                                   \
            "20181119-152850F={"                                                                                                   \
            "\"backrest-format\":5,\"backrest-version\":\"2.08dev\","                                                              \
            "\"backup-archive-start\":\"000000010000000000000002\",\"backup-archive-stop\":\"000000010000000000000004\","          \
            "\"backup-info-repo-size\":2369186,\"backup-info-repo-size-delta\":2369186,"                                           \
            "\"backup-info-size\":20162900,\"backup-info-size-delta\":20162900,"                                                   \
            "\"backup-timestamp-start\":1542640898,\"backup-timestamp-stop\":1542640911,\"backup-type\":\"full\","                 \
            "\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"             \
            "\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":true}\n"           \
            "20181119-152850F_20181119-152252D={"                                                                                  \
            "\"backrest-format\":5,\"backrest-version\":\"2.08dev\",\"backup-archive-start\":\"000000010000000000000006\","        \
            "\"backup-archive-stop\":\"000000010000000000000007\",\"backup-info-repo-size\":2369186,"                              \
            "\"backup-info-repo-size-delta\":346,\"backup-info-size\":20162900,\"backup-info-size-delta\":8428,"                   \
            "\"backup-prior\":\"20181119-152850F\",\"backup-reference\":[\"20181119-152850F\"],"                                   \
            "\"backup-timestamp-start\":1542640912,\"backup-timestamp-stop\":1542640915,\"backup-type\":\"diff\","                 \
            "\"db-id\":2,\"option-archive-check\":true,\"option-archive-copy\":false,\"option-backup-standby\":false,"             \
            "\"option-checksum-page\":true,\"option-compress\":true,\"option-hardlink\":false,\"option-online\":false}\n"</cpp:value></cpp:define>

        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_BACKUP_DB</name></cpp:macro>                                                                                                     \
            <cpp:value>"\n"                                                                                                                   \
            "[db]\n"                                                                                                               \
            "db-catalog-version=201909212\n"                                                                                       \
            "db-control-version=1201\n"                                                                                            \
            "db-id=2\n"                                                                                                            \
            "db-system-id=6626363367545678089\n"                                                                                   \
            "db-version=\"12\"\n"                                                                                                  \
            "\n"                                                                                                                   \
            "[db:history]\n"                                                                                                       \
            "1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"                 \
                "\"db-version\":\"9.4\"}\n"                                                                                        \
            "2={\"db-catalog-version\":201909212,\"db-control-version\":1201,\"db-system-id\":6626363367545678089,"                \
                "\"db-version\":\"12\"}\n"</cpp:value></cpp:define>

        <macro><name>HRN_INFO_PUT</name><argument_list>(
            <argument>storageRepoWrite()</argument>, <argument>INFO_BACKUP_PATH_FILE</argument>,
            <argument>TEST_BACKUP_CURRENT
            TEST_BACKUP_DB</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
        <macro><name>HRN_STORAGE_COPY</name><argument_list>(<argument>storageRepo()</argument>, <argument>INFO_BACKUP_PATH_FILE</argument>, <argument>storageRepoWrite()</argument>, <argument>INFO_BACKUP_PATH_FILE INFO_COPY_EXT</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <comment type="line">// Adhoc backup and resumable backup manifests</comment>
        <decl_stmt><decl><type><specifier>const</specifier> <name>String</name> <modifier>*</modifier></type><name>manifestContent</name> <init>= <expr><call><name>STRDEF</name><argument_list>(
                <argument><expr><literal type="string">"[backup]\n"</literal>
                <literal type="string">"backup-archive-start=\"000000010000000000000009\"\n"</literal>
                <literal type="string">"backup-label=null\n"</literal>
                <literal type="string">"backup-prior=\"20181119-152850F\"\n"</literal>
                <literal type="string">"backup-timestamp-copy-start=0\n"</literal>
                <literal type="string">"backup-timestamp-start=0\n"</literal>
                <literal type="string">"backup-timestamp-stop=0\n"</literal>
                <literal type="string">"backup-type=\"diff\"\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"[backup:db]\n"</literal>
                <literal type="string">"db-catalog-version=201909212\n"</literal>
                <literal type="string">"db-control-version=1201\n"</literal>
                <literal type="string">"db-id=2\n"</literal>
                <literal type="string">"db-system-id=6626363367545678089\n"</literal>
                <literal type="string">"db-version=\"12\"\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"[backup:option]\n"</literal>
                <literal type="string">"option-archive-check=false\n"</literal>
                <literal type="string">"option-archive-copy=false\n"</literal>
                <literal type="string">"option-checksum-page=false\n"</literal>
                <literal type="string">"option-compress=false\n"</literal>
                <literal type="string">"option-compress-type=\"none\"\n"</literal>
                <literal type="string">"option-hardlink=false\n"</literal>
                <literal type="string">"option-online=false\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"[backup:target]\n"</literal>
                <literal type="string">"pg_data={\"path\":\""</literal> <name>TEST_PATH</name> <literal type="string">"/pg\",\"type\":\"path\"}\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"[db]\n"</literal>
                <literal type="string">"postgres={\"db-id\":12980,\"db-last-system-id\":12979}\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"[target:file]\n"</literal>
                <literal type="string">"pg_data/PG_VERSION={\"size\":3,\"timestamp\":1565282100}\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"[target:file:default]\n"</literal>
                <literal type="string">"group=\"postgres\"\n"</literal>
                <literal type="string">"mode=\"0600\"\n"</literal>
                <literal type="string">"user=\"postgres\"\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"[target:path]\n"</literal>
                <literal type="string">"pg_data={}\n"</literal>
                <literal type="string">"\n"</literal>
                <literal type="string">"[target:path:default]\n"</literal>
                <literal type="string">"group=\"postgres\"\n"</literal>
                <literal type="string">"mode=\"0700\"\n"</literal>
                <literal type="string">"user=\"postgres\"\n"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152850F_20181119-152252D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>manifestContent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <macro><name>HRN_INFO_PUT</name><argument_list>(
            <argument>storageRepoWrite()</argument>, <argument>STORAGE_REPO_BACKUP <literal type="string">"/20181119-152850F_20181119-152252D/"</literal> BACKUP_MANIFEST_FILE INFO_COPY_EXT</argument>,
            <argument>strZ(manifestContent)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <comment type="line">// archives to repo1</comment>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"12-2"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create encrypted repo2 with same data from repo1 and ensure results are reported the same. This will test that the</comment>
        <comment type="line">// manifest can be read on encrypted repos.</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[cipher]\n"</literal>
            <literal type="string">"cipher-pass=\""</literal> <name>TEST_CIPHER_PASS_ARCHIVE</name> <literal type="string">"\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=2\n"</literal>
            <literal type="string">"db-system-id=6626363367545678089\n"</literal>
            <literal type="string">"db-version=\"12\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6625592122879095702,\"db-version\":\"9.4\"}\n"</literal>
            <literal type="string">"2={\"db-id\":6626363367545678089,\"db-version\":\"12\"}"</literal></expr></argument>,
            <argument><expr><operator>.</operator><name>cipherType</name> <operator>=</operator> <name>cipherTypeAes256Cbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><specifier>const</specifier> <name>String</name> <modifier>*</modifier></type><name>backupInfoContent</name> <init>= <expr><call><name>STRDEF</name><argument_list>(
            <argument><expr><name>TEST_BACKUP_CURRENT</name>
            <literal type="string">"\n"</literal>
            <literal type="string">"[cipher]\n"</literal>
            <literal type="string">"cipher-pass=\"somepass\"\n"</literal>
            <name>TEST_BACKUP_DB</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(<argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>backupInfoContent</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>.</operator><name>cipherType</name> <operator>=</operator> <name>cipherTypeAes256Cbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152850F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup]\nbackup-type=\"full\"\n"</literal></expr></argument>, <argument><expr><operator>.</operator><name>cipherType</name> <operator>=</operator> <name>cipherTypeAes256Cbc</name></expr></argument>, <argument><expr><operator>.</operator><name>cipherPass</name> <operator>=</operator> <literal type="string">"somepass"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152850F_20181119-152252D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[backup]\nbackup-type=\"diff\"\n"</literal></expr></argument>, <argument><expr><operator>.</operator><name>cipherType</name> <operator>=</operator> <name>cipherTypeAes256Cbc</name></expr></argument>, <argument><expr><operator>.</operator><name>cipherPass</name> <operator>=</operator> <literal type="string">"somepass"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <macro><name>HRN_INFO_PUT</name><argument_list>(
            <argument>storageRepoIdxWrite(<literal type="number">1</literal>)</argument>, <argument>STORAGE_REPO_BACKUP <literal type="string">"/20181119-152850F_20181200-152252D/"</literal> BACKUP_MANIFEST_FILE INFO_COPY_EXT</argument>,
            <argument>strZ(manifestContent)</argument>, <argument>.cipherType = cipherTypeAes256Cbc</argument>, <argument>.cipherPass = <literal type="string">"somepass"</literal></argument>, <argument>.comment = <literal type="string">"resumable backup"</literal></argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

        <comment type="line">// archives to repo2</comment>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"12-2"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create "latest" symlink, repo2</comment>
        <expr_stmt><expr><name>latestLink</name> <operator>=</operator> <call><name>storagePathP</name><argument_list>(<argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/latest"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>THROW_ON_SYS_ERROR_FMT</name><argument_list>(
            <argument><expr><call><name>symlink</name><argument_list>(<argument><expr><literal type="string">"20181119-152850F_20181200-152252D"</literal></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>latestLink</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
            <argument><expr><name>FileOpenError</name></expr></argument>, <argument><expr><literal type="string">"unable to create symlink '%s' to '%s'"</literal></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>latestLink</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"20181119-152850F_20181200-152252D"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"adhoc expire latest with resumable possibly based on it"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: repo1: expiring latest backup 20181119-152850F_20181119-152252D - the ability to perform"</literal>
                <literal type="string">" point-in-time-recovery (PITR) may be affected\n"</literal>
            <literal type="string">"            HINT: non-default settings for 'repo1-retention-archive'/'repo1-retention-archive-type' (even in prior"</literal>
                <literal type="string">" expires) can cause gaps in the WAL.\n"</literal>
            <literal type="string">"P00   INFO: repo1: expire adhoc backup 20181119-152850F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152850F_20181119-152252D\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 12-2 archive retention on backup 20181119-152850F, start = 000000010000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo1: 12-2 no archive to remove\n"</literal>
            <literal type="string">"P00   WARN: repo2: expiring latest backup 20181119-152850F_20181119-152252D - the ability to perform"</literal>
                <literal type="string">" point-in-time-recovery (PITR) may be affected\n"</literal>
            <literal type="string">"            HINT: non-default settings for 'repo2-retention-archive'/'repo2-retention-archive-type' (even in prior"</literal>
                <literal type="string">" expires) can cause gaps in the WAL.\n"</literal>
            <literal type="string">"P00   INFO: repo2: expire adhoc backup 20181119-152850F_20181119-152252D\n"</literal>
            <literal type="string">"P00   INFO: repo2: remove expired backup 20181119-152850F_20181119-152252D\n"</literal>
            <literal type="string">"P00 DETAIL: repo2: 12-2 archive retention on backup 20181119-152850F, start = 000000010000000000000002\n"</literal>
            <literal type="string">"P00   INFO: repo2: 12-2 no archive to remove"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_STR</name><argument_list>(<argument><expr><call><name>storageInfoP</name><argument_list>(<argument><expr><call><name>storageRepoIdx</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/latest"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><name>linkDestination</name></expr></argument>,
            <argument><expr><call><name>STRDEF</name><argument_list>(<argument><expr><literal type="string">"20181119-152850F"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"latest link updated, repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Cleanup</comment>
        <expr_stmt><expr><call><name>hrnCfgEnvKeyRemoveRaw</name><argument_list>(<argument><expr><name>cfgOptRepoCipherPass</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>harnessLogLevelReset</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <comment type="line">// *****************************************************************************************************************************</comment>
    <if_stmt><if>if <condition>(<expr><call><name>testBegin</name><argument_list>(<argument><expr><literal type="string">"expireTimeBasedBackup()"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"no current backups"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>InfoBackup</name> <modifier>*</modifier></type><name>infoBackup</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><call><name>harnessInfoChecksumZ</name><argument_list>(
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-catalog-version=201409291\n"</literal>
            <literal type="string">"db-control-version=942\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6625592122879095702\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-catalog-version\":201409291,\"db-control-version\":942,\"db-system-id\":6625592122879095702,"</literal>
                <literal type="string">"\"db-version\":\"9.4\"}"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"empty backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireTimeBasedBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><operator>(</operator><name>time_t</name><operator>)</operator><operator>(</operator><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">40</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator><operator>)</operator></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"no backups to expire"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"oldest backup not expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Set up</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argListTime</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListBase</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argListTime</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFullType</name></expr></argument>, <argument><expr><literal type="string">"time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argListTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info and archive.info</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>backupInfoContent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6625592122879095702\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6625592122879095702,\"db-version\":\"9.4\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Write backup.manifest so infoBackup reconstruct produces same results as backup.info on disk</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152152D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152155I/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F_20181119-152600D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Generate archive for backups in backup.info</comment>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Set the log level to detail so archive expiration messages are seen</comment>
        <expr_stmt><expr><call><name>harnessLogLevelSet</name><argument_list>(<argument><expr><name>logLevelDetail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_ASSIGN</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>infoBackupNewLoad</name><argument_list>(<argument><expr><call><name>ioBufferReadNew</name><argument_list>(<argument><expr><name>backupInfoBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"get backup.info"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"repo-retention-full not set for time-based"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: option 'repo1-retention-full' is not set for 'repo1-retention-full-type=time', the repository may run out"</literal>
                <literal type="string">" of space\n"</literal>
            <literal type="string">"            HINT: to retain full backups indefinitely (without warning), set option 'repo1-retention-full' to the"</literal>
                <literal type="string">" maximum.\n"</literal>
            <literal type="string">"P00   INFO: repo1: time-based archive retention not met - archive logs will not be expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Stop time equals retention time</comment>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(
            <argument><expr><call><name>expireTimeBasedBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><operator>(</operator><name>time_t</name><operator>)</operator><operator>(</operator><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">40</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator><operator>)</operator></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
            <argument><expr><literal type="string">"oldest backup stop time equals retention time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20181119-152138F\n20181119-152800F\n20181119-152800F_20181119-152152D\n20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"20181119-152900F\n20181119-152900F_20181119-152600D\n"</literal></expr></argument>, <argument><expr><literal type="string">"no backups expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Add a time period</comment>
        <decl_stmt><decl><type><name>StringList</name> <modifier>*</modifier></type><name>argList</name> <init>= <expr><call><name>strLstDup</name><argument_list>(<argument><expr><name>argListTime</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"35"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"oldest backup older but other backups too young"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_STORAGE_LIST</name><argument_list>(
            <argument><expr><call><name>storageRepo</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name> <literal type="string">"/9.4-1/0000000100000000"</literal></expr></argument>, <argument><expr><call><name>archiveExpectList</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><operator>.</operator><name>comment</name> <operator>=</operator> <literal type="string">"no archives expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_STRLST_Z</name><argument_list>(
            <argument><expr><call><name>infoBackupDataLabelList</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"20181119-152138F\n20181119-152800F\n20181119-152800F_20181119-152152D\n20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"20181119-152900F\n20181119-152900F_20181119-152600D\n"</literal></expr></argument>, <argument><expr><literal type="string">"no backups expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(<argument><expr><literal type="string">"P00   INFO: repo1: time-based archive retention not met - archive logs will not be expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"oldest backup expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"30"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"only oldest backup expired - dry-run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: [DRY-RUN] repo1: expire time-based backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152800F, start = 000000010000000000000004\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000010000000000000001, stop = 000000010000000000000003"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"9999999"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"only oldest backup expired - dry-run, retention-archive set to max, no archives expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: [DRY-RUN] repo1: expire time-based backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152138F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"30"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// 1-day: expire non-essential archive prior to newest full backup</comment>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"only oldest backup expired but retention archive set lower - dry-run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: [DRY-RUN] repo1: expire time-based backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152800F, start = 000000010000000000000004,"</literal>
                <literal type="string">" stop = 000000010000000000000004\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152800F_20181119-152152D,"</literal>
                <literal type="string">" start = 000000010000000000000006, stop = 000000010000000000000006\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152800F_20181119-152155I,"</literal>
                <literal type="string">" start = 000000010000000000000007, stop = 000000010000000000000007\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152900F, start = 000000010000000000000009\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000010000000000000001, stop = 000000010000000000000003\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000010000000000000005, stop = 000000010000000000000005\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000010000000000000008, stop = 000000010000000000000008"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"repo1-retention-archive-type=diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"30"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchiveType</name></expr></argument>, <argument><expr><literal type="string">"diff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionArchive</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// 1-day: expire non-essential archive prior to newest diff backup</comment>
        <expr_stmt><expr><call><name>hrnCfgArgRawBool</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptDryRun</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"only oldest backup expired, retention archive is DIFF - dry-run"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   WARN: [DRY-RUN] option 'repo1-retention-diff' is not set for 'repo1-retention-archive-type=diff'\n"</literal>
            <literal type="string">"            HINT: to retain differential backups indefinitely (without warning), set option 'repo1-retention-diff'"</literal>
                <literal type="string">" to the maximum.\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: expire time-based backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152800F, start = 000000010000000000000004,"</literal>
                <literal type="string">" stop = 000000010000000000000004\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152800F_20181119-152152D,"</literal>
                <literal type="string">" start = 000000010000000000000006, stop = 000000010000000000000006\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152800F_20181119-152155I,"</literal>
                <literal type="string">" start = 000000010000000000000007, stop = 000000010000000000000007\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152900F, start = 000000010000000000000009,"</literal>
                <literal type="string">" stop = 000000010000000000000009\n"</literal>
            <literal type="string">"P00 DETAIL: [DRY-RUN] repo1: 9.4-1 archive retention on backup 20181119-152900F_20181119-152600D,"</literal>
                <literal type="string">" start = 000000010000000000000011\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000010000000000000001, stop = 000000010000000000000003\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000010000000000000005, stop = 000000010000000000000005\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000010000000000000008, stop = 000000010000000000000008\n"</literal>
            <literal type="string">"P00   INFO: [DRY-RUN] repo1: 9.4-1 remove archive, start = 000000010000000000000010, stop = 000000010000000000000010"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"expire oldest full"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"25"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Expire oldest from backup.info only, leaving the backup and archives on disk then save backup.info without oldest backup</comment>
        <expr_stmt><expr><call><name>TEST_RESULT_UINT</name><argument_list>(<argument><expr><call><name>expireTimeBasedBackup</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><operator>(</operator><name>time_t</name><operator>)</operator><operator>(</operator><name>timeNow</name> <operator>-</operator> <operator>(</operator><literal type="number">25</literal> <operator>*</operator> <name>SEC_PER_DAY</name><operator>)</operator><operator>)</operator></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"expire oldest backup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(
            <argument><expr><call><name>infoBackupSaveFile</name><argument_list>(<argument><expr><name>infoBackup</name></expr></argument>, <argument><expr><call><name>storageRepoWrite</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE_STR</name></expr></argument>, <argument><expr><name>cipherTypeNone</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><literal type="string">"save backup.info without oldest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(<argument><expr><literal type="string">"P00   INFO: repo1: expire time-based backup 20181119-152138F"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"only oldest backup expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152800F, start = 000000010000000000000004\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000010000000000000001, stop = 000000010000000000000003"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"newest backup - retention met but must keep one"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire all but newest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: expire time-based backup set 20181119-152800F, 20181119-152800F_20181119-152152D,"</literal>
                <literal type="string">" 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F_20181119-152155I\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F_20181119-152152D\n"</literal>
            <literal type="string">"P00   INFO: repo1: remove expired backup 20181119-152800F\n"</literal>
            <literal type="string">"P00 DETAIL: repo1: 9.4-1 archive retention on backup 20181119-152900F, start = 000000010000000000000009\n"</literal>
            <literal type="string">"P00   INFO: repo1: 9.4-1 remove archive, start = 000000010000000000000004, stop = 000000010000000000000008"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">//--------------------------------------------------------------------------------------------------------------------------</comment>
        <expr_stmt><expr><call><name>TEST_TITLE</name><argument_list>(<argument><expr><literal type="string">"add repo2 to ensure options are applied correctly"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>argList</name> <operator>=</operator> <call><name>strLstDup</name><argument_list>(<argument><expr><name>argListTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoPath</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>TEST_PATH</name> <literal type="string">"/repo2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFullType</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>hrnCfgArgKeyRawZ</name><argument_list>(<argument><expr><name>argList</name></expr></argument>, <argument><expr><name>cfgOptRepoRetentionFull</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"30"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_CFG_LOAD</name><argument_list>(<argument><expr><name>cfgCmdExpire</name></expr></argument>, <argument><expr><name>argList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Create backup.info and archive.info for repo2</comment>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(<argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INFO_BACKUP_PATH_FILE</name></expr></argument>, <argument><expr><call><name>strZ</name><argument_list>(<argument><expr><name>backupInfoContent</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_INFO_PUT</name><argument_list>(
            <argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INFO_ARCHIVE_PATH_FILE</name></expr></argument>,
            <argument><expr><literal type="string">"[db]\n"</literal>
            <literal type="string">"db-id=1\n"</literal>
            <literal type="string">"db-system-id=6625592122879095702\n"</literal>
            <literal type="string">"db-version=\"9.4\"\n"</literal>
            <literal type="string">"\n"</literal>
            <literal type="string">"[db:history]\n"</literal>
            <literal type="string">"1={\"db-id\":6625592122879095702,\"db-version\":\"9.4\"}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Write backup.manifest for repo2 so infoBackup reconstruct produces same results as backup.info on disk</comment>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152138F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(
            <argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152152D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(
            <argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152800F_20181119-152155I/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(<argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>HRN_STORAGE_PUT_EMPTY</name><argument_list>(
            <argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_BACKUP</name> <literal type="string">"/20181119-152900F_20181119-152600D/"</literal> <name>BACKUP_MANIFEST_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// Generate archive for backups in backup.info in repo2</comment>
        <expr_stmt><expr><call><name>archiveGenerate</name><argument_list>(<argument><expr><call><name>storageRepoIdxWrite</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>STORAGE_REPO_ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="string">"9.4-1"</literal></expr></argument>, <argument><expr><literal type="string">"0000000100000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>TEST_RESULT_VOID</name><argument_list>(<argument><expr><call><name>cmdExpire</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"expire all but newest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>TEST_RESULT_LOG</name><argument_list>(
            <argument><expr><literal type="string">"P00   INFO: repo1: time-based archive retention not met - archive logs will not be expired\n"</literal>
            <literal type="string">"P00   INFO: repo2: expire time-based backup 20181119-152138F\n"</literal>
            <literal type="string">"P00   INFO: repo2: remove expired backup 20181119-152138F\n"</literal>
            <literal type="string">"P00 DETAIL: repo2: 9.4-1 archive retention on backup 20181119-152800F, start = 000000010000000000000004\n"</literal>
            <literal type="string">"P00   INFO: repo2: 9.4-1 remove archive, start = 000000010000000000000001, stop = 000000010000000000000003"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>harnessLogLevelReset</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt><expr><call><name>FUNCTION_HARNESS_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
