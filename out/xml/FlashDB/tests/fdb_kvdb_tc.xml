<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/FlashDB/tests/fdb_kvdb_tc.c"><comment type="block">/*
 * Copyright (c) 2020, Armink, &lt;armink.ztl@gmail.com&gt;
 *
 * SPDX-License-Identifier: Apache-2.0
 */</comment>

<comment type="block" format="doxygen">/**
 * @file
 * @brief KVDB testcases.
 *
 * This testcases is be used in RT-Thread Utest framework.
 * If you want run it, please add it to RT-Thread project.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utest.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;flashdb.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_TS_PART_NAME</name></cpp:macro>             <cpp:value>"fdb_kvdb1"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_KV_BLOB_NAME</name></cpp:macro>             <cpp:value>"kv_blob_test"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEST_KV_NAME</name></cpp:macro>                  <cpp:value>"kv_test"</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RT_USING_UTEST</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>FDB_USING_KVDB</name></expr></argument>)</argument_list></call></expr></cpp:if>

<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>fdb_default_kv_node</name></name></type> <name><name>default_kv_set</name><index>[]</index></name> <init>= <expr><block>{
        <expr><block>{<expr><literal type="string">"iap_need_copy_app"</literal></expr>, <expr><literal type="string">"0"</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="string">"iap_need_crc32_check"</literal></expr>, <expr><literal type="string">"0"</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="string">"iap_copy_app_size"</literal></expr>, <expr><literal type="string">"0"</literal></expr>}</block></expr>,
        <expr><block>{<expr><literal type="string">"stop_in_bootloader"</literal></expr>, <expr><literal type="string">"0"</literal></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>fdb_kvdb</name></name></type> <name>test_kvdb</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_fdb_kvdb_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name>access</name><argument_list>(<argument><expr><literal type="string">"/fdb_kvdb1"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><call><name>mkdir</name><argument_list>(<argument><expr><literal type="string">"/fdb_kvdb1"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_default_kv</name></name></type> <name>default_kv</name></decl>;</decl_stmt>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>FDB_USING_FAL_MODE</name></cpp:ifndef>    
    <decl_stmt><decl><type><name>uint32_t</name></type> <name>sec_size</name> <init>= <expr><literal type="number">4096</literal></expr></init></decl>, <decl><type ref="prev"/><name>db_size</name> <init>= <expr><name>sec_size</name> <operator>*</operator> <literal type="number">16</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rt_bool_t</name></type> <name>file_mode</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>      

    <expr_stmt><expr><name><name>default_kv</name><operator>.</operator><name>kvs</name></name> <operator>=</operator> <name>default_kv_set</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>default_kv</name><operator>.</operator><name>num</name></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>default_kv_set</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>default_kv_set</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

 <cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>FDB_USING_FAL_MODE</name></cpp:ifndef>
    <expr_stmt><expr><call><name>fdb_kvdb_control</name><argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name>test_kvdb</name><operator>)</operator></expr></argument>, <argument><expr><name>FDB_KVDB_CTRL_SET_SEC_SIZE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sec_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>fdb_kvdb_control</name><argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name>test_kvdb</name><operator>)</operator></expr></argument>, <argument><expr><name>FDB_KVDB_CTRL_SET_FILE_MODE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>file_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>fdb_kvdb_control</name><argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name>test_kvdb</name><operator>)</operator></expr></argument>, <argument><expr><name>FDB_KVDB_CTRL_SET_MAX_SIZE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>db_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>    
    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><call><name>fdb_kvdb_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><literal type="string">"test_kv"</literal></expr></argument>, <argument><expr><literal type="string">"fdb_kvdb1"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>default_kv</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>FDB_NO_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_fdb_create_kv_blob</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>fdb_err_t</name></type> <name>result</name> <init>= <expr><name>FDB_NO_ERR</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rt_tick_t</name></type> <name>tick</name> <init>= <expr><call><name>rt_tick_get</name><argument_list>()</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>read_tick</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>size_t</name></type> <name>read_len</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_kv</name></name></type> <name>kv_obj</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_blob</name></name></type> <name>blob</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint8_t</name></type> <name><name>value_buf</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><name>tick</name></expr></argument>)</argument_list></sizeof></expr>]</index></name></decl>;</decl_stmt>

    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>fdb_kv_set_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>tick</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <name>FDB_NO_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>read_len</name> <operator>=</operator> <call><name>fdb_kv_get_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>read_tick</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>.</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>.</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><name>read_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name>tick</name></expr></argument>, <argument><expr><name>read_tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><call><name>fdb_kv_get_obj</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>kv_obj</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><name>value_buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>value_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>read_len</name> <operator>=</operator> <call><name>fdb_blob_read</name><argument_list>(<argument><expr><operator>(</operator><name>fdb_db_t</name><operator>)</operator><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><call><name>fdb_kv_to_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>kv_obj</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name>read_len</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>value_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_buf_equal</name><argument_list>(<argument><expr><operator>&amp;</operator><name>tick</name></expr></argument>, <argument><expr><name>value_buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>value_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_fdb_change_kv_blob</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>fdb_err_t</name></type> <name>result</name> <init>= <expr><name>FDB_NO_ERR</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rt_tick_t</name></type> <name>tick</name> <init>= <expr><call><name>rt_tick_get</name><argument_list>()</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>read_tick</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>size_t</name></type> <name>read_len</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_blob</name></name></type> <name>blob_obj</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>blob</name> <init>= <expr><operator>&amp;</operator><name>blob_obj</name></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><name>read_len</name> <operator>=</operator> <call><name>fdb_kv_get_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob_obj</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>read_tick</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>-&gt;</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>-&gt;</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><name>read_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_not_equal</name><argument_list>(<argument><expr><name>tick</name></expr></argument>, <argument><expr><name>read_tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>fdb_kv_set_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob_obj</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>tick</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <name>FDB_NO_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>read_len</name> <operator>=</operator> <call><name>fdb_kv_get_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob_obj</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>read_tick</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>-&gt;</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>-&gt;</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><name>read_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name>tick</name></expr></argument>, <argument><expr><name>read_tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_fdb_del_kv_blob</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>fdb_err_t</name></type> <name>result</name> <init>= <expr><name>FDB_NO_ERR</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rt_tick_t</name></type> <name>tick</name> <init>= <expr><call><name>rt_tick_get</name><argument_list>()</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>read_tick</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>size_t</name></type> <name>read_len</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_blob</name></name></type> <name>blob</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>read_len</name> <operator>=</operator> <call><name>fdb_kv_get_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>read_tick</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>.</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>.</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><name>read_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_not_equal</name><argument_list>(<argument><expr><name>tick</name></expr></argument>, <argument><expr><name>read_tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>fdb_kv_set_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <name>FDB_NO_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>read_len</name> <operator>=</operator> <call><name>fdb_kv_get_blob</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_BLOB_NAME</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>read_tick</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>read_tick</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name><name>blob</name><operator>.</operator><name>saved</name><operator>.</operator><name>len</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name>read_len</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_fdb_create_kv</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>fdb_err_t</name></type> <name>result</name> <init>= <expr><name>FDB_NO_ERR</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rt_tick_t</name></type> <name>tick</name> <init>= <expr><call><name>rt_tick_get</name><argument_list>()</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>read_tick</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name></type> <name><name>value_buf</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>read_value</name></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>value_buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>value_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><name>tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>fdb_kv_set</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_NAME</name></expr></argument>, <argument><expr><name>value_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <name>FDB_NO_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>read_value</name> <operator>=</operator> <call><name>fdb_kv_get</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_not_null</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>read_tick</name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name>tick</name></expr></argument>, <argument><expr><name>read_tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_fdb_change_kv</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>fdb_err_t</name></type> <name>result</name> <init>= <expr><name>FDB_NO_ERR</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rt_tick_t</name></type> <name>tick</name> <init>= <expr><call><name>rt_tick_get</name><argument_list>()</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>read_tick</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name></type> <name><name>value_buf</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>read_value</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>read_value</name> <operator>=</operator> <call><name>fdb_kv_get</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_not_null</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>read_tick</name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_not_equal</name><argument_list>(<argument><expr><name>tick</name></expr></argument>, <argument><expr><name>read_tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>value_buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>value_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><name>tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>fdb_kv_set</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_NAME</name></expr></argument>, <argument><expr><name>value_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <name>FDB_NO_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>read_value</name> <operator>=</operator> <call><name>fdb_kv_get</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_not_null</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>read_tick</name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_equal</name><argument_list>(<argument><expr><name>tick</name></expr></argument>, <argument><expr><name>read_tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_fdb_del_kv</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>fdb_err_t</name></type> <name>result</name> <init>= <expr><name>FDB_NO_ERR</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rt_tick_t</name></type> <name>tick</name> <init>= <expr><call><name>rt_tick_get</name><argument_list>()</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>read_tick</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>read_value</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>read_value</name> <operator>=</operator> <call><name>fdb_kv_get</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_not_null</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>read_tick</name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_int_not_equal</name><argument_list>(<argument><expr><name>tick</name></expr></argument>, <argument><expr><name>read_tick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>fdb_kv_del</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <name>FDB_NO_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>read_value</name> <operator>=</operator> <call><name>fdb_kv_get</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>, <argument><expr><name>TEST_KV_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>uassert_null</name><argument_list>(<argument><expr><name>read_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test_fdb_kvdb_deinit</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>uassert_true</name><argument_list>(<argument><expr><call><name>fdb_kvdb_deinit</name><argument_list>(<argument><expr><operator>&amp;</operator><name>test_kvdb</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>FDB_NO_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>rt_err_t</name></type> <name>utest_tc_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <return>return <expr><name>RT_EOK</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>rt_err_t</name></type> <name>utest_tc_cleanup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <return>return <expr><name>RT_EOK</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>testcase</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <expr_stmt><expr><call><name>UTEST_UNIT_RUN</name><argument_list>(<argument><expr><name>test_fdb_kvdb_init</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>UTEST_UNIT_RUN</name><argument_list>(<argument><expr><name>test_fdb_create_kv_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>UTEST_UNIT_RUN</name><argument_list>(<argument><expr><name>test_fdb_change_kv_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>UTEST_UNIT_RUN</name><argument_list>(<argument><expr><name>test_fdb_del_kv_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>UTEST_UNIT_RUN</name><argument_list>(<argument><expr><name>test_fdb_create_kv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>UTEST_UNIT_RUN</name><argument_list>(<argument><expr><name>test_fdb_change_kv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>UTEST_UNIT_RUN</name><argument_list>(<argument><expr><name>test_fdb_del_kv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>UTEST_UNIT_RUN</name><argument_list>(<argument><expr><name>test_fdb_kvdb_deinit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<expr_stmt><expr><call><name>UTEST_TC_EXPORT</name><argument_list>(<argument><expr><name>testcase</name></expr></argument>, <argument><expr><literal type="string">"packages.tools.flashdb.kvdb"</literal></expr></argument>, <argument><expr><name>utest_tc_init</name></expr></argument>, <argument><expr><name>utest_tc_cleanup</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* defined(RT_USING_UTEST) &amp;&amp; defined(FDB_USING_KVDB) */</comment>
</unit>
