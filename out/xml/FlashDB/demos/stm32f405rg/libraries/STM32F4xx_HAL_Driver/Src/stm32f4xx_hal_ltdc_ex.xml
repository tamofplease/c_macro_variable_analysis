<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/FlashDB/demos/stm32f405rg/libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_ltdc_ex.c"><comment type="block" format="doxygen">/**
  ******************************************************************************
  * @file    stm32f4xx_hal_ltdc_ex.c
  * @author  MCD Application Team
  * @brief   LTDC Extension HAL module driver.
  ******************************************************************************
  * @attention
  *
  * &lt;h2&gt;&lt;center&gt;&amp;copy; Copyright (c) 2016 STMicroelectronics.
  * All rights reserved.&lt;/center&gt;&lt;/h2&gt;
  *
  * This software component is licensed by ST under BSD 3-Clause license,
  * the "License"; You may not use this file except in compliance with the
  * License. You may obtain a copy of the License at:
  *                        opensource.org/licenses/BSD-3-Clause
  *
  ******************************************************************************
  */</comment>

<comment type="block">/* Includes ------------------------------------------------------------------*/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stm32f4xx_hal.h"</cpp:file></cpp:include>

<comment type="block" format="doxygen">/** @addtogroup STM32F4xx_HAL_Driver
  * @{
  */</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name> <argument_list>(<argument><expr><name>LTDC</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name> <argument_list>(<argument><expr><name>DSI</name></expr></argument>)</argument_list></call></expr></cpp:if>

<comment type="block" format="doxygen">/** @defgroup LTDCEx LTDCEx
  * @brief LTDC HAL module driver
  * @{
  */</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAL_LTDC_MODULE_ENABLED</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>HAL_DSI_MODULE_ENABLED</name></expr></argument>)</argument_list></call></expr></cpp:if>

<comment type="block">/* Private typedef -----------------------------------------------------------*/</comment>
<comment type="block">/* Private define ------------------------------------------------------------*/</comment>
<comment type="block">/* Private macro -------------------------------------------------------------*/</comment>
<comment type="block">/* Private variables ---------------------------------------------------------*/</comment>
<comment type="block">/* Private function prototypes -----------------------------------------------*/</comment>
<comment type="block">/* Exported functions --------------------------------------------------------*/</comment>

<comment type="block" format="doxygen">/** @defgroup LTDCEx_Exported_Functions LTDC Extended Exported Functions
  * @{
  */</comment>

<comment type="block" format="doxygen">/** @defgroup LTDCEx_Exported_Functions_Group1 Initialization and Configuration functions
  *  @brief   Initialization and Configuration functions
  *
@verbatim
 ===============================================================================
                ##### Initialization and Configuration functions #####
 ===============================================================================
    [..]  This section provides functions allowing to:
      (+) Initialize and configure the LTDC

@endverbatim
  * @{
  */</comment>

<comment type="block" format="doxygen">/**
  * @brief  Retrieve common parameters from DSI Video mode configuration structure
  * @param  hltdc   pointer to a LTDC_HandleTypeDef structure that contains
  *                 the configuration information for the LTDC.
  * @param  VidCfg  pointer to a DSI_VidCfgTypeDef structure that contains
  *                 the DSI video mode configuration parameters
  * @note   The implementation of this function is taking into account the LTDC
  *         polarities inversion as described in the current LTDC specification
  * @retval HAL status
  */</comment>
<function><type><name>HAL_StatusTypeDef</name></type> <name>HAL_LTDCEx_StructInitFromVideoConfig</name><parameter_list>(<parameter><decl><type><name>LTDC_HandleTypeDef</name> <modifier>*</modifier></type><name>hltdc</name></decl></parameter>, <parameter><decl><type><name>DSI_VidCfgTypeDef</name> <modifier>*</modifier></type><name>VidCfg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
  <comment type="block">/* Retrieve signal polarities from DSI */</comment>

  <comment type="block">/* The following polarity is inverted:
                     LTDC_DEPOLARITY_AL &lt;-&gt; LTDC_DEPOLARITY_AH */</comment>

  <comment type="block">/* Note 1 : Code in line w/ Current LTDC specification */</comment>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>DEPolarity</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>VidCfg</name><operator>-&gt;</operator><name>DEPolarity</name></name> <operator>==</operator> <name>DSI_DATA_ENABLE_ACTIVE_HIGH</name><operator>)</operator></expr> ?</condition><then> <expr><name>LTDC_DEPOLARITY_AL</name></expr> </then><else>: <expr><name>LTDC_DEPOLARITY_AH</name></expr></else></ternary></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>VSPolarity</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>VidCfg</name><operator>-&gt;</operator><name>VSPolarity</name></name> <operator>==</operator> <name>DSI_VSYNC_ACTIVE_HIGH</name><operator>)</operator></expr> ?</condition><then> <expr><name>LTDC_VSPOLARITY_AH</name></expr> </then><else>: <expr><name>LTDC_VSPOLARITY_AL</name></expr></else></ternary></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>HSPolarity</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>VidCfg</name><operator>-&gt;</operator><name>HSPolarity</name></name> <operator>==</operator> <name>DSI_HSYNC_ACTIVE_HIGH</name><operator>)</operator></expr> ?</condition><then> <expr><name>LTDC_HSPOLARITY_AH</name></expr> </then><else>: <expr><name>LTDC_HSPOLARITY_AL</name></expr></else></ternary></expr>;</expr_stmt>

  <comment type="block">/* Note 2: Code to be used in case LTDC polarities inversion updated in the specification */</comment>
  <comment type="block">/* hltdc-&gt;Init.DEPolarity = VidCfg-&gt;DEPolarity &lt;&lt; 29;
     hltdc-&gt;Init.VSPolarity = VidCfg-&gt;VSPolarity &lt;&lt; 29;
     hltdc-&gt;Init.HSPolarity = VidCfg-&gt;HSPolarity &lt;&lt; 29; */</comment>

  <comment type="block">/* Retrieve vertical timing parameters from DSI */</comment>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>VerticalSync</name></name>       <operator>=</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalSyncActive</name></name> <operator>-</operator> <literal type="number">1U</literal></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>AccumulatedVBP</name></name>     <operator>=</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalSyncActive</name></name> <operator>+</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalBackPorch</name></name> <operator>-</operator> <literal type="number">1U</literal></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>AccumulatedActiveH</name></name> <operator>=</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalSyncActive</name></name> <operator>+</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalBackPorch</name></name> <operator>+</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalActive</name></name> <operator>-</operator> <literal type="number">1U</literal></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>TotalHeigh</name></name>         <operator>=</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalSyncActive</name></name> <operator>+</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalBackPorch</name></name> <operator>+</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalActive</name></name> <operator>+</operator> <name><name>VidCfg</name><operator>-&gt;</operator><name>VerticalFrontPorch</name></name> <operator>-</operator> <literal type="number">1U</literal></expr>;</expr_stmt>

  <return>return <expr><name>HAL_OK</name></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/**
  * @brief  Retrieve common parameters from DSI Adapted command mode configuration structure
  * @param  hltdc   pointer to a LTDC_HandleTypeDef structure that contains
  *                 the configuration information for the LTDC.
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @note   The implementation of this function is taking into account the LTDC
  *         polarities inversion as described in the current LTDC specification
  * @retval HAL status
  */</comment>
<function><type><name>HAL_StatusTypeDef</name></type> <name>HAL_LTDCEx_StructInitFromAdaptedCommandConfig</name><parameter_list>(<parameter><decl><type><name>LTDC_HandleTypeDef</name> <modifier>*</modifier></type><name>hltdc</name></decl></parameter>, <parameter><decl><type><name>DSI_CmdCfgTypeDef</name> <modifier>*</modifier></type><name>CmdCfg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
  <comment type="block">/* Retrieve signal polarities from DSI */</comment>

  <comment type="block">/* The following polarities are inverted:
                     LTDC_DEPOLARITY_AL &lt;-&gt; LTDC_DEPOLARITY_AH
                     LTDC_VSPOLARITY_AL &lt;-&gt; LTDC_VSPOLARITY_AH
                     LTDC_HSPOLARITY_AL &lt;-&gt; LTDC_HSPOLARITY_AH)*/</comment>

  <comment type="block">/* Note 1 : Code in line w/ Current LTDC specification */</comment>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>DEPolarity</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>CmdCfg</name><operator>-&gt;</operator><name>DEPolarity</name></name> <operator>==</operator> <name>DSI_DATA_ENABLE_ACTIVE_HIGH</name><operator>)</operator></expr> ?</condition><then> <expr><name>LTDC_DEPOLARITY_AL</name></expr> </then><else>: <expr><name>LTDC_DEPOLARITY_AH</name></expr></else></ternary></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>VSPolarity</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>CmdCfg</name><operator>-&gt;</operator><name>VSPolarity</name></name> <operator>==</operator> <name>DSI_VSYNC_ACTIVE_HIGH</name><operator>)</operator></expr> ?</condition><then> <expr><name>LTDC_VSPOLARITY_AL</name></expr> </then><else>: <expr><name>LTDC_VSPOLARITY_AH</name></expr></else></ternary></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>hltdc</name><operator>-&gt;</operator><name>Init</name><operator>.</operator><name>HSPolarity</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>CmdCfg</name><operator>-&gt;</operator><name>HSPolarity</name></name> <operator>==</operator> <name>DSI_HSYNC_ACTIVE_HIGH</name><operator>)</operator></expr> ?</condition><then> <expr><name>LTDC_HSPOLARITY_AL</name></expr> </then><else>: <expr><name>LTDC_HSPOLARITY_AH</name></expr></else></ternary></expr>;</expr_stmt>

  <comment type="block">/* Note 2: Code to be used in case LTDC polarities inversion updated in the specification */</comment>
  <comment type="block">/* hltdc-&gt;Init.DEPolarity = CmdCfg-&gt;DEPolarity &lt;&lt; 29;
     hltdc-&gt;Init.VSPolarity = CmdCfg-&gt;VSPolarity &lt;&lt; 29;
     hltdc-&gt;Init.HSPolarity = CmdCfg-&gt;HSPolarity &lt;&lt; 29; */</comment>

  <return>return <expr><name>HAL_OK</name></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/**
  * @}
  */</comment>

<comment type="block" format="doxygen">/**
  * @}
  */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* HAL_LTCD_MODULE_ENABLED &amp;&amp; HAL_DSI_MODULE_ENABLED */</comment>

<comment type="block" format="doxygen">/**
  * @}
  */</comment>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* LTDC &amp;&amp; DSI */</comment>

<comment type="block" format="doxygen">/**
  * @}
  */</comment>

<comment type="block" format="doxygen">/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/</comment>
</unit>
