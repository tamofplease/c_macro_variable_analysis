<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/FlashDB/port/fal/src/fal.c"><comment type="block">/*
 * Copyright (c) 2006-2018, RT-Thread Development Team
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Change Logs:
 * Date           Author       Notes
 * 2018-05-17     armink       the first version
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fal.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>uint8_t</name></type> <name>init_ok</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<comment type="block" format="doxygen">/**
 * FAL (Flash Abstraction Layer) initialization.
 * It will initialize all flash device and all flash partition.
 *
 * @return &gt;= 0: partitions total number
 */</comment>
<function><type><name>int</name></type> <name>fal_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>fal_flash_init</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>fal_partition_init</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>result</name></decl>;</decl_stmt>

    <comment type="block">/* initialize all flash device on FAL flash table */</comment>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>fal_flash_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <if_stmt><if>if <condition>(<expr><name>result</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <goto>goto <name>__exit</name>;</goto>
    </block_content>}</block></if></if_stmt>

    <comment type="block">/* initialize all flash partition on FAL partition table */</comment>
    <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>fal_partition_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<label><name>__exit</name>:</label>

    <if_stmt><if>if <condition>(<expr><operator>(</operator><name>result</name> <operator>&gt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><operator>!</operator><name>init_ok</name><operator>)</operator></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><name>init_ok</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>log_i</name><argument_list>(<argument><expr><literal type="string">"Flash Abstraction Layer (V%s) initialize success."</literal></expr></argument>, <argument><expr><name>FAL_SW_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if>
    <if type="elseif">else if<condition>(<expr><name>result</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><name>init_ok</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>log_e</name><argument_list>(<argument><expr><literal type="string">"Flash Abstraction Layer (V%s) initialize failed."</literal></expr></argument>, <argument><expr><name>FAL_SW_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<comment type="block" format="doxygen">/**
 * Check if the FAL is initialized successfully
 * 
 * @return 0: not init or init failed; 1: init success
 */</comment>
<function><type><name>int</name></type> <name>fal_init_check</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
    <return>return <expr><name>init_ok</name></expr>;</return>
</block_content>}</block></function>
</unit>
