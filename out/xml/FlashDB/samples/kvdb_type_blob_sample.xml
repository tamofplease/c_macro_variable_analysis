<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/FlashDB/samples/kvdb_type_blob_sample.c"><comment type="block">/*
 * Copyright (c) 2020, Armink, &lt;armink.ztl@gmail.com&gt;
 *
 * SPDX-License-Identifier: Apache-2.0
 */</comment>

<comment type="block" format="doxygen">/**
 * @file
 * @brief blob KV samples.
 *
 * Key-Value Database blob type KV feature samples
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;flashdb.h&gt;</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>FDB_USING_KVDB</name></cpp:ifdef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FDB_LOG_TAG</name></cpp:macro> <cpp:value>"[sample][kvdb][blob]"</cpp:value></cpp:define>

<function><type><name>void</name></type> <name>kvdb_type_blob_sample</name><parameter_list>(<parameter><decl><type><name>fdb_kvdb_t</name></type> <name>kvdb</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_blob</name></name></type> <name>blob</name></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"==================== kvdb_type_blob_sample ====================\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <block>{<block_content> <comment type="block">/* CREATE new Key-Value */</comment>
        <decl_stmt><decl><type><name>int</name></type> <name>temp_data</name> <init>= <expr><literal type="number">36</literal></expr></init></decl>;</decl_stmt>

        <comment type="block">/* It will create new KV node when "temp" KV not in database.
         * fdb_blob_make: It's a blob make function, and it will return the blob when make finish.
         */</comment>
        <expr_stmt><expr><call><name>fdb_kv_set_blob</name><argument_list>(<argument><expr><name>kvdb</name></expr></argument>, <argument><expr><literal type="string">"temp"</literal></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>temp_data</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>temp_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"create the 'temp' blob KV, value is: %d\n"</literal></expr></argument>, <argument><expr><name>temp_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <block>{<block_content> <comment type="block">/* GET the KV value */</comment>
        <decl_stmt><decl><type><name>int</name></type> <name>temp_data</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

        <comment type="block">/* get the "temp" KV value */</comment>
        <expr_stmt><expr><call><name>fdb_kv_get_blob</name><argument_list>(<argument><expr><name>kvdb</name></expr></argument>, <argument><expr><literal type="string">"temp"</literal></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>temp_data</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>temp_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block">/* the blob.saved.len is more than 0 when get the value successful */</comment>
        <if_stmt><if>if <condition>(<expr><name><name>blob</name><operator>.</operator><name>saved</name><operator>.</operator><name>len</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"get the 'temp' value is: %d\n"</literal></expr></argument>, <argument><expr><name>temp_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block>

    <block>{<block_content> <comment type="block">/* CHANGE the KV value */</comment>
        <decl_stmt><decl><type><name>int</name></type> <name>temp_data</name> <init>= <expr><literal type="number">38</literal></expr></init></decl>;</decl_stmt>

        <comment type="block">/* change the "temp" KV's value to 38 */</comment>
        <expr_stmt><expr><call><name>fdb_kv_set_blob</name><argument_list>(<argument><expr><name>kvdb</name></expr></argument>, <argument><expr><literal type="string">"temp"</literal></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>temp_data</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>temp_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"set 'temp' value to %d\n"</literal></expr></argument>, <argument><expr><name>temp_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <block>{<block_content> <comment type="block">/* DELETE the KV by name */</comment>
        <expr_stmt><expr><call><name>fdb_kv_del</name><argument_list>(<argument><expr><name>kvdb</name></expr></argument>, <argument><expr><literal type="string">"temp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"delete the 'temp' finish\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"===========================================================\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* FDB_USING_KVDB */</comment>
</unit>
