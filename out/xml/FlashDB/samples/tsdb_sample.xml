<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/FlashDB/samples/tsdb_sample.c"><comment type="block">/*
 * Copyright (c) 2020, Armink, &lt;armink.ztl@gmail.com&gt;
 *
 * SPDX-License-Identifier: Apache-2.0
 */</comment>

<comment type="block" format="doxygen">/**
 * @file
 * @brief TSDB samples.
 *
 * Time series log (like TSDB) feature samples source file.
 *
 * TSL is time series log, the TSDB saved many TSLs.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;flashdb.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>FDB_USING_TSDB</name></cpp:ifdef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FDB_LOG_TAG</name></cpp:macro> <cpp:value>"[sample][tsdb]"</cpp:value></cpp:define>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>FDB_USING_TIMESTAMP_64BIT</name></cpp:ifdef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__PRITS</name></cpp:macro> <cpp:value>"ld"</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__PRITS</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>env_status</name> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>temp</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>humi</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>query_cb</name><parameter_list>(<parameter><decl><type><name>fdb_tsl_t</name></type> <name>tsl</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>query_by_time_cb</name><parameter_list>(<parameter><decl><type><name>fdb_tsl_t</name></type> <name>tsl</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>set_status_cb</name><parameter_list>(<parameter><decl><type><name>fdb_tsl_t</name></type> <name>tsl</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type> <name>tsdb_sample</name><parameter_list>(<parameter><decl><type><name>fdb_tsdb_t</name></type> <name>tsdb</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_blob</name></name></type> <name>blob</name></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"==================== tsdb_sample ====================\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <block>{<block_content> <comment type="block">/* APPEND new TSL (time series log) */</comment>
        <decl_stmt><decl><type><name><name>struct</name> <name>env_status</name></name></type> <name>status</name></decl>;</decl_stmt>

        <comment type="block">/* append new log to TSDB */</comment>
        <expr_stmt><expr><name><name>status</name><operator>.</operator><name>temp</name></name> <operator>=</operator> <literal type="number">36</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>status</name><operator>.</operator><name>humi</name></name> <operator>=</operator> <literal type="number">85</literal></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>fdb_tsl_append</name><argument_list>(<argument><expr><name>tsdb</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>status</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"append the new status.temp (%d) and status.humi (%d)\n"</literal></expr></argument>, <argument><expr><name><name>status</name><operator>.</operator><name>temp</name></name></expr></argument>, <argument><expr><name><name>status</name><operator>.</operator><name>humi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name><name>status</name><operator>.</operator><name>temp</name></name> <operator>=</operator> <literal type="number">38</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>status</name><operator>.</operator><name>humi</name></name> <operator>=</operator> <literal type="number">90</literal></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>fdb_tsl_append</name><argument_list>(<argument><expr><name>tsdb</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>status</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"append the new status.temp (%d) and status.humi (%d)\n"</literal></expr></argument>, <argument><expr><name><name>status</name><operator>.</operator><name>temp</name></name></expr></argument>, <argument><expr><name><name>status</name><operator>.</operator><name>humi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <block>{<block_content> <comment type="block">/* QUERY the TSDB */</comment>
        <comment type="block">/* query all TSL in TSDB by iterator */</comment>
        <expr_stmt><expr><call><name>fdb_tsl_iter</name><argument_list>(<argument><expr><name>tsdb</name></expr></argument>, <argument><expr><name>query_cb</name></expr></argument>, <argument><expr><name>tsdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <block>{<block_content> <comment type="block">/* QUERY the TSDB by time */</comment>
        <comment type="block">/* prepare query time (from 1970-01-01 00:00:00 to 2020-05-05 00:00:00) */</comment>
        <decl_stmt><decl><type><name><name>struct</name> <name>tm</name></name></type> <name>tm_from</name> <init>= <expr><block>{ <expr><operator>.</operator><name>tm_year</name> <operator>=</operator> <literal type="number">1970</literal> <operator>-</operator> <literal type="number">1900</literal></expr>, <expr><operator>.</operator><name>tm_mon</name> <operator>=</operator> <literal type="number">0</literal></expr>, <expr><operator>.</operator><name>tm_mday</name> <operator>=</operator> <literal type="number">1</literal></expr>, <expr><operator>.</operator><name>tm_hour</name> <operator>=</operator> <literal type="number">0</literal></expr>, <expr><operator>.</operator><name>tm_min</name> <operator>=</operator> <literal type="number">0</literal></expr>, <expr><operator>.</operator><name>tm_sec</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>struct</name> <name>tm</name></name></type> <name>tm_to</name> <init>= <expr><block>{ <expr><operator>.</operator><name>tm_year</name> <operator>=</operator> <literal type="number">2020</literal> <operator>-</operator> <literal type="number">1900</literal></expr>, <expr><operator>.</operator><name>tm_mon</name> <operator>=</operator> <literal type="number">4</literal></expr>, <expr><operator>.</operator><name>tm_mday</name> <operator>=</operator> <literal type="number">5</literal></expr>, <expr><operator>.</operator><name>tm_hour</name> <operator>=</operator> <literal type="number">0</literal></expr>, <expr><operator>.</operator><name>tm_min</name> <operator>=</operator> <literal type="number">0</literal></expr>, <expr><operator>.</operator><name>tm_sec</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>time_t</name></type> <name>from_time</name> <init>= <expr><call><name>mktime</name><argument_list>(<argument><expr><operator>&amp;</operator><name>tm_from</name></expr></argument>)</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>to_time</name> <init>= <expr><call><name>mktime</name><argument_list>(<argument><expr><operator>&amp;</operator><name>tm_to</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>size_t</name></type> <name>count</name></decl>;</decl_stmt>
        <comment type="block">/* query all TSL in TSDB by time */</comment>
        <expr_stmt><expr><call><name>fdb_tsl_iter_by_time</name><argument_list>(<argument><expr><name>tsdb</name></expr></argument>, <argument><expr><name>from_time</name></expr></argument>, <argument><expr><name>to_time</name></expr></argument>, <argument><expr><name>query_by_time_cb</name></expr></argument>, <argument><expr><name>tsdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block">/* query all FDB_TSL_WRITE status TSL's count in TSDB by time */</comment>
        <expr_stmt><expr><name>count</name> <operator>=</operator> <call><name>fdb_tsl_query_count</name><argument_list>(<argument><expr><name>tsdb</name></expr></argument>, <argument><expr><name>from_time</name></expr></argument>, <argument><expr><name>to_time</name></expr></argument>, <argument><expr><name>FDB_TSL_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"query count is: %zu\n"</literal></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <block>{<block_content> <comment type="block">/* SET the TSL status */</comment>
        <comment type="block">/* Change the TSL status by iterator or time iterator
         * set_status_cb: the change operation will in this callback
         *
         * NOTE: The actions to modify the state must be in order.
         *       like: FDB_TSL_WRITE -&gt; FDB_TSL_USER_STATUS1 -&gt; FDB_TSL_DELETED -&gt; FDB_TSL_USER_STATUS2
         *       The intermediate states can also be ignored.
         *       such as: FDB_TSL_WRITE -&gt; FDB_TSL_DELETED
         */</comment>
        <expr_stmt><expr><call><name>fdb_tsl_iter</name><argument_list>(<argument><expr><name>tsdb</name></expr></argument>, <argument><expr><name>set_status_cb</name></expr></argument>, <argument><expr><name>tsdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>

    <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"===========================================================\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>query_cb</name><parameter_list>(<parameter><decl><type><name>fdb_tsl_t</name></type> <name>tsl</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_blob</name></name></type> <name>blob</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>struct</name> <name>env_status</name></name></type> <name>status</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>fdb_tsdb_t</name></type> <name>db</name> <init>= <expr><name>arg</name></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>fdb_blob_read</name><argument_list>(<argument><expr><operator>(</operator><name>fdb_db_t</name><operator>)</operator> <name>db</name></expr></argument>, <argument><expr><call><name>fdb_tsl_to_blob</name><argument_list>(<argument><expr><name>tsl</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>status</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"[query_cb] queried a TSL: time: %"</literal> <name>__PRITS</name> <literal type="string">", temp: %d, humi: %d\n"</literal></expr></argument>, <argument><expr><name><name>tsl</name><operator>-&gt;</operator><name>time</name></name></expr></argument>, <argument><expr><name><name>status</name><operator>.</operator><name>temp</name></name></expr></argument>, <argument><expr><name><name>status</name><operator>.</operator><name>humi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>query_by_time_cb</name><parameter_list>(<parameter><decl><type><name>fdb_tsl_t</name></type> <name>tsl</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name><name>struct</name> <name>fdb_blob</name></name></type> <name>blob</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>struct</name> <name>env_status</name></name></type> <name>status</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>fdb_tsdb_t</name></type> <name>db</name> <init>= <expr><name>arg</name></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>fdb_blob_read</name><argument_list>(<argument><expr><operator>(</operator><name>fdb_db_t</name><operator>)</operator> <name>db</name></expr></argument>, <argument><expr><call><name>fdb_tsl_to_blob</name><argument_list>(<argument><expr><name>tsl</name></expr></argument>, <argument><expr><call><name>fdb_blob_make</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blob</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>status</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"[query_by_time_cb] queried a TSL: time: %"</literal> <name>__PRITS</name> <literal type="string">", temp: %d, humi: %d\n"</literal></expr></argument>, <argument><expr><name><name>tsl</name><operator>-&gt;</operator><name>time</name></name></expr></argument>, <argument><expr><name><name>status</name><operator>.</operator><name>temp</name></name></expr></argument>, <argument><expr><name><name>status</name><operator>.</operator><name>humi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>set_status_cb</name><parameter_list>(<parameter><decl><type><name>fdb_tsl_t</name></type> <name>tsl</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
    <decl_stmt><decl><type><name>fdb_tsdb_t</name></type> <name>db</name> <init>= <expr><name>arg</name></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name>FDB_INFO</name><argument_list>(<argument><expr><literal type="string">"set the TSL (time %"</literal> <name>__PRITS</name> <literal type="string">") status from %d to %d\n"</literal></expr></argument>, <argument><expr><name><name>tsl</name><operator>-&gt;</operator><name>time</name></name></expr></argument>, <argument><expr><name><name>tsl</name><operator>-&gt;</operator><name>status</name></name></expr></argument>, <argument><expr><name>FDB_TSL_USER_STATUS1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>fdb_tsl_set_status</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><name>tsl</name></expr></argument>, <argument><expr><name>FDB_TSL_USER_STATUS1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* FDB_USING_TSDB */</comment>
</unit>
