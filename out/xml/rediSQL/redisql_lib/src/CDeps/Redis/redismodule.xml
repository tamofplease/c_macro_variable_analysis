<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/rediSQL/redisql_lib/src/CDeps/Redis/redismodule.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"redismodule.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>RedisModuleType</name> <modifier>*</modifier></type><name>DBType</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<comment type="line">// RedisModule_Init is defined as a static function and so won't be exported as</comment>
<comment type="line">// a symbol. Export a version under a slightly different name so that we can</comment>
<comment type="line">// get access to it from Rust.</comment>
<function><type><name>int</name></type> <name>Export_RedisModule_Init</name><parameter_list>(<parameter><decl><type><name>RedisModuleCtx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ver</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>apiver</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>RedisModule_Init</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>ver</name></expr></argument>, <argument><expr><name>apiver</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>RedisModuleKey</name><modifier>*</modifier></type> <name>Export_RedisModule_OpenKey</name><parameter_list>(<parameter><decl><type><name>RedisModuleCtx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>RedisModuleString</name> <modifier>*</modifier></type><name>keyname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list><block>{<block_content>
    <return>return <expr><call><name>RedisModule_OpenKey</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>keyname</name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

</unit>
