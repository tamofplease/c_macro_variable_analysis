<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/orioledb/src/tableam/operations.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * operations.c
 *		Implementation of table-level operations
 *
 * Copyright (c) 2021-2022, Oriole DB Inc.
 *
 * IDENTIFICATION
 *	  contrib/orioledb/src/tableam/operations.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"orioledb.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"btree/btree.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"btree/iterator.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"btree/modify.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"recovery/recovery.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"recovery/wal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tableam/descr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tableam/handler.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tableam/operations.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tableam/tree.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"transam/oxid.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"transam/undo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tuple/slot.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/stopevent.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/heapam.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/tableam.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/index.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/storage.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"commands/vacuum.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/execnodes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"parser/parsetree.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/bufmgr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/lsyscache.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>OTableModifyResult</name></type> <name>o_update_secondary_indices</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
													 <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>newSlot</name></decl></parameter>,
													 <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>oldSlot</name></decl></parameter>,
													 <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
													 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>,
													 <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
													 <parameter><decl><type><name>bool</name></type> <name>update_all</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>OTableModifyResult</name></type> <name>o_tbl_indices_insert</name><parameter_list>(<parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>,
											   <parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
											   <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
											   <parameter><decl><type><name>OIndexNumber</name></type> <name>start_ix</name></decl></parameter>, <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>,
											   <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
											   <parameter><decl><type><name>BTreeModifyCallbackInfo</name> <modifier>*</modifier></type><name>callbackInfo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OTableModifyResult</name></type> <name>o_tbl_indices_overwrite</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
												  <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>oldPkey</name></decl></parameter>,
												  <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>newSlot</name></decl></parameter>,
												  <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
												  <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
												  <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
												  <parameter><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OTableModifyResult</name></type> <name>o_tbl_indices_reinsert</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
												 <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>oldPkey</name></decl></parameter>,
												 <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>newPkey</name></decl></parameter>,
												 <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>newSlot</name></decl></parameter>,
												 <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
												 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
												 <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
												 <parameter><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OTableModifyResult</name></type> <name>o_tbl_indices_delete</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
											   <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
											   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
											   <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
											   <parameter><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>o_toast_insert_values</name><parameter_list>(<parameter><decl><type><name>Relation</name></type> <name>rel</name></decl></parameter>, <parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
								  <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>, <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>o_callback_is_modified</name><parameter_list>(<parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type> <name>o_insert_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
													<parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
													<parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
													<parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
													<parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
													<parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
													<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeWaitCallbackAction</name></type> <name>o_insert_on_conflict_wait_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
																   <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
																   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
																   <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
																   <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
																   <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
																   <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type> <name>o_insert_on_conflict_modify_deleted_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
																			   <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
																			   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
																			   <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
																			   <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
																			   <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
																			   <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type> <name>o_insert_on_conflict_modify_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
																	   <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
																	   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
																	   <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
																	   <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
																	   <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
																	   <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type> <name>o_delete_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
													<parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
													<parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
													<parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
													<parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
													<parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
													<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type> <name>o_delete_deleted_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,
															<parameter><decl><type><name>OTuple</name></type> <name>oldTup</name></decl></parameter>,
															<parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newTup</name></decl></parameter>,
															<parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>,
															<parameter><decl><type><name>OTupleXactInfo</name></type> <name>prevXactInfo</name></decl></parameter>,
															<parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
															<parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lockMode</name></decl></parameter>,
															<parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
															<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type> <name>o_update_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
													<parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
													<parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
													<parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
													<parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
													<parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
													<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeWaitCallbackAction</name></type> <name>o_lock_wait_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
													 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
													 <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
													 <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>, <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
													 <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type> <name>o_lock_modify_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
														 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
														 <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
														 <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>, <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
														 <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>get_keys_from_ps</name><parameter_list>(<parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>planSlot</name></decl></parameter>, <parameter><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,
							 <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>junkAttrs</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>is_keys_eq</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>k1</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>k2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>o_report_duplicate</name><parameter_list>(<parameter><decl><type><name>Relation</name></type> <name>rel</name></decl></parameter>, <parameter><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,
							   <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type>
<name>o_tbl_insert</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>Relation</name></type> <name>relation</name></decl></parameter>,
			 <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>, <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>,
			 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>mres</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>tup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>primary</name> <init>= <expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>BTreeModifyCallbackInfo</name></type> <name>callbackInfo</name> <init>=
	<expr><block>{
		<expr><operator>.</operator><name>waitCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>modifyDeletedCallback</name> <operator>=</operator> <name>o_insert_callback</name></expr>,
		<expr><operator>.</operator><name>modifyCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>needsUndoForSelfCreated</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>arg</name> <operator>=</operator> <name>slot</name></expr>
	}</block></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>slot</name><operator>-&gt;</operator><name>tts_ops</name></name> <operator>!=</operator> <name><name>descr</name><operator>-&gt;</operator><name>newTuple</name><operator>-&gt;</operator><name>tts_ops</name></name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>ExecCopySlot</name><argument_list>(<argument><expr><name><name>descr</name><operator>-&gt;</operator><name>newTuple</name></name></expr></argument>, <argument><expr><name>slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>slot</name> <operator>=</operator> <name><name>descr</name><operator>-&gt;</operator><name>newTuple</name></name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>primaryIsCtid</name></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>ItemPointerData</name></type> <name>iptr</name></decl>;</decl_stmt>

		<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>iptr</name> <operator>=</operator> <call><name>btree_ctid_get_and_inc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>tts_orioledb_set_ctid</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>iptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>tts_orioledb_toast</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>tup</name> <operator>=</operator> <call><name>tts_orioledb_form_tuple</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>o_btree_check_size_of_tuple</name><argument_list>(<argument><expr><call><name>o_tuple_size</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>leafSpec</name></name></expr></argument>)</argument_list></call></expr></argument>,
								<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>relation</name></expr></argument>)</argument_list></call></expr></argument>,
								<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>mres</name> <operator>=</operator> <call><name>o_tbl_indices_insert</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>estate</name></expr></argument>, <argument><expr><name>PrimaryIndexNumber</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>,
								<argument><expr><name>csn</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>mres</name><operator>.</operator><name>success</name></name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>o_report_duplicate</name><argument_list>(<argument><expr><name>relation</name></expr></argument>, <argument><expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name></expr>]</index></name></expr></argument>, <argument><expr><name>slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>o_toast_insert_values</name><argument_list>(<argument><expr><name>relation</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>slot</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>o_wal_insert</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>tup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>OBTreeModifyResult</name></type>
<name>o_tbl_lock</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>pkey</name></decl></parameter>, <parameter><decl><type><name>LockTupleMode</name></type> <name>mode</name></decl></parameter>,
		   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OLockCallbackArg</name> <modifier>*</modifier></type><name>larg</name></decl></parameter>, <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>RowLockMode</name></type> <name>lock_mode</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeModifyResult</name></type> <name>res</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>nullTup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>BTreeModifyCallbackInfo</name></type> <name>callbackInfo</name> <init>= <expr><block>{
		<expr><operator>.</operator><name>waitCallback</name> <operator>=</operator> <name>o_lock_wait_callback</name></expr>,
		<expr><operator>.</operator><name>modifyDeletedCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>modifyCallback</name> <operator>=</operator> <name>o_lock_modify_callback</name></expr>,
		<expr><operator>.</operator><name>needsUndoForSelfCreated</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>arg</name> <operator>=</operator> <name>larg</name></expr>
	}</block></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<switch>switch <condition>(<expr><name>mode</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>LockTupleKeyShare</name></expr>:</case>
			<expr_stmt><expr><name>lock_mode</name> <operator>=</operator> <name>RowLockKeyShare</name></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>LockTupleShare</name></expr>:</case>
			<expr_stmt><expr><name>lock_mode</name> <operator>=</operator> <name>RowLockShare</name></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>LockTupleNoKeyExclusive</name></expr>:</case>
			<expr_stmt><expr><name>lock_mode</name> <operator>=</operator> <name>RowLockNoKeyUpdate</name></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>LockTupleExclusive</name></expr>:</case>
			<expr_stmt><expr><name>lock_mode</name> <operator>=</operator> <name>RowLockUpdate</name></expr>;</expr_stmt>
			<break>break;</break>
		<default>default:</default>
			<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"Unknown lock mode: %u"</literal></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
	</block_content>}</block></switch>

	<expr_stmt><expr><call><name>O_TUPLE_SET_NULL</name><argument_list>(<argument><expr><name>nullTup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>, <argument><expr><name>BTreeOperationLock</name></expr></argument>,
						 <argument><expr><name>nullTup</name></expr></argument>, <argument><expr><name>BTreeKeyNone</name></expr></argument>, <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>pkey</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
						 <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name><name>larg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>, <argument><expr><name>lock_mode</name></expr></argument>,
						 <argument><expr><name>hint</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>res</name> <operator>==</operator> <name>OBTreeModifyResultLocked</name> <operator>||</operator> <name>res</name> <operator>==</operator> <name>OBTreeModifyResultFound</name> <operator>||</operator> <name>res</name> <operator>==</operator> <name>OBTreeModifyResultNotFound</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>larg</name><operator>-&gt;</operator><name>selfModified</name></name> <operator>=</operator> <call><name>COMMITSEQNO_IS_INPROGRESS</name><argument_list>(<argument><expr><name><name>larg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
		<operator>(</operator><name><name>larg</name><operator>-&gt;</operator><name>oxid</name></name> <operator>==</operator> <call><name>get_current_oxid_if_any</name><argument_list>()</argument_list></call><operator>)</operator> <operator>&amp;&amp;</operator>
		<call><name>UndoLocationIsValid</name><argument_list>(<argument><expr><name><name>larg</name><operator>-&gt;</operator><name>tupUndoLocation</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
		<operator>(</operator><name><name>larg</name><operator>-&gt;</operator><name>tupUndoLocation</name></name> <operator>&gt;=</operator> <name>saved_undo_location</name><operator>)</operator></expr>;</expr_stmt>

	<return>return <expr><name>res</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>TupleTableSlot</name> <modifier>*</modifier></type>
<name>o_tbl_insert_on_conflict</name><parameter_list>(<parameter><decl><type><name>ModifyTableState</name> <modifier>*</modifier></type><name>mstate</name></decl></parameter>,
						 <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
						 <parameter><decl><type><name>ResultRelInfo</name> <modifier>*</modifier></type><name>rinfo</name></decl></parameter>,
						 <parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
						 <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>,
						 <parameter><decl><type><name>OnConflictAction</name></type> <name>on_conflict</name></decl></parameter>,
						 <parameter><decl><type><name>OIndexNumber</name></type> <name>conflict_ix</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OModifyCallbackArg</name></type> <name>marg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>InsertOnConflictCallbackArg</name></type> <name>ioc_arg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>mres</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>scan_slot</name></decl>,
			   <decl><type ref="prev"><modifier>*</modifier></type><name>confl_slot</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>UndoStackLocations</name></type> <name>undoStackLocations</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>tup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OXid</name></type>		<name>oxid</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Relation</name></type>	<name>rel</name> <init>= <expr><name><name>rinfo</name><operator>-&gt;</operator><name>ri_RelationDesc</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>on_update</name> <init>= <expr><name>on_conflict</name> <operator>==</operator> <name>ONCONFLICT_UPDATE</name></expr></init></decl>,
				<decl><type ref="prev"/><name>ignore_all</name> <init>= <expr><name>conflict_ix</name> <operator>==</operator> <name>InvalidIndexNumber</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeKeyBound</name></type> <name>old_pkey</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>ignore_all</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>!</operator><name>on_update</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>conflict_ix</name> <operator>=</operator> <name>PrimaryIndexNumber</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>fill_current_oxid_csn</name><argument_list>(<argument><expr><operator>&amp;</operator><name>oxid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>csn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>undoStackLocations</name> <operator>=</operator> <call><name>get_cur_undo_locations</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>on_update</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>scanSlot</name></name> <operator>=</operator> <name><name>rinfo</name><operator>-&gt;</operator><name>ri_onConflict</name><operator>-&gt;</operator><name>oc_Existing</name></name></expr>;</expr_stmt></block_content></block></if>
	<else>else<block type="pseudo"><block_content>
		<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>scanSlot</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
	<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>desc</name></name> <operator>=</operator> <name>descr</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>conflictBTree</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name>conflict_ix</name></expr>]</index></name><operator>-&gt;</operator><name>desc</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>conflictIxNum</name></name> <operator>=</operator> <name>conflict_ix</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>copyPrimaryOxid</name></name> <operator>=</operator> <name>conflict_ix</name> <operator>!=</operator> <name>PrimaryIndexNumber</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>oxid</name></name> <operator>=</operator> <name>oxid</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>newSlot</name></name> <operator>=</operator> <operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>slot</name></expr>;</expr_stmt>

	<while>while <condition>(<expr><name>true</name></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>CommitSeqNo</name></type> <name>save_csn</name> <init>= <expr><name>csn</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>OTuple</name></type>		<name>primary_tup</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>BTreeModifyCallbackInfo</name></type> <name>callbackInfo</name> <init>= <expr><block>{
			<expr><operator>.</operator><name>waitCallback</name> <operator>=</operator> <name>o_insert_on_conflict_wait_callback</name></expr>,
			<expr><operator>.</operator><name>modifyDeletedCallback</name> <operator>=</operator> <name>o_insert_on_conflict_modify_deleted_callback</name></expr>,
			<expr><operator>.</operator><name>modifyCallback</name> <operator>=</operator> <name>o_insert_on_conflict_modify_callback</name></expr>,
			<expr><operator>.</operator><name>needsUndoForSelfCreated</name> <operator>=</operator> <name>true</name></expr>,
			<expr><operator>.</operator><name>arg</name> <operator>=</operator> <operator>&amp;</operator><name>ioc_arg</name></expr>
		}</block></expr></init></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><name><name>ioc_arg</name><operator>.</operator><name>scanSlot</name></name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>ExecClearTuple</name><argument_list>(<argument><expr><name><name>ioc_arg</name><operator>.</operator><name>scanSlot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>conflictOxid</name></name> <operator>=</operator> <name>InvalidOXid</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>ioc_arg</name><operator>.</operator><name>csn</name></name> <operator>=</operator> <name>csn</name></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>mres</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>OTableModifyResult</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name>mres</name> <operator>=</operator> <call><name>o_tbl_indices_insert</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>estate</name></expr></argument>, <argument><expr><name>conflict_ix</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>,
									<argument><expr><name>csn</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>success</name></name></expr>)</condition>
		<block>{<block_content>
			<decl_stmt><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>primary</name> <init>= <expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></init></decl>;</decl_stmt>

			<comment type="block">/* all OK */</comment>
			<expr_stmt><expr><call><name>tts_orioledb_insert_toast_values</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name>tup</name> <operator>=</operator> <call><name>tts_orioledb_form_tuple</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>o_wal_insert</name><argument_list>(<argument><expr><name>primary</name></expr></argument>, <argument><expr><name>tup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><name>slot</name></expr>;</return>
		</block_content>}</block></if></if_stmt>

		<comment type="block">/* failed to insert */</comment>
		<expr_stmt><expr><call><name>release_undo_size</name><argument_list>(<argument><expr><name>UndoReserveTxn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>apply_undo_stack</name><argument_list>(<argument><expr><name>oxid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>undoStackLocations</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name><name>ioc_arg</name><operator>.</operator><name>conflictOxid</name></name> <operator>!=</operator> <name>InvalidOXid</name></expr>)</condition>
		<block>{<block_content>
			<comment type="block">/* helps avoid deadlocks */</comment>
			<expr_stmt><expr><call><name>oxid_notify</name><argument_list>(<argument><expr><name><name>ioc_arg</name><operator>.</operator><name>conflictOxid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>wait_for_oxid</name><argument_list>(<argument><expr><name><name>ioc_arg</name><operator>.</operator><name>conflictOxid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<continue>continue;</continue>
		</block_content>}</block></if></if_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>ignore_all</name> <operator>&amp;&amp;</operator> <name><name>mres</name><operator>.</operator><name>failedIxNum</name></name> <operator>!=</operator> <name>conflict_ix</name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><call><name>o_report_duplicate</name><argument_list>(<argument><expr><name>rel</name></expr></argument>, <argument><expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name></expr>]</index></name></expr></argument>, <argument><expr><name>slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

		<expr_stmt><expr><name>csn</name> <operator>=</operator> <name><name>ioc_arg</name><operator>.</operator><name>csn</name></name></expr>;</expr_stmt>

		<if_stmt><if>if <condition>(<expr><name>on_update</name></expr>)</condition>
		<block>{<block_content>
			<decl_stmt><decl><type><name>ExprContext</name> <modifier>*</modifier></type><name>econtext</name> <init>= <expr><name><name>mstate</name><operator>-&gt;</operator><name>ps</name><operator>.</operator><name>ps_ExprContext</name></name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><name>scan_slot</name> <operator>=</operator> <name><name>rinfo</name><operator>-&gt;</operator><name>ri_onConflict</name><operator>-&gt;</operator><name>oc_Existing</name></name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>!</operator><name>ignore_all</name> <operator>&amp;&amp;</operator> <name>scan_slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt><if>if <condition>(<expr><name>conflict_ix</name> <operator>!=</operator> <name>PrimaryIndexNumber</name></expr>)</condition>
			<block>{<block_content>
				<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>primary_td</name> <init>= <expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></init></decl>,
						   <decl><type ref="prev"><modifier>*</modifier></type><name>conflict_td</name> <init>= <expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name>conflict_ix</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>OBTreeKeyBound</name></type> <name>key</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>CommitSeqNo</name></type> <name>primaryTupleCsn</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>OTuple</name></type>		<name>sstup</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>BTreeLocationHint</name></type> <name>hint</name> <init>= <expr><block>{<expr><name>OInvalidInMemoryBlkno</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>ioc_arg</name><operator>.</operator><name>scanSlot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><call><name>tts_orioledb_fill_key_bound</name><argument_list>(<argument><expr><name>scan_slot</name></expr></argument>,
											<argument><expr><name>primary_td</name></expr></argument>,
											<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary_td</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name>primary_tup</name> <operator>=</operator> <call><name>o_btree_find_tuple_by_key</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary_td</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>,
														<argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>key</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
														<argument><expr><name>csn</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>primaryTupleCsn</name></expr></argument>,
														<argument><expr><name><name>scan_slot</name><operator>-&gt;</operator><name>tts_mcxt</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if_stmt><if>if <condition>(<expr><call><name>O_TUPLE_IS_NULL</name><argument_list>(<argument><expr><name>primary_tup</name></expr></argument>)</argument_list></call></expr>)</condition>
				<block>{<block_content>
					<comment type="block">/* concurrent modify happens */</comment>
					<expr_stmt><expr><name>csn</name> <operator>=</operator> <name>save_csn</name></expr>;</expr_stmt>
					<continue>continue;</continue>
				</block_content>}</block></if></if_stmt>

				<expr_stmt><expr><call><name>o_fill_secondary_key_bound</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary_td</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>,
										   <argument><expr><operator>&amp;</operator><name><name>conflict_td</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>,
										   <argument><expr><name>primary_tup</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name>sstup</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>scan_slot</name><operator>)</operator><operator>-&gt;</operator><name>tuple</name></expr>;</expr_stmt>
				<if_stmt><if>if <condition>(<expr><call><name>o_idx_cmp</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conflict_td</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>,
							  <argument><expr><operator>&amp;</operator><name>sstup</name></expr></argument>, <argument><expr><name>BTreeKeyLeafTuple</name></expr></argument>,
							  <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>key</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
				<block>{<block_content>
					<comment type="block">/* secondary key on primary tuple has been updated */</comment>
					<expr_stmt><expr><name>csn</name> <operator>=</operator> <name>save_csn</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><name><name>primary_tup</name><operator>.</operator><name>data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<continue>continue;</continue>
				</block_content>}</block></if></if_stmt>

				<expr_stmt><expr><call><name>tts_orioledb_store_tuple</name><argument_list>(<argument><expr><name>scan_slot</name></expr></argument>, <argument><expr><name>primary_tup</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>,
										 <argument><expr><name>primaryTupleCsn</name></expr></argument>, <argument><expr><name>PrimaryIndexNumber</name></expr></argument>,
										 <argument><expr><name>true</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>

			<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>TTS_EMPTY</name><argument_list>(<argument><expr><name>scan_slot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name><name>econtext</name><operator>-&gt;</operator><name>ecxt_scantuple</name></name> <operator>=</operator> <name>scan_slot</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>econtext</name><operator>-&gt;</operator><name>ecxt_innertuple</name></name> <operator>=</operator> <name>slot</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>econtext</name><operator>-&gt;</operator><name>ecxt_outertuple</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

			<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ExecQual</name><argument_list>(<argument><expr><name><name>rinfo</name><operator>-&gt;</operator><name>ri_onConflict</name><operator>-&gt;</operator><name>oc_WhereClause</name></name></expr></argument>, <argument><expr><name>econtext</name></expr></argument>)</argument_list></call></expr>)</condition>
			<block>{<block_content>
				<return>return <expr><name>NULL</name></expr>;</return>
			</block_content>}</block></if></if_stmt>

			<expr_stmt><expr><call><name>ExecProject</name><argument_list>(<argument><expr><name><name>rinfo</name><operator>-&gt;</operator><name>ri_onConflict</name><operator>-&gt;</operator><name>oc_ProjInfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>confl_slot</name> <operator>=</operator> <name><name>rinfo</name><operator>-&gt;</operator><name>ri_onConflict</name><operator>-&gt;</operator><name>oc_ProjSlot</name></name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name>ExecMaterializeSlot</name><argument_list>(<argument><expr><name>confl_slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name>STOPEVENT</name><argument_list>(<argument><expr><name>STOPEVENT_IOC_BEFORE_UPDATE</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>descr</name></name> <operator>=</operator> <name>descr</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>oxid</name></name> <operator>=</operator> <name>oxid</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>csn</name></name> <operator>=</operator> <name>csn</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>rinfo</name></name> <operator>=</operator> <name>rinfo</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>epqstate</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>scanSlot</name></name> <operator>=</operator> <name>scan_slot</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>modified</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>rowLockMode</name></name> <operator>=</operator> <name>RowLockUpdate</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>marg</name><operator>.</operator><name>newSlot</name></name> <operator>=</operator> <operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>confl_slot</name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name>o_check_constraints</name><argument_list>(<argument><expr><name>rinfo</name></expr></argument>, <argument><expr><name>confl_slot</name></expr></argument>, <argument><expr><name>estate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name>get_keys_from_ps</name><argument_list>(<argument><expr><name>scan_slot</name></expr></argument>, <argument><expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>old_pkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name>mres</name> <operator>=</operator> <call><name>o_tbl_update</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name>confl_slot</name></expr></argument>, <argument><expr><name>estate</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>old_pkey</name></expr></argument>,
								<argument><expr><name>rel</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>,
								<argument><expr><operator>&amp;</operator><operator>(</operator><operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>scan_slot</name><operator>)</operator><operator>-&gt;</operator><name>hint</name></expr></argument>,
								<argument><expr><operator>&amp;</operator><name>marg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>&amp;&amp;</operator> <name><name>marg</name><operator>.</operator><name>modified</name></name></expr>)</condition>
			<block>{<block_content>
				<expr_stmt><expr><name>csn</name> <operator>=</operator> <name>save_csn</name></expr>;</expr_stmt>
				<continue>continue;</continue>
			</block_content>}</block></if></if_stmt>

			<expr_stmt><expr><call><name>o_check_tbl_update_mres</name><argument_list>(<argument><expr><name>mres</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>rel</name></expr></argument>, <argument><expr><name>confl_slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>mres</name><operator>.</operator><name>success</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>oldTuple</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition>
			<block>{<block_content>
				<comment type="block">/* primary key can be changed by concurrent transaction */</comment>
				<expr_stmt><expr><name>csn</name> <operator>=</operator> <name>save_csn</name></expr>;</expr_stmt>
				<continue>continue;</continue>
			</block_content>}</block></if></if_stmt>

			<return>return <expr><name><name>mres</name><operator>.</operator><name>oldTuple</name></name></expr>;</return>
		</block_content>}</block></if>
		<else>else
		<block>{<block_content>
			<comment type="block">/* DO NOTHING; */</comment>
			<return>return <expr><name>NULL</name></expr>;</return>
		</block_content>}</block></else></if_stmt>
		<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>NULL</name></expr>;</return>
	</block_content>}</block></while>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>OTableModifyResult</name></type>
<name>o_tbl_update</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>, <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
			 <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>oldPkey</name></decl></parameter>, <parameter><decl><type><name>Relation</name></type> <name>rel</name></decl></parameter>, <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>,
			 <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>, <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
			 <parameter><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>oldSlot</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>mres</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeKeyBound</name></type> <name>newPkey</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>newTup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>primary</name> <init>= <expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>primary</name><operator>-&gt;</operator><name>primaryIsCtid</name></name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>oldPkey</name><operator>-&gt;</operator><name>nkeys</name></name> <operator>==</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><call><name>DatumGetPointer</name><argument_list>(<argument><expr><name><name>oldPkey</name><operator>-&gt;</operator><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>slot</name><operator>-&gt;</operator><name>tts_tid</name></name> <operator>=</operator> <operator>*</operator><operator>(</operator><operator>(</operator><name>ItemPointerData</name> <operator>*</operator><operator>)</operator> <call><name>DatumGetPointer</name><argument_list>(<argument><expr><name><name>oldPkey</name><operator>-&gt;</operator><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>tts_orioledb_toast</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>newTup</name> <operator>=</operator> <call><name>tts_orioledb_form_tuple</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>o_btree_check_size_of_tuple</name><argument_list>(<argument><expr><call><name>o_tuple_size</name><argument_list>(<argument><expr><name>newTup</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>leafSpec</name></name></expr></argument>)</argument_list></call></expr></argument>,
								<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr></argument>,
								<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>tts_orioledb_fill_key_bound</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>newPkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>is_keys_eq</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>, <argument><expr><name>oldPkey</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>newPkey</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>mres</name> <operator>=</operator> <call><name>o_tbl_indices_overwrite</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name>oldPkey</name></expr></argument>, <argument><expr><name>slot</name></expr></argument>, <argument><expr><name>estate</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>,
									   <argument><expr><name>hint</name></expr></argument>, <argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><name>mres</name> <operator>=</operator> <call><name>o_tbl_indices_reinsert</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name>oldPkey</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>newPkey</name></expr></argument>, <argument><expr><name>slot</name></expr></argument>, <argument><expr><name>estate</name></expr></argument>,
									  <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>, <argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
	<expr_stmt><expr><name>csn</name> <operator>=</operator> <name><name>arg</name><operator>-&gt;</operator><name>csn</name></name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>mres</name><operator>.</operator><name>self_modified</name></name> <operator>=</operator> <call><name>COMMITSEQNO_IS_INPROGRESS</name><argument_list>(<argument><expr><name><name>arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
		<operator>(</operator><name><name>arg</name><operator>-&gt;</operator><name>oxid</name></name> <operator>==</operator> <call><name>get_current_oxid_if_any</name><argument_list>()</argument_list></call><operator>)</operator> <operator>&amp;&amp;</operator>
		<call><name>UndoLocationIsValid</name><argument_list>(<argument><expr><name><name>arg</name><operator>-&gt;</operator><name>tup_undo_location</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
		<operator>(</operator><name><name>arg</name><operator>-&gt;</operator><name>tup_undo_location</name></name> <operator>&gt;=</operator> <name>saved_undo_location</name><operator>)</operator></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>&amp;&amp;</operator> <name><name>mres</name><operator>.</operator><name>oldTuple</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>action</name></name> <operator>==</operator> <name>BTreeOperationUpdate</name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><name>oldSlot</name> <operator>=</operator> <name><name>mres</name><operator>.</operator><name>oldTuple</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>TOASTIndexNumber</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>=</operator> <call><name>tts_orioledb_update_toast_values</name><argument_list>(<argument><expr><name>oldSlot</name></expr></argument>, <argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>,
															<argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>success</name></name></expr>)</condition>
			<block>{<block_content>
				<decl_stmt><decl><type><name>OTuple</name></type>		<name>final_tup</name> <init>= <expr><call><name>tts_orioledb_form_tuple</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>o_wal_update</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>final_tup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if>
		<if type="elseif">else if <condition>(<expr><name><name>mres</name><operator>.</operator><name>action</name></name> <operator>==</operator> <name>BTreeOperationDelete</name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><name>oldSlot</name> <operator>=</operator> <name><name>mres</name><operator>.</operator><name>oldTuple</name></name></expr>;</expr_stmt>
			<comment type="block">/* reinsert TOAST value */</comment>
			<expr_stmt><expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>TOASTIndexNumber</name></expr>;</expr_stmt>
			<comment type="block">/* insert new value in TOAST table */</comment>
			<expr_stmt><expr><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>=</operator> <call><name>tts_orioledb_insert_toast_values</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>success</name></name></expr>)</condition>
			<block>{<block_content>
				<comment type="block">/* remove old value from TOAST table */</comment>
				<expr_stmt><expr><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>=</operator> <call><name>tts_orioledb_remove_toast_values</name><argument_list>(<argument><expr><name>oldSlot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>

			<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>success</name></name></expr>)</condition>
			<block>{<block_content>
				<decl_stmt><decl><type><name>OTuple</name></type>		<name>old_tup</name> <init>= <expr><operator>(</operator><operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>oldSlot</name><operator>)</operator><operator>-&gt;</operator><name>tuple</name></expr></init></decl>,
							<decl><type ref="prev"/><name>final_tup</name> <init>= <expr><call><name>tts_orioledb_form_tuple</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>o_wal_delete</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>old_tup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>o_wal_insert</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>final_tup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if>
		<else>else
		<block>{<block_content>
			<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>mres</name><operator>.</operator><name>action</name></name> <operator>==</operator> <name>BTreeOperationLock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>mres</name><operator>.</operator><name>oldTuple</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><name>mres</name></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>&amp;&amp;</operator> <name><name>mres</name><operator>.</operator><name>oldTuple</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name><name>mres</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>slot</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return>return <expr><name>mres</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>OTableModifyResult</name></type>
<name>o_tbl_delete</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>primary_key</name></decl></parameter>,
			 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>, <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
			 <parameter><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>result</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>o_tbl_indices_delete</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name>primary_key</name></expr></argument>, <argument><expr><name>estate</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>,
								  <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>, <argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>self_modified</name></name> <operator>=</operator> <call><name>COMMITSEQNO_IS_INPROGRESS</name><argument_list>(<argument><expr><name><name>arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
		<operator>(</operator><name><name>arg</name><operator>-&gt;</operator><name>oxid</name></name> <operator>==</operator> <call><name>get_current_oxid_if_any</name><argument_list>()</argument_list></call><operator>)</operator> <operator>&amp;&amp;</operator>
		<call><name>UndoLocationIsValid</name><argument_list>(<argument><expr><name><name>arg</name><operator>-&gt;</operator><name>tup_undo_location</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
		<operator>(</operator><name><name>arg</name><operator>-&gt;</operator><name>tup_undo_location</name></name> <operator>&gt;=</operator> <name>saved_undo_location</name><operator>)</operator></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>&amp;&amp;</operator> <name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>==</operator> <name>BTreeOperationDelete</name></expr>)</condition>
		<block>{<block_content>
			<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>primary</name> <init>= <expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>OTuple</name></type>		<name>primary_tuple</name></decl>;</decl_stmt>

			<expr_stmt><expr><name>csn</name> <operator>=</operator> <name><name>arg</name><operator>-&gt;</operator><name>csn</name></name></expr>;</expr_stmt>
			<comment type="block">/* if tuple has been deleted from index trees, remove TOAST values */</comment>
			<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>tts_orioledb_remove_toast_values</name><argument_list>(<argument><expr><name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>)</argument_list></call></expr>)</condition>
			<block>{<block_content>
				<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>result</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>TOASTIndexNumber</name></expr>;</expr_stmt>
				<return>return <expr><name>result</name></expr>;</return>
			</block_content>}</block></if></if_stmt>

			<expr_stmt><expr><name>primary_tuple</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name><operator>)</operator><operator>-&gt;</operator><name>tuple</name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name>o_wal_delete</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>primary</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>primary_tuple</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if>
		<else>else
		<block>{<block_content>
			<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>==</operator> <name>BTreeOperationLock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><name>result</name></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>o_is_index_predicate_satisfied</name><parameter_list>(<parameter><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>idx</name></decl></parameter>, <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>,
							   <parameter><decl><type><name>ExprContext</name> <modifier>*</modifier></type><name>econtext</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>bool</name></type>		<name>result</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>

	<comment type="block">/* Check for partial index */</comment>
	<if_stmt><if>if <condition>(<expr><name><name>idx</name><operator>-&gt;</operator><name>predicate</name></name> <operator>!=</operator> <name>NIL</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>econtext</name><operator>-&gt;</operator><name>ecxt_scantuple</name></name> <operator>=</operator> <name>slot</name></expr>;</expr_stmt>
		<comment type="block">/* Skip this index-update if the predicate isn't satisfied */</comment>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ExecQual</name><argument_list>(<argument><expr><name><name>idx</name><operator>-&gt;</operator><name>predicate_state</name></name></expr></argument>, <argument><expr><name>econtext</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name>result</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OTableModifyResult</name></type>
<name>o_update_secondary_indices</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
						   <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>newSlot</name></decl></parameter>,
						   <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>oldSlot</name></decl></parameter>,
						   <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
						   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>,
						   <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
						   <parameter><decl><type><name>bool</name></type> <name>update_all</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>res</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeKeyBound</name></type> <name>old_key</name></decl>,
				<decl><type ref="prev"/><name>new_key</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>update</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>nullTup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ExprContext</name> <modifier>*</modifier></type><name>econtext</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>BTreeModifyCallbackInfo</name></type> <name>callbackInfo</name> <init>= <expr><name>nullCallbackInfo</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>slot_getallattrs</name><argument_list>(<argument><expr><name>oldSlot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>res</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>res</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>oldSlot</name></expr>;</expr_stmt>

	<expr_stmt><expr><name>econtext</name> <operator>=</operator> <call><name>GetPerTupleExprContext</name><argument_list>(<argument><expr><name>estate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>descr</name><operator>-&gt;</operator><name>nIndices</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<decl_stmt><decl><type><name>bool</name></type>		<name>old_valid</name></decl>,
					<decl><type ref="prev"/><name>new_valid</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>tts_orioledb_fill_key_bound</name><argument_list>(<argument><expr><name>newSlot</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>new_key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>tts_orioledb_fill_key_bound</name><argument_list>(<argument><expr><name>oldSlot</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>old_key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name>old_valid</name> <operator>=</operator> <call><name>o_is_index_predicate_satisfied</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>oldSlot</name></expr></argument>, <argument><expr><name>econtext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>new_valid</name> <operator>=</operator> <call><name>o_is_index_predicate_satisfied</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>newSlot</name></expr></argument>, <argument><expr><name>econtext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt><if>if <condition>(<expr><name>update_all</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name>update</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if>
		<else>else<block type="pseudo"><block_content>
			<expr_stmt><expr><name>update</name> <operator>=</operator> <operator>!</operator><call><name>is_keys_eq</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>old_key</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>new_key</name></expr></argument>)</argument_list></call> <operator>||</operator>
				<operator>(</operator><name>old_valid</name> <operator>!=</operator> <name>new_valid</name><operator>)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

		<if_stmt><if>if <condition>(<expr><name>update</name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>O_TUPLE_SET_NULL</name><argument_list>(<argument><expr><name>nullTup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt><if>if <condition>(<expr><name>old_valid</name></expr>)</condition><block type="pseudo"><block_content>
				<expr_stmt><expr><name><name>res</name><operator>.</operator><name>success</name></name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>BTreeOperationDelete</name></expr></argument>,
											 <argument><expr><name>nullTup</name></expr></argument>, <argument><expr><name>BTreeKeyNone</name></expr></argument>,
											 <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>old_key</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
											 <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
											 <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>OBTreeModifyResultDeleted</name></expr>;</expr_stmt></block_content></block></if>
			<else>else<block type="pseudo"><block_content>
				<expr_stmt><expr><name><name>res</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

			<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>.</operator><name>success</name></name> <operator>&amp;&amp;</operator> <name>new_valid</name></expr>)</condition>
			<block>{<block_content>
				<decl_stmt><decl><type><name>OTuple</name></type>		<name>new_ix_tup</name></decl>;</decl_stmt>

				<expr_stmt><expr><name>new_ix_tup</name> <operator>=</operator> <call><name>tts_orioledb_make_secondary_tuple</name><argument_list>(<argument><expr><name>newSlot</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>o_btree_check_size_of_tuple</name><argument_list>(<argument><expr><call><name>o_tuple_size</name><argument_list>(<argument><expr><name>new_ix_tup</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>leafSpec</name></name></expr></argument>)</argument_list></call></expr></argument>,
											<argument><expr><name><name>id</name><operator>-&gt;</operator><name>name</name><operator>.</operator><name>data</name></name></expr></argument>,
											<argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>id</name><operator>-&gt;</operator><name>unique</name></name> <operator>||</operator> <call><name>o_has_nulls</name><argument_list>(<argument><expr><name>new_ix_tup</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
					<expr_stmt><expr><name><name>res</name><operator>.</operator><name>success</name></name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>BTreeOperationInsert</name></expr></argument>,
												 <argument><expr><name>new_ix_tup</name></expr></argument>, <argument><expr><name>BTreeKeyLeafTuple</name></expr></argument>,
												 <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>new_key</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
												 <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
												 <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>OBTreeModifyResultInserted</name></expr>;</expr_stmt></block_content></block></if>
				<else>else<block type="pseudo"><block_content>
					<expr_stmt><expr><name><name>res</name><operator>.</operator><name>success</name></name> <operator>=</operator> <call><name>o_btree_insert_unique</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>new_ix_tup</name></expr></argument>, <argument><expr><name>BTreeKeyLeafTuple</name></expr></argument>,
														<argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>new_key</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
														<argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
														<argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>OBTreeModifyResultInserted</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

				<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>.</operator><name>success</name></name></expr>)</condition><block type="pseudo"><block_content>
					<continue>continue;</continue></block_content></block></if>
				<else>else<block type="pseudo"><block_content>
					<expr_stmt><expr><name><name>res</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationInsert</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
			</block_content>}</block></if>
			<if type="elseif">else if <condition>(<expr><name><name>res</name><operator>.</operator><name>success</name></name></expr>)</condition>
			<block>{<block_content>
				<continue>continue;</continue>
			</block_content>}</block></if>
			<else>else
			<block>{<block_content>
				<expr_stmt><expr><name><name>res</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationUpdate</name></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
			<expr_stmt><expr><name><name>res</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></for>
	<return>return <expr><name>res</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* returns TupleTableSlot of old tuple as OTableModifyResul.result */</comment>
<function><type><specifier>static</specifier> <name>OTableModifyResult</name></type>
<name>o_tbl_indices_overwrite</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
						<parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>oldPkey</name></decl></parameter>,
						<parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>newSlot</name></decl></parameter>,
						<parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
						<parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
						<parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
						<parameter><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>result</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>oldSlot</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>newTup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeModifyResult</name></type> <name>modify_result</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>BTreeModifyCallbackInfo</name></type> <name>callbackInfo</name> <init>= <expr><block>{
		<expr><operator>.</operator><name>waitCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>modifyDeletedCallback</name> <operator>=</operator> <name>o_update_callback</name></expr>,
		<expr><operator>.</operator><name>modifyCallback</name> <operator>=</operator> <name>o_update_callback</name></expr>,
		<expr><operator>.</operator><name>needsUndoForSelfCreated</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>arg</name> <operator>=</operator> <name>arg</name></expr>
	}</block></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

	<expr_stmt><expr><name>newTup</name> <operator>=</operator> <call><name>tts_orioledb_form_tuple</name><argument_list>(<argument><expr><name>newSlot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>modify_result</name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>, <argument><expr><name>BTreeOperationUpdate</name></expr></argument>,
								   <argument><expr><name>newTup</name></expr></argument>, <argument><expr><name>BTreeKeyLeafTuple</name></expr></argument>,
								   <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>oldPkey</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
								   <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name><name>arg</name><operator>-&gt;</operator><name>rowLockMode</name></name></expr></argument>,
								   <argument><expr><name>hint</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>modify_result</name> <operator>==</operator> <name>OBTreeModifyResultLocked</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationLock</name></expr>;</expr_stmt>
		<return>return <expr><name>result</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>modify_result</name> <operator>==</operator> <name>OBTreeModifyResultUpdated</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>oldSlot</name> <operator>=</operator> <name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>csn</name> <operator>=</operator> <name><name>arg</name><operator>-&gt;</operator><name>csn</name></name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>modify_result</name> <operator>==</operator> <name>OBTreeModifyResultUpdated</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><operator>(</operator><operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>newSlot</name><operator>)</operator><operator>-&gt;</operator><name>version</name> <operator>=</operator> <call><name>o_tuple_get_version</name><argument_list>(<argument><expr><name>newTup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>o_update_secondary_indices</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name>newSlot</name></expr></argument>, <argument><expr><name>oldSlot</name></expr></argument>, <argument><expr><name>estate</name></expr></argument>,
											<argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name><name>result</name><operator>.</operator><name>success</name></name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationUpdate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	</block_content>}</block></if>
	<if type="elseif">else if <condition>(<expr><name>modify_result</name> <operator>==</operator> <name>OBTreeModifyResultFound</name></expr>)</condition>
	<block>{<block_content>
		<comment type="block">/* primary key or condition was changed by concurrent transaction */</comment>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationInsert</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>PrimaryIndexNumber</name></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OTableModifyResult</name></type>
<name>o_tbl_indices_reinsert</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
					   <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>oldPkey</name></decl></parameter>,
					   <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>newPkey</name></decl></parameter>,
					   <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>newSlot</name></decl></parameter>,
					   <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
					   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
					   <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>, <parameter><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>result</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeModifyResult</name></type> <name>modify_result</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>newTup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>nullTup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>inserted</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>BTreeModifyCallbackInfo</name></type> <name>deleteCallbackInfo</name> <init>= <expr><block>{
		<expr><operator>.</operator><name>waitCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>modifyDeletedCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>modifyCallback</name> <operator>=</operator> <name>o_delete_callback</name></expr>,
		<expr><operator>.</operator><name>needsUndoForSelfCreated</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>arg</name> <operator>=</operator> <name>arg</name></expr>
	}</block></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>BTreeModifyCallbackInfo</name></type> <name>insertCallbackInfo</name> <init>= <expr><block>{
		<expr><operator>.</operator><name>waitCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>modifyDeletedCallback</name> <operator>=</operator> <name>o_insert_callback</name></expr>,
		<expr><operator>.</operator><name>modifyCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>needsUndoForSelfCreated</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>arg</name> <operator>=</operator> <name>newSlot</name></expr>
	}</block></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

	<expr_stmt><expr><name>newTup</name> <operator>=</operator> <call><name>tts_orioledb_form_tuple</name><argument_list>(<argument><expr><name>newSlot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>O_TUPLE_SET_NULL</name><argument_list>(<argument><expr><name>nullTup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>modify_result</name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>, <argument><expr><name>BTreeOperationDelete</name></expr></argument>,
								   <argument><expr><name>nullTup</name></expr></argument>, <argument><expr><name>BTreeKeyNone</name></expr></argument>,
								   <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>oldPkey</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
								   <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
								   <argument><expr><name>hint</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>deleteCallbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>modify_result</name> <operator>==</operator> <name>OBTreeModifyResultLocked</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationLock</name></expr>;</expr_stmt>
		<return>return <expr><name>result</name></expr>;</return>
	</block_content>}</block></if>
	<if type="elseif">else if <condition>(<expr><name>modify_result</name> <operator>!=</operator> <name>OBTreeModifyResultDeleted</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationDelete</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>PrimaryIndexNumber</name></expr>;</expr_stmt>
		<return>return <expr><name>result</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>inserted</name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>, <argument><expr><name>BTreeOperationInsert</name></expr></argument>,
							  <argument><expr><name>newTup</name></expr></argument>, <argument><expr><name>BTreeKeyLeafTuple</name></expr></argument>,
							  <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>newPkey</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
							  <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
							  <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>insertCallbackInfo</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>OBTreeModifyResultInserted</name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>(</operator><operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>newSlot</name><operator>)</operator><operator>-&gt;</operator><name>version</name> <operator>=</operator> <call><name>o_tuple_get_version</name><argument_list>(<argument><expr><name>newTup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>inserted</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>o_update_secondary_indices</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name>newSlot</name></expr></argument>, <argument><expr><name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr></argument>,
											<argument><expr><name>estate</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationInsert</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>PrimaryIndexNumber</name></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>result</name><operator>.</operator><name>success</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationDelete</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* Returns TupleTableSlot of old tuple as OTableModifyResult.result */</comment>
<function><type><specifier>static</specifier> <name>OTableModifyResult</name></type>
<name>o_tbl_indices_delete</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
					 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>, <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
					 <parameter><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>result</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeModifyResult</name></type> <name>res</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeKeyBound</name></type> <name>bound</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>nullTup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ExprContext</name> <modifier>*</modifier></type><name>econtext</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>BTreeModifyCallbackInfo</name></type> <name>callbackInfo</name> <init>= <expr><block>{
		<expr><operator>.</operator><name>waitCallback</name> <operator>=</operator> <name>NULL</name></expr>,
		<expr><operator>.</operator><name>modifyDeletedCallback</name> <operator>=</operator> <name>o_delete_deleted_callback</name></expr>,
		<expr><operator>.</operator><name>modifyCallback</name> <operator>=</operator> <name>o_delete_callback</name></expr>,
		<expr><operator>.</operator><name>needsUndoForSelfCreated</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>arg</name> <operator>=</operator> <name>arg</name></expr>
	}</block></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>O_TUPLE_SET_NULL</name><argument_list>(<argument><expr><name>nullTup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><operator>&amp;</operator><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>desc</name></expr></argument>, <argument><expr><name>BTreeOperationDelete</name></expr></argument>,
						 <argument><expr><name>nullTup</name></expr></argument>, <argument><expr><name>BTreeKeyNone</name></expr></argument>,
						 <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>key</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
						 <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
						 <argument><expr><name>hint</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>slot</name> <operator>=</operator> <name><name>arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>csn</name> <operator>=</operator> <name><name>arg</name><operator>-&gt;</operator><name>csn</name></name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>res</name> <operator>==</operator> <name>OBTreeModifyResultLocked</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>slot</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationLock</name></expr>;</expr_stmt>
		<return>return <expr><name>result</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <operator>(</operator><name>res</name> <operator>==</operator> <name>OBTreeModifyResultDeleted</name><operator>)</operator></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>result</name><operator>.</operator><name>success</name></name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>slot</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>PrimaryIndexNumber</name></expr>;</expr_stmt>
		<return>return <expr><name>result</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>econtext</name> <operator>=</operator> <call><name>GetPerTupleExprContext</name><argument_list>(<argument><expr><name>estate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* removes from secondary indexes */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>descr</name><operator>-&gt;</operator><name>nIndices</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><operator>(</operator><name>i</name> <operator>!=</operator> <name>PrimaryIndexNumber</name><operator>)</operator> <operator>&amp;&amp;</operator>
			<operator>!</operator><call><name>o_is_index_predicate_satisfied</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>slot</name></expr></argument>, <argument><expr><name>econtext</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<continue>continue;</continue></block_content></block></if></if_stmt>

		<expr_stmt><expr><call><name>tts_orioledb_fill_key_bound</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>bound</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>, <argument><expr><name>BTreeOperationDelete</name></expr></argument>,
							 <argument><expr><name>nullTup</name></expr></argument>, <argument><expr><name>BTreeKeyNone</name></expr></argument>,
							 <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>bound</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
							 <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>callbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <operator>(</operator><name>res</name> <operator>==</operator> <name>OBTreeModifyResultDeleted</name><operator>)</operator></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>result</name><operator>.</operator><name>success</name></name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>result</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
			<return>return <expr><name>result</name></expr>;</return>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></for>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationDelete</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>slot</name></expr>;</expr_stmt>
	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type>
<name>o_tbl_index_insert</name><parameter_list>(<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
				   <parameter><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,
				   <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>,
				   <parameter><decl><type><name>ExprContext</name> <modifier>*</modifier></type><name>econtext</name></decl></parameter>,
				   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
				   <parameter><decl><type><name>BTreeModifyCallbackInfo</name> <modifier>*</modifier></type><name>callbackInfo</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>bd</name> <init>= <expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>desc</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>tup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeKeyBound</name></type> <name>knew</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>primary</name> <init>= <expr><operator>(</operator><name><name>bd</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>oIndexPrimary</name><operator>)</operator></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>primary</name> <operator>||</operator> <call><name>o_is_index_predicate_satisfied</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>slot</name></expr></argument>, <argument><expr><name>econtext</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>bool</name></type>		<name>inserted</name></decl>;</decl_stmt>

		<expr_stmt><expr><call><name>tts_orioledb_fill_key_bound</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>knew</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>primary</name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><name>tup</name> <operator>=</operator> <call><name>tts_orioledb_make_secondary_tuple</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>o_btree_check_size_of_tuple</name><argument_list>(<argument><expr><call><name>o_tuple_size</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>leafSpec</name></name></expr></argument>)</argument_list></call></expr></argument>,
										<argument><expr><name><name>id</name><operator>-&gt;</operator><name>name</name><operator>.</operator><name>data</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if>
		<else>else
		<block>{<block_content>
			<expr_stmt><expr><name>tup</name> <operator>=</operator> <call><name>tts_orioledb_form_tuple</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>

		<expr_stmt><expr><call><name>o_btree_load_shmem</name><argument_list>(<argument><expr><name>bd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>primary</name> <operator>||</operator> <operator>!</operator><name><name>id</name><operator>-&gt;</operator><name>unique</name></name> <operator>||</operator> <call><name>o_has_nulls</name><argument_list>(<argument><expr><name>tup</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name>inserted</name> <operator>=</operator> <call><name>o_btree_modify</name><argument_list>(<argument><expr><name>bd</name></expr></argument>, <argument><expr><name>BTreeOperationInsert</name></expr></argument>,
									  <argument><expr><name>tup</name></expr></argument>, <argument><expr><name>BTreeKeyLeafTuple</name></expr></argument>,
									  <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>knew</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
									  <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
									  <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>callbackInfo</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>OBTreeModifyResultInserted</name></expr>;</expr_stmt></block_content></block></if>
		<else>else<block type="pseudo"><block_content>
			<expr_stmt><expr><name>inserted</name> <operator>=</operator> <call><name>o_btree_insert_unique</name><argument_list>(<argument><expr><name>bd</name></expr></argument>, <argument><expr><name>tup</name></expr></argument>, <argument><expr><name>BTreeKeyLeafTuple</name></expr></argument>,
											 <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>knew</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
											 <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>RowLockUpdate</name></expr></argument>,
											 <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>callbackInfo</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>OBTreeModifyResultInserted</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

		<expr_stmt><expr><operator>(</operator><operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>slot</name><operator>)</operator><operator>-&gt;</operator><name>version</name> <operator>=</operator> <call><name>o_tuple_get_version</name><argument_list>(<argument><expr><name>tup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>STOPEVENT</name><argument_list>(<argument><expr><name>STOPEVENT_INDEX_INSERT</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return>return <expr><name>inserted</name></expr>;</return>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<return>return <expr><name>true</name></expr>;</return>
	</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OTableModifyResult</name></type>
<name>o_tbl_indices_insert</name><parameter_list>(<parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>,
					 <parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
					 <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>,
					 <parameter><decl><type><name>OIndexNumber</name></type> <name>start_ix</name></decl></parameter>,
					 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>,
					 <parameter><decl><type><name>BTreeModifyCallbackInfo</name> <modifier>*</modifier></type><name>callbackInfo</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OTableModifyResult</name></type> <name>result</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ExprContext</name> <modifier>*</modifier></type><name>econtext</name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

	<expr_stmt><expr><name>i</name> <operator>=</operator> <name>start_ix</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>i</name> <operator>&lt;</operator> <name><name>descr</name><operator>-&gt;</operator><name>nIndices</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>econtext</name> <operator>=</operator> <call><name>GetPerTupleExprContext</name><argument_list>(<argument><expr><name>estate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <call><name>o_tbl_index_insert</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name>start_ix</name></expr>]</index></name></expr></argument>, <argument><expr><name>slot</name></expr></argument>,
										<argument><expr><name>econtext</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>callbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>result</name><operator>.</operator><name>success</name></name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationInsert</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		<return>return <expr><name>result</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>descr</name><operator>-&gt;</operator><name>nIndices</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <name>start_ix</name></expr>)</condition><block type="pseudo"><block_content>
			<continue>continue;</continue></block_content></block></if></if_stmt>

		<expr_stmt><expr><name><name>result</name><operator>.</operator><name>success</name></name> <operator>=</operator> <call><name>o_tbl_index_insert</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>slot</name></expr></argument>,
											<argument><expr><name>econtext</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>callbackInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>result</name><operator>.</operator><name>success</name></name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><name><name>result</name><operator>.</operator><name>failedIxNum</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>result</name><operator>.</operator><name>action</name></name> <operator>=</operator> <name>BTreeOperationInsert</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>result</name><operator>.</operator><name>oldTuple</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
			<return>return <expr><name>result</name></expr>;</return>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></for>

	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>o_toast_insert_values</name><parameter_list>(<parameter><decl><type><name>Relation</name></type> <name>rel</name></decl></parameter>, <parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
					  <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>, <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>tts_orioledb_insert_toast_values</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INTERNAL_ERROR</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"Unable to insert TOASTable value in \"%s\""</literal></expr></argument>,
						<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errdetail</name><argument_list>(<argument><expr><literal type="string">"Unable to remove value for primary key %s from TOAST"</literal></expr></argument>,
						   <argument><expr><call><name>tss_orioledb_print_idx_key</name><argument_list>(<argument><expr><name>slot</name></expr></argument>,
													  <argument><expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>o_check_tbl_update_mres</name><parameter_list>(<parameter><decl><type><name>OTableModifyResult</name></type> <name>mres</name></decl></parameter>,
						<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
						<parameter><decl><type><name>Relation</name></type> <name>rel</name></decl></parameter>,
						<parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>&amp;&amp;</operator> <name><name>mres</name><operator>.</operator><name>failedIxNum</name></name> <operator>==</operator> <name>TOASTIndexNumber</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INTERNAL_ERROR</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"Unable to update TOASTed value in \"%s\""</literal></expr></argument>,
						<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errdetail</name><argument_list>(<argument><expr><literal type="string">"Unable to update value for primary key %s in TOAST"</literal></expr></argument>,
						   <argument><expr><call><name>tss_orioledb_print_idx_key</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>mres</name><operator>.</operator><name>success</name></name></expr>)</condition>
	<block>{<block_content>
		<switch>switch <condition>(<expr><name><name>mres</name><operator>.</operator><name>action</name></name></expr>)</condition>
		<block>{<block_content>
			<case>case <expr><name>BTreeOperationUpdate</name></expr>:</case>
				<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name> <operator>==</operator> <name>PrimaryIndexNumber</name></expr>)</condition><block type="pseudo"><block_content>
					<break>break;</break></block_content></block></if></if_stmt>		<comment type="block">/* it is ok */</comment>
				<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
						<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INTERNAL_ERROR</name></expr></argument>)</argument_list></call><operator>,</operator>
						 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"unable to remove tuple from secondary index in \"%s\""</literal></expr></argument>,
								<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>,</operator>
						 <call><name>errdetail</name><argument_list>(<argument><expr><literal type="string">"Unable to remove %s from index \"%s\""</literal></expr></argument>,
								   <argument><expr><call><name>tss_orioledb_print_idx_key</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,
								   <argument><expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name></expr>]</index></name><operator>-&gt;</operator><name><name>name</name><operator>.</operator><name>data</name></name></expr></argument>)</argument_list></call><operator>,</operator>
						 <call><name>errtableconstraint</name><argument_list>(<argument><expr><name>rel</name></expr></argument>, <argument><expr><literal type="string">"sk"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			<case>case <expr><name>BTreeOperationInsert</name></expr>:</case>
				<expr_stmt><expr><call><name>o_report_duplicate</name><argument_list>(<argument><expr><name>rel</name></expr></argument>, <argument><expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name></expr>]</index></name></expr></argument>, <argument><expr><name>slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
			<default>default:</default>
				<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
						<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INTERNAL_ERROR</name></expr></argument>)</argument_list></call><operator>,</operator>
						 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"Unsupported BTreeOperationType."</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break>break;</break>
		</block_content>}</block></switch>
	</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>o_check_tbl_delete_mres</name><parameter_list>(<parameter><decl><type><name>OTableModifyResult</name></type> <name>mres</name></decl></parameter>,
						<parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
						<parameter><decl><type><name>Relation</name></type> <name>rel</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>&amp;&amp;</operator> <name><name>mres</name><operator>.</operator><name>failedIxNum</name></name> <operator>==</operator> <name>TOASTIndexNumber</name></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>oldSlot</name> <init>= <expr><name><name>mres</name><operator>.</operator><name>oldTuple</name></name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INTERNAL_ERROR</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"Unable to remove value TOASTed value in \"%s\""</literal></expr></argument>,
						<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errdetail</name><argument_list>(<argument><expr><literal type="string">"For primary key %s."</literal></expr></argument>,
						   <argument><expr><call><name>tss_orioledb_print_idx_key</name><argument_list>(<argument><expr><name>oldSlot</name></expr></argument>,
													  <argument><expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>mres</name><operator>.</operator><name>success</name></name> <operator>&amp;&amp;</operator> <name><name>mres</name><operator>.</operator><name>failedIxNum</name></name> <operator>!=</operator> <name>PrimaryIndexNumber</name></expr>)</condition>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name><name>mres</name><operator>.</operator><name>oldTuple</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
		<block>{<block_content>
			<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>oldSlot</name> <init>= <expr><name><name>mres</name><operator>.</operator><name>oldTuple</name></name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
					<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INTERNAL_ERROR</name></expr></argument>)</argument_list></call><operator>,</operator>
					 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"unable to remove tuple from secondary index in \"%s\""</literal></expr></argument>,
							<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>,</operator>
					 <call><name>errdetail</name><argument_list>(<argument><expr><literal type="string">"Unable to remove %s from index %u"</literal></expr></argument>,
							   <argument><expr><call><name>tss_orioledb_print_idx_key</name><argument_list>(<argument><expr><name>oldSlot</name></expr></argument>,
														  <argument><expr><call><name>GET_PRIMARY</name><argument_list>(<argument><expr><name>descr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
							   <argument><expr><name><name>mres</name><operator>.</operator><name>failedIxNum</name></name></expr></argument>)</argument_list></call><operator>,</operator>
					 <call><name>errtableconstraint</name><argument_list>(<argument><expr><name>rel</name></expr></argument>, <argument><expr><literal type="string">"sk"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if>
		<else>else
		<block>{<block_content>
			<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
					<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INTERNAL_ERROR</name></expr></argument>)</argument_list></call><operator>,</operator>
					 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"Unable to remove tuple from secondary index in \"%s\""</literal></expr></argument>,
							<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>,</operator>
					 <call><name>errdetail</name><argument_list>(<argument><expr><literal type="string">"Unable to fetch primary index table tuple."</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<comment type="block">/* returns true if tuple was changed by concurrent transaction. */</comment>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>
<name>o_callback_is_modified</name><parameter_list>(<parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><call><name>XACT_INFO_OXID_EQ</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>, <argument><expr><name>oxid</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>XACT_INFO_IS_FINISHED</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>XACT_INFO_MAP_CSN</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <name>csn</name></expr>)</condition>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><call><name>IsolationUsesXactSnapshot</name><argument_list>()</argument_list></call></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
					<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_T_R_SERIALIZATION_FAILURE</name></expr></argument>)</argument_list></call><operator>,</operator>
					 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><literal type="string">"could not serialize access due to concurrent update"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<return>return <expr><name>true</name></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>copy_tuple_to_slot</name><parameter_list>(<parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>, <parameter><decl><type><name>OTableDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
				   <parameter><decl><type><name>CommitSeqNo</name></type> <name>csn</name></decl></parameter>, <parameter><decl><type><name>OIndexNumber</name></type> <name>ix_num</name></decl></parameter>,
				   <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><name><name>descr</name><operator>-&gt;</operator><name>indices</name><index>[<expr><name>ix_num</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Size</name></type>		<name>sz</name> <init>= <expr><call><name>o_tuple_size</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>leafSpec</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OTuple</name></type>		<name>copy</name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>copy</name><operator>.</operator><name>data</name></name> <operator>=</operator> <operator>(</operator><name>Pointer</name><operator>)</operator> <call><name>MemoryContextAlloc</name><argument_list>(<argument><expr><name><name>slot</name><operator>-&gt;</operator><name>tts_mcxt</name></name></expr></argument>, <argument><expr><name>sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>copy</name><operator>.</operator><name>formatFlags</name></name> <operator>=</operator> <name><name>tup</name><operator>.</operator><name>formatFlags</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>copy</name><operator>.</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>tup</name><operator>.</operator><name>data</name></name></expr></argument>, <argument><expr><name>sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>tts_orioledb_store_tuple</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>copy</name></expr></argument>, <argument><expr><name>descr</name></expr></argument>, <argument><expr><name>csn</name></expr></argument>, <argument><expr><name>ix_num</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type>
<name>o_insert_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
				  <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>, <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
				  <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
				  <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
				  <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OTableSlot</name> <modifier>*</modifier></type><name>oslot</name> <init>= <expr><operator>(</operator><name>OTableSlot</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>descr</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>oIndexPrimary</name> <operator>&amp;&amp;</operator>
		<call><name>XACT_INFO_OXID_IS_CURRENT</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><operator>(</operator><name>OIndexDescr</name> <operator>*</operator><operator>)</operator> <name><name>descr</name><operator>-&gt;</operator><name>arg</name></name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name>o_tuple_set_version</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>leafSpec</name></name></expr></argument>, <argument><expr><name>newtup</name></expr></argument>,
							<argument><expr><call><name>o_tuple_get_version</name><argument_list>(<argument><expr><name>tup</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>oslot</name><operator>-&gt;</operator><name>tuple</name></name> <operator>=</operator> <operator>*</operator><name>newtup</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>OBTreeCallbackActionUpdate</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeWaitCallbackAction</name></type>
<name>o_insert_on_conflict_wait_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
								   <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
								   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
								   <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
								   <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
								   <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
								   <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>InsertOnConflictCallbackArg</name> <modifier>*</modifier></type><name>ioc_arg</name> <init>= <expr><operator>(</operator><name>InsertOnConflictCallbackArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>td</name> <init>= <expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>conflictBTree</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OBTreeKeyBound</name></type> <name>new_sec_key</name></decl>,
				<decl><type ref="prev"/><name>old_sec_key</name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>conflictOxid</name></name> <operator>=</operator> <name>InvalidOXid</name></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>descr</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>oIndexPrimary</name> <operator>||</operator> <operator>!</operator><name><name>ioc_arg</name><operator>-&gt;</operator><name>copyPrimaryOxid</name></name></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>OBTreeCallbackActionXidWait</name></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt><expr><call><name>o_fill_secondary_key_bound</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name>td</name></expr></argument>, <argument><expr><operator>*</operator><name>newtup</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>new_sec_key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>o_fill_secondary_key_bound</name><argument_list>(<argument><expr><name>descr</name></expr></argument>, <argument><expr><name>td</name></expr></argument>, <argument><expr><name>tup</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>old_sec_key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>o_idx_cmp</name><argument_list>(<argument><expr><name>td</name></expr></argument>, <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>new_sec_key</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
				  <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <operator>&amp;</operator><name>old_sec_key</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>conflictOxid</name></name> <operator>=</operator> <name>oxid</name></expr>;</expr_stmt>
		<return>return <expr><name>OBTreeCallbackActionXidExit</name></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>OBTreeCallbackActionXidWait</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type>
<name>o_insert_on_conflict_modify_deleted_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
											 <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
											 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>,
											 <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
											 <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
											 <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
											 <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
											 <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>InsertOnConflictCallbackArg</name> <modifier>*</modifier></type><name>ioc_arg</name> <init>= <expr><operator>(</operator><name>InsertOnConflictCallbackArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>descr</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>oIndexPrimary</name> <operator>&amp;&amp;</operator>
		<call><name>XACT_INFO_OXID_IS_CURRENT</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><operator>(</operator><name>OIndexDescr</name> <operator>*</operator><operator>)</operator> <name><name>descr</name><operator>-&gt;</operator><name>arg</name></name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name>o_tuple_set_version</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>leafSpec</name></name></expr></argument>, <argument><expr><name>newtup</name></expr></argument>,
							<argument><expr><call><name>o_tuple_get_version</name><argument_list>(<argument><expr><name>tup</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>newSlot</name><operator>-&gt;</operator><name>tuple</name></name> <operator>=</operator> <operator>*</operator><name>newtup</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>OBTreeCallbackActionUpdate</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type>
<name>o_insert_on_conflict_modify_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
									 <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
									 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
									 <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
									 <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
									 <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
									 <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>InsertOnConflictCallbackArg</name> <modifier>*</modifier></type><name>ioc_arg</name> <init>= <expr><operator>(</operator><name>InsertOnConflictCallbackArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>scanSlot</name></name> <operator>&amp;&amp;</operator> <name>descr</name> <operator>==</operator> <name><name>ioc_arg</name><operator>-&gt;</operator><name>conflictBTree</name></name></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>bool</name></type>		<name>modified</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>modified</name> <operator>=</operator> <call><name>o_callback_is_modified</name><argument_list>(<argument><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>oxid</name></name></expr></argument>, <argument><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>, <argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="block">/* Updates current csn */</comment>
		<if_stmt><if>if <condition>(<expr><call><name>XACT_INFO_IS_FINISHED</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <ternary><condition><expr><name>modified</name></expr> ?</condition><then> <expr><operator>(</operator><call><name>XACT_INFO_MAP_CSN</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
		<else>else<block type="pseudo"><block_content>
			<expr_stmt><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <name>COMMITSEQNO_INPROGRESS</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

		<expr_stmt><expr><call><name>copy_tuple_to_slot</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr></argument>, <argument><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>desc</name></name></expr></argument>,
						   <argument><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>, <argument><expr><name><name>ioc_arg</name><operator>-&gt;</operator><name>conflictIxNum</name></name></expr></argument>, <argument><expr><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>OBTreeCallbackActionDoNothing</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type>
<name>o_delete_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
				  <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
				  <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
				  <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>, <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
				  <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>o_arg</name> <init>= <expr><operator>(</operator><name>OModifyCallbackArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>inputslot</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>modified</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>descr</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>oIndexPrimary</name></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>OBTreeCallbackActionDelete</name></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>modified</name> <operator>=</operator> <call><name>o_callback_is_modified</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>oxid</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>, <argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>XACT_INFO_IS_FINISHED</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <ternary><condition><expr><name>modified</name></expr> ?</condition><then> <expr><operator>(</operator><call><name>XACT_INFO_MAP_CSN</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <name>COMMITSEQNO_INPROGRESS</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>oxid</name></name> <operator>=</operator> <call><name>XACT_INFO_GET_OXID</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>tup_undo_location</name></name> <operator>=</operator> <name>location</name></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>o_arg</name><operator>-&gt;</operator><name>epqstate</name></name> <operator>||</operator> <operator>!</operator><name>modified</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>copy_tuple_to_slot</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>descr</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>,
						   <argument><expr><name>PrimaryIndexNumber</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>modified</name></expr>)</condition>
		<block>{<block_content>
			<return>return <expr><name>OBTreeCallbackActionDelete</name></expr>;</return>
		</block_content>}</block></if>
		<else>else
		<block>{<block_content>
			<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>modified</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
			<return>return <expr><name>OBTreeCallbackActionDoNothing</name></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>EvalPlanQualBegin</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>epqstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>inputslot</name> <operator>=</operator> <call><name>EvalPlanQualSlot</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>epqstate</name></name></expr></argument>,
								 <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>rinfo</name><operator>-&gt;</operator><name>ri_RelationDesc</name></name></expr></argument>,
								 <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>rinfo</name><operator>-&gt;</operator><name>ri_RangeTableIndex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>scanSlot</name></name> <operator>=</operator> <name>inputslot</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>copy_tuple_to_slot</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><name>inputslot</name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>descr</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>,
					   <argument><expr><name>PrimaryIndexNumber</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><name>OBTreeCallbackActionLock</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type>
<name>o_delete_deleted_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,
						  <parameter><decl><type><name>OTuple</name></type> <name>oldTup</name></decl></parameter>,
						  <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newTup</name></decl></parameter>,
						  <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>,
						  <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
						  <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
						  <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lockMode</name></decl></parameter>,
						  <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
						  <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>o_arg</name> <init>= <expr><operator>(</operator><name>OModifyCallbackArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>modified</name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>deleted</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>desc</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>oIndexPrimary</name></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>OBTreeCallbackActionDelete</name></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>modified</name> <operator>=</operator> <call><name>o_callback_is_modified</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>oxid</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>, <argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>XACT_INFO_IS_FINISHED</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <ternary><condition><expr><name>modified</name></expr> ?</condition><then> <expr><operator>(</operator><call><name>XACT_INFO_MAP_CSN</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <name>COMMITSEQNO_INPROGRESS</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>oxid</name></name> <operator>=</operator> <call><name>XACT_INFO_GET_OXID</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>tup_undo_location</name></name> <operator>=</operator> <name>location</name></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
	<return>return <expr><name>OBTreeCallbackActionDoNothing</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type>
<name>o_update_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>,
				  <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
				  <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
				  <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
				  <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>,
				  <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OModifyCallbackArg</name> <modifier>*</modifier></type><name>o_arg</name> <init>= <expr><operator>(</operator><name>OModifyCallbackArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>inputslot</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>modified</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>version</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>descr</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>oIndexPrimary</name></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>OBTreeCallbackActionUpdate</name></expr>;</return></block_content></block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>descr</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>oIndexPrimary</name> <operator>&amp;&amp;</operator>
		<call><name>XACT_INFO_OXID_IS_CURRENT</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><operator>(</operator><name>OIndexDescr</name> <operator>*</operator><operator>)</operator> <name><name>descr</name><operator>-&gt;</operator><name>arg</name></name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name>version</name> <operator>=</operator> <call><name>o_tuple_get_version</name><argument_list>(<argument><expr><name>tup</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>o_tuple_set_version</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>leafSpec</name></name></expr></argument>, <argument><expr><name>newtup</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>newSlot</name><operator>-&gt;</operator><name>tuple</name></name> <operator>=</operator> <operator>*</operator><name>newtup</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>modified</name> <operator>=</operator> <call><name>o_callback_is_modified</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>oxid</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>, <argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>XACT_INFO_IS_FINISHED</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <ternary><condition><expr><name>modified</name></expr> ?</condition><then> <expr><operator>(</operator><call><name>XACT_INFO_MAP_CSN</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <name>COMMITSEQNO_INPROGRESS</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>oxid</name></name> <operator>=</operator> <call><name>XACT_INFO_GET_OXID</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>tup_undo_location</name></name> <operator>=</operator> <name>location</name></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>o_arg</name><operator>-&gt;</operator><name>epqstate</name></name> <operator>||</operator> <operator>!</operator><name>modified</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>copy_tuple_to_slot</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>descr</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>,
						   <argument><expr><name>PrimaryIndexNumber</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>modified</name></expr>)</condition>
		<block>{<block_content>
			<return>return <expr><name>OBTreeCallbackActionUpdate</name></expr>;</return>
		</block_content>}</block></if>
		<else>else
		<block>{<block_content>
			<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>modified</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
			<return>return <expr><name>OBTreeCallbackActionDoNothing</name></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>EvalPlanQualBegin</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>epqstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>inputslot</name> <operator>=</operator> <call><name>EvalPlanQualSlot</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>epqstate</name></name></expr></argument>,
								 <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>rinfo</name><operator>-&gt;</operator><name>ri_RelationDesc</name></name></expr></argument>,
								 <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>rinfo</name><operator>-&gt;</operator><name>ri_RangeTableIndex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>scanSlot</name></name> <operator>=</operator> <name>inputslot</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>copy_tuple_to_slot</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><name>inputslot</name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>descr</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>,
					   <argument><expr><name>PrimaryIndexNumber</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>OBTreeCallbackActionLock</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeWaitCallbackAction</name></type>
<name>o_lock_wait_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
					 <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>, <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
					 <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>, <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
					 <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OLockCallbackArg</name> <modifier>*</modifier></type><name>o_arg</name> <init>= <expr><operator>(</operator><name>OLockCallbackArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>

	<switch>switch <condition>(<expr><name><name>o_arg</name><operator>-&gt;</operator><name>waitPolicy</name></name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>LockWaitBlock</name></expr>:</case>
			<return>return <expr><name>OBTreeCallbackActionXidWait</name></expr>;</return>
		<case>case <expr><name>LockWaitSkip</name></expr>:</case>
			<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>wouldBlock</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
			<return>return <expr><name>OBTreeCallbackActionXidExit</name></expr>;</return>
		<case>case <expr><name>LockWaitError</name></expr>:</case>
			<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
					<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_LOCK_NOT_AVAILABLE</name></expr></argument>)</argument_list></call><operator>,</operator>
					 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"could not obtain lock on row in relation \"%s\""</literal></expr></argument>,
							<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>rel</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		<default>default:</default>
			<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"Unknown wait policy: %u"</literal></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>waitPolicy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OBTreeModifyCallbackAction</name></type>
<name>o_lock_modify_callback</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>OTuple</name></type> <name>tup</name></decl></parameter>, <parameter><decl><type><name>OTuple</name> <modifier>*</modifier></type><name>newtup</name></decl></parameter>,
					   <parameter><decl><type><name>OXid</name></type> <name>oxid</name></decl></parameter>, <parameter><decl><type><name>OTupleXactInfo</name></type> <name>xactInfo</name></decl></parameter>,
					   <parameter><decl><type><name>UndoLocation</name></type> <name>location</name></decl></parameter>,
					   <parameter><decl><type><name>RowLockMode</name> <modifier>*</modifier></type><name>lock_mode</name></decl></parameter>, <parameter><decl><type><name>BTreeLocationHint</name> <modifier>*</modifier></type><name>hint</name></decl></parameter>,
					   <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OLockCallbackArg</name> <modifier>*</modifier></type><name>o_arg</name> <init>= <expr><operator>(</operator><name>OLockCallbackArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name> <init>= <expr><name><name>o_arg</name><operator>-&gt;</operator><name>scanSlot</name></name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>modified</name></name> <operator>=</operator> <call><name>o_callback_is_modified</name><argument_list>(<argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>oxid</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>, <argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>XACT_INFO_IS_FINISHED</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <ternary><condition><expr><name><name>o_arg</name><operator>-&gt;</operator><name>modified</name></name></expr> ?</condition><then> <expr><operator>(</operator><call><name>XACT_INFO_MAP_CSN</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></else></ternary></expr>;</expr_stmt>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name> <operator>=</operator> <name>COMMITSEQNO_INPROGRESS</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>oxid</name></name> <operator>=</operator> <call><name>XACT_INFO_GET_OXID</name><argument_list>(<argument><expr><name>xactInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_arg</name><operator>-&gt;</operator><name>tupUndoLocation</name></name> <operator>=</operator> <name>location</name></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<expr_stmt><expr><call><name>copy_tuple_to_slot</name><argument_list>(<argument><expr><name>tup</name></expr></argument>, <argument><expr><name>slot</name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>descr</name></name></expr></argument>, <argument><expr><name><name>o_arg</name><operator>-&gt;</operator><name>csn</name></name></expr></argument>,
					   <argument><expr><name>PrimaryIndexNumber</name></expr></argument>, <argument><expr><name>hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><name>OBTreeCallbackActionLock</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>get_keys_from_ps</name><parameter_list>(<parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>planSlot</name></decl></parameter>, <parameter><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,
				 <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>junkAttrs</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>Datum</name></type>		<name>pkDatum</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>pkNull</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>nkeys</name></name> <operator>=</operator> <name><name>id</name><operator>-&gt;</operator><name>nonLeafTupdesc</name><operator>-&gt;</operator><name>natts</name></name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>id</name><operator>-&gt;</operator><name>primaryIsCtid</name></name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <call><name>PointerGetDatum</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>planSlot</name><operator>-&gt;</operator><name>tts_tid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>type</name> <operator>=</operator> <name>TIDOID</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>flags</name> <operator>=</operator> <name>O_VALUE_BOUND_PLAIN_VALUE</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>comparator</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>key</name><operator>-&gt;</operator><name>nkeys</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{<block_content>
			<decl_stmt><decl><type><name>AttrNumber</name></type>	<name>attnum</name></decl>;</decl_stmt>

			<expr_stmt><expr><name>attnum</name> <operator>=</operator> <name><name>id</name><operator>-&gt;</operator><name>fields</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>tableAttnum</name></expr>;</expr_stmt>

			<expr_stmt><expr><name>pkDatum</name> <operator>=</operator> <call><name>ExecGetJunkAttribute</name><argument_list>(<argument><expr><name>planSlot</name></expr></argument>, <argument><expr><name>attnum</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pkNull</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt><if>if <condition>(<expr><name>pkNull</name></expr>)</condition><block type="pseudo"><block_content>
				<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"key %d is null"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <name>pkDatum</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>type</name> <operator>=</operator> <name><name>id</name><operator>-&gt;</operator><name>nonLeafTupdesc</name><operator>-&gt;</operator><name>attrs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>atttypid</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>=</operator> <name>O_VALUE_BOUND_PLAIN_VALUE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>comparator</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>
<name>is_keys_eq</name><parameter_list>(<parameter><decl><type><name>BTreeDescr</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>k1</name></decl></parameter>, <parameter><decl><type><name>OBTreeKeyBound</name> <modifier>*</modifier></type><name>k2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><operator>(</operator><call><name>o_idx_cmp</name><argument_list>(<argument><expr><name>desc</name></expr></argument>,
					  <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>k1</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>,
					  <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>k2</name></expr></argument>, <argument><expr><name>BTreeKeyBound</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>o_report_duplicate</name><parameter_list>(<parameter><decl><type><name>Relation</name></type> <name>rel</name></decl></parameter>, <parameter><decl><type><name>OIndexDescr</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>TupleTableSlot</name> <modifier>*</modifier></type><name>slot</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>bool</name></type>		<name>ctid</name> <init>= <expr><name><name>id</name><operator>-&gt;</operator><name>primaryIsCtid</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>primary</name> <init>= <expr><name><name>id</name><operator>-&gt;</operator><name>desc</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>oIndexPrimary</name></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>primary</name> <operator>&amp;&amp;</operator> <name>ctid</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INTERNAL_ERROR</name></expr></argument>)</argument_list></call><operator>,</operator>
						<call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"ctid index key duplicate."</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_UNIQUE_VIOLATION</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"duplicate key value violates unique constraint \"%s\""</literal></expr></argument>,
						<argument><expr><call><name>RelationGetRelationName</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errdetail</name><argument_list>(<argument><expr><literal type="string">"Key %s already exists"</literal></expr></argument>,
						   <argument><expr><call><name>tss_orioledb_print_idx_key</name><argument_list>(<argument><expr><name>slot</name></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errtableconstraint</name><argument_list>(<argument><expr><name>rel</name></expr></argument>, <argument><expr><ternary><condition><expr><name><name>id</name><operator>-&gt;</operator><name>desc</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>oIndexPrimary</name></expr> ?</condition><then> <expr><literal type="string">"pk"</literal></expr> </then><else>: <expr><literal type="string">"sk"</literal></expr></else></ternary></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
</block_content>}</block></function>
</unit>
