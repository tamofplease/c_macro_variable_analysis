<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/orioledb/src/catalog/o_class_cache.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 *  o_class_cache.c
 *		Routines for orioledb class sys cache.
 *
 * class_cache is tree that contains cached range metadata from pg_type.
 *
 * Copyright (c) 2021-2022, OrioleDB Inc.
 *
 * IDENTIFICATION
 *	  contrib/orioledb/src/catalog/o_class_cache.c
 *
 *-------------------------------------------------------------------------
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"orioledb.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/o_sys_cache.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/sys_trees.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"recovery/recovery.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/htup_details.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/relation.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>PG_VERSION_NUM</name> <operator>&gt;=</operator> <literal type="number">150000</literal></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/xlogrecovery.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>PG_VERSION_NUM</name> <operator>&lt;</operator> <literal type="number">140000</literal></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/indexing.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_class.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"commands/defrem.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"miscadmin.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/catcache.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/memutils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/rel.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/syscache.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>OSysCache</name> <modifier>*</modifier></type><name>class_cache</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>Pointer</name></type> <name>o_class_cache_serialize_entry</name><parameter_list>(<parameter><decl><type><name>Pointer</name></type> <name>entry</name></decl></parameter>,
											 <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>Pointer</name></type> <name>o_class_cache_deserialize_entry</name><parameter_list>(<parameter><decl><type><name>MemoryContext</name></type> <name>mcxt</name></decl></parameter>,
											   <parameter><decl><type><name>Pointer</name></type> <name>data</name></decl></parameter>,
											   <parameter><decl><type><name>Size</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>o_class_cache_free_entry</name><parameter_list>(<parameter><decl><type><name>Pointer</name></type> <name>entry</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>o_class_cache_fill_entry</name><parameter_list>(<parameter><decl><type><name>Pointer</name> <modifier>*</modifier></type><name>entry_ptr</name></decl></parameter>, <parameter><decl><type><name>OSysCacheKey</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
									 <parameter><decl><type><name>Pointer</name></type> <name>arg</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>OClass</name>
<block>{
	<decl_stmt><decl><type><name>OSysCacheKey1</name></type> <name>key</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Oid</name></type>			<name>reltype</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>natts</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>FormData_pg_attribute</name> <modifier>*</modifier></type><name>attrs</name></decl>;</decl_stmt>
}</block>;</struct>

<expr_stmt><expr><call><name>O_SYS_CACHE_FUNCS</name><argument_list>(<argument><expr><name>class_cache</name></expr></argument>, <argument><expr><name>OClass</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>OSysCacheFuncs</name></type> <name>class_cache_funcs</name> <init>=
<expr><block>{
	<expr><operator>.</operator><name>free_entry</name> <operator>=</operator> <name>o_class_cache_free_entry</name></expr>,
	<expr><operator>.</operator><name>fill_entry</name> <operator>=</operator> <name>o_class_cache_fill_entry</name></expr>,
	<expr><operator>.</operator><name>toast_serialize_entry</name> <operator>=</operator> <name>o_class_cache_serialize_entry</name></expr>,
	<expr><operator>.</operator><name>toast_deserialize_entry</name> <operator>=</operator> <name>o_class_cache_deserialize_entry</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * Initializes the record sys cache memory.
 */</comment>
<macro><name>O_SYS_CACHE_INIT_FUNC</name><argument_list>(<argument>class_cache</argument>)</argument_list></macro>
<block>{<block_content>
	<decl_stmt><decl><type><name>Oid</name></type>			<name><name>keytypes</name><index>[]</index></name> <init>= <expr><block>{<expr><name>OIDOID</name></expr>}</block></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>class_cache</name> <operator>=</operator> <call><name>o_create_sys_cache</name><argument_list>(<argument><expr><name>SYS_TREES_CLASS_CACHE</name></expr></argument>,
									 <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>,
									 <argument><expr><name>ClassOidIndexId</name></expr></argument>, <argument><expr><name>RELOID</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
									 <argument><expr><name>keytypes</name></expr></argument>, <argument><expr><name>fastcache</name></expr></argument>,
									 <argument><expr><name>mcxt</name></expr></argument>,
									 <argument><expr><operator>&amp;</operator><name>class_cache_funcs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>

<function><type><name>void</name></type>
<name>o_class_cache_fill_entry</name><parameter_list>(<parameter><decl><type><name>Pointer</name> <modifier>*</modifier></type><name>entry_ptr</name></decl></parameter>, <parameter><decl><type><name>OSysCacheKey</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>Pointer</name></type> <name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>Relation</name></type>	<name>rel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>MemoryContext</name></type> <name>prev_context</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Size</name></type>		<name>len</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OClass</name>	   <modifier>*</modifier></type><name>o_class</name> <init>= <expr><operator>(</operator><name>OClass</name> <operator>*</operator><operator>)</operator> <operator>*</operator><name>entry_ptr</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OClassArg</name>  <modifier>*</modifier></type><name>carg</name> <init>= <expr><operator>(</operator><name>OClassArg</name> <operator>*</operator><operator>)</operator> <name>arg</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type>		<name>sys_cache</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>processed</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Oid</name></type>			<name>classoid</name> <init>= <expr><call><name>DatumGetObjectId</name><argument_list>(<argument><expr><name><name>key</name><operator>-&gt;</operator><name>keys</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>sys_cache</name> <operator>=</operator> <name>carg</name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>carg</name><operator>-&gt;</operator><name>column_drop</name></name> <operator>&amp;&amp;</operator> <name><name>carg</name><operator>-&gt;</operator><name>sys_table</name></name></expr>;</expr_stmt>

	<expr_stmt><expr><name>rel</name> <operator>=</operator> <call><name>relation_open</name><argument_list>(<argument><expr><name>classoid</name></expr></argument>, <argument><expr><name>AccessShareLock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>prev_context</name> <operator>=</operator> <call><name>MemoryContextSwitchTo</name><argument_list>(<argument><expr><name><name>class_cache</name><operator>-&gt;</operator><name>mcxt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>len</name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>rd_att</name><operator>-&gt;</operator><name>natts</name></name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>FormData_pg_attribute</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>o_class</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>		<comment type="block">/* Existed o_class updated */</comment>
	<block>{<block_content>
		<expr_stmt><expr><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name> <operator>=</operator> <operator>(</operator><name>FormData_pg_attribute</name> <operator>*</operator><operator>)</operator> <call><name>repalloc</name><argument_list>(<argument><expr><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name></expr></argument>,
															<argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if>
	<else>else
	<block>{<block_content>
		<expr_stmt><expr><name>o_class</name> <operator>=</operator> <call><name>palloc0</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>OClass</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><operator>*</operator><name>entry_ptr</name> <operator>=</operator> <operator>(</operator><name>Pointer</name><operator>)</operator> <name>o_class</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name> <operator>=</operator> <operator>(</operator><name>FormData_pg_attribute</name> <operator>*</operator><operator>)</operator> <call><name>palloc0</name><argument_list>(<argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
	<expr_stmt><expr><name><name>o_class</name><operator>-&gt;</operator><name>reltype</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>rd_rel</name><operator>-&gt;</operator><name>reltype</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>o_class</name><operator>-&gt;</operator><name>natts</name></name> <operator>=</operator> <name><name>rel</name><operator>-&gt;</operator><name>rd_att</name><operator>-&gt;</operator><name>natts</name></name></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>o_class</name><operator>-&gt;</operator><name>natts</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<decl_stmt><decl><type><name>bool</name></type>		<name>process</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>FormData_pg_attribute</name> <modifier>*</modifier></type><name>class_attr</name></decl>,
				   <decl><type ref="prev"><modifier>*</modifier></type><name>typcache_attr</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>class_attr</name> <operator>=</operator> <operator>&amp;</operator><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>typcache_attr</name> <operator>=</operator> <operator>&amp;</operator><name><name>rel</name><operator>-&gt;</operator><name>rd_att</name><operator>-&gt;</operator><name>attrs</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attrelid</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attrelid</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attname</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attname</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>atttypid</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>atttypid</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attstattarget</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attstattarget</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attlen</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attlen</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attnum</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attnum</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attndims</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attndims</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attcacheoff</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attcacheoff</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>atttypmod</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>atttypmod</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attbyval</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attbyval</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attstorage</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attstorage</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attalign</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attalign</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attnotnull</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attnotnull</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>atthasdef</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>atthasdef</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>atthasmissing</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>atthasmissing</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attidentity</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attidentity</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attgenerated</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attgenerated</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attislocal</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attislocal</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attinhcount</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attinhcount</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attcollation</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attcollation</name></name></expr>;</expr_stmt>

		<expr_stmt><expr><name><name>class_attr</name><operator>-&gt;</operator><name>attisdropped</name></name> <operator>=</operator> <name><name>typcache_attr</name><operator>-&gt;</operator><name>attisdropped</name></name> <operator>||</operator>
			<operator>(</operator><name>carg</name> <operator>&amp;&amp;</operator> <name><name>carg</name><operator>-&gt;</operator><name>column_drop</name></name> <operator>&amp;&amp;</operator>
			 <name><name>carg</name><operator>-&gt;</operator><name>dropped</name></name> <operator>-</operator> <literal type="number">1</literal> <operator>==</operator> <name>i</name><operator>)</operator></expr>;</expr_stmt>

		<expr_stmt><expr><name>process</name> <operator>=</operator> <operator>!</operator><name><name>class_attr</name><operator>-&gt;</operator><name>attisdropped</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name>sys_cache</name></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>process</name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><name>processed</name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>o_composite_type_element_save</name><argument_list>(<argument><expr><name><name>key</name><operator>-&gt;</operator><name>common</name><operator>.</operator><name>datoid</name></name></expr></argument>,
										  <argument><expr><name><name>class_attr</name><operator>-&gt;</operator><name>atttypid</name></name></expr></argument>,
										  <argument><expr><name><name>key</name><operator>-&gt;</operator><name>common</name><operator>.</operator><name>lsn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>MemoryContextSwitchTo</name><argument_list>(<argument><expr><name>prev_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>relation_close</name><argument_list>(<argument><expr><name>rel</name></expr></argument>, <argument><expr><name>AccessShareLock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>o_class_cache_free_entry</name><parameter_list>(<parameter><decl><type><name>Pointer</name></type> <name>entry</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>OClass</name>	   <modifier>*</modifier></type><name>o_class</name> <init>= <expr><operator>(</operator><name>OClass</name> <operator>*</operator><operator>)</operator> <name>entry</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><name>o_class</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>Pointer</name></type>
<name>o_class_cache_serialize_entry</name><parameter_list>(<parameter><decl><type><name>Pointer</name></type> <name>entry</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>StringInfoData</name></type> <name>str</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OClass</name>	   <modifier>*</modifier></type><name>o_class</name> <init>= <expr><operator>(</operator><name>OClass</name> <operator>*</operator><operator>)</operator> <name>entry</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>initStringInfo</name><argument_list>(<argument><expr><operator>&amp;</operator><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>appendBinaryStringInfo</name><argument_list>(<argument><expr><operator>&amp;</operator><name>str</name></expr></argument>, <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>o_class</name></expr></argument>,
						   <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr><name>OClass</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>appendBinaryStringInfo</name><argument_list>(<argument><expr><operator>&amp;</operator><name>str</name></expr></argument>, <argument><expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name></expr></argument>,
						   <argument><expr><name><name>o_class</name><operator>-&gt;</operator><name>natts</name></name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>FormData_pg_attribute</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><operator>*</operator><name>len</name> <operator>=</operator> <name><name>str</name><operator>.</operator><name>len</name></name></expr>;</expr_stmt>
	<return>return <expr><name><name>str</name><operator>.</operator><name>data</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>Pointer</name></type>
<name>o_class_cache_deserialize_entry</name><parameter_list>(<parameter><decl><type><name>MemoryContext</name></type> <name>mcxt</name></decl></parameter>, <parameter><decl><type><name>Pointer</name></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>Size</name></type> <name>length</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>Pointer</name></type>		<name>ptr</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OClass</name>	   <modifier>*</modifier></type><name>o_class</name> <init>= <expr><operator>(</operator><name>OClass</name> <operator>*</operator><operator>)</operator> <name>data</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>len</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>o_class</name> <operator>=</operator> <operator>(</operator><name>OClass</name> <operator>*</operator><operator>)</operator> <call><name>palloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>OClass</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>offsetof</name><argument_list>(<argument><expr><name>OClass</name></expr></argument>, <argument><expr><name>attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>(</operator><name>ptr</name> <operator>-</operator> <name>data</name><operator>)</operator> <operator>+</operator> <name>len</name> <operator>&lt;=</operator> <name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>o_class</name></expr></argument>, <argument><expr><name>ptr</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <name>len</name></expr>;</expr_stmt>

	<expr_stmt><expr><name>len</name> <operator>=</operator> <name><name>o_class</name><operator>-&gt;</operator><name>natts</name></name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>FormData_pg_attribute</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name> <operator>=</operator> <call><name>MemoryContextAlloc</name><argument_list>(<argument><expr><name>mcxt</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><operator>(</operator><name>ptr</name> <operator>-</operator> <name>data</name><operator>)</operator> <operator>+</operator> <name>len</name> <operator>==</operator> <name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name></expr></argument>, <argument><expr><name>ptr</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <name>len</name></expr>;</expr_stmt>

	<return>return <expr><operator>(</operator><name>Pointer</name><operator>)</operator> <name>o_class</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>TupleDesc</name></type>
<name>o_class_cache_search_tupdesc</name><parameter_list>(<parameter><decl><type><name>Oid</name></type> <name>cc_reloid</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>TupleDesc</name></type>	<name>result</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Oid</name></type>			<name>datoid</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>XLogRecPtr</name></type>	<name>cur_lsn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>OClass</name>	   <modifier>*</modifier></type><name>o_class</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>o_sys_cache_set_datoid_lsn</name><argument_list>(<argument><expr><operator>&amp;</operator><name>cur_lsn</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>datoid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>o_class</name> <operator>=</operator> <call><name>o_class_cache_search</name><argument_list>(<argument><expr><name>datoid</name></expr></argument>, <argument><expr><name>cc_reloid</name></expr></argument>, <argument><expr><name>cur_lsn</name></expr></argument>,
								   <argument><expr><name><name>class_cache</name><operator>-&gt;</operator><name>nkeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>o_class</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>CreateTemplateTupleDesc</name><argument_list>(<argument><expr><name><name>o_class</name><operator>-&gt;</operator><name>natts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>result</name><operator>-&gt;</operator><name>attrs</name></name></expr></argument>, <argument><expr><name><name>o_class</name><operator>-&gt;</operator><name>attrs</name></name></expr></argument>,
			   <argument><expr><name><name>o_class</name><operator>-&gt;</operator><name>natts</name></name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>FormData_pg_attribute</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>TupleDesc</name></type>
<name>o_record_cmp_hook</name><parameter_list>(<parameter><decl><type><name>Oid</name></type> <name>type_id</name></decl></parameter>, <parameter><decl><type><name>MemoryContext</name></type> <name>mcxt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>TupleDesc</name></type>	<name>result</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Oid</name></type>			<name>reloid</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>MemoryContext</name></type> <name>prev_context</name> <init>= <expr><call><name>MemoryContextSwitchTo</name><argument_list>(<argument><expr><name>mcxt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name>reloid</name> <operator>=</operator> <call><name>o_type_cache_get_typrelid</name><argument_list>(<argument><expr><name>type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><call><name>OidIsValid</name><argument_list>(<argument><expr><name>reloid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>o_class_cache_search_tupdesc</name><argument_list>(<argument><expr><name>reloid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>MemoryContextSwitchTo</name><argument_list>(<argument><expr><name>prev_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>
</unit>
