<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/orioledb/src/utils/compress.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * compress.c
 *		Compression functions for BTree pages. Wrapper for libzstd.
 *
 * Copyright (c) 2021-2022, Oriole DB Inc.
 *
 * IDENTIFICATION
 *	  contrib/orioledb/src/utils/compress.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"orioledb.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/compress.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/elog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/memdebug.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;zstd.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>ZSTD_CCtx</name> <modifier>*</modifier></type><name>zstd_cctx</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>ZSTD_DCtx</name> <modifier>*</modifier></type><name>zstd_dctx</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>size_t</name></type> <name>zstd_dst_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Pointer</name></type> <name>zstd_dst</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * Initializes compression context.
 */</comment>
<function><type><name>void</name></type>
<name>o_compress_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><name>zstd_cctx</name> <operator>=</operator> <call><name>ZSTD_createCCtx</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>zstd_dctx</name> <operator>=</operator> <call><name>ZSTD_createDCtx</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>zstd_dst_size</name> <operator>=</operator> <call><name>ZSTD_compressBound</name><argument_list>(<argument><expr><name>ORIOLEDB_BLCKSZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>zstd_dst</name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><name>zstd_dst_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * It helps to avoid Valgrind uninitialized bytes error inside
	 * OFileWrite().
	 *
	 * We write compressed pages to a file with size % ORIOLEDB_COMP_BLCKSZ ==
	 * 0, where size &gt;= compressed page size. So it's normal to write
	 * uninitialized bytes.
	 */</comment>
	<expr_stmt><expr><call><name>VALGRIND_MAKE_MEM_DEFINED</name><argument_list>(<argument><expr><name>zstd_dst</name></expr></argument>, <argument><expr><name>ORIOLEDB_BLCKSZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Compresses a BTree page.
 */</comment>
<function><type><name>Pointer</name></type>
<name>o_compress_page</name><parameter_list>(<parameter><decl><type><name>Pointer</name></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>size</name></decl></parameter>, <parameter><decl><type><name>OCompress</name></type> <name>lvl</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>VALGRIND_CHECK_MEM_IS_DEFINED</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>ORIOLEDB_BLCKSZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>size</name> <operator>=</operator> <call><name>ZSTD_compressCCtx</name><argument_list>(<argument><expr><name>zstd_cctx</name></expr></argument>,
							  <argument><expr><name>zstd_dst</name></expr></argument>, <argument><expr><name>zstd_dst_size</name></expr></argument>,
							  <argument><expr><name>page</name></expr></argument>, <argument><expr><name>ORIOLEDB_BLCKSZ</name></expr></argument>,
							  <argument><expr><name>lvl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>VALGRIND_MAKE_MEM_DEFINED</name><argument_list>(<argument><expr><name>zstd_dst</name></expr></argument>, <argument><expr><operator>*</operator><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><call><name>ZSTD_isError</name><argument_list>(<argument><expr><operator>*</operator><name>size</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>PANIC</name></expr></argument>,
			 <argument><expr><literal type="string">"Unable to compress page, reason: %s"</literal></expr></argument>, <argument><expr><call><name>ZSTD_getErrorName</name><argument_list>(<argument><expr><operator>*</operator><name>size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><name>zstd_dst</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Decompresses a BTree page.
 */</comment>
<function><type><name>void</name></type>
<name>o_decompress_page</name><parameter_list>(<parameter><decl><type><name>Pointer</name></type> <name>src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>Pointer</name></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>size_t</name></type>		<name>result</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ZSTD_decompressDCtx</name><argument_list>(<argument><expr><name>zstd_dctx</name></expr></argument>,
								 <argument><expr><name>page</name></expr></argument>, <argument><expr><name>ORIOLEDB_BLCKSZ</name></expr></argument>,
								 <argument><expr><name>src</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><call><name>ZSTD_isError</name><argument_list>(<argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>PANIC</name></expr></argument>,
			 <argument><expr><literal type="string">"Unable to decompress page, reason: %s"</literal></expr></argument>, <argument><expr><call><name>ZSTD_getErrorName</name><argument_list>(<argument><expr><name>result</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <name>ORIOLEDB_BLCKSZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Returns max orioledb compression level.
 */</comment>
<function><type><name>OCompress</name></type>
<name>o_compress_max_lvl</name><parameter_list>()</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>ZSTD_maxCLevel</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
