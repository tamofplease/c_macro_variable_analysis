<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/src/scan_iterator.c"><comment type="block">/*
 * This file and its contents are licensed under the Apache License 2.0.
 * Please see the included NOTICE for copyright information and
 * LICENSE-APACHE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"scan_iterator.h"</cpp:file></cpp:include>

<function><type><name>TSDLLEXPORT</name> <name>void</name></type>
<name>ts_scan_iterator_set_index</name><parameter_list>(<parameter><decl><type><name>ScanIterator</name> <modifier>*</modifier></type><name>iterator</name></decl></parameter>, <parameter><decl><type><name>CatalogTable</name></type> <name>table</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>indexid</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>index</name></name> <operator>=</operator> <call><name>catalog_get_index</name><argument_list>(<argument><expr><call><name>ts_catalog_get</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>table</name></expr></argument>, <argument><expr><name>indexid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ts_scan_iterator_end</name><parameter_list>(<parameter><decl><type><name>ScanIterator</name> <modifier>*</modifier></type><name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>ts_scanner_end_scan</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ts_scan_iterator_close</name><parameter_list>(<parameter><decl><type><name>ScanIterator</name> <modifier>*</modifier></type><name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/* Ending a scan is a no-op if already ended */</comment>
	<expr_stmt><expr><call><name>ts_scanner_end_scan</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ts_scanner_close</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TSDLLEXPORT</name> <name>void</name></type>
<name>ts_scan_iterator_scan_key_init</name><parameter_list>(<parameter><decl><type><name>ScanIterator</name> <modifier>*</modifier></type><name>iterator</name></decl></parameter>, <parameter><decl><type><name>AttrNumber</name></type> <name>attributeNumber</name></decl></parameter>,
							   <parameter><decl><type><name>StrategyNumber</name></type> <name>strategy</name></decl></parameter>, <parameter><decl><type><name>RegProcedure</name></type> <name>procedure</name></decl></parameter>, <parameter><decl><type><name>Datum</name></type> <name>argument</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>MemoryContext</name></type> <name>oldmcxt</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>scankey</name></name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name><name>iterator</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>scankey</name></name> <operator>==</operator> <name><name>iterator</name><operator>-&gt;</operator><name>scankey</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>scankey</name></name> <operator>=</operator> <name><name>iterator</name><operator>-&gt;</operator><name>scankey</name></name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>nkeys</name></name> <operator>&gt;=</operator> <name>EMBEDDED_SCAN_KEY_SIZE</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"cannot scan more than %d keys"</literal></expr></argument>, <argument><expr><name>EMBEDDED_SCAN_KEY_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block">/*
	 * For rescans, when the scan key is reinitialized during the scan, make
	 * sure the scan key is initialized on the long-lived scankey memory
	 * context.
	 */</comment>
	<expr_stmt><expr><name>oldmcxt</name> <operator>=</operator> <call><name>MemoryContextSwitchTo</name><argument_list>(<argument><expr><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>internal</name><operator>.</operator><name>scan_mcxt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ScanKeyInit</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>iterator</name><operator>-&gt;</operator><name>scankey</name><index>[<expr><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>nkeys</name></name><operator>++</operator></expr>]</index></name></expr></argument>,
				<argument><expr><name>attributeNumber</name></expr></argument>,
				<argument><expr><name>strategy</name></expr></argument>,
				<argument><expr><name>procedure</name></expr></argument>,
				<argument><expr><name>argument</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>MemoryContextSwitchTo</name><argument_list>(<argument><expr><name>oldmcxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>TSDLLEXPORT</name> <name>void</name></type>
<name>ts_scan_iterator_rescan</name><parameter_list>(<parameter><decl><type><name>ScanIterator</name> <modifier>*</modifier></type><name>iterator</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>ts_scanner_rescan</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>iterator</name><operator>-&gt;</operator><name>ctx</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
