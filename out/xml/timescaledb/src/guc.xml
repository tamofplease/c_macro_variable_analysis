<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/src/guc.c"><comment type="block">/*
 * This file and its contents are licensed under the Apache License 2.0.
 * Please see the included NOTICE for copyright information and
 * LICENSE-APACHE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/guc.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;miscadmin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"guc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"license_guc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hypertable_cache.h"</cpp:file></cpp:include>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_TELEMETRY</name></cpp:ifdef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"telemetry/telemetry.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_TELEMETRY</name></cpp:ifdef>
<comment type="block">/* Define which level means on. We use this object to have at least one object
 * of type TelemetryLevel in the code, otherwise pgindent won't work for the
 * type */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>TelemetryLevel</name></type> <name>on_level</name> <init>= <expr><name>TELEMETRY_NO_FUNCTIONS</name></expr></init></decl>;</decl_stmt>

<function><type><name>bool</name></type>
<name>ts_telemetry_on</name><parameter_list>()</parameter_list>
<block>{<block_content>
	<return>return <expr><name>ts_guc_telemetry_level</name> <operator>&gt;=</operator> <name>on_level</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ts_function_telemetry_on</name><parameter_list>()</parameter_list>
<block>{<block_content>
	<return>return <expr><name>ts_guc_telemetry_level</name> <operator>&gt;</operator> <name>TELEMETRY_NO_FUNCTIONS</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>config_enum_entry</name></name></type> <name><name>telemetry_level_options</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><literal type="string">"off"</literal></expr>, <expr><name>TELEMETRY_OFF</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"no_functions"</literal></expr>, <expr><name>TELEMETRY_NO_FUNCTIONS</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"basic"</literal></expr>, <expr><name>TELEMETRY_BASIC</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>false</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>config_enum_entry</name></name></type> <name><name>remote_data_fetchers</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><literal type="string">"copy"</literal></expr>, <expr><name>CopyFetcherType</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"cursor"</literal></expr>, <expr><name>CursorFetcherType</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"auto"</literal></expr>, <expr><name>AutoFetcherType</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>false</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>config_enum_entry</name></name></type> <name><name>hypertable_distributed_types</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><literal type="string">"auto"</literal></expr>, <expr><name>HYPERTABLE_DIST_AUTO</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"local"</literal></expr>, <expr><name>HYPERTABLE_DIST_LOCAL</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"distributed"</literal></expr>, <expr><name>HYPERTABLE_DIST_DISTRIBUTED</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>false</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>config_enum_entry</name></name></type> <name><name>dist_copy_transfer_formats</name><index>[]</index></name> <init>= <expr><block>{
	<expr><block>{ <expr><literal type="string">"auto"</literal></expr>, <expr><name>DCTF_Auto</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"binary"</literal></expr>, <expr><name>DCTF_Binary</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><literal type="string">"text"</literal></expr>, <expr><name>DCTF_Text</name></expr>, <expr><name>false</name></expr> }</block></expr>,
	<expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>false</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_optimizations</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_restoring</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_constraint_aware_append</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_ordered_append</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_chunk_append</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_parallel_chunk_append</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_runtime_exclusion</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_constraint_exclusion</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_qual_propagation</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_cagg_reorder_groupby</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_now_constify</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>bool</name></type> <name>ts_guc_enable_transparent_decompression</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_per_data_node_queries</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_guc_enable_async_append</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>bool</name></type> <name>ts_guc_enable_skip_scan</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ts_guc_max_open_chunks_per_insert</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ts_guc_max_cached_chunks_per_hypertable</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_TELEMETRY</name></cpp:ifdef>
<decl_stmt><decl><type><name>TelemetryLevel</name></type> <name>ts_guc_telemetry_level</name> <init>= <expr><name>TELEMETRY_DEFAULT</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ts_telemetry_cloud</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>char</name> <modifier>*</modifier></type><name>ts_guc_license</name> <init>= <expr><name>TS_LICENSE_DEFAULT</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ts_last_tune_time</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ts_last_tune_version</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>bool</name></type> <name>ts_guc_enable_2pc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>int</name></type> <name>ts_guc_max_insert_batch_size</name> <init>= <expr><literal type="number">1000</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>bool</name></type> <name>ts_guc_enable_connection_binary_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>DistCopyTransferFormat</name></type> <name>ts_guc_dist_copy_transfer_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>bool</name></type> <name>ts_guc_enable_client_ddl_on_data_nodes</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>char</name> <modifier>*</modifier></type><name>ts_guc_ssl_dir</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>char</name> <modifier>*</modifier></type><name>ts_guc_passfile</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>bool</name></type> <name>ts_guc_enable_remote_explain</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>DataFetcherType</name></type> <name>ts_guc_remote_data_fetcher</name> <init>= <expr><name>AutoFetcherType</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>HypertableDistType</name></type> <name>ts_guc_hypertable_distributed_default</name> <init>= <expr><name>HYPERTABLE_DIST_AUTO</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSDLLEXPORT</name> <name>int</name></type> <name>ts_guc_hypertable_replication_factor_default</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>TS_DEBUG</name></cpp:ifdef>
<decl_stmt><decl><type><name>bool</name></type> <name>ts_shutdown_bgw</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ts_current_timestamp_mock</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Hook for plugins to allow additional SSL options */</comment>
<decl_stmt><decl><type><name>set_ssl_options_hook_type</name></type> <name>ts_set_ssl_options_hook</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<comment type="block">/* Assign the hook to the passed in function argument */</comment>
<function><type><name>void</name></type>
<name>ts_assign_ssl_options_hook</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>fn</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><name>ts_set_ssl_options_hook</name> <operator>=</operator> <operator>(</operator><name>set_ssl_options_hook_type</name><operator>)</operator> <name>fn</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>assign_max_cached_chunks_per_hypertable_hook</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>newval</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/* invalidate the hypertable cache to reset */</comment>
	<expr_stmt><expr><call><name>ts_hypertable_cache_invalidate_callback</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>_guc_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/* Main database to connect to. */</comment>
	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_optimizations"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable TimescaleDB query optimizations"</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_optimizations</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.restoring"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Install timescale in restoring mode"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Used for running pg_restore"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_restoring</name></expr></argument>,
							 <argument><expr><name>false</name></expr></argument>,
							 <argument><expr><name>PGC_SUSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_constraint_aware_append"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable constraint-aware append scans"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable constraint exclusion at execution time"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_constraint_aware_append</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_ordered_append"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable ordered append scans"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable ordered append optimization for queries that are ordered by "</literal>
							 <literal type="string">"the time dimension"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_ordered_append</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_chunk_append"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable chunk append node"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable using chunk append node"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_chunk_append</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_parallel_chunk_append"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable parallel chunk append node"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable using parallel aware chunk append node"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_parallel_chunk_append</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_runtime_exclusion"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable runtime chunk exclusion"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable runtime chunk exclusion in ChunkAppend node"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_runtime_exclusion</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_constraint_exclusion"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable constraint exclusion"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable planner constraint exclusion"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_constraint_exclusion</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_qual_propagation"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable qualifier propagation"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable propagation of qualifiers in JOINs"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_qual_propagation</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_transparent_decompression"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable transparent decompression"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable transparent decompression when querying hypertable"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_transparent_decompression</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_skipscan"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable SkipScan"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable SkipScan for DISTINCT queries"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_skip_scan</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_cagg_reorder_groupby"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable group by reordering"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable group by clause reordering for continuous aggregates"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_cagg_reorder_groupby</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_now_constify"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable now() constify"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable constifying now() in query constraints"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_now_constify</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_2pc"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable two-phase commit"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable two-phase commit on distributed hypertables"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_2pc</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_per_data_node_queries"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable the per data node query optimization for hypertables"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable the optimization that combines different chunks belonging to "</literal>
							 <literal type="string">"the same hypertable into a single query per data_node"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_per_data_node_queries</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomIntVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.max_insert_batch_size"</literal></expr></argument>,
							<argument><expr><literal type="string">"The max number of tuples to batch before sending to a data node"</literal></expr></argument>,
							<argument><expr><literal type="string">"When acting as a access node, TimescaleDB splits batches of "</literal>
							<literal type="string">"inserted tuples across multiple data nodes. It will batch up to the "</literal>
							<literal type="string">"configured batch size tuples per data node before flushing. "</literal>
							<literal type="string">"Setting this to 0 disables batching, reverting to tuple-by-tuple "</literal>
							<literal type="string">"inserts"</literal></expr></argument>,
							<argument><expr><operator>&amp;</operator><name>ts_guc_max_insert_batch_size</name></expr></argument>,
							<argument><expr><literal type="number">1000</literal></expr></argument>,
							<argument><expr><literal type="number">0</literal></expr></argument>,
							<argument><expr><literal type="number">65536</literal></expr></argument>,
							<argument><expr><name>PGC_USERSET</name></expr></argument>,
							<argument><expr><literal type="number">0</literal></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_connection_binary_data"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable binary format for connection"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable binary format for data exchanged between nodes in the cluster"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_connection_binary_data</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * The default is 'auto', so that the dist COPY could use text transfer
	 * format for text input. It has a passthrough optimization for this case,
	 * which greatly reduces the CPU usage. Ideally we would implement the same
	 * optimization for binary, but the Postgres COPY code doesn't provide
	 * enough APIs for that.
	 */</comment>
	<expr_stmt><expr><call><name>DefineCustomEnumVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.dist_copy_transfer_format"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Data format used by distributed COPY to send data to data nodes"</literal></expr></argument>,
							 <argument><expr><literal type="string">"auto, binary or text"</literal></expr></argument>,
							 <argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator> <operator>&amp;</operator><name>ts_guc_dist_copy_transfer_format</name></expr></argument>,
							 <argument><expr><name>DCTF_Auto</name></expr></argument>,
							 <argument><expr><name>dist_copy_transfer_formats</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_client_ddl_on_data_nodes"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable DDL operations on data nodes by a client"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Do not restrict execution of DDL operations only by access node"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_client_ddl_on_data_nodes</name></expr></argument>,
							 <argument><expr><name>false</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_async_append"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable async query execution on data nodes"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable optimization that runs remote queries asynchronously"</literal>
							 <literal type="string">"across data nodes"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_async_append</name></expr></argument>,
							 <argument><expr><name>true</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.enable_remote_explain"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Show explain from remote nodes when using VERBOSE flag"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Enable getting and showing EXPLAIN output from remote nodes"</literal></expr></argument>,
							 <argument><expr><operator>&amp;</operator><name>ts_guc_enable_remote_explain</name></expr></argument>,
							 <argument><expr><name>false</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomEnumVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.remote_data_fetcher"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Set remote data fetcher type"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Pick data fetcher type based on type of queries you plan to run "</literal>
							 <literal type="string">"(copy or cursor)"</literal></expr></argument>,
							 <argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator> <operator>&amp;</operator><name>ts_guc_remote_data_fetcher</name></expr></argument>,
							 <argument><expr><name>AutoFetcherType</name></expr></argument>,
							 <argument><expr><name>remote_data_fetchers</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomStringVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.ssl_dir"</literal></expr></argument>,
							   <argument><expr><literal type="string">"TimescaleDB user certificate directory"</literal></expr></argument>,
							   <argument><expr><literal type="string">"Determines a path which is used to search user certificates and "</literal>
							   <literal type="string">"private keys"</literal></expr></argument>,
							   <argument><expr><operator>&amp;</operator><name>ts_guc_ssl_dir</name></expr></argument>,
							   <argument><expr><name>NULL</name></expr></argument>,
							   <argument><expr><name>PGC_SIGHUP</name></expr></argument>,
							   <argument><expr><literal type="number">0</literal></expr></argument>,
							   <argument><expr><name>NULL</name></expr></argument>,
							   <argument><expr><name>NULL</name></expr></argument>,
							   <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomStringVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.passfile"</literal></expr></argument>,
							   <argument><expr><literal type="string">"TimescaleDB password file path"</literal></expr></argument>,
							   <argument><expr><literal type="string">"Specifies the name of the file used to store passwords used for "</literal>
							   <literal type="string">"data node connections"</literal></expr></argument>,
							   <argument><expr><operator>&amp;</operator><name>ts_guc_passfile</name></expr></argument>,
							   <argument><expr><name>NULL</name></expr></argument>,
							   <argument><expr><name>PGC_SIGHUP</name></expr></argument>,
							   <argument><expr><literal type="number">0</literal></expr></argument>,
							   <argument><expr><name>NULL</name></expr></argument>,
							   <argument><expr><name>NULL</name></expr></argument>,
							   <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomIntVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.max_open_chunks_per_insert"</literal></expr></argument>,
							<argument><expr><literal type="string">"Maximum open chunks per insert"</literal></expr></argument>,
							<argument><expr><literal type="string">"Maximum number of open chunk tables per insert"</literal></expr></argument>,
							<argument><expr><operator>&amp;</operator><name>ts_guc_max_open_chunks_per_insert</name></expr></argument>,
							<argument><expr><call><name>Min</name><argument_list>(<argument><expr><name>work_mem</name> <operator>*</operator> <call><name>INT64CONST</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call> <operator>/</operator> <call><name>INT64CONST</name><argument_list>(<argument><expr><literal type="number">25000</literal></expr></argument>)</argument_list></call></expr></argument>,
								<argument><expr><name>PG_INT16_MAX</name></expr></argument>)</argument_list></call></expr></argument>, <comment type="block">/* Measurements via
												* `MemoryContextStats(TopMemoryContext)`
												* show chunk insert
												* state memory context
												* takes up ~25K bytes
												* (work_mem is in
												* kbytes) */</comment>
							<argument><expr><literal type="number">0</literal></expr></argument>,
							<argument><expr><name>PG_INT16_MAX</name></expr></argument>,
							<argument><expr><name>PGC_USERSET</name></expr></argument>,
							<argument><expr><literal type="number">0</literal></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomIntVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.max_cached_chunks_per_hypertable"</literal></expr></argument>,
							<argument><expr><literal type="string">"Maximum cached chunks"</literal></expr></argument>,
							<argument><expr><literal type="string">"Maximum number of chunks stored in the cache"</literal></expr></argument>,
							<argument><expr><operator>&amp;</operator><name>ts_guc_max_cached_chunks_per_hypertable</name></expr></argument>,
							<argument><expr><literal type="number">100</literal></expr></argument>,
							<argument><expr><literal type="number">0</literal></expr></argument>,
							<argument><expr><literal type="number">65536</literal></expr></argument>,
							<argument><expr><name>PGC_USERSET</name></expr></argument>,
							<argument><expr><literal type="number">0</literal></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>assign_max_cached_chunks_per_hypertable_hook</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_TELEMETRY</name></cpp:ifdef>
	<expr_stmt><expr><call><name>DefineCustomEnumVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.telemetry_level"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Telemetry settings level"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Level used to determine which telemetry to send"</literal></expr></argument>,
							 <argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator> <operator>&amp;</operator><name>ts_guc_telemetry_level</name></expr></argument>,
							 <argument><expr><name>TELEMETRY_DEFAULT</name></expr></argument>,
							 <argument><expr><name>telemetry_level_options</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name>DefineCustomStringVariable</name><argument_list>(<comment type="block">/* name= */</comment> <argument><expr><literal type="string">"timescaledb.license"</literal></expr></argument>,
							   <comment type="block">/* short_desc= */</comment> <argument><expr><literal type="string">"TimescaleDB license type"</literal></expr></argument>,
							   <comment type="block">/* long_desc= */</comment> <argument><expr><literal type="string">"Determines which features are enabled"</literal></expr></argument>,
							   <comment type="block">/* valueAddr= */</comment> <argument><expr><operator>&amp;</operator><name>ts_guc_license</name></expr></argument>,
							   <comment type="block">/* bootValue= */</comment> <argument><expr><name>TS_LICENSE_DEFAULT</name></expr></argument>,
							   <comment type="block">/* context= */</comment> <argument><expr><name>PGC_SUSET</name></expr></argument>,
							   <comment type="block">/* flags= */</comment> <argument><expr><literal type="number">0</literal></expr></argument>,
							   <comment type="block">/* check_hook= */</comment> <argument><expr><name>ts_license_guc_check_hook</name></expr></argument>,
							   <comment type="block">/* assign_hook= */</comment> <argument><expr><name>ts_license_guc_assign_hook</name></expr></argument>,
							   <comment type="block">/* show_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomStringVariable</name><argument_list>(<comment type="block">/* name= */</comment> <argument><expr><literal type="string">"timescaledb.last_tuned"</literal></expr></argument>,
							   <comment type="block">/* short_desc= */</comment> <argument><expr><literal type="string">"last tune run"</literal></expr></argument>,
							   <comment type="block">/* long_desc= */</comment> <argument><expr><literal type="string">"records last time timescaledb-tune ran"</literal></expr></argument>,
							   <comment type="block">/* valueAddr= */</comment> <argument><expr><operator>&amp;</operator><name>ts_last_tune_time</name></expr></argument>,
							   <comment type="block">/* bootValue= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* context= */</comment> <argument><expr><name>PGC_SIGHUP</name></expr></argument>,
							   <comment type="block">/* flags= */</comment> <argument><expr><literal type="number">0</literal></expr></argument>,
							   <comment type="block">/* check_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* assign_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* show_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomStringVariable</name><argument_list>(<comment type="block">/* name= */</comment> <argument><expr><literal type="string">"timescaledb.last_tuned_version"</literal></expr></argument>,
							   <comment type="block">/* short_desc= */</comment> <argument><expr><literal type="string">"version of timescaledb-tune"</literal></expr></argument>,
							   <comment type="block">/* long_desc= */</comment> <argument><expr><literal type="string">"version of timescaledb-tune used to tune"</literal></expr></argument>,
							   <comment type="block">/* valueAddr= */</comment> <argument><expr><operator>&amp;</operator><name>ts_last_tune_version</name></expr></argument>,
							   <comment type="block">/* bootValue= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* context= */</comment> <argument><expr><name>PGC_SIGHUP</name></expr></argument>,
							   <comment type="block">/* flags= */</comment> <argument><expr><literal type="number">0</literal></expr></argument>,
							   <comment type="block">/* check_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* assign_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* show_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_TELEMETRY</name></cpp:ifdef>
	<expr_stmt><expr><call><name>DefineCustomStringVariable</name><argument_list>(<comment type="block">/* name= */</comment> <argument><expr><literal type="string">"timescaledb_telemetry.cloud"</literal></expr></argument>,
							   <comment type="block">/* short_desc= */</comment> <argument><expr><literal type="string">"cloud provider"</literal></expr></argument>,
							   <comment type="block">/* long_desc= */</comment> <argument><expr><literal type="string">"cloud provider used for this instance"</literal></expr></argument>,
							   <comment type="block">/* valueAddr= */</comment> <argument><expr><operator>&amp;</operator><name>ts_telemetry_cloud</name></expr></argument>,
							   <comment type="block">/* bootValue= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* context= */</comment> <argument><expr><name>PGC_SIGHUP</name></expr></argument>,
							   <comment type="block">/* flags= */</comment> <argument><expr><literal type="number">0</literal></expr></argument>,
							   <comment type="block">/* check_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* assign_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* show_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>TS_DEBUG</name></cpp:ifdef>
	<expr_stmt><expr><call><name>DefineCustomBoolVariable</name><argument_list>(<comment type="block">/* name= */</comment> <argument><expr><literal type="string">"timescaledb.shutdown_bgw_scheduler"</literal></expr></argument>,
							 <comment type="block">/* short_desc= */</comment> <argument><expr><literal type="string">"immediately shutdown the bgw scheduler"</literal></expr></argument>,
							 <comment type="block">/* long_desc= */</comment> <argument><expr><literal type="string">"this is for debugging purposes"</literal></expr></argument>,
							 <comment type="block">/* valueAddr= */</comment> <argument><expr><operator>&amp;</operator><name>ts_shutdown_bgw</name></expr></argument>,
							 <comment type="block">/* bootValue= */</comment> <argument><expr><name>false</name></expr></argument>,
							 <comment type="block">/* context= */</comment> <argument><expr><name>PGC_SIGHUP</name></expr></argument>,
							 <comment type="block">/* flags= */</comment> <argument><expr><literal type="number">0</literal></expr></argument>,
							 <comment type="block">/* check_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							 <comment type="block">/* assign_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							 <comment type="block">/* show_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomStringVariable</name><argument_list>(<comment type="block">/* name= */</comment> <argument><expr><literal type="string">"timescaledb.current_timestamp_mock"</literal></expr></argument>,
							   <comment type="block">/* short_desc= */</comment> <argument><expr><literal type="string">"set the current timestamp"</literal></expr></argument>,
							   <comment type="block">/* long_desc= */</comment> <argument><expr><literal type="string">"this is for debugging purposes"</literal></expr></argument>,
							   <comment type="block">/* valueAddr= */</comment> <argument><expr><operator>&amp;</operator><name>ts_current_timestamp_mock</name></expr></argument>,
							   <comment type="block">/* bootValue= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* context= */</comment> <argument><expr><name>PGC_USERSET</name></expr></argument>,
							   <comment type="block">/* flags= */</comment> <argument><expr><literal type="number">0</literal></expr></argument>,
							   <comment type="block">/* check_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* assign_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>,
							   <comment type="block">/* show_hook= */</comment> <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name>DefineCustomEnumVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.hypertable_distributed_default"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Set distributed hypertables default creation policy"</literal></expr></argument>,
							 <argument><expr><literal type="string">"Set default policy to create local or distributed hypertables "</literal>
							 <literal type="string">"(auto, local or distributed)"</literal></expr></argument>,
							 <argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator> <operator>&amp;</operator><name>ts_guc_hypertable_distributed_default</name></expr></argument>,
							 <argument><expr><name>HYPERTABLE_DIST_AUTO</name></expr></argument>,
							 <argument><expr><name>hypertable_distributed_types</name></expr></argument>,
							 <argument><expr><name>PGC_USERSET</name></expr></argument>,
							 <argument><expr><literal type="number">0</literal></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>,
							 <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>DefineCustomIntVariable</name><argument_list>(<argument><expr><literal type="string">"timescaledb.hypertable_replication_factor_default"</literal></expr></argument>,
							<argument><expr><literal type="string">"Default replication factor value to use with a hypertables"</literal></expr></argument>,
							<argument><expr><literal type="string">"Global default value for replication factor to use with hypertables "</literal>
							<literal type="string">"when the `replication_factor` argument is not provided"</literal></expr></argument>,
							<argument><expr><operator>&amp;</operator><name>ts_guc_hypertable_replication_factor_default</name></expr></argument>,
							<argument><expr><literal type="number">1</literal></expr></argument>,
							<argument><expr><literal type="number">1</literal></expr></argument>,
							<argument><expr><literal type="number">65536</literal></expr></argument>,
							<argument><expr><name>PGC_USERSET</name></expr></argument>,
							<argument><expr><literal type="number">0</literal></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>,
							<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>_guc_fini</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
</block_content>}</block></function>
</unit>
