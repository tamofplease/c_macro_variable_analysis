<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/src/bgw/launcher_interface.c"><comment type="block">/*
 * This file and its contents are licensed under the Apache License 2.0.
 * Please see the included NOTICE for copyright information and
 * LICENSE-APACHE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fmgr.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"extension.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"launcher_interface.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compat/compat.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIN_LOADER_API_VERSION</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<function><type><specifier>extern</specifier> <name>bool</name></type>
<name>ts_bgw_worker_reserve</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>PGFunction</name></type> <name>reserve</name> <init>= <expr><call><name>load_external_function</name><argument_list>(<argument><expr><name>EXTENSION_SO</name></expr></argument>, <argument><expr><literal type="string">"ts_bgw_worker_reserve"</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<return>return <expr><call><name>DatumGetBool</name><argument_list>(
		<argument><expr><call><name>DirectFunctionCall1</name><argument_list>(<argument><expr><name>reserve</name></expr></argument>, <argument><expr><call><name>BoolGetDatum</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return> <comment type="block">/* no function call zero */</comment>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>void</name></type>
<name>ts_bgw_worker_release</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>PGFunction</name></type> <name>release</name> <init>= <expr><call><name>load_external_function</name><argument_list>(<argument><expr><name>EXTENSION_SO</name></expr></argument>, <argument><expr><literal type="string">"ts_bgw_worker_release"</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>DirectFunctionCall1</name><argument_list>(<argument><expr><name>release</name></expr></argument>, <argument><expr><call><name>BoolGetDatum</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* no function call zero */</comment>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>int</name></type>
<name>ts_bgw_num_unreserved</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>PGFunction</name></type> <name>unreserved</name> <init>=
		<expr><call><name>load_external_function</name><argument_list>(<argument><expr><name>EXTENSION_SO</name></expr></argument>, <argument><expr><literal type="string">"ts_bgw_num_unreserved"</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<return>return <expr><call><name>DatumGetInt32</name><argument_list>(
		<argument><expr><call><name>DirectFunctionCall1</name><argument_list>(<argument><expr><name>unreserved</name></expr></argument>, <argument><expr><call><name>BoolGetDatum</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return> <comment type="block">/* no function call zero */</comment>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>int</name></type>
<name>ts_bgw_loader_api_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>versionptr</name> <init>= <expr><call><name>find_rendezvous_variable</name><argument_list>(<argument><expr><name>RENDEZVOUS_BGW_LOADER_API_VERSION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><operator>*</operator><name>versionptr</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
	<return>return <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>int32</name> <operator>*</operator><operator>)</operator> <operator>*</operator><name>versionptr</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>void</name></type>
<name>ts_bgw_check_loader_api_version</name><parameter_list>()</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>version</name> <init>= <expr><call><name>ts_bgw_loader_api_version</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>version</name> <operator>&lt;</operator> <name>MIN_LOADER_API_VERSION</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_FEATURE_NOT_SUPPORTED</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"loader version out-of-date"</literal></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errhint</name><argument_list>(<argument><expr><literal type="string">"Please restart the database to upgrade the loader version."</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>
</unit>
