<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/src/custom_type_cache.c"><comment type="block">/*
 * This file and its contents are licensed under the Apache License 2.0.
 * Please see the included NOTICE for copyright information and
 * LICENSE-APACHE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;catalog/pg_type.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/syscache.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;catalog/namespace.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"custom_type_cache.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_catalog/catalog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"extension_constants.h"</cpp:file></cpp:include>

<comment type="block">/* Information about functions that we put in the cache */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <name>CustomTypeInfo</name></type> <name><name>typeinfo</name><index>[<expr><name>_CUSTOM_TYPE_MAX_INDEX</name></expr>]</index></name> <init>= <expr><block>{
	<expr><index>[<expr><name>CUSTOM_TYPE_TS_INTERVAL</name></expr>]</index> <operator>=</operator> <block>{
		<expr><operator>.</operator><name>schema_name</name> <operator>=</operator> <name>INTERNAL_SCHEMA_NAME</name></expr>,
		<expr><operator>.</operator><name>type_name</name> <operator>=</operator> <literal type="string">"ts_interval"</literal></expr>,
		<expr><operator>.</operator><name>type_oid</name> <operator>=</operator> <name>InvalidOid</name></expr>,
	}</block></expr>,
	<expr><index>[<expr><name>CUSTOM_TYPE_COMPRESSED_DATA</name></expr>]</index> <operator>=</operator> <block>{
		<expr><operator>.</operator><name>schema_name</name> <operator>=</operator> <name>INTERNAL_SCHEMA_NAME</name></expr>,
		<expr><operator>.</operator><name>type_name</name> <operator>=</operator> <literal type="string">"compressed_data"</literal></expr>,
		<expr><operator>.</operator><name>type_oid</name> <operator>=</operator> <name>InvalidOid</name></expr>,
	}</block></expr>,
	<expr><index>[<expr><name>CUSTOM_TYPE_SEGMENT_META_MIN_MAX</name></expr>]</index> <operator>=</operator> <block>{
		<expr><operator>.</operator><name>schema_name</name> <operator>=</operator> <name>INTERNAL_SCHEMA_NAME</name></expr>,
		<expr><operator>.</operator><name>type_name</name> <operator>=</operator> <literal type="string">"segment_meta_min_max"</literal></expr>,
		<expr><operator>.</operator><name>type_oid</name> <operator>=</operator> <name>InvalidOid</name></expr>,
	}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>extern</specifier> <name>CustomTypeInfo</name> <modifier>*</modifier></type>
<name>ts_custom_type_cache_get</name><parameter_list>(<parameter><decl><type><name>CustomType</name></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>CustomTypeInfo</name> <modifier>*</modifier></type><name>tinfo</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>type</name> <operator>&gt;=</operator> <name>_CUSTOM_TYPE_MAX_INDEX</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"invalid timescaledb type %d"</literal></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>tinfo</name> <operator>=</operator> <operator>&amp;</operator><name><name>typeinfo</name><index>[<expr><name>type</name></expr>]</index></name></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>OidIsValid</name><argument_list>(<argument><expr><name><name>tinfo</name><operator>-&gt;</operator><name>type_oid</name></name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>Oid</name></type> <name>schema_oid</name> <init>= <expr><call><name>LookupExplicitNamespace</name><argument_list>(<argument><expr><name><name>tinfo</name><operator>-&gt;</operator><name>schema_name</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>Oid</name></type> <name>type_oid</name> <init>= <expr><call><name>GetSysCacheOid2</name><argument_list>(<argument><expr><name>TYPENAMENSP</name></expr></argument>,
									   <argument><expr><name>Anum_pg_type_oid</name></expr></argument>,
									   <argument><expr><call><name>CStringGetDatum</name><argument_list>(<argument><expr><name><name>tinfo</name><operator>-&gt;</operator><name>type_name</name></name></expr></argument>)</argument_list></call></expr></argument>,
									   <argument><expr><call><name>ObjectIdGetDatum</name><argument_list>(<argument><expr><name>schema_oid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>OidIsValid</name><argument_list>(<argument><expr><name>type_oid</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"unknown timescaledb type %s"</literal></expr></argument>, <argument><expr><name><name>tinfo</name><operator>-&gt;</operator><name>type_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt><expr><name><name>tinfo</name><operator>-&gt;</operator><name>type_oid</name></name> <operator>=</operator> <name>type_oid</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<return>return <expr><name>tinfo</name></expr>;</return>
</block_content>}</block></function>
</unit>
