<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/test/src/test_time_utils.c"><comment type="block">/*
 * This file and its contents are licensed under the Apache License 2.0.
 * Please see the included NOTICE for copyright information and
 * LICENSE-APACHE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;catalog/pg_type.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/date.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fmgr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;funcapi.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;time_utils.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test_utils.h"</cpp:file></cpp:include>

<comment type="block">/*
 * Functions to show TimescaleDB-specific limits of timestamps and dates:
 */</comment>

<comment type="block">/*
 * TIMESTAMP WITH TIME ZONE
 */</comment>
<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamptz_pg_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamptz_pg_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_TIMESTAMPTZ</name><argument_list>(<argument><expr><name>MIN_TIMESTAMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamptz_pg_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamptz_pg_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_TIMESTAMPTZ</name><argument_list>(<argument><expr><name>END_TIMESTAMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamptz_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamptz_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_TIMESTAMPTZ</name><argument_list>(<argument><expr><name>TS_TIMESTAMP_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamptz_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamptz_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_TIMESTAMPTZ</name><argument_list>(<argument><expr><name>TS_TIMESTAMP_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamptz_internal_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamptz_internal_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_INT64</name><argument_list>(<argument><expr><name>TS_TIMESTAMP_INTERNAL_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamptz_internal_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamptz_internal_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_INT64</name><argument_list>(<argument><expr><name>TS_TIMESTAMP_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * TIMESTAMP
 */</comment>
<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamp_pg_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamp_pg_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_TIMESTAMP</name><argument_list>(<argument><expr><name>MIN_TIMESTAMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamp_pg_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamp_pg_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_TIMESTAMP</name><argument_list>(<argument><expr><name>END_TIMESTAMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamp_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamp_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_TIMESTAMP</name><argument_list>(<argument><expr><name>TS_TIMESTAMP_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamp_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamp_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_TIMESTAMP</name><argument_list>(<argument><expr><name>TS_TIMESTAMP_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamp_internal_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamp_internal_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_INT64</name><argument_list>(<argument><expr><name>TS_TIMESTAMP_INTERNAL_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_timestamp_internal_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_timestamp_internal_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_INT64</name><argument_list>(<argument><expr><name>TS_TIMESTAMP_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * DATE
 */</comment>
<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_date_pg_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_date_pg_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_DATEADT</name><argument_list>(<argument><expr><name>DATETIME_MIN_JULIAN</name> <operator>-</operator> <name>POSTGRES_EPOCH_JDATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_date_pg_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_date_pg_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_DATEADT</name><argument_list>(<argument><expr><name>DATE_END_JULIAN</name> <operator>-</operator> <name>POSTGRES_EPOCH_JDATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_date_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_date_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_DATEADT</name><argument_list>(<argument><expr><name>TS_DATE_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_date_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_date_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_DATEADT</name><argument_list>(<argument><expr><name>TS_DATE_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_date_internal_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_date_internal_min</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_INT64</name><argument_list>(<argument><expr><name>TS_DATE_INTERNAL_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_date_internal_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_date_internal_end</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PG_RETURN_INT64</name><argument_list>(<argument><expr><name>TS_DATE_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_test_time_utils</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>Datum</name></type>
<name>ts_test_time_utils</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT64_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end_or_max</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt64</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin_or_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT64_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt64</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT64_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt64</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_max</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_end</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_noend</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT32_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT32_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end_or_max</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT32_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt32</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin_or_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT32_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt32</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT32_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt32</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_max</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT32_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_end</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_noend</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT16_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end_or_max</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt16</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin_or_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT16_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt16</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT16_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetInt16</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_max</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>PG_INT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_end</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_noend</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_INTERNAL_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_INTERNAL_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end_or_max</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIME_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIME_NOEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestamp</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin_or_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><name>DT_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestamp</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestamp</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestamp</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_end</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestamp</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DT_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestamp</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_noend</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DT_NOEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_INTERNAL_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_INTERNAL_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end_or_max</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIME_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIME_NOEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestampTz</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin_or_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><name>DT_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestampTz</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestampTz</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestampTz</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_end</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIMESTAMP_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestampTz</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DT_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetTimestampTz</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_noend</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DT_NOEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_DATE_INTERNAL_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_DATE_INTERNAL_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_DATE_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_end_or_max</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_DATE_INTERNAL_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIME_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_TIME_NOEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetDateADT</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin_or_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DATEVAL_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetDateADT</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_DATE_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetDateADT</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_max</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_DATE_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetDateADT</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_end</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TS_DATE_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetDateADT</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DATEVAL_NOBEGIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>DatumGetDateADT</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_noend</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DATEVAL_NOEND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Test boundary routines with unsupported time type */</comment>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin_or_min</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_max</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_end</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_nobegin</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestEnsureError</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_noend</name><argument_list>(<argument><expr><name>NUMERICOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Test conversion of min, end, nobegin, and noend between native and
	 * internal (Unix) time */</comment>

	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_value_to_internal</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_value_to_internal</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_value_to_internal</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_value_to_internal</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_value_to_internal</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_value_to_internal</name><argument_list>(<argument><expr><call><name>ts_time_datum_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Test saturating addition */</comment>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_end</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_add</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Test saturating subtraction */</comment>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_nobegin</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>,
											 <argument><expr><literal type="number">1</literal></expr></argument>,
											 <argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_min</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT2OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT4OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>INT8OID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>DATEOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>TIMESTAMPOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertInt64Eq</name><argument_list>(<argument><expr><call><name>ts_time_saturating_sub</name><argument_list>(<argument><expr><call><name>ts_time_get_max</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>,
					  <argument><expr><call><name>ts_time_get_noend</name><argument_list>(<argument><expr><name>TIMESTAMPTZOID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
