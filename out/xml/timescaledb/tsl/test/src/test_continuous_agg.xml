<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/tsl/test/src/test_continuous_agg.c"><comment type="block">/*
 * This file and its contents are licensed under the Timescale License.
 * Please see the included NOTICE for copyright information and
 * LICENSE-TIMESCALE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_catalog/continuous_agg.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;test_utils.h&gt;</cpp:file></cpp:include>

<macro><name>TS_TEST_FN</name><argument_list>(<argument>ts_test_continuous_agg_find_by_view_name</argument>)</argument_list></macro>
<block>{<block_content>
	<decl_stmt><decl><type><name>Oid</name></type> <name>cagg_relid</name> <init>= <expr><call><name>PG_GETARG_OID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ContinuousAgg</name> <modifier>*</modifier></type><name>cagg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ContinuousAgg</name> <modifier>*</modifier></type><name>cagg2</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>cagg</name> <operator>=</operator> <call><name>ts_continuous_agg_find_by_relid</name><argument_list>(<argument><expr><name>cagg_relid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name>cagg</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Get a cagg by direct view  */</comment>
	<expr_stmt><expr><name>cagg2</name> <operator>=</operator> <call><name>ts_continuous_agg_find_by_view_name</name><argument_list>(<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>direct_view_schema</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>direct_view_name</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><name>ContinuousAggDirectView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>cagg2</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name> <operator>==</operator> <name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>cagg2</name> <operator>=</operator> <call><name>ts_continuous_agg_find_by_view_name</name><argument_list>(<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>direct_view_schema</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>direct_view_name</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><name>ContinuousAggAnyView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>cagg2</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name> <operator>==</operator> <name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Get a cagg by user view */</comment>
	<expr_stmt><expr><name>cagg2</name> <operator>=</operator> <call><name>ts_continuous_agg_find_by_view_name</name><argument_list>(<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>user_view_schema</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>user_view_name</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><name>ContinuousAggUserView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>cagg2</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name> <operator>==</operator> <name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>cagg2</name> <operator>=</operator> <call><name>ts_continuous_agg_find_by_view_name</name><argument_list>(<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>user_view_schema</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>user_view_name</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><name>ContinuousAggAnyView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>cagg2</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name> <operator>==</operator> <name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* Get a cagg by partial view */</comment>
	<expr_stmt><expr><name>cagg2</name> <operator>=</operator> <call><name>ts_continuous_agg_find_by_view_name</name><argument_list>(<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>partial_view_schema</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>partial_view_name</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><name>ContinuousAggPartialView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>cagg2</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name> <operator>==</operator> <name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>cagg2</name> <operator>=</operator> <call><name>ts_continuous_agg_find_by_view_name</name><argument_list>(<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>partial_view_schema</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><call><name>NameStr</name><argument_list>(<argument><expr><name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>partial_view_name</name></name></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><name>ContinuousAggAnyView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>cagg2</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name> <operator>==</operator> <name><name>cagg</name><operator>-&gt;</operator><name>data</name><operator>.</operator><name>mat_hypertable_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>
</unit>
