<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/tsl/test/src/remote/txn_id.c"><comment type="block">/*
 * This file and its contents are licensed under the Timescale License.
 * Please see the included NOTICE for copyright information and
 * LICENSE-TIMESCALE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/fmgrprotos.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/connection.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/txn_id.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"export.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test_utils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"connection.h"</cpp:file></cpp:include>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_test_remote_txn_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>test_basic_in_out</name><parameter_list>()</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>TSConnectionId</name></type> <name>cid</name> <init>= <expr><call><name>remote_connection_id</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><call><name>remote_txn_id_create</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>cid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>id</name><operator>-&gt;</operator><name>id</name><operator>.</operator><name>server_id</name></name> <operator>==</operator> <literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>id</name><operator>-&gt;</operator><name>id</name><operator>.</operator><name>user_id</name></name> <operator>==</operator> <literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>id</name><operator>-&gt;</operator><name>xid</name></name> <operator>==</operator> <literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>id</name> <operator>=</operator> <call><name>remote_txn_id_in</name><argument_list>(<argument><expr><call><name>remote_txn_id_out</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>id</name><operator>-&gt;</operator><name>id</name><operator>.</operator><name>server_id</name></name> <operator>==</operator> <literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>id</name><operator>-&gt;</operator><name>id</name><operator>.</operator><name>user_id</name></name> <operator>==</operator> <literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><name><name>id</name><operator>-&gt;</operator><name>xid</name></name> <operator>==</operator> <literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><call><name>strcmp</name><argument_list>(<argument><expr><call><name>remote_txn_id_prepare_transaction_sql</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>,
						  <argument><expr><literal type="string">"PREPARE TRANSACTION \'ts-1-10-20-30\'"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(
		<argument><expr><call><name>strcmp</name><argument_list>(<argument><expr><call><name>remote_txn_id_commit_prepared_sql</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"COMMIT PREPARED \'ts-1-10-20-30\'"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>TestAssertTrue</name><argument_list>(<argument><expr><call><name>strcmp</name><argument_list>(<argument><expr><call><name>remote_txn_id_rollback_prepared_sql</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>,
						  <argument><expr><literal type="string">"ROLLBACK PREPARED \'ts-1-10-20-30\'"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>ts_test_remote_txn_id</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>test_basic_in_out</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
