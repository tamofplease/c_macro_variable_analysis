<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/tsl/src/compression/segment_meta.c">
<comment type="block">/*
 * This file and its contents are licensed under the Timescale License.
 * Please see the included NOTICE for copyright information and
 * LICENSE-TIMESCALE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/sortsupport.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/typcache.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/builtins.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/datum.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libpq/pqformat.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"segment_meta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"datum_serialize.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>SegmentMetaMinMaxBuilder</name>
<block>{
	<decl_stmt><decl><type><name>Oid</name></type> <name>type_oid</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>empty</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>has_null</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name>SortSupportData</name></type> <name>ssup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>type_by_val</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int16</name></type> <name>type_len</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Datum</name></type> <name>min</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Datum</name></type> <name>max</name></decl>;</decl_stmt>
}</block></struct></type> <name>SegmentMetaMinMaxBuilder</name>;</typedef>

<function><type><name>SegmentMetaMinMaxBuilder</name> <modifier>*</modifier></type>
<name>segment_meta_min_max_builder_create</name><parameter_list>(<parameter><decl><type><name>Oid</name></type> <name>type_oid</name></decl></parameter>, <parameter><decl><type><name>Oid</name></type> <name>collation</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>SegmentMetaMinMaxBuilder</name> <modifier>*</modifier></type><name>builder</name> <init>= <expr><call><name>palloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>builder</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>TypeCacheEntry</name> <modifier>*</modifier></type><name>type</name> <init>= <expr><call><name>lookup_type_cache</name><argument_list>(<argument><expr><name>type_oid</name></expr></argument>, <argument><expr><name>TYPECACHE_LT_OPR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>OidIsValid</name><argument_list>(<argument><expr><name><name>type</name><operator>-&gt;</operator><name>lt_opr</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_UNDEFINED_FUNCTION</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"could not identify an less-than operator for type %s"</literal></expr></argument>,
						<argument><expr><call><name>format_type_be</name><argument_list>(<argument><expr><name>type_oid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><operator>*</operator><name>builder</name> <operator>=</operator> <operator>(</operator><name>SegmentMetaMinMaxBuilder</name><operator>)</operator><block>{
		<expr><operator>.</operator><name>type_oid</name> <operator>=</operator> <name>type_oid</name></expr>,
		<expr><operator>.</operator><name>empty</name> <operator>=</operator> <name>true</name></expr>,
		<expr><operator>.</operator><name>has_null</name> <operator>=</operator> <name>false</name></expr>,
		<expr><operator>.</operator><name>type_by_val</name> <operator>=</operator> <name><name>type</name><operator>-&gt;</operator><name>typbyval</name></name></expr>,
		<expr><operator>.</operator><name>type_len</name> <operator>=</operator> <name><name>type</name><operator>-&gt;</operator><name>typlen</name></name></expr>,
	}</block></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>ssup</name><operator>.</operator><name>ssup_cxt</name></name> <operator>=</operator> <name>CurrentMemoryContext</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>ssup</name><operator>.</operator><name>ssup_collation</name></name> <operator>=</operator> <name>collation</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>ssup</name><operator>.</operator><name>ssup_nulls_first</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PrepareSortSupportFromOrderingOp</name><argument_list>(<argument><expr><name><name>type</name><operator>-&gt;</operator><name>lt_opr</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>builder</name><operator>-&gt;</operator><name>ssup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><name>builder</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>segment_meta_min_max_builder_update_val</name><parameter_list>(<parameter><decl><type><name>SegmentMetaMinMaxBuilder</name> <modifier>*</modifier></type><name>builder</name></decl></parameter>, <parameter><decl><type><name>Datum</name></type> <name>val</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>cmp</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>builder</name><operator>-&gt;</operator><name>empty</name></name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name> <operator>=</operator> <call><name>datumCopy</name><argument_list>(<argument><expr><name>val</name></expr></argument>, <argument><expr><name><name>builder</name><operator>-&gt;</operator><name>type_by_val</name></name></expr></argument>, <argument><expr><name><name>builder</name><operator>-&gt;</operator><name>type_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name> <operator>=</operator> <call><name>datumCopy</name><argument_list>(<argument><expr><name>val</name></expr></argument>, <argument><expr><name><name>builder</name><operator>-&gt;</operator><name>type_by_val</name></name></expr></argument>, <argument><expr><name><name>builder</name><operator>-&gt;</operator><name>type_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>empty</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>cmp</name> <operator>=</operator> <call><name>ApplySortComparator</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>builder</name><operator>-&gt;</operator><name>ssup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>cmp</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>builder</name><operator>-&gt;</operator><name>type_by_val</name></name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><call><name>DatumGetPointer</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name> <operator>=</operator> <call><name>datumCopy</name><argument_list>(<argument><expr><name>val</name></expr></argument>, <argument><expr><name><name>builder</name><operator>-&gt;</operator><name>type_by_val</name></name></expr></argument>, <argument><expr><name><name>builder</name><operator>-&gt;</operator><name>type_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>cmp</name> <operator>=</operator> <call><name>ApplySortComparator</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>builder</name><operator>-&gt;</operator><name>ssup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>cmp</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>builder</name><operator>-&gt;</operator><name>type_by_val</name></name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><call><name>DatumGetPointer</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name> <operator>=</operator> <call><name>datumCopy</name><argument_list>(<argument><expr><name>val</name></expr></argument>, <argument><expr><name><name>builder</name><operator>-&gt;</operator><name>type_by_val</name></name></expr></argument>, <argument><expr><name><name>builder</name><operator>-&gt;</operator><name>type_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>segment_meta_min_max_builder_update_null</name><parameter_list>(<parameter><decl><type><name>SegmentMetaMinMaxBuilder</name> <modifier>*</modifier></type><name>builder</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>has_null</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>segment_meta_min_max_builder_reset</name><parameter_list>(<parameter><decl><type><name>SegmentMetaMinMaxBuilder</name> <modifier>*</modifier></type><name>builder</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>builder</name><operator>-&gt;</operator><name>empty</name></name></expr>)</condition>
	<block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>builder</name><operator>-&gt;</operator><name>type_by_val</name></name></expr>)</condition>
		<block>{<block_content>
			<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><call><name>DatumGetPointer</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><call><name>DatumGetPointer</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>empty</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>has_null</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>segment_meta_min_max_builder_min</name><parameter_list>(<parameter><decl><type><name>SegmentMetaMinMaxBuilder</name> <modifier>*</modifier></type><name>builder</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name><name>builder</name><operator>-&gt;</operator><name>empty</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"trying to get min from an empty builder"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>builder</name><operator>-&gt;</operator><name>type_len</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>Datum</name></type> <name>unpacked</name> <init>= <expr><call><name>PointerGetDatum</name><argument_list>(<argument><expr><call><name>PG_DETOAST_DATUM_PACKED</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name> <operator>!=</operator> <name>unpacked</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><call><name>DatumGetPointer</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name> <operator>=</operator> <name>unpacked</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name><name>builder</name><operator>-&gt;</operator><name>min</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>segment_meta_min_max_builder_max</name><parameter_list>(<parameter><decl><type><name>SegmentMetaMinMaxBuilder</name> <modifier>*</modifier></type><name>builder</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name><name>builder</name><operator>-&gt;</operator><name>empty</name></name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"trying to get max from an empty builder"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	<if_stmt><if>if <condition>(<expr><name><name>builder</name><operator>-&gt;</operator><name>type_len</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
	<block>{<block_content>
		<decl_stmt><decl><type><name>Datum</name></type> <name>unpacked</name> <init>= <expr><call><name>PointerGetDatum</name><argument_list>(<argument><expr><call><name>PG_DETOAST_DATUM_PACKED</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name> <operator>!=</operator> <name>unpacked</name></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>pfree</name><argument_list>(<argument><expr><call><name>DatumGetPointer</name><argument_list>(<argument><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt><expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name> <operator>=</operator> <name>unpacked</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
	<return>return <expr><name><name>builder</name><operator>-&gt;</operator><name>max</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>segment_meta_min_max_builder_empty</name><parameter_list>(<parameter><decl><type><name>SegmentMetaMinMaxBuilder</name> <modifier>*</modifier></type><name>builder</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><name><name>builder</name><operator>-&gt;</operator><name>empty</name></name></expr>;</return>
</block_content>}</block></function>
</unit>
