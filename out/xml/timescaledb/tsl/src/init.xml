<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/tsl/src/init.c"><comment type="block">/*
 * This file and its contents are licensed under the Timescale License.
 * Please see the included NOTICE for copyright information and
 * LICENSE-TIMESCALE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fmgr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;storage/ipc.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bgw_policy/compression_api.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bgw_policy/continuous_aggregate_api.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bgw_policy/retention_api.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bgw_policy/job.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bgw_policy/job_api.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bgw_policy/reorder_api.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bgw_policy/policies_v2.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"chunk.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"chunk_api.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compression/api.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compression/array.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compression/compression.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compression/create.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compression/deltadelta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compression/dictionary.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compression/gorilla.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"compression/segment_meta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"continuous_aggs/create.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"continuous_aggs/insert.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"continuous_aggs/options.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"continuous_aggs/refresh.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"continuous_aggs/invalidation.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cross_module_fn.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/data_node_dispatch.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"data_node.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dist_util.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"export.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fdw/fdw.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hypertable.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"license_guc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/decompress_chunk/planner.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/skip_scan/skip_scan.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/gapfill/gapfill_functions.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"partialize_finalize.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"planner.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"process_utility.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"process_utility.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/connection_cache.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/connection.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/dist_commands.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/dist_copy.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/dist_txn.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/healthcheck.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/txn_id.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"remote/txn_resolve.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"reorder.h"</cpp:file></cpp:include>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_TELEMETRY</name></cpp:ifdef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"telemetry.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dist_backup.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>PG_MODULE_MAGIC</name></cpp:ifdef>
<expr_stmt><expr><name>PG_MODULE_MAGIC</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>APACHE_ONLY</name></cpp:ifdef>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"cannot compile the TSL for ApacheOnly mode"</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><specifier>extern</specifier> <name>void</name> <name>PGDLLEXPORT</name></type> <name>_PG_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>cache_syscache_invalidate</name><parameter_list>(<parameter><decl><type><name>Datum</name></type> <name>arg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cacheid</name></decl></parameter>, <parameter><decl><type><name>uint32</name></type> <name>hashvalue</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>remote_connection_cache_invalidate_callback</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>cacheid</name></expr></argument>, <argument><expr><name>hashvalue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Cross module function initialization.
 *
 * During module start we set ts_cm_functions to point at the tsl version of the
 * function registry.
 *
 * NOTE: To ensure that your cross-module function has a correct default, you
 * must also add it to ts_cm_functions_default in cross_module_fn.c in the
 * Apache codebase.
 */</comment>
<decl_stmt><decl><type><name>CrossModuleFunctions</name></type> <name>tsl_cm_functions</name> <init>= <expr><block>{
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>USE_TELEMETRY</name></cpp:ifdef>
	<expr><operator>.</operator><name>add_tsl_telemetry_info</name> <operator>=</operator> <name>tsl_telemetry_add_info</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

	<expr><operator>.</operator><name>create_upper_paths_hook</name> <operator>=</operator> <name>tsl_create_upper_paths_hook</name></expr>,
	<expr><operator>.</operator><name>set_rel_pathlist_dml</name> <operator>=</operator> <name>tsl_set_rel_pathlist_dml</name></expr>,
	<expr><operator>.</operator><name>set_rel_pathlist_query</name> <operator>=</operator> <name>tsl_set_rel_pathlist_query</name></expr>,

	<comment type="block">/* bgw policies */</comment>
	<expr><operator>.</operator><name>policy_compression_add</name> <operator>=</operator> <name>policy_compression_add</name></expr>,
	<expr><operator>.</operator><name>policy_compression_remove</name> <operator>=</operator> <name>policy_compression_remove</name></expr>,
	<expr><operator>.</operator><name>policy_recompression_proc</name> <operator>=</operator> <name>policy_recompression_proc</name></expr>,
	<expr><operator>.</operator><name>policy_compression_check</name> <operator>=</operator> <name>policy_compression_check</name></expr>,
	<expr><operator>.</operator><name>policy_refresh_cagg_add</name> <operator>=</operator> <name>policy_refresh_cagg_add</name></expr>,
	<expr><operator>.</operator><name>policy_refresh_cagg_proc</name> <operator>=</operator> <name>policy_refresh_cagg_proc</name></expr>,
	<expr><operator>.</operator><name>policy_refresh_cagg_check</name> <operator>=</operator> <name>policy_refresh_cagg_check</name></expr>,
	<expr><operator>.</operator><name>policy_refresh_cagg_remove</name> <operator>=</operator> <name>policy_refresh_cagg_remove</name></expr>,
	<expr><operator>.</operator><name>policy_reorder_add</name> <operator>=</operator> <name>policy_reorder_add</name></expr>,
	<expr><operator>.</operator><name>policy_reorder_proc</name> <operator>=</operator> <name>policy_reorder_proc</name></expr>,
	<expr><operator>.</operator><name>policy_reorder_check</name> <operator>=</operator> <name>policy_reorder_check</name></expr>,
	<expr><operator>.</operator><name>policy_reorder_remove</name> <operator>=</operator> <name>policy_reorder_remove</name></expr>,
	<expr><operator>.</operator><name>policy_retention_add</name> <operator>=</operator> <name>policy_retention_add</name></expr>,
	<expr><operator>.</operator><name>policy_retention_proc</name> <operator>=</operator> <name>policy_retention_proc</name></expr>,
	<expr><operator>.</operator><name>policy_retention_check</name> <operator>=</operator> <name>policy_retention_check</name></expr>,
	<expr><operator>.</operator><name>policy_retention_remove</name> <operator>=</operator> <name>policy_retention_remove</name></expr>,

	<expr><operator>.</operator><name>job_add</name> <operator>=</operator> <name>job_add</name></expr>,
	<expr><operator>.</operator><name>job_alter</name> <operator>=</operator> <name>job_alter</name></expr>,
	<expr><operator>.</operator><name>job_alter_set_hypertable_id</name> <operator>=</operator> <name>job_alter_set_hypertable_id</name></expr>,
	<expr><operator>.</operator><name>job_delete</name> <operator>=</operator> <name>job_delete</name></expr>,
	<expr><operator>.</operator><name>job_run</name> <operator>=</operator> <name>job_run</name></expr>,
	<expr><operator>.</operator><name>job_execute</name> <operator>=</operator> <name>job_execute</name></expr>,

	<comment type="block">/* gapfill */</comment>
	<expr><operator>.</operator><name>gapfill_marker</name> <operator>=</operator> <name>gapfill_marker</name></expr>,
	<expr><operator>.</operator><name>gapfill_int16_time_bucket</name> <operator>=</operator> <name>gapfill_int16_time_bucket</name></expr>,
	<expr><operator>.</operator><name>gapfill_int32_time_bucket</name> <operator>=</operator> <name>gapfill_int32_time_bucket</name></expr>,
	<expr><operator>.</operator><name>gapfill_int64_time_bucket</name> <operator>=</operator> <name>gapfill_int64_time_bucket</name></expr>,
	<expr><operator>.</operator><name>gapfill_date_time_bucket</name> <operator>=</operator> <name>gapfill_date_time_bucket</name></expr>,
	<expr><operator>.</operator><name>gapfill_timestamp_time_bucket</name> <operator>=</operator> <name>gapfill_timestamp_time_bucket</name></expr>,
	<expr><operator>.</operator><name>gapfill_timestamptz_time_bucket</name> <operator>=</operator> <name>gapfill_timestamptz_time_bucket</name></expr>,
	<expr><operator>.</operator><name>gapfill_timestamptz_timezone_time_bucket</name> <operator>=</operator> <name>gapfill_timestamptz_timezone_time_bucket</name></expr>,

	<expr><operator>.</operator><name>reorder_chunk</name> <operator>=</operator> <name>tsl_reorder_chunk</name></expr>,
	<expr><operator>.</operator><name>move_chunk</name> <operator>=</operator> <name>tsl_move_chunk</name></expr>,
	<expr><operator>.</operator><name>move_chunk_proc</name> <operator>=</operator> <name>tsl_move_chunk_proc</name></expr>,
	<expr><operator>.</operator><name>copy_chunk_proc</name> <operator>=</operator> <name>tsl_copy_chunk_proc</name></expr>,
	<expr><operator>.</operator><name>copy_chunk_cleanup_proc</name> <operator>=</operator> <name>tsl_copy_chunk_cleanup_proc</name></expr>,
	<expr><operator>.</operator><name>subscription_exec</name> <operator>=</operator> <name>tsl_subscription_exec</name></expr>,

	<expr><operator>.</operator><name>policies_add</name> <operator>=</operator> <name>policies_add</name></expr>,
	<expr><operator>.</operator><name>policies_remove</name> <operator>=</operator> <name>policies_remove</name></expr>,
	<expr><operator>.</operator><name>policies_remove_all</name> <operator>=</operator> <name>policies_remove_all</name></expr>,
	<expr><operator>.</operator><name>policies_alter</name> <operator>=</operator> <name>policies_alter</name></expr>,
	<expr><operator>.</operator><name>policies_show</name> <operator>=</operator> <name>policies_show</name></expr>,

	<comment type="block">/* Continuous Aggregates */</comment>
	<expr><operator>.</operator><name>partialize_agg</name> <operator>=</operator> <name>tsl_partialize_agg</name></expr>,
	<expr><operator>.</operator><name>finalize_agg_sfunc</name> <operator>=</operator> <name>tsl_finalize_agg_sfunc</name></expr>,
	<expr><operator>.</operator><name>finalize_agg_ffunc</name> <operator>=</operator> <name>tsl_finalize_agg_ffunc</name></expr>,
	<expr><operator>.</operator><name>process_cagg_viewstmt</name> <operator>=</operator> <name>tsl_process_continuous_agg_viewstmt</name></expr>,
	<expr><operator>.</operator><name>continuous_agg_invalidation_trigger</name> <operator>=</operator> <name>continuous_agg_trigfn</name></expr>,
	<expr><operator>.</operator><name>continuous_agg_call_invalidation_trigger</name> <operator>=</operator> <name>execute_cagg_trigger</name></expr>,
	<expr><operator>.</operator><name>continuous_agg_refresh</name> <operator>=</operator> <name>continuous_agg_refresh</name></expr>,
	<expr><operator>.</operator><name>continuous_agg_invalidate_raw_ht</name> <operator>=</operator> <name>continuous_agg_invalidate_raw_ht</name></expr>,
	<expr><operator>.</operator><name>continuous_agg_invalidate_mat_ht</name> <operator>=</operator> <name>continuous_agg_invalidate_mat_ht</name></expr>,
	<expr><operator>.</operator><name>continuous_agg_update_options</name> <operator>=</operator> <name>continuous_agg_update_options</name></expr>,
	<expr><operator>.</operator><name>invalidation_cagg_log_add_entry</name> <operator>=</operator> <name>tsl_invalidation_cagg_log_add_entry</name></expr>,
	<expr><operator>.</operator><name>invalidation_hyper_log_add_entry</name> <operator>=</operator> <name>tsl_invalidation_hyper_log_add_entry</name></expr>,
	<expr><operator>.</operator><name>remote_invalidation_log_delete</name> <operator>=</operator> <name>remote_invalidation_log_delete</name></expr>,
	<expr><operator>.</operator><name>drop_dist_ht_invalidation_trigger</name> <operator>=</operator> <name>tsl_drop_dist_ht_invalidation_trigger</name></expr>,
	<expr><operator>.</operator><name>remote_drop_dist_ht_invalidation_trigger</name> <operator>=</operator> <name>remote_drop_dist_ht_invalidation_trigger</name></expr>,
	<expr><operator>.</operator><name>invalidation_process_hypertable_log</name> <operator>=</operator> <name>tsl_invalidation_process_hypertable_log</name></expr>,
	<expr><operator>.</operator><name>invalidation_process_cagg_log</name> <operator>=</operator> <name>tsl_invalidation_process_cagg_log</name></expr>,
	<expr><operator>.</operator><name>cagg_try_repair</name> <operator>=</operator> <name>tsl_cagg_try_repair</name></expr>,

	<expr><operator>.</operator><name>compressed_data_decompress_forward</name> <operator>=</operator> <name>tsl_compressed_data_decompress_forward</name></expr>,
	<expr><operator>.</operator><name>compressed_data_decompress_reverse</name> <operator>=</operator> <name>tsl_compressed_data_decompress_reverse</name></expr>,
	<expr><operator>.</operator><name>compressed_data_send</name> <operator>=</operator> <name>tsl_compressed_data_send</name></expr>,
	<expr><operator>.</operator><name>compressed_data_recv</name> <operator>=</operator> <name>tsl_compressed_data_recv</name></expr>,
	<expr><operator>.</operator><name>compressed_data_in</name> <operator>=</operator> <name>tsl_compressed_data_in</name></expr>,
	<expr><operator>.</operator><name>compressed_data_out</name> <operator>=</operator> <name>tsl_compressed_data_out</name></expr>,
	<expr><operator>.</operator><name>deltadelta_compressor_append</name> <operator>=</operator> <name>tsl_deltadelta_compressor_append</name></expr>,
	<expr><operator>.</operator><name>deltadelta_compressor_finish</name> <operator>=</operator> <name>tsl_deltadelta_compressor_finish</name></expr>,
	<expr><operator>.</operator><name>gorilla_compressor_append</name> <operator>=</operator> <name>tsl_gorilla_compressor_append</name></expr>,
	<expr><operator>.</operator><name>gorilla_compressor_finish</name> <operator>=</operator> <name>tsl_gorilla_compressor_finish</name></expr>,
	<expr><operator>.</operator><name>dictionary_compressor_append</name> <operator>=</operator> <name>tsl_dictionary_compressor_append</name></expr>,
	<expr><operator>.</operator><name>dictionary_compressor_finish</name> <operator>=</operator> <name>tsl_dictionary_compressor_finish</name></expr>,
	<expr><operator>.</operator><name>array_compressor_append</name> <operator>=</operator> <name>tsl_array_compressor_append</name></expr>,
	<expr><operator>.</operator><name>array_compressor_finish</name> <operator>=</operator> <name>tsl_array_compressor_finish</name></expr>,
	<expr><operator>.</operator><name>process_compress_table</name> <operator>=</operator> <name>tsl_process_compress_table</name></expr>,
	<expr><operator>.</operator><name>process_altertable_cmd</name> <operator>=</operator> <name>tsl_process_altertable_cmd</name></expr>,
	<expr><operator>.</operator><name>process_rename_cmd</name> <operator>=</operator> <name>tsl_process_rename_cmd</name></expr>,
	<expr><operator>.</operator><name>compress_chunk</name> <operator>=</operator> <name>tsl_compress_chunk</name></expr>,
	<expr><operator>.</operator><name>decompress_chunk</name> <operator>=</operator> <name>tsl_decompress_chunk</name></expr>,
	<expr><operator>.</operator><name>compress_row_init</name> <operator>=</operator> <name>compress_row_init</name></expr>,
	<expr><operator>.</operator><name>compress_row_exec</name> <operator>=</operator> <name>compress_row_exec</name></expr>,
	<expr><operator>.</operator><name>compress_row_end</name> <operator>=</operator> <name>compress_row_end</name></expr>,
	<expr><operator>.</operator><name>compress_row_destroy</name> <operator>=</operator> <name>compress_row_destroy</name></expr>,
	<expr><operator>.</operator><name>data_node_add</name> <operator>=</operator> <name>data_node_add</name></expr>,
	<expr><operator>.</operator><name>data_node_delete</name> <operator>=</operator> <name>data_node_delete</name></expr>,
	<expr><operator>.</operator><name>data_node_attach</name> <operator>=</operator> <name>data_node_attach</name></expr>,
	<expr><operator>.</operator><name>data_node_ping</name> <operator>=</operator> <name>data_node_ping</name></expr>,
	<expr><operator>.</operator><name>data_node_detach</name> <operator>=</operator> <name>data_node_detach</name></expr>,
	<expr><operator>.</operator><name>data_node_alter</name> <operator>=</operator> <name>data_node_alter</name></expr>,
	<expr><operator>.</operator><name>data_node_allow_new_chunks</name> <operator>=</operator> <name>data_node_allow_new_chunks</name></expr>,
	<expr><operator>.</operator><name>data_node_block_new_chunks</name> <operator>=</operator> <name>data_node_block_new_chunks</name></expr>,
	<expr><operator>.</operator><name>chunk_set_default_data_node</name> <operator>=</operator> <name>chunk_set_default_data_node</name></expr>,
	<expr><operator>.</operator><name>show_chunk</name> <operator>=</operator> <name>chunk_show</name></expr>,
	<expr><operator>.</operator><name>create_compressed_chunk</name> <operator>=</operator> <name>tsl_create_compressed_chunk</name></expr>,
	<expr><operator>.</operator><name>create_chunk</name> <operator>=</operator> <name>chunk_create</name></expr>,
	<expr><operator>.</operator><name>create_chunk_on_data_nodes</name> <operator>=</operator> <name>chunk_api_create_on_data_nodes</name></expr>,
	<expr><operator>.</operator><name>chunk_drop_replica</name> <operator>=</operator> <name>chunk_drop_replica</name></expr>,
	<expr><operator>.</operator><name>chunk_freeze_chunk</name> <operator>=</operator> <name>chunk_freeze_chunk</name></expr>,
	<expr><operator>.</operator><name>chunk_unfreeze_chunk</name> <operator>=</operator> <name>chunk_unfreeze_chunk</name></expr>,
	<expr><operator>.</operator><name>chunks_drop_stale</name> <operator>=</operator> <name>chunk_drop_stale_chunks</name></expr>,
	<expr><operator>.</operator><name>hypertable_make_distributed</name> <operator>=</operator> <name>hypertable_make_distributed</name></expr>,
	<expr><operator>.</operator><name>get_and_validate_data_node_list</name> <operator>=</operator> <name>hypertable_get_and_validate_data_nodes</name></expr>,
	<expr><operator>.</operator><name>timescaledb_fdw_handler</name> <operator>=</operator> <name>timescaledb_fdw_handler</name></expr>,
	<expr><operator>.</operator><name>timescaledb_fdw_validator</name> <operator>=</operator> <name>timescaledb_fdw_validator</name></expr>,
	<expr><operator>.</operator><name>remote_txn_id_in</name> <operator>=</operator> <name>remote_txn_id_in_pg</name></expr>,
	<expr><operator>.</operator><name>remote_txn_id_out</name> <operator>=</operator> <name>remote_txn_id_out_pg</name></expr>,
	<expr><operator>.</operator><name>remote_txn_heal_data_node</name> <operator>=</operator> <name>remote_txn_heal_data_node</name></expr>,
	<expr><operator>.</operator><name>remote_connection_cache_show</name> <operator>=</operator> <name>remote_connection_cache_show</name></expr>,
	<expr><operator>.</operator><name>set_rel_pathlist</name> <operator>=</operator> <name>tsl_set_rel_pathlist</name></expr>,
	<expr><operator>.</operator><name>distributed_insert_path_create</name> <operator>=</operator> <name>tsl_create_distributed_insert_path</name></expr>,
	<expr><operator>.</operator><name>distributed_copy</name> <operator>=</operator> <name>remote_distributed_copy</name></expr>,
	<expr><operator>.</operator><name>ddl_command_start</name> <operator>=</operator> <name>tsl_ddl_command_start</name></expr>,
	<expr><operator>.</operator><name>ddl_command_end</name> <operator>=</operator> <name>tsl_ddl_command_end</name></expr>,
	<expr><operator>.</operator><name>sql_drop</name> <operator>=</operator> <name>tsl_sql_drop</name></expr>,
	<expr><operator>.</operator><name>set_distributed_id</name> <operator>=</operator> <name>dist_util_set_id</name></expr>,
	<expr><operator>.</operator><name>set_distributed_peer_id</name> <operator>=</operator> <name>dist_util_set_peer_id</name></expr>,
	<expr><operator>.</operator><name>is_access_node_session</name> <operator>=</operator> <name>dist_util_is_access_node_session_on_data_node</name></expr>,
	<expr><operator>.</operator><name>remove_from_distributed_db</name> <operator>=</operator> <name>dist_util_remove_from_db</name></expr>,
	<expr><operator>.</operator><name>dist_remote_hypertable_info</name> <operator>=</operator> <name>dist_util_remote_hypertable_info</name></expr>,
	<expr><operator>.</operator><name>dist_remote_chunk_info</name> <operator>=</operator> <name>dist_util_remote_chunk_info</name></expr>,
	<expr><operator>.</operator><name>dist_remote_compressed_chunk_info</name> <operator>=</operator> <name>dist_util_remote_compressed_chunk_info</name></expr>,
	<expr><operator>.</operator><name>dist_remote_hypertable_index_info</name> <operator>=</operator> <name>dist_util_remote_hypertable_index_info</name></expr>,
	<expr><operator>.</operator><name>dist_update_stale_chunk_metadata</name> <operator>=</operator> <name>chunk_update_stale_metadata</name></expr>,
	<expr><operator>.</operator><name>validate_as_data_node</name> <operator>=</operator> <name>validate_data_node_settings</name></expr>,
	<expr><operator>.</operator><name>distributed_exec</name> <operator>=</operator> <name>ts_dist_cmd_exec</name></expr>,
	<expr><operator>.</operator><name>create_distributed_restore_point</name> <operator>=</operator> <name>create_distributed_restore_point</name></expr>,
	<expr><operator>.</operator><name>func_call_on_data_nodes</name> <operator>=</operator> <name>ts_dist_cmd_func_call_on_data_nodes</name></expr>,
	<expr><operator>.</operator><name>chunk_get_relstats</name> <operator>=</operator> <name>chunk_api_get_chunk_relstats</name></expr>,
	<expr><operator>.</operator><name>chunk_get_colstats</name> <operator>=</operator> <name>chunk_api_get_chunk_colstats</name></expr>,
	<expr><operator>.</operator><name>chunk_create_empty_table</name> <operator>=</operator> <name>chunk_create_empty_table</name></expr>,
	<expr><operator>.</operator><name>chunk_create_replica_table</name> <operator>=</operator> <name>chunk_create_replica_table</name></expr>,
	<expr><operator>.</operator><name>hypertable_distributed_set_replication_factor</name> <operator>=</operator> <name>hypertable_set_replication_factor</name></expr>,
	<expr><operator>.</operator><name>cache_syscache_invalidate</name> <operator>=</operator> <name>cache_syscache_invalidate</name></expr>,
	<expr><operator>.</operator><name>update_compressed_chunk_relstats</name> <operator>=</operator> <name>update_compressed_chunk_relstats</name></expr>,
	<expr><operator>.</operator><name>health_check</name> <operator>=</operator> <name>ts_dist_health_check</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>ts_module_cleanup_on_pg_exit</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>Datum</name></type> <name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>_tsl_process_utility_fini</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_remote_dist_txn_fini</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_remote_connection_cache_fini</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_continuous_aggs_cache_inval_fini</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><call><name>TS_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>ts_module_init</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="block">/*
 * Module init function, sets ts_cm_functions to point at tsl_cm_functions
 */</comment>
<function><type><name>PGDLLEXPORT</name> <name>Datum</name></type>
<name>ts_module_init</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><name>ts_cm_functions</name> <operator>=</operator> <operator>&amp;</operator><name>tsl_cm_functions</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>_continuous_aggs_cache_inval_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_decompress_chunk_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_skip_scan_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_remote_connection_cache_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_remote_dist_txn_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_tsl_process_utility_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<comment type="block">/* Register a cleanup function to be called when the backend exits */</comment>
	<expr_stmt><expr><call><name>on_proc_exit</name><argument_list>(<argument><expr><name>ts_module_cleanup_on_pg_exit</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PG_RETURN_BOOL</name><argument_list>(<argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* Informative functions */</comment>

<function><type><name>PGDLLEXPORT</name> <name>void</name></type>
<name>_PG_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/*
	 * In a normal backend, we disable loading the tsl until after the main
	 * timescale library is loaded, after which we enable it from the loader.
	 * In parallel workers the restore shared libraries function will load the
	 * libraries itself, and we bypass the loader, so we need to ensure that
	 * timescale is aware it can use the tsl if needed. It is always safe to
	 * do this here, because if we reach this point, we must have already
	 * loaded the tsl, so we no longer need to worry about its load order
	 * relative to the other libraries.
	 */</comment>
	<expr_stmt><expr><call><name>ts_license_enable_module_loading</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>_remote_connection_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
