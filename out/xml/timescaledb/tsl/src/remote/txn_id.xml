<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/timescaledb/tsl/src/remote/txn_id.c"><comment type="block">/*
 * This file and its contents are licensed under the Timescale License.
 * Please see the included NOTICE for copyright information and
 * LICENSE-TIMESCALE for a copy of the license.
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;postgres.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/builtins.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/fmgrprotos.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/snapmgr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utils/fmgroids.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;access/xact.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;access/transam.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;miscadmin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"connection.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"txn_id.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GID_SEP</name></cpp:macro> <cpp:value>"-"</cpp:value></cpp:define>

<comment type="block">/* The separator is part of the GID prefix */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GID_PREFIX</name></cpp:macro> <cpp:value>"ts-"</cpp:value></cpp:define>
<comment type="block">/* This is the maximum size of the literal accepted by PREPARE TRANSACTION, etc. */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GID_MAX_SIZE</name></cpp:macro> <cpp:value>200</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REMOTE_TXN_ID_VERSION</name></cpp:macro> <cpp:value>((uint8) 1)</cpp:value></cpp:define>

<comment type="block">/* current_pattern: ts-version-xid-server_id-user_id */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FMT_PATTERN</name></cpp:macro> <cpp:value>GID_PREFIX "%hhu" GID_SEP "%u" GID_SEP "%u" GID_SEP "%u"</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type>
<name>remote_txn_id_get_sql</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>command</name></decl></parameter>, <parameter><decl><type><name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>StringInfoData</name></type> <name>sql</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>initStringInfo</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>appendStringInfoString</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sql</name></expr></argument>, <argument><expr><name>command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>appendStringInfoSpaces</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sql</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>appendStringInfoString</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sql</name></expr></argument>, <argument><expr><call><name>quote_literal_cstr</name><argument_list>(<argument><expr><call><name>remote_txn_id_out</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name><name>sql</name><operator>.</operator><name>data</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>remote_txn_id_prepare_transaction_sql</name><parameter_list>(<parameter><decl><type><name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>remote_txn_id_get_sql</name><argument_list>(<argument><expr><literal type="string">"PREPARE TRANSACTION"</literal></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>remote_txn_id_commit_prepared_sql</name><parameter_list>(<parameter><decl><type><name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>remote_txn_id_get_sql</name><argument_list>(<argument><expr><literal type="string">"COMMIT PREPARED"</literal></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>remote_txn_id_rollback_prepared_sql</name><parameter_list>(<parameter><decl><type><name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>remote_txn_id_get_sql</name><argument_list>(<argument><expr><literal type="string">"ROLLBACK PREPARED"</literal></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>remote_txn_id_matches_prepared_txn</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id_string</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>GID_PREFIX</name></expr></argument>, <argument><expr><name>id_string</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>GID_PREFIX</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
		<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>
	<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>RemoteTxnId</name> <modifier>*</modifier></type>
<name>remote_txn_id_in</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id_string</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><call><name>palloc0</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>RemoteTxnId</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type> <name>dummy</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>sscanf</name><argument_list>(<argument><expr><name>id_string</name></expr></argument>,
			   <argument><expr><name>FMT_PATTERN</name> <literal type="string">"%c"</literal></expr></argument>,
			   <argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>version</name></name></expr></argument>,
			   <argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>xid</name></name></expr></argument>,
			   <argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>id</name><operator>.</operator><name>server_id</name></name></expr></argument>,
			   <argument><expr><operator>&amp;</operator><name><name>id</name><operator>-&gt;</operator><name>id</name><operator>.</operator><name>user_id</name></name></expr></argument>,
			   <argument><expr><operator>&amp;</operator><name>dummy</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INVALID_TEXT_REPRESENTATION</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"invalid input syntax for remote transaction ID: '%s'"</literal></expr></argument>, <argument><expr><name>id_string</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><name><name>id</name><operator>-&gt;</operator><name>version</name></name> <operator>!=</operator> <name>REMOTE_TXN_ID_VERSION</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"invalid version for remote transaction ID: %hhu"</literal></expr></argument>, <argument><expr><name><name>id</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return>return <expr><name>id</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>remote_txn_id_in_pg</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id_string</name> <init>= <expr><call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_POINTER</name><argument_list>(<argument><expr><call><name>remote_txn_id_in</name><argument_list>(<argument><expr><name>id_string</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>remote_txn_id_out</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><call><name>palloc0</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>char</name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <name>GID_MAX_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>written</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>written</name> <operator>=</operator> <call><name>snprintf</name><argument_list>(<argument><expr><name>out</name></expr></argument>,
					   <argument><expr><name>GID_MAX_SIZE</name></expr></argument>,
					   <argument><expr><name>FMT_PATTERN</name></expr></argument>,
					   <argument><expr><name>REMOTE_TXN_ID_VERSION</name></expr></argument>,
					   <argument><expr><name><name>id</name><operator>-&gt;</operator><name>xid</name></name></expr></argument>,
					   <argument><expr><name><name>id</name><operator>-&gt;</operator><name>id</name><operator>.</operator><name>server_id</name></name></expr></argument>,
					   <argument><expr><name><name>id</name><operator>-&gt;</operator><name>id</name><operator>.</operator><name>user_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>written</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>written</name> <operator>&gt;=</operator> <name>GID_MAX_SIZE</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>, <argument><expr><literal type="string">"unexpected length when generating a 2pc transaction name: %d"</literal></expr></argument>, <argument><expr><name>written</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return>return <expr><name>out</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>remote_txn_id_out_pg</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><operator>(</operator><name>RemoteTxnId</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_POINTER</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_POINTER</name><argument_list>(<argument><expr><call><name>remote_txn_id_out</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>RemoteTxnId</name> <modifier>*</modifier></type>
<name>remote_txn_id_create</name><parameter_list>(<parameter><decl><type><name>TransactionId</name></type> <name>xid</name></decl></parameter>, <parameter><decl><type><name>TSConnectionId</name></type> <name>cid</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>RemoteTxnId</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><call><name>palloc0</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>RemoteTxnId</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>id</name><operator>-&gt;</operator><name>xid</name></name> <operator>=</operator> <name>xid</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>id</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>cid</name></expr>;</expr_stmt>

	<return>return <expr><name>id</name></expr>;</return>
</block_content>}</block></function>
</unit>
