<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/gpdb/src/backend/utils/misc/gpexpand.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * gpexpand.c
 *	  Helper functions for gpexpand.
 *
 *
 * Copyright (c) 2018-Present VMware, Inc. or its affiliates.
 *
 * src/backend/utils/misc/gpexpand.c
 *
 *-------------------------------------------------------------------------
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/gp_configuration_history.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_auth_time_constraint.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_description.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_namespace.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_shdescription.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_stat_last_operation.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_stat_last_shoperation.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"catalog/pg_statistic.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cdb/cdbutil.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cdb/cdbvars.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postmaster/fts.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/lock.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/builtins.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/rel.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/relcache.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/gpexpand.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>volatile</specifier> <name>int</name> <modifier>*</modifier></type><name>gp_expand_version</name></decl>;</decl_stmt>

<comment type="block">/*
 * Catalog lock.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <name>LOCKTAG</name></type> <name>gp_expand_locktag</name> <init>=
<expr><block>{
	<comment type="block">/* FIXME: how to fill the locktag? */</comment>
	<expr><operator>.</operator><name>locktag_field1</name> <operator>=</operator> <literal type="number">0xdead</literal></expr>,
	<expr><operator>.</operator><name>locktag_field2</name> <operator>=</operator> <literal type="number">0xdead</literal></expr>,
	<expr><operator>.</operator><name>locktag_field3</name> <operator>=</operator> <literal type="number">0xdead</literal></expr>,
	<expr><operator>.</operator><name>locktag_field4</name> <operator>=</operator> <literal type="number">0xdd</literal></expr>,
	<expr><operator>.</operator><name>locktag_type</name> <operator>=</operator> <name>LOCKTAG_USERLOCK</name></expr>,
	<expr><operator>.</operator><name>locktag_lockmethodid</name> <operator>=</operator> <name>USER_LOCKMETHOD</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type>
<name>GpExpandVersionShmemSize</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>gp_expand_version</name></expr></argument>)</argument_list></sizeof></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>GpExpandVersionShmemInit</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name>IsUnderPostmaster</name></expr>)</condition><block type="pseudo"><block_content>
		<return>return;</return></block_content></block></if></if_stmt>

	<comment type="block">/* only postmaster initialize it */</comment>
	<expr_stmt><expr><name>gp_expand_version</name> <operator>=</operator> <operator>(</operator><specifier>volatile</specifier> <name>int</name><operator>*</operator><operator>)</operator><call><name>ShmemAlloc</name><argument_list>(<argument><expr><call><name>GpExpandVersionShmemSize</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
	<expr_stmt><expr><operator>*</operator><name>gp_expand_version</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type>
<name>GetGpExpandVersion</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><operator>*</operator><name>gp_expand_version</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Used by gpexpand to bump the gpexpand version once gpexpand started up
 * new segments and updated the gp_segment_configuration.
 *
 * a gpexpand version change also prevent concurrent changes to catalog
 * during gpexpand (see gp_expand_lock_catalog)
 *
 */</comment>
<function><type><name>Datum</name></type>
<name>gp_expand_bump_version</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><operator>*</operator><name>gp_expand_version</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Lock the catalog lock in exclusive mode.
 *
 * This should only be called by gpexpand.
 */</comment>
<function><type><name>Datum</name></type>
<name>gp_expand_lock_catalog</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>LockAcquire</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gp_expand_locktag</name></expr></argument>, <argument><expr><name>AccessExclusiveLock</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Prevent catalog being changed during gpexpand.
 *
 * This should be called before any catalog changes.
 *
 * Will raise an error if gpexpand already in progress or complete.
 */</comment>
<function><type><name>void</name></type>
<name>gp_expand_protect_catalog_changes</name><parameter_list>(<parameter><decl><type><name>Relation</name></type> <name>relation</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>LockAcquireResult</name></type>	<name>acquired</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>					<name>oldVersion</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>					<name>newVersion</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>Gp_role</name> <operator>!=</operator> <name>GP_ROLE_DISPATCH</name></expr>)</condition><block type="pseudo"><block_content>
		<comment type="block">/* only lock catalog updates on qd */</comment>
		<return>return;</return></block_content></block></if></if_stmt>

	<if_stmt><if>if <condition>(<expr><call><name>RelationGetNamespace</name><argument_list>(<argument><expr><name>relation</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>PG_CATALOG_NAMESPACE</name></expr>)</condition><block type="pseudo"><block_content>
		<comment type="block">/* not catalog relations */</comment>
		<return>return;</return></block_content></block></if></if_stmt>

	<switch>switch <condition>(<expr><call><name>RelationGetRelid</name><argument_list>(<argument><expr><name>relation</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>GpSegmentConfigRelationId</name></expr>:</case>
		<case>case <expr><name>GpConfigHistoryRelationId</name></expr>:</case>
		<case>case <expr><name>DescriptionRelationId</name></expr>:</case>
		<case>case <expr><name>SharedDescriptionRelationId</name></expr>:</case>
		<case>case <expr><name>StatLastOpRelationId</name></expr>:</case>
		<case>case <expr><name>StatLastShOpRelationId</name></expr>:</case>
		<case>case <expr><name>StatisticRelationId</name></expr>:</case>
		<case>case <expr><name>AuthTimeConstraintRelationId</name></expr>:</case>
			<comment type="block">/* these catalog tables are only meaningful on qd */</comment>
			<return>return;</return>
	</block_content>}</block></switch>

	<comment type="block">/*
	 * The online expand util will hold this lock in AccessExclusiveLock mode.
	 * Acquire expand lock in dontWait mode. If the lock is not available,
	 * report error. Because online expand must be running, after that, the
	 * cluster size has been changed, and the catalog data has been copied
	 * to new segments, but this transaction gangs are still running on old
	 * segments. Any catalog changes won't be copied to new segment.
	 */</comment>
	<comment type="block">/* FIXME: do not re-acquire the lock */</comment>
	<expr_stmt><expr><name>acquired</name> <operator>=</operator> <call><name>LockAcquire</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gp_expand_locktag</name></expr></argument>, <argument><expr><name>AccessShareLock</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>acquired</name> <operator>==</operator> <name>LOCKACQUIRE_NOT_AVAIL</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>ERROR</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INSUFFICIENT_PRIVILEGE</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"gpexpand in progress, catalog changes are disallowed."</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt><expr><name>oldVersion</name> <operator>=</operator> <call><name>cdbcomponent_getCdbComponents</name><argument_list>()</argument_list></call><operator>-&gt;</operator><name>expand_version</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>newVersion</name> <operator>=</operator> <call><name>GetGpExpandVersion</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>oldVersion</name> <operator>!=</operator> <name>newVersion</name></expr>)</condition><block type="pseudo"><block_content>
		<expr_stmt><expr><call><name>ereport</name><argument_list>(<argument><expr><name>FATAL</name></expr></argument>,
				<argument><expr><operator>(</operator><call><name>errcode</name><argument_list>(<argument><expr><name>ERRCODE_INSUFFICIENT_PRIVILEGE</name></expr></argument>)</argument_list></call><operator>,</operator>
				 <call><name>errmsg</name><argument_list>(<argument><expr><literal type="string">"cluster is expanded from version %d to %d, "</literal>
						<literal type="string">"catalog changes are disallowed"</literal></expr></argument>,
						<argument><expr><name>oldVersion</name></expr></argument>, <argument><expr><name>newVersion</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>
</unit>
