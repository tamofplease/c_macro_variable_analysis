<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/gpdb/src/backend/snowball/libstemmer/stem_UTF_8_nepali.c"><comment type="block">/* This file was generated automatically by the Snowball to ISO C compiler */</comment>
<comment type="block">/* http://snowballstem.org/ */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"header.h"</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>nepali_UTF_8_stem</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>r_remove_category_3</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>r_remove_category_2</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>r_check_category_2</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>r_remove_category_1</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<function_decl><type><specifier>extern</specifier> <name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>nepali_UTF_8_create_env</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>nepali_UTF_8_close_env</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_0</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_1</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB2</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_2</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB2</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_3</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB2</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_4</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_5</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_6</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_7</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_8</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x97</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_9</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x97</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_10</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAB</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA4</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_11</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA4</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_12</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_13</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_14</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_15</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0_16</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAA</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>among</name></name></type> <name><name>a_0</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>=
<expr><block>{
<comment type="block">/*  0 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_0</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  1 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_0_1</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  2 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_2</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  3 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_0_3</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  4 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_4</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  5 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_0_5</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  6 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_6</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  7 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_7</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  8 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_0_8</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  9 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_0_9</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 10 */</comment> <expr><block>{ <expr><literal type="number">18</literal></expr>, <expr><name>s_0_10</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 11 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_11</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 12 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_12</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 13 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_13</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 14 */</comment> <expr><block>{ <expr><literal type="number">18</literal></expr>, <expr><name>s_0_14</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 15 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_0_15</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 16 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_0_16</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_1_0</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x81</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_1_1</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x82</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_1_2</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>among</name></name></type> <name><name>a_1</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>=
<expr><block>{
<comment type="block">/*  0 */</comment> <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><name>s_1_0</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  1 */</comment> <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><name>s_1_1</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  2 */</comment> <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><name>s_1_2</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_2_0</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x81</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_2_1</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x82</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_2_2</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>among</name></name></type> <name><name>a_2</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>=
<expr><block>{
<comment type="block">/*  0 */</comment> <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><name>s_2_0</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  1 */</comment> <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><name>s_2_1</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  2 */</comment> <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><name>s_2_2</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_0</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_1</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_2</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_3</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_4</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_5</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_6</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_7</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x81</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_8</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x81</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_9</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x81</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_10</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x81</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_11</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x81</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_12</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x81</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_13</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x82</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_14</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_15</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_16</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_17</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_18</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_19</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_20</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_21</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_22</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_23</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_24</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_25</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_26</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_27</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_28</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_29</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_30</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_31</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_32</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_33</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_34</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAD</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_35</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_36</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_37</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_38</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_39</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_40</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_41</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_42</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_43</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_44</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_45</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_46</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_47</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_48</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_49</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_50</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_51</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_52</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_53</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_54</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB2</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_55</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_56</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_57</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAA</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_58</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_59</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_60</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_61</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_62</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_63</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_64</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_65</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_66</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_67</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_68</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_69</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_70</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_71</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_72</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_73</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_74</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_75</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_76</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_77</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_78</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_79</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_80</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_81</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_82</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_83</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_84</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_85</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_86</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_87</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_88</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_89</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3_90</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBF</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>among</name></name></type> <name><name>a_3</name><index>[<expr><literal type="number">91</literal></expr>]</index></name> <init>=
<expr><block>{
<comment type="block">/*  0 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_0</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  1 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_1</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  2 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_2</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  3 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_3</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  4 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_4</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  5 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_5</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  6 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_6</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  7 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_7</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  8 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_8</name></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/*  9 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_9</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 10 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_10</name></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 11 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_11</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 12 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_12</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 13 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_13</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 14 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_14</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 15 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_15</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 16 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_16</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 17 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_17</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 18 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_18</name></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 19 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_19</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 20 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_20</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 21 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_21</name></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 22 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_22</name></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 23 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_23</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 24 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_24</name></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 25 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_25</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 26 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_26</name></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 27 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_27</name></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 28 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_28</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 29 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_29</name></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 30 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_30</name></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 31 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_31</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 32 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_32</name></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 33 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_33</name></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 34 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_34</name></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 35 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_35</name></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 36 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_36</name></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 37 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_37</name></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 38 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_38</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 39 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_39</name></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 40 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_40</name></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 41 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_41</name></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 42 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_42</name></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 43 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_43</name></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 44 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_44</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 45 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_45</name></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 46 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_46</name></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 47 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_47</name></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 48 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_48</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 49 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_49</name></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 50 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_50</name></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 51 */</comment> <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><name>s_3_51</name></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 52 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_52</name></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 53 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_53</name></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 54 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_54</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 55 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_55</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 56 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_56</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 57 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_57</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 58 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_58</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 59 */</comment> <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><name>s_3_59</name></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 60 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_60</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 61 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_61</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 62 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_62</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 63 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_63</name></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 64 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_64</name></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 65 */</comment> <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><name>s_3_65</name></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 66 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_66</name></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 67 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_67</name></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 68 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_68</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 69 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_69</name></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 70 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_70</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 71 */</comment> <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><name>s_3_71</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 72 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_72</name></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 73 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_73</name></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 74 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_74</name></expr>, <expr><literal type="number">73</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 75 */</comment> <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><name>s_3_75</name></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 76 */</comment> <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><name>s_3_76</name></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 77 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_77</name></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 78 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_78</name></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 79 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_79</name></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 80 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_80</name></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 81 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_81</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 82 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_82</name></expr>, <expr><literal type="number">81</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 83 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_83</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 84 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_84</name></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 85 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_85</name></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 86 */</comment> <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><name>s_3_86</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 87 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_87</name></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 88 */</comment> <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><name>s_3_88</name></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 89 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_89</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<comment type="block">/* 90 */</comment> <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><name>s_3_90</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_0</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x8F</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_1</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_2</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_3</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_4</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8C</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_5</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>symbol</name></type> <name><name>s_6</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xB0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>r_remove_category_1</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content> <comment type="block">/* backwardmode */</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>among_var</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>ket</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <comment type="block">/* [, line 54 */</comment>
    <expr_stmt><expr><name>among_var</name> <operator>=</operator> <call><name>find_among_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><name>a_0</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block">/* substring, line 54 */</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>among_var</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>bra</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <comment type="block">/* ], line 54 */</comment>
    <switch>switch <condition>(<expr><name>among_var</name></expr>)</condition> <block>{<block_content> <comment type="block">/* among, line 54 */</comment>
        <case>case <expr><literal type="number">1</literal></expr>:</case>
            <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>slice_del</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* delete, line 58 */</comment>
                <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
            </block_content>}</block>
            <break>break;</break>
        <case>case <expr><literal type="number">2</literal></expr>:</case>
            <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>m1</name> <init>= <expr><name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>m1</name></expr>;</expr_stmt> <comment type="block">/* or, line 59 */</comment>
                <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>m2</name> <init>= <expr><name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>m2</name></expr>;</expr_stmt> <comment type="block">/* or, line 59 */</comment>
                    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>eq_s_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>s_0</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab3</name>;</goto></block_content></block></if></if_stmt> <comment type="block">/* literal, line 59 */</comment>
                    <goto>goto <name>lab2</name>;</goto>
                <label><name>lab3</name>:</label>
                    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m2</name></expr>;</expr_stmt>
                    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>eq_s_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>s_1</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab1</name>;</goto></block_content></block></if></if_stmt> <comment type="block">/* literal, line 59 */</comment>
                </block_content>}</block>
            <label><name>lab2</name>:</label>
                <goto>goto <name>lab0</name>;</goto>
            <label><name>lab1</name>:</label>
                <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m1</name></expr>;</expr_stmt>
                <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>slice_del</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* delete, line 59 */</comment>
                    <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
                </block_content>}</block>
            </block_content>}</block>
        <label><name>lab0</name>:</label>
            <break>break;</break>
    </block_content>}</block></switch>
    <return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>r_check_category_2</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content> <comment type="block">/* backwardmode */</comment>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>ket</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <comment type="block">/* [, line 64 */</comment>
    <if_stmt><if>if <condition>(<expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>-</operator> <literal type="number">2</literal> <operator>&lt;=</operator> <name><name>z</name><operator>-&gt;</operator><name>lb</name></name> <operator>||</operator> <name><name>z</name><operator>-&gt;</operator><name>p</name><index>[<expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">5</literal> <operator>!=</operator> <literal type="number">4</literal> <operator>||</operator> <operator>!</operator><operator>(</operator><operator>(</operator><literal type="number">262</literal> <operator>&gt;&gt;</operator> <operator>(</operator><name><name>z</name><operator>-&gt;</operator><name>p</name><index>[<expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x1f</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block">/* substring, line 64 */</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>find_among_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><name>a_1</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>bra</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <comment type="block">/* ], line 64 */</comment>
    <return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>r_remove_category_2</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content> <comment type="block">/* backwardmode */</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>among_var</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>ket</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <comment type="block">/* [, line 70 */</comment>
    <if_stmt><if>if <condition>(<expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>-</operator> <literal type="number">2</literal> <operator>&lt;=</operator> <name><name>z</name><operator>-&gt;</operator><name>lb</name></name> <operator>||</operator> <name><name>z</name><operator>-&gt;</operator><name>p</name><index>[<expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">5</literal> <operator>!=</operator> <literal type="number">4</literal> <operator>||</operator> <operator>!</operator><operator>(</operator><operator>(</operator><literal type="number">262</literal> <operator>&gt;&gt;</operator> <operator>(</operator><name><name>z</name><operator>-&gt;</operator><name>p</name><index>[<expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x1f</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block">/* substring, line 70 */</comment>
    <expr_stmt><expr><name>among_var</name> <operator>=</operator> <call><name>find_among_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><name>a_2</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>among_var</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>bra</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <comment type="block">/* ], line 70 */</comment>
    <switch>switch <condition>(<expr><name>among_var</name></expr>)</condition> <block>{<block_content> <comment type="block">/* among, line 70 */</comment>
        <case>case <expr><literal type="number">1</literal></expr>:</case>
            <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>m1</name> <init>= <expr><name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>m1</name></expr>;</expr_stmt> <comment type="block">/* or, line 71 */</comment>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>eq_s_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>s_2</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab1</name>;</goto></block_content></block></if></if_stmt> <comment type="block">/* literal, line 71 */</comment>
                <goto>goto <name>lab0</name>;</goto>
            <label><name>lab1</name>:</label>
                <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m1</name></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>eq_s_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>s_3</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab2</name>;</goto></block_content></block></if></if_stmt> <comment type="block">/* literal, line 71 */</comment>
                <goto>goto <name>lab0</name>;</goto>
            <label><name>lab2</name>:</label>
                <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m1</name></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>eq_s_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>s_4</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab3</name>;</goto></block_content></block></if></if_stmt> <comment type="block">/* literal, line 71 */</comment>
                <goto>goto <name>lab0</name>;</goto>
            <label><name>lab3</name>:</label>
                <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m1</name></expr>;</expr_stmt>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>eq_s_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>s_5</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block">/* literal, line 71 */</comment>
            </block_content>}</block>
        <label><name>lab0</name>:</label>
            <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>slice_del</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* delete, line 71 */</comment>
                <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
            </block_content>}</block>
            <break>break;</break>
        <case>case <expr><literal type="number">2</literal></expr>:</case>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>eq_s_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>s_6</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block">/* literal, line 72 */</comment>
            <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>slice_del</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* delete, line 72 */</comment>
                <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
            </block_content>}</block>
            <break>break;</break>
    </block_content>}</block></switch>
    <return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>r_remove_category_3</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content> <comment type="block">/* backwardmode */</comment>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>ket</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <comment type="block">/* [, line 77 */</comment>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>find_among_b</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><name>a_3</name></expr></argument>, <argument><expr><literal type="number">91</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block">/* substring, line 77 */</comment>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>bra</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <comment type="block">/* ], line 77 */</comment>
    <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>slice_del</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* delete, line 79 */</comment>
        <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block>
    <return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>int</name></type> <name>nepali_UTF_8_stem</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content> <comment type="block">/* forwardmode */</comment>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>lb</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name></expr>;</expr_stmt> <comment type="block">/* backwards, line 86 */</comment>

    <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>m1</name> <init>= <expr><name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>m1</name></expr>;</expr_stmt> <comment type="block">/* do, line 87 */</comment>
        <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>r_remove_category_1</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* call remove_category_1, line 87 */</comment>
            <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab0</name>;</goto></block_content></block></if></if_stmt>
            <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block>
    <label><name>lab0</name>:</label>
        <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m1</name></expr>;</expr_stmt>
    </block_content>}</block>
    <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>m2</name> <init>= <expr><name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>m2</name></expr>;</expr_stmt> <comment type="block">/* do, line 88 */</comment>
        <while>while<condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content> <comment type="block">/* repeat, line 89 */</comment>
            <decl_stmt><decl><type><name>int</name></type> <name>m3</name> <init>= <expr><name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>m3</name></expr>;</expr_stmt>
            <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>m4</name> <init>= <expr><name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>m4</name></expr>;</expr_stmt> <comment type="block">/* do, line 89 */</comment>
                <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>m5</name> <init>= <expr><name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name><name>z</name><operator>-&gt;</operator><name>c</name></name></expr></init></decl>;</decl_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>m5</name></expr>;</expr_stmt> <comment type="block">/* and, line 89 */</comment>
                    <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>r_check_category_2</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* call check_category_2, line 89 */</comment>
                        <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab3</name>;</goto></block_content></block></if></if_stmt>
                        <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
                    </block_content>}</block>
                    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m5</name></expr>;</expr_stmt>
                    <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>r_remove_category_2</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* call remove_category_2, line 89 */</comment>
                        <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab3</name>;</goto></block_content></block></if></if_stmt>
                        <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
                    </block_content>}</block>
                </block_content>}</block>
            <label><name>lab3</name>:</label>
                <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m4</name></expr>;</expr_stmt>
            </block_content>}</block>
            <block>{<block_content>   <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>r_remove_category_3</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block">/* call remove_category_3, line 89 */</comment>
                <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>lab2</name>;</goto></block_content></block></if></if_stmt>
                <if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
            </block_content>}</block>
            <continue>continue;</continue>
        <label><name>lab2</name>:</label>
            <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m3</name></expr>;</expr_stmt>
            <break>break;</break>
        </block_content>}</block></while>
        <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>l</name></name> <operator>-</operator> <name>m2</name></expr>;</expr_stmt>
    </block_content>}</block>
    <expr_stmt><expr><name><name>z</name><operator>-&gt;</operator><name>c</name></name> <operator>=</operator> <name><name>z</name><operator>-&gt;</operator><name>lb</name></name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>nepali_UTF_8_create_env</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>SN_create_env</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>void</name></type> <name>nepali_UTF_8_close_env</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SN_env</name></name> <modifier>*</modifier></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name>SN_close_env</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></function>

</unit>
