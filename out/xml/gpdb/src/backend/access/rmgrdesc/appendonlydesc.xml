<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/gpdb/src/backend/access/rmgrdesc/appendonlydesc.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * appendonlydesc.c
 *	  rmgr descriptor routines for cdb/cdbappendonlystorage.c
 *
 * Portions Copyright (c) 2007-2009, Greenplum inc
 * Portions Copyright (c) 2012-Present VMware, Inc. or its affiliates.
 *
 *
 * IDENTIFICATION
 *	    src/backend/access/rmgrdesc/appendonlydesc.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cdb/cdbappendonlystorage_int.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cdb/cdbappendonlystorage.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cdb/cdbappendonlyxlog.h"</cpp:file></cpp:include>

<function><type><name>void</name></type>
<name>appendonly_desc</name><parameter_list>(<parameter><decl><type><name>StringInfo</name></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>XLogReaderState</name> <modifier>*</modifier></type><name>record</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint8</name></type>		  <name>info</name> <init>= <expr><call><name>XLogRecGetInfo</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name></expr></init></decl>;</decl_stmt>

	<switch>switch <condition>(<expr><name>info</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>XLOG_APPENDONLY_INSERT</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_ao_insert</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_ao_insert</name> <operator>*</operator><operator>)</operator><call><name>XLogRecGetData</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(
					<argument><expr><name>buf</name></expr></argument>,
					<argument><expr><literal type="string">"insert: rel %u/%u/%u seg/offset:%u/"</literal> <name>INT64_FORMAT</name> <literal type="string">" len:%lu"</literal></expr></argument>,
					<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>node</name><operator>.</operator><name>spcNode</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>node</name><operator>.</operator><name>dbNode</name></name></expr></argument>,
					<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>node</name><operator>.</operator><name>relNode</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>segment_filenum</name></name></expr></argument>,
					<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>offset</name></name></expr></argument>, <argument><expr><call><name>XLogRecGetDataLen</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call> <operator>-</operator> <name>SizeOfAOInsert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block>
			<break>break;</break>
		<case>case <expr><name>XLOG_APPENDONLY_TRUNCATE</name></expr>:</case>
			<block>{<block_content>
				<decl_stmt><decl><type><name>xl_ao_truncate</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_ao_truncate</name> <operator>*</operator><operator>)</operator><call><name>XLogRecGetData</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(
					<argument><expr><name>buf</name></expr></argument>,
					<argument><expr><literal type="string">"truncate: rel %u/%u/%u seg/offset:%u/"</literal> <name>INT64_FORMAT</name></expr></argument>,
					<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>node</name><operator>.</operator><name>spcNode</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>node</name><operator>.</operator><name>dbNode</name></name></expr></argument>,
					<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>node</name><operator>.</operator><name>relNode</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>segment_filenum</name></name></expr></argument>,
					<argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>target</name><operator>.</operator><name>offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block>
			<break>break;</break>
		<default>default:</default>
			<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"UNKNOWN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>appendonly_identify</name><parameter_list>(<parameter><decl><type><name>uint8</name></type> <name>info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

	<switch>switch <condition>(<expr><name>info</name> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>XLOG_APPENDONLY_INSERT</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"APPENDONLY_INSERT"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_APPENDONLY_TRUNCATE</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"APPENDONLY_TRUNCATE"</literal></expr>;</expr_stmt>
			<break>break;</break>
	</block_content>}</block></switch>

	<return>return <expr><name>id</name></expr>;</return>
</block_content>}</block></function>
</unit>
