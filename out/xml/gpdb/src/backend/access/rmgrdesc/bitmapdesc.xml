<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/gpdb/src/backend/access/rmgrdesc/bitmapdesc.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * bitmapdesc.c
 *	  rmgr descriptor routines for access/bitmap/bitmapxlog.c
 *
 * Portions Copyright (c) 1996-2013, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/access/rmgrdesc/bitmapdesc.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/bitmap.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/bitmap_xlog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/xlogreader.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/relfilenode.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>out_target</name><parameter_list>(<parameter><decl><type><name>StringInfo</name></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>RelFileNode</name> <modifier>*</modifier></type><name>node</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">", rel %u/%u/%u"</literal></expr></argument>,
			<argument><expr><name><name>node</name><operator>-&gt;</operator><name>spcNode</name></name></expr></argument>, <argument><expr><name><name>node</name><operator>-&gt;</operator><name>dbNode</name></name></expr></argument>, <argument><expr><name><name>node</name><operator>-&gt;</operator><name>relNode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>bitmap_desc</name><parameter_list>(<parameter><decl><type><name>StringInfo</name></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>XLogReaderState</name> <modifier>*</modifier></type><name>record</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint8</name></type>		<name>info</name> <init>= <expr><call><name>XLogRecGetInfo</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name>		<modifier>*</modifier></type><name>rec</name> <init>= <expr><call><name>XLogRecGetData</name><argument_list>(<argument><expr><name>record</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<switch>switch <condition>(<expr><name>info</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>XLOG_BITMAP_INSERT_LOVITEM</name></expr>:</case>
		<block>{<block_content>
			<comment type="block">/* insert a new LOV item */</comment>
			<decl_stmt><decl><type><name>xl_bm_lovitem</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_bm_lovitem</name> <operator>*</operator><operator>)</operator><name>rec</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"bm_lov_blkno %d, bm_lov_offset %d, "</literal>
							 <literal type="string">"bm_lovItem: {bm_lov_head %d, bm_lov_tail %d, bm_last_compword "</literal> <name>UINT64_FORMAT</name>
							 <literal type="string">", bm_last_word "</literal> <name>UINT64_FORMAT</name> <literal type="string">", bm_last_tid_location "</literal> <name>UINT64_FORMAT</name>
							 <literal type="string">", bm_last_setbit "</literal> <name>UINT64_FORMAT</name> <literal type="string">", lov_words_header %d}, bm_is_new_lov_blkno %s"</literal></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_blkno</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_offset</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lovItem</name><operator>.</operator><name>bm_lov_head</name></name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lovItem</name><operator>.</operator><name>bm_lov_tail</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lovItem</name><operator>.</operator><name>bm_last_compword</name></name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lovItem</name><operator>.</operator><name>bm_last_word</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lovItem</name><operator>.</operator><name>bm_last_tid_location</name></name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lovItem</name><operator>.</operator><name>bm_last_setbit</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lovItem</name><operator>.</operator><name>lov_words_header</name></name></expr></argument>,
							 <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_is_new_lov_blkno</name></name></expr> ?</condition><then> <expr><literal type="string">"true"</literal></expr> </then><else>: <expr><literal type="string">"false"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>out_target</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>bm_node</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block>
		<case>case <expr><name>XLOG_BITMAP_INSERT_META</name></expr>:</case>
		<block>{<block_content>
			<comment type="block">/* update the metapage */</comment>
			<decl_stmt><decl><type><name>xl_bm_metapage</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_bm_metapage</name> <operator>*</operator><operator>)</operator><name>rec</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"bm_lov_heapId %u, bm_lov_indexId %u, bm_lov_lastpage %d"</literal></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_heapId</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_indexId</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_lastpage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>out_target</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>bm_node</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block>

		<case>case <expr><name>XLOG_BITMAP_INSERT_BITMAP_LASTWORDS</name></expr>:</case>
		<block>{<block_content>
			<comment type="block">/* update the last two words in a bitmap */</comment>
			<decl_stmt><decl><type><name>xl_bm_bitmap_lastwords</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_bm_bitmap_lastwords</name> <operator>*</operator><operator>)</operator><name>rec</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"bm_last_compword "</literal> <name>UINT64_FORMAT</name> <literal type="string">", bm_last_word "</literal> <name>UINT64_FORMAT</name>
							 <literal type="string">", lov_words_header %d, bm_last_setbit "</literal> <name>UINT64_FORMAT</name>
							 <literal type="string">", bm_last_tid_location "</literal> <name>UINT64_FORMAT</name> <literal type="string">", bm_lov_blkno %d, bm_lov_offset %d"</literal></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_last_compword</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_last_word</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>lov_words_header</name></name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_last_setbit</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_last_tid_location</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_blkno</name></name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>out_target</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>bm_node</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block>

		<case>case <expr><name>XLOG_BITMAP_INSERT_WORDS</name></expr>:</case>
		<block>{<block_content>
			<comment type="block">/* insert words in a not-last bitmap page */</comment>
			<decl_stmt><decl><type><name>xl_bm_bitmapwords</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_bm_bitmapwords</name> <operator>*</operator><operator>)</operator><name>rec</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"bm_num_pages %d, bm_init_first_page %s, bm_lov_blkno %d, bm_lov_offset %d, "</literal>
							 <literal type="string">"bm_last_compword "</literal> <name>UINT64_FORMAT</name> <literal type="string">", bm_last_word "</literal> <name>UINT64_FORMAT</name>
							 <literal type="string">", lov_words_header %d, bm_last_setbit "</literal> <name>UINT64_FORMAT</name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_num_pages</name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_init_first_page</name></name></expr> ?</condition><then> <expr><literal type="string">"true"</literal></expr> </then><else>: <expr><literal type="string">"false"</literal></expr></else></ternary></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_blkno</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_offset</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_last_compword</name></name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_last_word</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>lov_words_header</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_last_setbit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>out_target</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>bm_node</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block>

		<case>case <expr><name>XLOG_BITMAP_UPDATEWORD</name></expr>:</case>
		<block>{<block_content>
			<comment type="block">/* update a word in a bitmap page */</comment>
			<decl_stmt><decl><type><name>xl_bm_updateword</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_bm_updateword</name> <operator>*</operator><operator>)</operator><name>rec</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"bm_blkno %d, bm_word_no %d, bm_cword "</literal> <name>UINT64_FORMAT</name> <literal type="string">", bm_hword "</literal> <name>UINT64_FORMAT</name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_blkno</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_word_no</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_cword</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_hword</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>out_target</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>bm_node</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block>
		<case>case <expr><name>XLOG_BITMAP_UPDATEWORDS</name></expr>:</case>
		<block>{<block_content>
			<comment type="block">/* update words in bitmap pages */</comment>
			<decl_stmt><decl><type><name>xl_bm_updatewords</name> <modifier>*</modifier></type><name>xlrec</name> <init>= <expr><operator>(</operator><name>xl_bm_updatewords</name><operator>*</operator><operator>)</operator><name>rec</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"bm_lov_blkno %d, bm_lov_offset %d, "</literal>
							 <literal type="string">"bm_first_blkno %d, bm_second_blkno %d, "</literal>
							 <literal type="string">"bm_two_pages %s, bm_next_blkno %d, bm_new_lastpage %s"</literal></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_blkno</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_lov_offset</name></name></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_first_blkno</name></name></expr></argument>, <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_second_blkno</name></name></expr></argument>,
							 <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_two_pages</name></name></expr> ?</condition><then> <expr><literal type="string">"true"</literal></expr> </then><else>: <expr><literal type="string">"false"</literal></expr></else></ternary></expr></argument>,
							 <argument><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_next_blkno</name></name></expr></argument>,
							 <argument><expr><ternary><condition><expr><name><name>xlrec</name><operator>-&gt;</operator><name>bm_new_lastpage</name></name></expr> ?</condition><then> <expr><literal type="string">"true"</literal></expr> </then><else>: <expr><literal type="string">"false"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>out_target</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><name><name>xlrec</name><operator>-&gt;</operator><name>bm_node</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block>
		<default>default:</default>
			<expr_stmt><expr><call><name>appendStringInfo</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="string">"UNKNOWN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>bitmap_identify</name><parameter_list>(<parameter><decl><type><name>uint8</name></type> <name>info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

	<switch>switch <condition>(<expr><name>info</name> <operator>&amp;</operator> <operator>~</operator><name>XLR_INFO_MASK</name></expr>)</condition>
	<block>{<block_content>
		<case>case <expr><name>XLOG_BITMAP_INSERT_LOVITEM</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"BITMAP_INSERT_LOVITEM"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_BITMAP_INSERT_META</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"BITMAP_INSERT_META"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_BITMAP_INSERT_BITMAP_LASTWORDS</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"BITMAP_INSERT_BITMAP_LASTWORDS"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_BITMAP_INSERT_WORDS</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"BITMAP_INSERT_WORDS"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_BITMAP_UPDATEWORD</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"BITMAP_UPDATEWORD"</literal></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><name>XLOG_BITMAP_UPDATEWORDS</name></expr>:</case>
			<expr_stmt><expr><name>id</name> <operator>=</operator> <literal type="string">"BITMAP_UPDATEWORDS"</literal></expr>;</expr_stmt>
			<break>break;</break>
	</block_content>}</block></switch>

	<return>return <expr><name>id</name></expr>;</return>
</block_content>}</block></function>
</unit>
