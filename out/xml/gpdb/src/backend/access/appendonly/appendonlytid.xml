<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/gpdb/src/backend/access/appendonly/appendonlytid.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * appendonlytid.c
 *
 * Portions Copyright (c) 2007-2009, Greenplum inc
 * Portions Copyright (c) 2012-Present VMware, Inc. or its affiliates.
 *
 *
 * IDENTIFICATION
 *	    src/backend/access/appendonly/appendonlytid.c
 *
 *-------------------------------------------------------------------------
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"access/appendonlytid.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_AO_TUPLE_ID_BUFFER</name></cpp:macro> <cpp:value>25</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>AOTupleIdBuffer</name><index>[<expr><name>MAX_AO_TUPLE_ID_BUFFER</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>char</name> <modifier>*</modifier></type>
<name>AOTupleIdToString</name><parameter_list>(<parameter><decl><type><name>AOTupleId</name> <modifier>*</modifier></type><name>aoTupleId</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type>			<name>segmentFileNum</name> <init>= <expr><call><name>AOTupleIdGet_segmentFileNum</name><argument_list>(<argument><expr><name>aoTupleId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int64</name></type>		<name>rowNum</name> <init>= <expr><call><name>AOTupleIdGet_rowNum</name><argument_list>(<argument><expr><name>aoTupleId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>snprintfResult</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>snprintfResult</name> <operator>=</operator>
		<call><name>snprintf</name><argument_list>(<argument><expr><name>AOTupleIdBuffer</name></expr></argument>, <argument><expr><name>MAX_AO_TUPLE_ID_BUFFER</name></expr></argument>, <argument><expr><literal type="string">"(%d,"</literal> <name>INT64_FORMAT</name> <literal type="string">")"</literal></expr></argument>,
				 <argument><expr><name>segmentFileNum</name></expr></argument>, <argument><expr><name>rowNum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>snprintfResult</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>Assert</name><argument_list>(<argument><expr><name>snprintfResult</name> <operator>&lt;</operator> <name>MAX_AO_TUPLE_ID_BUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><name>AOTupleIdBuffer</name></expr>;</return>
</block_content>}</block></function>
</unit>
