<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/gpdb/gpMgmt/bin/stream/mysecond.c"><comment type="block">/* A gettimeofday routine to give access to the wall
   clock timer on most UNIX-like systems.

   This version defines two entry points -- with 
   and without appended underscores, so it *should*
   automagically link with FORTRAN */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/time.h&gt;</cpp:file></cpp:include>

<function><type><name>double</name></type> <name>mysecond</name><parameter_list>()</parameter_list>
<block>{<block_content>
<comment type="block">/* struct timeval { long        tv_sec;
            long        tv_usec;        };

struct timezone { int   tz_minuteswest;
             int        tz_dsttime;      };     */</comment>

        <decl_stmt><decl><type><name><name>struct</name> <name>timeval</name></name></type> <name>tp</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>struct</name> <name>timezone</name></name></type> <name>tzp</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

        <expr_stmt><expr><name>i</name> <operator>=</operator> <call><name>gettimeofday</name><argument_list>(<argument><expr><operator>&amp;</operator><name>tp</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>tzp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><operator>(</operator> <operator>(</operator><name>double</name><operator>)</operator> <name><name>tp</name><operator>.</operator><name>tv_sec</name></name> <operator>+</operator> <operator>(</operator><name>double</name><operator>)</operator> <name><name>tp</name><operator>.</operator><name>tv_usec</name></name> <operator>*</operator> <literal type="number">1.e-6</literal> <operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>double</name></type> <name>mysecond_</name><parameter_list>()</parameter_list> <block>{<block_content><return>return <expr><call><name>mysecond</name><argument_list>()</argument_list></call></expr>;</return></block_content>}</block></function>

</unit>
