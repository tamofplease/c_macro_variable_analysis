<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/gpdb/contrib/pgcrypto/sha1.c"><comment type="block">/*	   $KAME: sha1.c,v 1.3 2000/02/22 14:01:18 itojun Exp $    */</comment>

<comment type="block">/*
 * Copyright (C) 1995, 1996, 1997, and 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *	  notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *	  notice, this list of conditions and the following disclaimer in the
 *	  documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *	  may be used to endorse or promote products derived from this software
 *	  without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * contrib/pgcrypto/sha1.c
 */</comment>
<comment type="block">/*
 * FIPS pub 180-1: Secure Hash Algorithm (SHA-1)
 * based on: http://www.itl.nist.gov/fipspubs/fip180-1.htm
 * implemented by Jun-ichiro itojun Itoh &lt;itojun@itojun.org&gt;
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/param.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sha1.h"</cpp:file></cpp:include>

<comment type="block">/* constant table */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <name>uint32</name></type> <name><name>_K</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="number">0x5a827999</literal></expr>, <expr><literal type="number">0x6ed9eba1</literal></expr>, <expr><literal type="number">0x8f1bbcdc</literal></expr>, <expr><literal type="number">0xca62c1d6</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K</name><parameter_list>(<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro>	<cpp:value>_K[(t) / 20]</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F0</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((b) &amp; (c)) | ((~(b)) &amp; (d)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F1</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((b) ^ (c)) ^ (d))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F2</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((b) &amp; (c)) | ((b) &amp; (d)) | ((c) &amp; (d)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F3</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((b) ^ (c)) ^ (d))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S</name><parameter_list>(<parameter><type><name>n</name></type></parameter>, <parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro>		<cpp:value>(((x) &lt;&lt; (n)) | ((x) &gt;&gt; (32 - (n))))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro>	<cpp:value>(ctxt-&gt;h.b32[(n)])</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COUNT</name></cpp:macro>	<cpp:value>(ctxt-&gt;count)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BCOUNT</name></cpp:macro>	<cpp:value>(ctxt-&gt;c.b64[0] / 8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro>	<cpp:value>(ctxt-&gt;m.b32[(n)])</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PUTBYTE</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> \
<cpp:value>do { \
	ctxt-&gt;m.b8[(COUNT % 64)] = (x);		\
	COUNT++;				\
	COUNT %= 64;				\
	ctxt-&gt;c.b64[0] += 8;			\
	if (COUNT % 64 == 0)			\
		sha1_step(ctxt);		\
} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PUTPAD</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> \
<cpp:value>do { \
	ctxt-&gt;m.b8[(COUNT % 64)] = (x);		\
	COUNT++;				\
	COUNT %= 64;				\
	if (COUNT % 64 == 0)			\
		sha1_step(ctxt);		\
} while (0)</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>sha1_step</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>sha1_ctxt</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>sha1_step</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>sha1_ctxt</name></name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>a</name></decl>,
				<decl><type ref="prev"/><name>b</name></decl>,
				<decl><type ref="prev"/><name>c</name></decl>,
				<decl><type ref="prev"/><name>d</name></decl>,
				<decl><type ref="prev"/><name>e</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type>		<name>t</name></decl>,
				<decl><type ref="prev"/><name>s</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32</name></type>		<name>tmp</name></decl>;</decl_stmt>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifndef>
	<decl_stmt><decl><type><name><name>struct</name> <name>sha1_ctxt</name></name></type> <name>tctxt</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">20</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">23</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">21</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">22</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">22</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">21</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">23</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">27</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">26</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">26</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">25</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">27</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">24</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">28</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">31</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">29</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">30</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">30</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">29</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">31</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">28</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">35</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">34</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">34</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">33</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">35</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">36</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">39</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">37</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">38</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">38</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">37</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">39</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">36</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">40</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">43</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">41</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">42</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">42</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">41</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">43</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">40</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">44</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">47</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">45</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">46</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">46</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">45</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">47</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">44</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">51</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">49</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">50</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">50</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">49</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">51</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">52</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">55</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">53</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">54</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">54</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">53</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">55</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">52</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">56</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">59</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">57</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">58</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">58</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">57</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">59</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">56</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">60</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">63</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">61</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">62</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">62</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">61</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">63</literal></expr>]</index></name> <operator>=</operator> <name><name>tctxt</name><operator>.</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

	<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>b</name> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>d</name> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>e</name> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for>for <control>(<init><expr><name>t</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>t</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>t</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><name>s</name> <operator>=</operator> <name>t</name> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>t</name> <operator>&gt;=</operator> <literal type="number">16</literal></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">13</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>F0</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>e</name> <operator>+</operator> <call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>K</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>e</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>d</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>b</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>a</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<for>for <control>(<init><expr><name>t</name> <operator>=</operator> <literal type="number">20</literal></expr>;</init> <condition><expr><name>t</name> <operator>&lt;</operator> <literal type="number">40</literal></expr>;</condition> <incr><expr><name>t</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><name>s</name> <operator>=</operator> <name>t</name> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">13</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>F1</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>e</name> <operator>+</operator> <call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>K</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>e</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>d</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>b</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>a</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<for>for <control>(<init><expr><name>t</name> <operator>=</operator> <literal type="number">40</literal></expr>;</init> <condition><expr><name>t</name> <operator>&lt;</operator> <literal type="number">60</literal></expr>;</condition> <incr><expr><name>t</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><name>s</name> <operator>=</operator> <name>t</name> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">13</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>F2</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>e</name> <operator>+</operator> <call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>K</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>e</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>d</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>b</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>a</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<for>for <control>(<init><expr><name>t</name> <operator>=</operator> <literal type="number">60</literal></expr>;</init> <condition><expr><name>t</name> <operator>&lt;</operator> <literal type="number">80</literal></expr>;</condition> <incr><expr><name>t</name><operator>++</operator></expr></incr>)</control>
	<block>{<block_content>
		<expr_stmt><expr><name>s</name> <operator>=</operator> <name>t</name> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">13</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><operator>(</operator><name>s</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0f</literal></expr></argument>)</argument_list></call> <operator>^</operator> <call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>F3</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call> <operator>+</operator> <name>e</name> <operator>+</operator> <call><name>W</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>+</operator> <call><name>K</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>e</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>d</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>S</name><argument_list>(<argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>b</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>a</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
	</block_content>}</block></for>

	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name>a</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name>b</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name>c</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name>d</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>H</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name>e</name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*------------------------------------------------------------*/</comment>

<function><type><name>void</name></type>
<name>sha1_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>sha1_ctxt</name></name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>ctxt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>sha1_ctxt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0x67452301</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0xefcdab89</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0x98badcfe</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0x10325476</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>H</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>=</operator> <literal type="number">0xc3d2e1f0</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>sha1_pad</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>sha1_ctxt</name></name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>size_t</name></type>		<name>padlen</name></decl>;</decl_stmt>			<comment type="block">/* pad length in bytes */</comment>
	<decl_stmt><decl><type><name>size_t</name></type>		<name>padstart</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><literal type="number">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>padstart</name> <operator>=</operator> <name>COUNT</name> <operator>%</operator> <literal type="number">64</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>padlen</name> <operator>=</operator> <literal type="number">64</literal> <operator>-</operator> <name>padstart</name></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>padlen</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><name>padstart</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>padlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>COUNT</name> <operator>+=</operator> <name>padlen</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>COUNT</name> <operator>%=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>sha1_step</name><argument_list>(<argument><expr><name>ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>padstart</name> <operator>=</operator> <name>COUNT</name> <operator>%</operator> <literal type="number">64</literal></expr>;</expr_stmt>	<comment type="block">/* should be 0 */</comment>
		<expr_stmt><expr><name>padlen</name> <operator>=</operator> <literal type="number">64</literal> <operator>-</operator> <name>padstart</name></expr>;</expr_stmt> <comment type="block">/* should be 64 */</comment>
	</block_content>}</block></if></if_stmt>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><name>padstart</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>padlen</name> <operator>-</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>COUNT</name> <operator>+=</operator> <operator>(</operator><name>padlen</name> <operator>-</operator> <literal type="number">8</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name>COUNT</name> <operator>%=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifdef>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>PUTPAD</name><argument_list>(<argument><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>sha1_loop</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>sha1_ctxt</name></name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8</name> <modifier>*</modifier></type><name>input0</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>uint8</name> <modifier>*</modifier></type><name>input</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type>		<name>gaplen</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type>		<name>gapstart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type>		<name>off</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type>		<name>copysiz</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>input</name> <operator>=</operator> <operator>(</operator><specifier>const</specifier> <name>uint8</name> <operator>*</operator><operator>)</operator> <name>input0</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>off</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

	<while>while <condition>(<expr><name>off</name> <operator>&lt;</operator> <name>len</name></expr>)</condition>
	<block>{<block_content>
		<expr_stmt><expr><name>gapstart</name> <operator>=</operator> <name>COUNT</name> <operator>%</operator> <literal type="number">64</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>gaplen</name> <operator>=</operator> <literal type="number">64</literal> <operator>-</operator> <name>gapstart</name></expr>;</expr_stmt>

		<expr_stmt><expr><name>copysiz</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name>gaplen</name> <operator>&lt;</operator> <name>len</name> <operator>-</operator> <name>off</name><operator>)</operator></expr> ?</condition><then> <expr><name>gaplen</name></expr> </then><else>: <expr><name>len</name> <operator>-</operator> <name>off</name></expr></else></ternary></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>b8</name><index>[<expr><name>gapstart</name></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>input</name><index>[<expr><name>off</name></expr>]</index></name></expr></argument>, <argument><expr><name>copysiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>COUNT</name> <operator>+=</operator> <name>copysiz</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>COUNT</name> <operator>%=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>ctxt</name><operator>-&gt;</operator><name>c</name><operator>.</operator><name>b64</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+=</operator> <name>copysiz</name> <operator>*</operator> <literal type="number">8</literal></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>COUNT</name> <operator>%</operator> <literal type="number">64</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name>sha1_step</name><argument_list>(<argument><expr><name>ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt><expr><name>off</name> <operator>+=</operator> <name>copysiz</name></expr>;</expr_stmt>
	</block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>sha1_result</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>sha1_ctxt</name></name> <modifier>*</modifier></type><name>ctxt</name></decl></parameter>, <parameter><decl><type><name>uint8</name> <modifier>*</modifier></type><name>digest0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint8</name>	   <modifier>*</modifier></type><name>digest</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>digest</name> <operator>=</operator> <operator>(</operator><name>uint8</name> <operator>*</operator><operator>)</operator> <name>digest0</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>sha1_pad</name><argument_list>(<argument><expr><name>ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>WORDS_BIGENDIAN</name></cpp:ifdef>
	<expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name>digest</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>digest</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>=</operator> <name><name>ctxt</name><operator>-&gt;</operator><name>h</name><operator>.</operator><name>b8</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>
</unit>
