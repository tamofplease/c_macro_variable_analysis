<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/ejdb/extra/iwnet/src/bearssl/ec/ec_secp256r1.c"><comment type="block">/*
 * Copyright (c) 2016 Thomas Pornin &lt;pornin@bolet.org&gt;
 *
 * Permission is hereby granted, free of charge, to any person obtaining 
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be 
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>P256_N</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
	<expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>,
	<expr><literal type="number">0xBC</literal></expr>, <expr><literal type="number">0xE6</literal></expr>, <expr><literal type="number">0xFA</literal></expr>, <expr><literal type="number">0xAD</literal></expr>, <expr><literal type="number">0xA7</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x9E</literal></expr>, <expr><literal type="number">0x84</literal></expr>,
	<expr><literal type="number">0xF3</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xCA</literal></expr>, <expr><literal type="number">0xC2</literal></expr>, <expr><literal type="number">0xFC</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x51</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>P256_G</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x6B</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0xD1</literal></expr>, <expr><literal type="number">0xF2</literal></expr>, <expr><literal type="number">0xE1</literal></expr>, <expr><literal type="number">0x2C</literal></expr>, <expr><literal type="number">0x42</literal></expr>,
	<expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xF8</literal></expr>, <expr><literal type="number">0xBC</literal></expr>, <expr><literal type="number">0xE6</literal></expr>, <expr><literal type="number">0xE5</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x40</literal></expr>,
	<expr><literal type="number">0xF2</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x7D</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x2D</literal></expr>, <expr><literal type="number">0xEB</literal></expr>, <expr><literal type="number">0x33</literal></expr>,
	<expr><literal type="number">0xA0</literal></expr>, <expr><literal type="number">0xF4</literal></expr>, <expr><literal type="number">0xA1</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xD8</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0xC2</literal></expr>,
	<expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x4F</literal></expr>, <expr><literal type="number">0xE3</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0xE2</literal></expr>, <expr><literal type="number">0xFE</literal></expr>, <expr><literal type="number">0x1A</literal></expr>, <expr><literal type="number">0x7F</literal></expr>,
	<expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0x8E</literal></expr>, <expr><literal type="number">0xE7</literal></expr>, <expr><literal type="number">0xEB</literal></expr>, <expr><literal type="number">0x4A</literal></expr>, <expr><literal type="number">0x7C</literal></expr>, <expr><literal type="number">0x0F</literal></expr>, <expr><literal type="number">0x9E</literal></expr>,
	<expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x2B</literal></expr>, <expr><literal type="number">0xCE</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x6B</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x5E</literal></expr>,
	<expr><literal type="number">0xCE</literal></expr>, <expr><literal type="number">0xCB</literal></expr>, <expr><literal type="number">0xB6</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0x51</literal></expr>,
	<expr><literal type="number">0xF5</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* see inner.h */</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>br_ec_curve_def</name></type> <name>br_secp256r1</name> <init>= <expr><block>{
	<expr><name>BR_EC_secp256r1</name></expr>,
	<expr><name>P256_N</name></expr>, <expr><sizeof>sizeof <name>P256_N</name></sizeof></expr>,
	<expr><name>P256_G</name></expr>, <expr><sizeof>sizeof <name>P256_G</name></sizeof></expr>
}</block></expr></init></decl>;</decl_stmt>
</unit>
