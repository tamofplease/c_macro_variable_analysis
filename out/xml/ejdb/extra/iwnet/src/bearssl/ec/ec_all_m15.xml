<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/ejdb/extra/iwnet/src/bearssl/ec/ec_all_m15.c"><comment type="block">/*
 * Copyright (c) 2017 Thomas Pornin &lt;pornin@bolet.org&gt;
 *
 * Permission is hereby granted, free of charge, to any person obtaining 
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be 
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type>
<name>api_generator</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>curve</name></expr>)</condition> <block>{<block_content>
	<case>case <expr><name>BR_EC_secp256r1</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_p256_m15</name><operator>.</operator><name>generator</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><name>BR_EC_curve25519</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_c25519_m15</name><operator>.</operator><name>generator</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	<default>default:</default>
		<return>return <expr><call><name><name>br_ec_prime_i15</name><operator>.</operator><name>generator</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type>
<name>api_order</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>curve</name></expr>)</condition> <block>{<block_content>
	<case>case <expr><name>BR_EC_secp256r1</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_p256_m15</name><operator>.</operator><name>order</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><name>BR_EC_curve25519</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_c25519_m15</name><operator>.</operator><name>order</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	<default>default:</default>
		<return>return <expr><call><name><name>br_ec_prime_i15</name><operator>.</operator><name>order</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>size_t</name></type>
<name>api_xoff</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>curve</name></expr>)</condition> <block>{<block_content>
	<case>case <expr><name>BR_EC_secp256r1</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_p256_m15</name><operator>.</operator><name>xoff</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><name>BR_EC_curve25519</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_c25519_m15</name><operator>.</operator><name>xoff</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	<default>default:</default>
		<return>return <expr><call><name><name>br_ec_prime_i15</name><operator>.</operator><name>xoff</name></name><argument_list>(<argument><expr><name>curve</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>api_mul</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>G</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>Glen</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>kb</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>kblen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>curve</name></expr>)</condition> <block>{<block_content>
	<case>case <expr><name>BR_EC_secp256r1</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_p256_m15</name><operator>.</operator><name>mul</name></name><argument_list>(<argument><expr><name>G</name></expr></argument>, <argument><expr><name>Glen</name></expr></argument>, <argument><expr><name>kb</name></expr></argument>, <argument><expr><name>kblen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><name>BR_EC_curve25519</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_c25519_m15</name><operator>.</operator><name>mul</name></name><argument_list>(<argument><expr><name>G</name></expr></argument>, <argument><expr><name>Glen</name></expr></argument>, <argument><expr><name>kb</name></expr></argument>, <argument><expr><name>kblen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	<default>default:</default>
		<return>return <expr><call><name><name>br_ec_prime_i15</name><operator>.</operator><name>mul</name></name><argument_list>(<argument><expr><name>G</name></expr></argument>, <argument><expr><name>Glen</name></expr></argument>, <argument><expr><name>kb</name></expr></argument>, <argument><expr><name>kblen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>size_t</name></type>
<name>api_mulgen</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>R</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>xlen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>curve</name></expr>)</condition> <block>{<block_content>
	<case>case <expr><name>BR_EC_secp256r1</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_p256_m15</name><operator>.</operator><name>mulgen</name></name><argument_list>(<argument><expr><name>R</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><name>BR_EC_curve25519</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_c25519_m15</name><operator>.</operator><name>mulgen</name></name><argument_list>(<argument><expr><name>R</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	<default>default:</default>
		<return>return <expr><call><name><name>br_ec_prime_i15</name><operator>.</operator><name>mulgen</name></name><argument_list>(<argument><expr><name>R</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>api_muladd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>A</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>B</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>xlen</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>ylen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>curve</name></expr>)</condition> <block>{<block_content>
	<case>case <expr><name>BR_EC_secp256r1</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_p256_m15</name><operator>.</operator><name>muladd</name></name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>len</name></expr></argument>,
			<argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>ylen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	<case>case <expr><name>BR_EC_curve25519</name></expr>:</case>
		<return>return <expr><call><name><name>br_ec_c25519_m15</name><operator>.</operator><name>muladd</name></name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>len</name></expr></argument>,
			<argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>ylen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	<default>default:</default>
		<return>return <expr><call><name><name>br_ec_prime_i15</name><operator>.</operator><name>muladd</name></name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>len</name></expr></argument>,
			<argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>ylen</name></expr></argument>, <argument><expr><name>curve</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

<comment type="block">/* see bearssl_ec.h */</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>br_ec_impl</name></type> <name>br_ec_all_m15</name> <init>= <expr><block>{
	<expr><operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x23800000</literal></expr>,
	<expr><operator>&amp;</operator><name>api_generator</name></expr>,
	<expr><operator>&amp;</operator><name>api_order</name></expr>,
	<expr><operator>&amp;</operator><name>api_xoff</name></expr>,
	<expr><operator>&amp;</operator><name>api_mul</name></expr>,
	<expr><operator>&amp;</operator><name>api_mulgen</name></expr>,
	<expr><operator>&amp;</operator><name>api_muladd</name></expr>
}</block></expr></init></decl>;</decl_stmt>
</unit>
