<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/ejdb/extra/iwnet/src/bearssl/ssl/ssl_server_minu2g.c"><comment type="block">/*
 * Copyright (c) 2016 Thomas Pornin &lt;pornin@bolet.org&gt;
 *
 * Permission is hereby granted, free of charge, to any person obtaining 
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be 
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>

<comment type="block">/* see bearssl_ssl.h */</comment>
<function><type><name>void</name></type>
<name>br_ssl_server_init_minu2g</name><parameter_list>(<parameter><decl><type><name>br_ssl_server_context</name> <modifier>*</modifier></type><name>cc</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>br_x509_certificate</name> <modifier>*</modifier></type><name>chain</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>chain_len</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>br_ec_private_key</name> <modifier>*</modifier></type><name>sk</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>suites</name><index>[]</index></name> <init>= <expr><block>{
		<expr><name>BR_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256</name></expr>
	}</block></expr></init></decl>;</decl_stmt>

	<comment type="block">/*
	 * Reset server context and set supported versions to TLS-1.2 (only).
	 */</comment>
	<expr_stmt><expr><call><name>br_ssl_server_zero</name><argument_list>(<argument><expr><name>cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>br_ssl_engine_set_versions</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><name>BR_TLS12</name></expr></argument>, <argument><expr><name>BR_TLS12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Set suites.
	 */</comment>
	<expr_stmt><expr><call><name>br_ssl_engine_set_suites</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><name>suites</name></expr></argument>,
		<argument><expr><operator>(</operator><sizeof>sizeof <name>suites</name></sizeof><operator>)</operator> <operator>/</operator> <operator>(</operator><sizeof>sizeof <name><name>suites</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></sizeof><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Set the "server policy": handler for the certificate chain
	 * and private key operations.
	 */</comment>
	<expr_stmt><expr><call><name>br_ssl_server_set_single_ec</name><argument_list>(<argument><expr><name>cc</name></expr></argument>, <argument><expr><name>chain</name></expr></argument>, <argument><expr><name>chain_len</name></expr></argument>, <argument><expr><name>sk</name></expr></argument>,
		<argument><expr><name>BR_KEYTYPE_KEYX</name></expr></argument>, <argument><expr><name>BR_KEYTYPE_RSA</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>br_ec_all_m15</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Set supported hash functions.
	 */</comment>
	<expr_stmt><expr><call><name>br_ssl_engine_set_hash</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><name>br_sha256_ID</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>br_sha256_vtable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Set the PRF implementations.
	 */</comment>
	<expr_stmt><expr><call><name>br_ssl_engine_set_prf_sha256</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>br_tls12_sha256_prf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Symmetric encryption.
	 */</comment>
	<expr_stmt><expr><call><name>br_ssl_engine_set_default_aes_gcm</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
