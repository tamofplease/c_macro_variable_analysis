<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/ejdb/extra/iwnet/src/bearssl/symcipher/aes_small_dec.c"><comment type="block">/*
 * Copyright (c) 2016 Thomas Pornin &lt;pornin@bolet.org&gt;
 *
 * Permission is hereby granted, free of charge, to any person obtaining 
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be 
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>

<comment type="block">/*
 * Inverse S-box.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>iS</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x6A</literal></expr>, <expr><literal type="number">0xD5</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0xA3</literal></expr>, <expr><literal type="number">0x9E</literal></expr>,
	<expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0xF3</literal></expr>, <expr><literal type="number">0xD7</literal></expr>, <expr><literal type="number">0xFB</literal></expr>, <expr><literal type="number">0x7C</literal></expr>, <expr><literal type="number">0xE3</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0x2F</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0x87</literal></expr>,
	<expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0x8E</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0xC4</literal></expr>, <expr><literal type="number">0xDE</literal></expr>, <expr><literal type="number">0xE9</literal></expr>, <expr><literal type="number">0xCB</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0x7B</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0x32</literal></expr>,
	<expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xC2</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0x3D</literal></expr>, <expr><literal type="number">0xEE</literal></expr>, <expr><literal type="number">0x4C</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x0B</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0xFA</literal></expr>, <expr><literal type="number">0xC3</literal></expr>, <expr><literal type="number">0x4E</literal></expr>,
	<expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x2E</literal></expr>, <expr><literal type="number">0xA1</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0xD9</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0xB2</literal></expr>, <expr><literal type="number">0x76</literal></expr>, <expr><literal type="number">0x5B</literal></expr>, <expr><literal type="number">0xA2</literal></expr>, <expr><literal type="number">0x49</literal></expr>,
	<expr><literal type="number">0x6D</literal></expr>, <expr><literal type="number">0x8B</literal></expr>, <expr><literal type="number">0xD1</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0xF8</literal></expr>, <expr><literal type="number">0xF6</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x16</literal></expr>,
	<expr><literal type="number">0xD4</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x5C</literal></expr>, <expr><literal type="number">0xCC</literal></expr>, <expr><literal type="number">0x5D</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0xB6</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x6C</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0x50</literal></expr>,
	<expr><literal type="number">0xFD</literal></expr>, <expr><literal type="number">0xED</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xDA</literal></expr>, <expr><literal type="number">0x5E</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0xA7</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0x9D</literal></expr>, <expr><literal type="number">0x84</literal></expr>,
	<expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0xD8</literal></expr>, <expr><literal type="number">0xAB</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x8C</literal></expr>, <expr><literal type="number">0xBC</literal></expr>, <expr><literal type="number">0xD3</literal></expr>, <expr><literal type="number">0x0A</literal></expr>, <expr><literal type="number">0xF7</literal></expr>, <expr><literal type="number">0xE4</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0x05</literal></expr>,
	<expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xB3</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0xD0</literal></expr>, <expr><literal type="number">0x2C</literal></expr>, <expr><literal type="number">0x1E</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xCA</literal></expr>, <expr><literal type="number">0x3F</literal></expr>, <expr><literal type="number">0x0F</literal></expr>, <expr><literal type="number">0x02</literal></expr>,
	<expr><literal type="number">0xC1</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xBD</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x8A</literal></expr>, <expr><literal type="number">0x6B</literal></expr>, <expr><literal type="number">0x3A</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x41</literal></expr>,
	<expr><literal type="number">0x4F</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0xDC</literal></expr>, <expr><literal type="number">0xEA</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0xF2</literal></expr>, <expr><literal type="number">0xCF</literal></expr>, <expr><literal type="number">0xCE</literal></expr>, <expr><literal type="number">0xF0</literal></expr>, <expr><literal type="number">0xB4</literal></expr>, <expr><literal type="number">0xE6</literal></expr>, <expr><literal type="number">0x73</literal></expr>,
	<expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0xAC</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0xE7</literal></expr>, <expr><literal type="number">0xAD</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0xE2</literal></expr>, <expr><literal type="number">0xF9</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xE8</literal></expr>,
	<expr><literal type="number">0x1C</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0xDF</literal></expr>, <expr><literal type="number">0x6E</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xF1</literal></expr>, <expr><literal type="number">0x1A</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x1D</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0xC5</literal></expr>, <expr><literal type="number">0x89</literal></expr>,
	<expr><literal type="number">0x6F</literal></expr>, <expr><literal type="number">0xB7</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x0E</literal></expr>, <expr><literal type="number">0xAA</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0x1B</literal></expr>, <expr><literal type="number">0xFC</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0x3E</literal></expr>, <expr><literal type="number">0x4B</literal></expr>,
	<expr><literal type="number">0xC6</literal></expr>, <expr><literal type="number">0xD2</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x9A</literal></expr>, <expr><literal type="number">0xDB</literal></expr>, <expr><literal type="number">0xC0</literal></expr>, <expr><literal type="number">0xFE</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0xCD</literal></expr>, <expr><literal type="number">0x5A</literal></expr>, <expr><literal type="number">0xF4</literal></expr>,
	<expr><literal type="number">0x1F</literal></expr>, <expr><literal type="number">0xDD</literal></expr>, <expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0xC7</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xB1</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0x59</literal></expr>,
	<expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0xEC</literal></expr>, <expr><literal type="number">0x5F</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0x7F</literal></expr>, <expr><literal type="number">0xA9</literal></expr>, <expr><literal type="number">0x19</literal></expr>, <expr><literal type="number">0xB5</literal></expr>, <expr><literal type="number">0x4A</literal></expr>, <expr><literal type="number">0x0D</literal></expr>,
	<expr><literal type="number">0x2D</literal></expr>, <expr><literal type="number">0xE5</literal></expr>, <expr><literal type="number">0x7A</literal></expr>, <expr><literal type="number">0x9F</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0xC9</literal></expr>, <expr><literal type="number">0x9C</literal></expr>, <expr><literal type="number">0xEF</literal></expr>, <expr><literal type="number">0xA0</literal></expr>, <expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0x3B</literal></expr>, <expr><literal type="number">0x4D</literal></expr>,
	<expr><literal type="number">0xAE</literal></expr>, <expr><literal type="number">0x2A</literal></expr>, <expr><literal type="number">0xF5</literal></expr>, <expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0xC8</literal></expr>, <expr><literal type="number">0xEB</literal></expr>, <expr><literal type="number">0xBB</literal></expr>, <expr><literal type="number">0x3C</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x61</literal></expr>,
	<expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x2B</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x7E</literal></expr>, <expr><literal type="number">0xBA</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0xD6</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0xE1</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x63</literal></expr>,
	<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0x0C</literal></expr>, <expr><literal type="number">0x7D</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>add_round_key</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>state</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>skeys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">4</literal></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>uint32_t</name></type> <name>k</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>k</name> <operator>=</operator> <operator>*</operator><name>skeys</name> <operator>++</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>k</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>^=</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>k</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name> <operator>^=</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>k</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name> <operator>^=</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><name>k</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>inv_sub_bytes</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>iS</name><index>[<expr><name><name>state</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>inv_shift_rows</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name></type> <name>tmp</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>

	<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>

	<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>state</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>unsigned</name></type>
<name>gf256red</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>x</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name></type> <name>y</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>y</name> <operator>=</operator> <name>x</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	<return>return <expr><operator>(</operator><name>x</name> <operator>^</operator> <name>y</name> <operator>^</operator> <operator>(</operator><name>y</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>y</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>y</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>inv_mix_columns</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">4</literal></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>unsigned</name></type> <name>s0</name></decl>, <decl><type ref="prev"/><name>s1</name></decl>, <decl><type ref="prev"/><name>s2</name></decl>, <decl><type ref="prev"/><name>s3</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>unsigned</name></type> <name>t0</name></decl>, <decl><type ref="prev"/><name>t1</name></decl>, <decl><type ref="prev"/><name>t2</name></decl>, <decl><type ref="prev"/><name>t3</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>s0</name> <operator>=</operator> <name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s1</name> <operator>=</operator> <name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s2</name> <operator>=</operator> <name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s3</name> <operator>=</operator> <name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>t0</name> <operator>=</operator> <operator>(</operator><name>s0</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s0</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s0</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s1</name> <operator>^</operator> <operator>(</operator><name>s1</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s1</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s2</name> <operator>^</operator> <operator>(</operator><name>s2</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s2</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s3</name> <operator>^</operator> <operator>(</operator><name>s3</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>s0</name> <operator>^</operator> <operator>(</operator><name>s0</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <operator>(</operator><name>s1</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s1</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s1</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s2</name> <operator>^</operator> <operator>(</operator><name>s2</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s2</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s3</name> <operator>^</operator> <operator>(</operator><name>s3</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s3</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>s0</name> <operator>^</operator> <operator>(</operator><name>s0</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s0</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s1</name> <operator>^</operator> <operator>(</operator><name>s1</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <operator>(</operator><name>s2</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s2</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s2</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s3</name> <operator>^</operator> <operator>(</operator><name>s3</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s3</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>s0</name> <operator>^</operator> <operator>(</operator><name>s0</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s0</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s1</name> <operator>^</operator> <operator>(</operator><name>s1</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s1</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <name>s2</name> <operator>^</operator> <operator>(</operator><name>s2</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator>
			<operator>^</operator> <operator>(</operator><name>s3</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s3</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>s3</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>gf256red</name><argument_list>(<argument><expr><name>t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>gf256red</name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>gf256red</name><argument_list>(<argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>gf256red</name><argument_list>(<argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>

<comment type="block">/* see inner.h */</comment>
<function><type><name>void</name></type>
<name>br_aes_small_decrypt</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name></type> <name><name>state</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name></type> <name>u</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>buf</name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>u</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>u</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>u</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>state</name><index>[<expr><name>u</name></expr>]</index></name> <operator>=</operator> <name><name>buf</name><index>[<expr><name>u</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>add_round_key</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>skey</name> <operator>+</operator> <operator>(</operator><name>num_rounds</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>u</name> <operator>=</operator> <name>num_rounds</name> <operator>-</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>u</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>u</name> <operator>--</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><call><name>inv_shift_rows</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>inv_sub_bytes</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>add_round_key</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>skey</name> <operator>+</operator> <operator>(</operator><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>inv_mix_columns</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>inv_shift_rows</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>inv_sub_bytes</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>add_round_key</name><argument_list>(<argument><expr><name>state</name></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>u</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>u</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>u</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>buf</name><index>[<expr><name>u</name></expr>]</index></name> <operator>=</operator> <name><name>state</name><index>[<expr><name>u</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
</block_content>}</block></function>
</unit>
