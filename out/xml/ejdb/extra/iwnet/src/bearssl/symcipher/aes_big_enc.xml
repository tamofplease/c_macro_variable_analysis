<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/ejdb/extra/iwnet/src/bearssl/symcipher/aes_big_enc.c"><comment type="block">/*
 * Copyright (c) 2016 Thomas Pornin &lt;pornin@bolet.org&gt;
 *
 * Permission is hereby granted, free of charge, to any person obtaining 
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be 
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S</name></cpp:macro>   <cpp:value>br_aes_S</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>Ssm0</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0xC66363A5</literal></expr>, <expr><literal type="number">0xF87C7C84</literal></expr>, <expr><literal type="number">0xEE777799</literal></expr>, <expr><literal type="number">0xF67B7B8D</literal></expr>, <expr><literal type="number">0xFFF2F20D</literal></expr>, <expr><literal type="number">0xD66B6BBD</literal></expr>,
	<expr><literal type="number">0xDE6F6FB1</literal></expr>, <expr><literal type="number">0x91C5C554</literal></expr>, <expr><literal type="number">0x60303050</literal></expr>, <expr><literal type="number">0x02010103</literal></expr>, <expr><literal type="number">0xCE6767A9</literal></expr>, <expr><literal type="number">0x562B2B7D</literal></expr>,
	<expr><literal type="number">0xE7FEFE19</literal></expr>, <expr><literal type="number">0xB5D7D762</literal></expr>, <expr><literal type="number">0x4DABABE6</literal></expr>, <expr><literal type="number">0xEC76769A</literal></expr>, <expr><literal type="number">0x8FCACA45</literal></expr>, <expr><literal type="number">0x1F82829D</literal></expr>,
	<expr><literal type="number">0x89C9C940</literal></expr>, <expr><literal type="number">0xFA7D7D87</literal></expr>, <expr><literal type="number">0xEFFAFA15</literal></expr>, <expr><literal type="number">0xB25959EB</literal></expr>, <expr><literal type="number">0x8E4747C9</literal></expr>, <expr><literal type="number">0xFBF0F00B</literal></expr>,
	<expr><literal type="number">0x41ADADEC</literal></expr>, <expr><literal type="number">0xB3D4D467</literal></expr>, <expr><literal type="number">0x5FA2A2FD</literal></expr>, <expr><literal type="number">0x45AFAFEA</literal></expr>, <expr><literal type="number">0x239C9CBF</literal></expr>, <expr><literal type="number">0x53A4A4F7</literal></expr>,
	<expr><literal type="number">0xE4727296</literal></expr>, <expr><literal type="number">0x9BC0C05B</literal></expr>, <expr><literal type="number">0x75B7B7C2</literal></expr>, <expr><literal type="number">0xE1FDFD1C</literal></expr>, <expr><literal type="number">0x3D9393AE</literal></expr>, <expr><literal type="number">0x4C26266A</literal></expr>,
	<expr><literal type="number">0x6C36365A</literal></expr>, <expr><literal type="number">0x7E3F3F41</literal></expr>, <expr><literal type="number">0xF5F7F702</literal></expr>, <expr><literal type="number">0x83CCCC4F</literal></expr>, <expr><literal type="number">0x6834345C</literal></expr>, <expr><literal type="number">0x51A5A5F4</literal></expr>,
	<expr><literal type="number">0xD1E5E534</literal></expr>, <expr><literal type="number">0xF9F1F108</literal></expr>, <expr><literal type="number">0xE2717193</literal></expr>, <expr><literal type="number">0xABD8D873</literal></expr>, <expr><literal type="number">0x62313153</literal></expr>, <expr><literal type="number">0x2A15153F</literal></expr>,
	<expr><literal type="number">0x0804040C</literal></expr>, <expr><literal type="number">0x95C7C752</literal></expr>, <expr><literal type="number">0x46232365</literal></expr>, <expr><literal type="number">0x9DC3C35E</literal></expr>, <expr><literal type="number">0x30181828</literal></expr>, <expr><literal type="number">0x379696A1</literal></expr>,
	<expr><literal type="number">0x0A05050F</literal></expr>, <expr><literal type="number">0x2F9A9AB5</literal></expr>, <expr><literal type="number">0x0E070709</literal></expr>, <expr><literal type="number">0x24121236</literal></expr>, <expr><literal type="number">0x1B80809B</literal></expr>, <expr><literal type="number">0xDFE2E23D</literal></expr>,
	<expr><literal type="number">0xCDEBEB26</literal></expr>, <expr><literal type="number">0x4E272769</literal></expr>, <expr><literal type="number">0x7FB2B2CD</literal></expr>, <expr><literal type="number">0xEA75759F</literal></expr>, <expr><literal type="number">0x1209091B</literal></expr>, <expr><literal type="number">0x1D83839E</literal></expr>,
	<expr><literal type="number">0x582C2C74</literal></expr>, <expr><literal type="number">0x341A1A2E</literal></expr>, <expr><literal type="number">0x361B1B2D</literal></expr>, <expr><literal type="number">0xDC6E6EB2</literal></expr>, <expr><literal type="number">0xB45A5AEE</literal></expr>, <expr><literal type="number">0x5BA0A0FB</literal></expr>,
	<expr><literal type="number">0xA45252F6</literal></expr>, <expr><literal type="number">0x763B3B4D</literal></expr>, <expr><literal type="number">0xB7D6D661</literal></expr>, <expr><literal type="number">0x7DB3B3CE</literal></expr>, <expr><literal type="number">0x5229297B</literal></expr>, <expr><literal type="number">0xDDE3E33E</literal></expr>,
	<expr><literal type="number">0x5E2F2F71</literal></expr>, <expr><literal type="number">0x13848497</literal></expr>, <expr><literal type="number">0xA65353F5</literal></expr>, <expr><literal type="number">0xB9D1D168</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0xC1EDED2C</literal></expr>,
	<expr><literal type="number">0x40202060</literal></expr>, <expr><literal type="number">0xE3FCFC1F</literal></expr>, <expr><literal type="number">0x79B1B1C8</literal></expr>, <expr><literal type="number">0xB65B5BED</literal></expr>, <expr><literal type="number">0xD46A6ABE</literal></expr>, <expr><literal type="number">0x8DCBCB46</literal></expr>,
	<expr><literal type="number">0x67BEBED9</literal></expr>, <expr><literal type="number">0x7239394B</literal></expr>, <expr><literal type="number">0x944A4ADE</literal></expr>, <expr><literal type="number">0x984C4CD4</literal></expr>, <expr><literal type="number">0xB05858E8</literal></expr>, <expr><literal type="number">0x85CFCF4A</literal></expr>,
	<expr><literal type="number">0xBBD0D06B</literal></expr>, <expr><literal type="number">0xC5EFEF2A</literal></expr>, <expr><literal type="number">0x4FAAAAE5</literal></expr>, <expr><literal type="number">0xEDFBFB16</literal></expr>, <expr><literal type="number">0x864343C5</literal></expr>, <expr><literal type="number">0x9A4D4DD7</literal></expr>,
	<expr><literal type="number">0x66333355</literal></expr>, <expr><literal type="number">0x11858594</literal></expr>, <expr><literal type="number">0x8A4545CF</literal></expr>, <expr><literal type="number">0xE9F9F910</literal></expr>, <expr><literal type="number">0x04020206</literal></expr>, <expr><literal type="number">0xFE7F7F81</literal></expr>,
	<expr><literal type="number">0xA05050F0</literal></expr>, <expr><literal type="number">0x783C3C44</literal></expr>, <expr><literal type="number">0x259F9FBA</literal></expr>, <expr><literal type="number">0x4BA8A8E3</literal></expr>, <expr><literal type="number">0xA25151F3</literal></expr>, <expr><literal type="number">0x5DA3A3FE</literal></expr>,
	<expr><literal type="number">0x804040C0</literal></expr>, <expr><literal type="number">0x058F8F8A</literal></expr>, <expr><literal type="number">0x3F9292AD</literal></expr>, <expr><literal type="number">0x219D9DBC</literal></expr>, <expr><literal type="number">0x70383848</literal></expr>, <expr><literal type="number">0xF1F5F504</literal></expr>,
	<expr><literal type="number">0x63BCBCDF</literal></expr>, <expr><literal type="number">0x77B6B6C1</literal></expr>, <expr><literal type="number">0xAFDADA75</literal></expr>, <expr><literal type="number">0x42212163</literal></expr>, <expr><literal type="number">0x20101030</literal></expr>, <expr><literal type="number">0xE5FFFF1A</literal></expr>,
	<expr><literal type="number">0xFDF3F30E</literal></expr>, <expr><literal type="number">0xBFD2D26D</literal></expr>, <expr><literal type="number">0x81CDCD4C</literal></expr>, <expr><literal type="number">0x180C0C14</literal></expr>, <expr><literal type="number">0x26131335</literal></expr>, <expr><literal type="number">0xC3ECEC2F</literal></expr>,
	<expr><literal type="number">0xBE5F5FE1</literal></expr>, <expr><literal type="number">0x359797A2</literal></expr>, <expr><literal type="number">0x884444CC</literal></expr>, <expr><literal type="number">0x2E171739</literal></expr>, <expr><literal type="number">0x93C4C457</literal></expr>, <expr><literal type="number">0x55A7A7F2</literal></expr>,
	<expr><literal type="number">0xFC7E7E82</literal></expr>, <expr><literal type="number">0x7A3D3D47</literal></expr>, <expr><literal type="number">0xC86464AC</literal></expr>, <expr><literal type="number">0xBA5D5DE7</literal></expr>, <expr><literal type="number">0x3219192B</literal></expr>, <expr><literal type="number">0xE6737395</literal></expr>,
	<expr><literal type="number">0xC06060A0</literal></expr>, <expr><literal type="number">0x19818198</literal></expr>, <expr><literal type="number">0x9E4F4FD1</literal></expr>, <expr><literal type="number">0xA3DCDC7F</literal></expr>, <expr><literal type="number">0x44222266</literal></expr>, <expr><literal type="number">0x542A2A7E</literal></expr>,
	<expr><literal type="number">0x3B9090AB</literal></expr>, <expr><literal type="number">0x0B888883</literal></expr>, <expr><literal type="number">0x8C4646CA</literal></expr>, <expr><literal type="number">0xC7EEEE29</literal></expr>, <expr><literal type="number">0x6BB8B8D3</literal></expr>, <expr><literal type="number">0x2814143C</literal></expr>,
	<expr><literal type="number">0xA7DEDE79</literal></expr>, <expr><literal type="number">0xBC5E5EE2</literal></expr>, <expr><literal type="number">0x160B0B1D</literal></expr>, <expr><literal type="number">0xADDBDB76</literal></expr>, <expr><literal type="number">0xDBE0E03B</literal></expr>, <expr><literal type="number">0x64323256</literal></expr>,
	<expr><literal type="number">0x743A3A4E</literal></expr>, <expr><literal type="number">0x140A0A1E</literal></expr>, <expr><literal type="number">0x924949DB</literal></expr>, <expr><literal type="number">0x0C06060A</literal></expr>, <expr><literal type="number">0x4824246C</literal></expr>, <expr><literal type="number">0xB85C5CE4</literal></expr>,
	<expr><literal type="number">0x9FC2C25D</literal></expr>, <expr><literal type="number">0xBDD3D36E</literal></expr>, <expr><literal type="number">0x43ACACEF</literal></expr>, <expr><literal type="number">0xC46262A6</literal></expr>, <expr><literal type="number">0x399191A8</literal></expr>, <expr><literal type="number">0x319595A4</literal></expr>,
	<expr><literal type="number">0xD3E4E437</literal></expr>, <expr><literal type="number">0xF279798B</literal></expr>, <expr><literal type="number">0xD5E7E732</literal></expr>, <expr><literal type="number">0x8BC8C843</literal></expr>, <expr><literal type="number">0x6E373759</literal></expr>, <expr><literal type="number">0xDA6D6DB7</literal></expr>,
	<expr><literal type="number">0x018D8D8C</literal></expr>, <expr><literal type="number">0xB1D5D564</literal></expr>, <expr><literal type="number">0x9C4E4ED2</literal></expr>, <expr><literal type="number">0x49A9A9E0</literal></expr>, <expr><literal type="number">0xD86C6CB4</literal></expr>, <expr><literal type="number">0xAC5656FA</literal></expr>,
	<expr><literal type="number">0xF3F4F407</literal></expr>, <expr><literal type="number">0xCFEAEA25</literal></expr>, <expr><literal type="number">0xCA6565AF</literal></expr>, <expr><literal type="number">0xF47A7A8E</literal></expr>, <expr><literal type="number">0x47AEAEE9</literal></expr>, <expr><literal type="number">0x10080818</literal></expr>,
	<expr><literal type="number">0x6FBABAD5</literal></expr>, <expr><literal type="number">0xF0787888</literal></expr>, <expr><literal type="number">0x4A25256F</literal></expr>, <expr><literal type="number">0x5C2E2E72</literal></expr>, <expr><literal type="number">0x381C1C24</literal></expr>, <expr><literal type="number">0x57A6A6F1</literal></expr>,
	<expr><literal type="number">0x73B4B4C7</literal></expr>, <expr><literal type="number">0x97C6C651</literal></expr>, <expr><literal type="number">0xCBE8E823</literal></expr>, <expr><literal type="number">0xA1DDDD7C</literal></expr>, <expr><literal type="number">0xE874749C</literal></expr>, <expr><literal type="number">0x3E1F1F21</literal></expr>,
	<expr><literal type="number">0x964B4BDD</literal></expr>, <expr><literal type="number">0x61BDBDDC</literal></expr>, <expr><literal type="number">0x0D8B8B86</literal></expr>, <expr><literal type="number">0x0F8A8A85</literal></expr>, <expr><literal type="number">0xE0707090</literal></expr>, <expr><literal type="number">0x7C3E3E42</literal></expr>,
	<expr><literal type="number">0x71B5B5C4</literal></expr>, <expr><literal type="number">0xCC6666AA</literal></expr>, <expr><literal type="number">0x904848D8</literal></expr>, <expr><literal type="number">0x06030305</literal></expr>, <expr><literal type="number">0xF7F6F601</literal></expr>, <expr><literal type="number">0x1C0E0E12</literal></expr>,
	<expr><literal type="number">0xC26161A3</literal></expr>, <expr><literal type="number">0x6A35355F</literal></expr>, <expr><literal type="number">0xAE5757F9</literal></expr>, <expr><literal type="number">0x69B9B9D0</literal></expr>, <expr><literal type="number">0x17868691</literal></expr>, <expr><literal type="number">0x99C1C158</literal></expr>,
	<expr><literal type="number">0x3A1D1D27</literal></expr>, <expr><literal type="number">0x279E9EB9</literal></expr>, <expr><literal type="number">0xD9E1E138</literal></expr>, <expr><literal type="number">0xEBF8F813</literal></expr>, <expr><literal type="number">0x2B9898B3</literal></expr>, <expr><literal type="number">0x22111133</literal></expr>,
	<expr><literal type="number">0xD26969BB</literal></expr>, <expr><literal type="number">0xA9D9D970</literal></expr>, <expr><literal type="number">0x078E8E89</literal></expr>, <expr><literal type="number">0x339494A7</literal></expr>, <expr><literal type="number">0x2D9B9BB6</literal></expr>, <expr><literal type="number">0x3C1E1E22</literal></expr>,
	<expr><literal type="number">0x15878792</literal></expr>, <expr><literal type="number">0xC9E9E920</literal></expr>, <expr><literal type="number">0x87CECE49</literal></expr>, <expr><literal type="number">0xAA5555FF</literal></expr>, <expr><literal type="number">0x50282878</literal></expr>, <expr><literal type="number">0xA5DFDF7A</literal></expr>,
	<expr><literal type="number">0x038C8C8F</literal></expr>, <expr><literal type="number">0x59A1A1F8</literal></expr>, <expr><literal type="number">0x09898980</literal></expr>, <expr><literal type="number">0x1A0D0D17</literal></expr>, <expr><literal type="number">0x65BFBFDA</literal></expr>, <expr><literal type="number">0xD7E6E631</literal></expr>,
	<expr><literal type="number">0x844242C6</literal></expr>, <expr><literal type="number">0xD06868B8</literal></expr>, <expr><literal type="number">0x824141C3</literal></expr>, <expr><literal type="number">0x299999B0</literal></expr>, <expr><literal type="number">0x5A2D2D77</literal></expr>, <expr><literal type="number">0x1E0F0F11</literal></expr>,
	<expr><literal type="number">0x7BB0B0CB</literal></expr>, <expr><literal type="number">0xA85454FC</literal></expr>, <expr><literal type="number">0x6DBBBBD6</literal></expr>, <expr><literal type="number">0x2C16163A</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint32_t</name></type>
<name>rotr</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">32</literal> <operator>-</operator> <name>n</name><operator>)</operator><operator>)</operator> <operator>|</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <name>n</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SboxExt0</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>(Ssm0[x])</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SboxExt1</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>(rotr(Ssm0[x], 8))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SboxExt2</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>(rotr(Ssm0[x], 16))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SboxExt3</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>(rotr(Ssm0[x], 24))</cpp:value></cpp:define>


<comment type="block">/* see bearssl.h */</comment>
<function><type><name>void</name></type>
<name>br_aes_big_encrypt</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>s0</name></decl>, <decl><type ref="prev"/><name>s1</name></decl>, <decl><type ref="prev"/><name>s2</name></decl>, <decl><type ref="prev"/><name>s3</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>t0</name></decl>, <decl><type ref="prev"/><name>t1</name></decl>, <decl><type ref="prev"/><name>t2</name></decl>, <decl><type ref="prev"/><name>t3</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name></type> <name>u</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>buf</name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s0</name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>s1</name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>s2</name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>s3</name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>s0</name> <operator>^=</operator> <name><name>skey</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s1</name> <operator>^=</operator> <name><name>skey</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s2</name> <operator>^=</operator> <name><name>skey</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s3</name> <operator>^=</operator> <name><name>skey</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>u</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>u</name> <operator>&lt;</operator> <name>num_rounds</name></expr>;</condition> <incr><expr><name>u</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>uint32_t</name></type> <name>v0</name></decl>, <decl><type ref="prev"/><name>v1</name></decl>, <decl><type ref="prev"/><name>v2</name></decl>, <decl><type ref="prev"/><name>v3</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>v0</name> <operator>=</operator> <call><name>SboxExt0</name><argument_list>(<argument><expr><name>s0</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt1</name><argument_list>(<argument><expr><operator>(</operator><name>s1</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt2</name><argument_list>(<argument><expr><operator>(</operator><name>s2</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt3</name><argument_list>(<argument><expr><name>s3</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>v1</name> <operator>=</operator> <call><name>SboxExt0</name><argument_list>(<argument><expr><name>s1</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt1</name><argument_list>(<argument><expr><operator>(</operator><name>s2</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt2</name><argument_list>(<argument><expr><operator>(</operator><name>s3</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt3</name><argument_list>(<argument><expr><name>s0</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>v2</name> <operator>=</operator> <call><name>SboxExt0</name><argument_list>(<argument><expr><name>s2</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt1</name><argument_list>(<argument><expr><operator>(</operator><name>s3</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt2</name><argument_list>(<argument><expr><operator>(</operator><name>s0</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt3</name><argument_list>(<argument><expr><name>s1</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>v3</name> <operator>=</operator> <call><name>SboxExt0</name><argument_list>(<argument><expr><name>s3</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt1</name><argument_list>(<argument><expr><operator>(</operator><name>s0</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt2</name><argument_list>(<argument><expr><operator>(</operator><name>s1</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call>
			<operator>^</operator> <call><name>SboxExt3</name><argument_list>(<argument><expr><name>s2</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>s0</name> <operator>=</operator> <name>v0</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s1</name> <operator>=</operator> <name>v1</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s2</name> <operator>=</operator> <name>v2</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s3</name> <operator>=</operator> <name>v3</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s0</name> <operator>^=</operator> <name><name>skey</name><index>[<expr><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s1</name> <operator>^=</operator> <name><name>skey</name><index>[<expr><operator>(</operator><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s2</name> <operator>^=</operator> <name><name>skey</name><index>[<expr><operator>(</operator><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>s3</name> <operator>^=</operator> <name><name>skey</name><index>[<expr><operator>(</operator><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><name>t0</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><name>s0</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><operator>(</operator><name>s1</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><operator>(</operator><name>s2</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><name>s3</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>t1</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><name>s1</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><operator>(</operator><name>s2</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><operator>(</operator><name>s3</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><name>s0</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>t2</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><name>s2</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><operator>(</operator><name>s3</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><operator>(</operator><name>s0</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><name>s1</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>t3</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><name>s3</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><operator>(</operator><name>s0</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><operator>(</operator><name>s1</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator>
		<operator>|</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>S</name><index>[<expr><name>s2</name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s0</name> <operator>=</operator> <name>t0</name> <operator>^</operator> <name><name>skey</name><index>[<expr><name>num_rounds</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s1</name> <operator>=</operator> <name>t1</name> <operator>^</operator> <name><name>skey</name><index>[<expr><operator>(</operator><name>num_rounds</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s2</name> <operator>=</operator> <name>t2</name> <operator>^</operator> <name><name>skey</name><index>[<expr><operator>(</operator><name>num_rounds</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><name>s3</name> <operator>=</operator> <name>t3</name> <operator>^</operator> <name><name>skey</name><index>[<expr><operator>(</operator><name>num_rounds</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>br_enc32be</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>s0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>br_enc32be</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>br_enc32be</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>s2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>br_enc32be</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name>s3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
