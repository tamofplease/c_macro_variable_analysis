<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/ejdb/src/examples/example1.c"><comment type="line" format="doxygen">/// Sample records put/query example</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ejdb2.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHECK</name><parameter_list>(<parameter><type><name>rc_</name></type></parameter>)</parameter_list></cpp:macro>          \
  <cpp:value>if (rc_) {                 \
    iwlog_ecode_error3(rc_); \
    return 1;                \
  }</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>iwrc</name></type> <name>documents_visitor</name><parameter_list>(<parameter><decl><type><name>EJDB_EXEC</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EJDB_DOC</name></type> <name>doc</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>step</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <comment type="line">// Print document to stderr</comment>
  <return>return <expr><call><name>jbl_as_json</name><argument_list>(<argument><expr><name><name>doc</name><operator>-&gt;</operator><name>raw</name></name></expr></argument>, <argument><expr><name>jbl_fstream_json_printer</name></expr></argument>, <argument><expr><name>stderr</name></expr></argument>, <argument><expr><name>JBL_PRINT_PRETTY</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{<block_content>

  <decl_stmt><decl><type><name>EJDB_OPTS</name></type> <name>opts</name> <init>= <expr><block>{
    <expr><operator>.</operator><name>kv</name>       <operator>=</operator> <block>{
      <expr><operator>.</operator><name>path</name>   <operator>=</operator> <literal type="string">"example.db"</literal></expr>,
      <expr><operator>.</operator><name>oflags</name> <operator>=</operator> <name>IWKV_TRUNC</name></expr>
    }</block></expr>
  }</block></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>EJDB</name></type> <name>db</name></decl>;</decl_stmt>     <comment type="line">// EJDB2 storage handle</comment>
  <decl_stmt><decl><type><name>int64_t</name></type> <name>id</name></decl>;</decl_stmt>  <comment type="line">// Document id placeholder</comment>
  <decl_stmt><decl><type><name>JQL</name></type> <name>q</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>   <comment type="line">// Query instance</comment>
  <decl_stmt><decl><type><name>JBL</name></type> <name>jbl</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt> <comment type="line">// Json document</comment>

  <decl_stmt><decl><type><name>iwrc</name></type> <name>rc</name> <init>= <expr><call><name>ejdb_init</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>CHECK</name><argument_list>(<argument><expr><name>rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>ejdb_open</name><argument_list>(<argument><expr><operator>&amp;</operator><name>opts</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CHECK</name><argument_list>(<argument><expr><name>rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// First record</comment>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>jbl_from_json</name><argument_list>(<argument><expr><operator>&amp;</operator><name>jbl</name></expr></argument>, <argument><expr><literal type="string">"{\"name\":\"Bianca\", \"age\":4}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>RCGO</name><argument_list>(<argument><expr><name>rc</name></expr></argument>, <argument><expr><name>finish</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>ejdb_put_new</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><literal type="string">"parrots"</literal></expr></argument>, <argument><expr><name>jbl</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>RCGO</name><argument_list>(<argument><expr><name>rc</name></expr></argument>, <argument><expr><name>finish</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>jbl_destroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>jbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// Second record</comment>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>jbl_from_json</name><argument_list>(<argument><expr><operator>&amp;</operator><name>jbl</name></expr></argument>, <argument><expr><literal type="string">"{\"name\":\"Darko\", \"age\":8}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>RCGO</name><argument_list>(<argument><expr><name>rc</name></expr></argument>, <argument><expr><name>finish</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>ejdb_put_new</name><argument_list>(<argument><expr><name>db</name></expr></argument>, <argument><expr><literal type="string">"parrots"</literal></expr></argument>, <argument><expr><name>jbl</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>RCGO</name><argument_list>(<argument><expr><name>rc</name></expr></argument>, <argument><expr><name>finish</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>jbl_destroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>jbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// Now execute a query</comment>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>jql_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>q</name></expr></argument>, <argument><expr><literal type="string">"parrots"</literal></expr></argument>, <argument><expr><literal type="string">"/[age &gt; :age]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>RCGO</name><argument_list>(<argument><expr><name>rc</name></expr></argument>, <argument><expr><name>finish</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>EJDB_EXEC</name></type> <name>ux</name> <init>= <expr><block>{
    <expr><operator>.</operator><name>db</name>      <operator>=</operator> <name>db</name></expr>,
    <expr><operator>.</operator><name>q</name>       <operator>=</operator> <name>q</name></expr>,
    <expr><operator>.</operator><name>visitor</name> <operator>=</operator> <name>documents_visitor</name></expr>
  }</block></expr></init></decl>;</decl_stmt>

  <comment type="line">// Set query placeholder value.</comment>
  <comment type="line">// Actual query will be /[age &gt; 3]</comment>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>jql_set_i64</name><argument_list>(<argument><expr><name>q</name></expr></argument>, <argument><expr><literal type="string">"age"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>RCGO</name><argument_list>(<argument><expr><name>rc</name></expr></argument>, <argument><expr><name>finish</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// Now execute the query</comment>
  <expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>ejdb_exec</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ux</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>finish</name>:</label>
  <if_stmt><if>if <condition>(<expr><name>q</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>jql_destroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><name>jbl</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>jbl_destroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>jbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>ejdb_close</name><argument_list>(<argument><expr><operator>&amp;</operator><name>db</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>CHECK</name><argument_list>(<argument><expr><name>rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
