<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/ejdb/build/src/extern_iwnet/src/bearssl/bre/test/bre_pkcs10_test.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bre.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bre_internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IERR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list> <block>{<block_content>
  <decl_stmt><decl><type><name>int</name></type> <name>irc</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>br_hmac_drbg_context</name></type> <name>rng</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skey_buf</name><index>[<expr><name>BR_EC_KBUF_PRIV_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>bre_ec_csr</name></type> <name>csr</name> <init>= <expr><block>{
    <expr><operator>.</operator><name>signature_hc</name> <operator>=</operator> <operator>&amp;</operator><name>br_sha512_vtable</name></expr>,
    <expr><operator>.</operator><name>subj</name>         <operator>=</operator> <block>{
      <expr><operator>.</operator><name>cn</name>         <operator>=</operator> <literal type="string">"greenrooms.softmotions.com"</literal></expr>,
      <expr><operator>.</operator><name>dns_name</name>   <operator>=</operator> <literal type="string">"greenrooms.softmotions.com"</literal></expr>,
      <expr><operator>.</operator><name>email</name>      <operator>=</operator> <literal type="string">"info@softmotions.com"</literal></expr>
    }</block></expr>
  }</block></expr></init></decl>;</decl_stmt>

  <expr_stmt><expr><call><name>br_hmac_drbg_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>rng</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>br_sha256_vtable</name></expr></argument>, <argument><expr><literal type="string">"898a5fe5-f643-4900-be77-39abcdb69c08"</literal></expr></argument>, <argument><expr><literal type="number">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>br_hmac_drbg_update</name><argument_list>(<argument><expr><operator>&amp;</operator><name>rng</name></expr></argument>, <argument><expr><literal type="string">"b19cc4b7-0072-41ce-9b42-f361ac8cc82d"</literal></expr></argument>, <argument><expr><literal type="number">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name>br_ec_keygen</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>rng</name><operator>.</operator><name>vtable</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>br_ec_prime_i31</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>csr</name><operator>.</operator><name>sk</name></name></expr></argument>, <argument><expr><name>skey_buf</name></expr></argument>, <argument><expr><name>BR_EC_secp256r1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>err</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

  <decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>buf</name> <init>= <expr><call><name>bre_csr_ec_pem_create</name><argument_list>(<argument><expr><name>malloc</name></expr></argument>, <argument><expr><name>free</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>csr</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>len</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><operator>!</operator><name>buf</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>irc</name> <operator>=</operator> <name>IERR</name></expr>;</expr_stmt>
    <goto>goto <name>finish</name>;</goto>
  </block_content>}</block></if></if_stmt>

  <decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><call><name>fopen</name><argument_list>(<argument><expr><literal type="string">"pkcs10.pem"</literal></expr></argument>, <argument><expr><literal type="string">"w"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if_stmt><if>if <condition>(<expr><operator>!</operator><name>out</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>irc</name> <operator>=</operator> <name>IERR</name></expr>;</expr_stmt>
    <goto>goto <name>finish</name>;</goto>
  </block_content>}</block></if></if_stmt>
  <if_stmt><if>if <condition>(<expr><call><name>fwrite</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>out</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><name>irc</name> <operator>=</operator> <name>IERR</name></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>finish</name>:</label>
  <expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if_stmt><if>if <condition>(<expr><name>irc</name></expr>)</condition> <block>{<block_content>
    <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"%s\n"</literal></expr></argument>, <argument><expr><ternary><condition><expr><name>err</name></expr> ?</condition><then> <expr><name>err</name></expr> </then><else>: <expr><literal type="string">"Error"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></if></if_stmt>
  <return>return <expr><name>irc</name></expr>;</return>
</block_content>}</block></function>
</unit>
