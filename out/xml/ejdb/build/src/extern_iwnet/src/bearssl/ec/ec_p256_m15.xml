<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/builded_projects/ejdb/build/src/extern_iwnet/src/bearssl/ec/ec_p256_m15.c"><comment type="block">/*
 * Copyright (c) 2017 Thomas Pornin &lt;pornin@bolet.org&gt;
 *
 * Permission is hereby granted, free of charge, to any person obtaining 
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be 
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>

<comment type="block">/*
 * If BR_NO_ARITH_SHIFT is undefined, or defined to 0, then we _assume_
 * that right-shifting a signed negative integer copies the sign bit
 * (arithmetic right-shift). This is "implementation-defined behaviour",
 * i.e. it is not undefined, but it may differ between compilers. Each
 * compiler is supposed to document its behaviour in that respect. GCC
 * explicitly defines that an arithmetic right shift is used. We expect
 * all other compilers to do the same, because underlying CPU offer an
 * arithmetic right shift opcode that could not be used otherwise.
 */</comment>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BR_NO_ARITH_SHIFT</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARSH</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>(((uint32_t)(x) &gt;&gt; (n)) \
                    | ((-((uint32_t)(x) &gt;&gt; 31)) &lt;&lt; (32 - (n))))</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARSH</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>((*(int32_t *)&amp;(x)) &gt;&gt; (n))</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/*
 * Convert an integer from unsigned big-endian encoding to a sequence of
 * 13-bit words in little-endian order. The final "partial" word is
 * returned.
 */</comment>
<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>be8_to_le13</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>acc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>acc_len</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>acc</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>acc_len</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>len</name> <operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>acc</name> <operator>|=</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><name><name>src</name><index>[<expr><name>len</name></expr>]</index></name> <operator>&lt;&lt;</operator> <name>acc_len</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>acc_len</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>acc_len</name> <operator>&gt;=</operator> <literal type="number">13</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><operator>*</operator><name>dst</name> <operator>++</operator> <operator>=</operator> <name>acc</name> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>acc</name> <operator>&gt;&gt;=</operator> <literal type="number">13</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>acc_len</name> <operator>-=</operator> <literal type="number">13</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></while>
	<return>return <expr><name>acc</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Convert an integer (13-bit words, little-endian) to unsigned
 * big-endian encoding. The total encoding length is provided; all
 * the destination bytes will be filled.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>le13_to_be8</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>acc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>acc_len</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>acc</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>acc_len</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>len</name> <operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name>acc_len</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><name>acc</name> <operator>|=</operator> <operator>(</operator><operator>*</operator><name>src</name> <operator>++</operator><operator>)</operator> <operator>&lt;&lt;</operator> <name>acc_len</name></expr>;</expr_stmt>
			<expr_stmt><expr><name>acc_len</name> <operator>+=</operator> <literal type="number">13</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<expr_stmt><expr><name><name>dst</name><index>[<expr><name>len</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><name>acc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>acc</name> <operator>&gt;&gt;=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>acc_len</name> <operator>-=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
	</block_content>}</block></while>
</block_content>}</block></function>

<comment type="block">/*
 * Normalise an array of words to a strict 13 bits per word. Returned
 * value is the resulting carry. The source (w) and destination (d)
 * arrays may be identical, but shall not overlap partially.
 */</comment>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint32_t</name></type>
<name>norm13</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>w</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>size_t</name></type> <name>u</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>cc</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>cc</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>u</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>u</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><name>u</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>int32_t</name></type> <name>z</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>z</name> <operator>=</operator> <name><name>w</name><index>[<expr><name>u</name></expr>]</index></name> <operator>+</operator> <name>cc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>d</name><index>[<expr><name>u</name></expr>]</index></name> <operator>=</operator> <name>z</name> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>cc</name> <operator>=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
	<return>return <expr><name>cc</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * mul20() multiplies two 260-bit integers together. Each word must fit
 * on 13 bits; source operands use 20 words, destination operand
 * receives 40 words. All overlaps allowed.
 *
 * square20() computes the square of a 260-bit integer. Each word must
 * fit on 13 bits; source operand uses 20 words, destination operand
 * receives 40 words. All overlaps allowed.
 */</comment>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BR_SLOW_MUL15</name></expr></cpp:if>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>mul20</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/*
	 * Two-level Karatsuba: turns a 20x20 multiplication into
	 * nine 5x5 multiplications. We use 13-bit words but do not
	 * propagate carries immediately, so words may expand:
	 *
	 *  - First Karatsuba decomposition turns the 20x20 mul on
	 *    13-bit words into three 10x10 muls, two on 13-bit words
	 *    and one on 14-bit words.
	 *
	 *  - Second Karatsuba decomposition further splits these into:
	 *
	 *     * four 5x5 muls on 13-bit words
	 *     * four 5x5 muls on 14-bit words
	 *     * one 5x5 mul on 15-bit words
	 *
	 * Highest word value is 8191, 16382 or 32764, for 13-bit, 14-bit
	 * or 15-bit words, respectively.
	 */</comment>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>u</name><index>[<expr><literal type="number">45</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>v</name><index>[<expr><literal type="number">45</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>w</name><index>[<expr><literal type="number">90</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>cc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZADD</name><parameter_list>(<parameter><type><name>dw</name></type></parameter>, <parameter><type><name>d_off</name></type></parameter>, <parameter><type><name>s1w</name></type></parameter>, <parameter><type><name>s1_off</name></type></parameter>, <parameter><type><name>s2w</name></type></parameter>, <parameter><type><name>s2_off</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>do { \
		(dw)[5 * (d_off) + 0] = (s1w)[5 * (s1_off) + 0] \
			+ (s2w)[5 * (s2_off) + 0]; \
		(dw)[5 * (d_off) + 1] = (s1w)[5 * (s1_off) + 1] \
			+ (s2w)[5 * (s2_off) + 1]; \
		(dw)[5 * (d_off) + 2] = (s1w)[5 * (s1_off) + 2] \
			+ (s2w)[5 * (s2_off) + 2]; \
		(dw)[5 * (d_off) + 3] = (s1w)[5 * (s1_off) + 3] \
			+ (s2w)[5 * (s2_off) + 3]; \
		(dw)[5 * (d_off) + 4] = (s1w)[5 * (s1_off) + 4] \
			+ (s2w)[5 * (s2_off) + 4]; \
	} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZADDT</name><parameter_list>(<parameter><type><name>dw</name></type></parameter>, <parameter><type><name>d_off</name></type></parameter>, <parameter><type><name>sw</name></type></parameter>, <parameter><type><name>s_off</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>do { \
		(dw)[5 * (d_off) + 0] += (sw)[5 * (s_off) + 0]; \
		(dw)[5 * (d_off) + 1] += (sw)[5 * (s_off) + 1]; \
		(dw)[5 * (d_off) + 2] += (sw)[5 * (s_off) + 2]; \
		(dw)[5 * (d_off) + 3] += (sw)[5 * (s_off) + 3]; \
		(dw)[5 * (d_off) + 4] += (sw)[5 * (s_off) + 4]; \
	} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZSUB2F</name><parameter_list>(<parameter><type><name>dw</name></type></parameter>, <parameter><type><name>d_off</name></type></parameter>, <parameter><type><name>s1w</name></type></parameter>, <parameter><type><name>s1_off</name></type></parameter>, <parameter><type><name>s2w</name></type></parameter>, <parameter><type><name>s2_off</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>do { \
		(dw)[5 * (d_off) + 0] -= (s1w)[5 * (s1_off) + 0] \
			+ (s2w)[5 * (s2_off) + 0]; \
		(dw)[5 * (d_off) + 1] -= (s1w)[5 * (s1_off) + 1] \
			+ (s2w)[5 * (s2_off) + 1]; \
		(dw)[5 * (d_off) + 2] -= (s1w)[5 * (s1_off) + 2] \
			+ (s2w)[5 * (s2_off) + 2]; \
		(dw)[5 * (d_off) + 3] -= (s1w)[5 * (s1_off) + 3] \
			+ (s2w)[5 * (s2_off) + 3]; \
		(dw)[5 * (d_off) + 4] -= (s1w)[5 * (s1_off) + 4] \
			+ (s2w)[5 * (s2_off) + 4]; \
	} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPR1</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>cprcc</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>do { \
		uint32_t cprz = (w) + cprcc; \
		(w) = cprz &amp; 0x1FFF; \
		cprcc = cprz &gt;&gt; 13; \
	} while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CPR</name><parameter_list>(<parameter><type><name>dw</name></type></parameter>, <parameter><type><name>d_off</name></type></parameter>)</parameter_list></cpp:macro>   <cpp:value>do { \
		uint32_t cprcc; \
		cprcc = 0; \
		CPR1((dw)[(d_off) + 0], cprcc); \
		CPR1((dw)[(d_off) + 1], cprcc); \
		CPR1((dw)[(d_off) + 2], cprcc); \
		CPR1((dw)[(d_off) + 3], cprcc); \
		CPR1((dw)[(d_off) + 4], cprcc); \
		CPR1((dw)[(d_off) + 5], cprcc); \
		CPR1((dw)[(d_off) + 6], cprcc); \
		CPR1((dw)[(d_off) + 7], cprcc); \
		CPR1((dw)[(d_off) + 8], cprcc); \
		(dw)[(d_off) + 9] = cprcc; \
	} while (0)</cpp:value></cpp:define>

	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">20</literal> <operator>*</operator> <sizeof>sizeof <name/></sizeof>*<name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>u</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>u</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">20</literal> <operator>*</operator> <sizeof>sizeof <name/></sizeof>*<name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADD</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Do the eight first 8x8 muls. Source words are at most 16382
	 * each, so we can add product results together "as is" in 32-bit
	 * words.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">40</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">5</literal></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
			<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>w</name><index>[<expr><operator>(</operator><name>i</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	</block_content>}</block></for>

	<comment type="block">/*
	 * For the 9th multiplication, source words are up to 32764,
	 * so we must do some carry propagation. If we add up to
	 * 4 products and the carry is no more than 524224, then the
	 * result fits in 32 bits, and the next carry will be no more
	 * than 524224 (because 4*(32764^2)+524224 &lt; 8192*524225).
	 *
	 * We thus just skip one of the products in the middle word,
	 * then do a carry propagation (this reduces words to 13 bits
	 * each, except possibly the last, which may use up to 17 bits
	 * or so), then add the missing product.
	 */</comment>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="block">/* + MUL15(u[40 + 4], v[40 + 0]) */</comment>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>CPR</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>w</name><index>[<expr><literal type="number">80</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name> <operator>+=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>u</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><literal type="number">40</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * The products on 14-bit words in slots 6 and 7 yield values
	 * up to 5*(16382^2) each, and we need to subtract two such
	 * values from the higher word. We need the subtraction to fit
	 * in a _signed_ 32-bit integer, i.e. 31 bits + a sign bit.
	 * However, 10*(16382^2) does not fit. So we must perform a
	 * bit of reduction here.
	 */</comment>
	<expr_stmt><expr><call><name>CPR</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>CPR</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Recompose results.
	 */</comment>

	<comment type="block">/* 0..1*0..1 into 0..3 */</comment>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* 2..3*2..3 into 4..7 */</comment>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* (0..1+2..3)*(0..1+2..3) into 12..15 */</comment>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* first-level recomposition */</comment>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZSUB2F</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>ZADDT</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Perform carry propagation to bring all words down to 13 bits.
	 */</comment>
	<expr_stmt><expr><name>cc</name> <operator>=</operator> <call><name>norm13</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">39</literal></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">13</literal><operator>)</operator></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ZADD</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ZADDT</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ZSUB2F</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CPR1</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CPR</name></cpp:undef>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>
<name>square20</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>mul20</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>mul20</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t</name><index>[<expr><literal type="number">39</literal></expr>]</index></name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">20</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">21</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">22</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">23</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">26</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">27</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">28</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">29</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">30</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">31</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">34</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">35</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">36</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">37</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">38</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">39</literal></expr>]</index></name> <operator>=</operator> <call><name>norm13</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><literal type="number">39</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>square20</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t</name><index>[<expr><literal type="number">39</literal></expr>]</index></name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">20</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">21</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">22</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">23</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">25</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">26</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">7</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">27</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">28</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">29</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">30</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">31</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">34</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">35</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">36</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>)</argument_list></call>
		<operator>+</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">37</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">38</literal></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">39</literal></expr>]</index></name> <operator>=</operator> <call><name>norm13</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><literal type="number">39</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/*
 * Modulus for field F256 (field for point coordinates in curve P-256).
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>F256</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x001F</literal></expr>,
	<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0400</literal></expr>, <expr><literal type="number">0x0000</literal></expr>,
	<expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x1FF8</literal></expr>, <expr><literal type="number">0x1FFF</literal></expr>, <expr><literal type="number">0x01FF</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * The 'b' curve equation coefficient for P-256.
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>P256_B</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x004B</literal></expr>, <expr><literal type="number">0x1E93</literal></expr>, <expr><literal type="number">0x0F89</literal></expr>, <expr><literal type="number">0x1C78</literal></expr>, <expr><literal type="number">0x03BC</literal></expr>, <expr><literal type="number">0x187B</literal></expr>, <expr><literal type="number">0x114E</literal></expr>, <expr><literal type="number">0x1619</literal></expr>,
	<expr><literal type="number">0x1D06</literal></expr>, <expr><literal type="number">0x0328</literal></expr>, <expr><literal type="number">0x01AF</literal></expr>, <expr><literal type="number">0x0D31</literal></expr>, <expr><literal type="number">0x1557</literal></expr>, <expr><literal type="number">0x15DE</literal></expr>, <expr><literal type="number">0x1ECF</literal></expr>, <expr><literal type="number">0x127C</literal></expr>,
	<expr><literal type="number">0x0A3A</literal></expr>, <expr><literal type="number">0x0EC5</literal></expr>, <expr><literal type="number">0x118D</literal></expr>, <expr><literal type="number">0x00B5</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * Perform a "short reduction" in field F256 (field for curve P-256).
 * The source value should be less than 262 bits; on output, it will
 * be at most 257 bits, and less than twice the modulus.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>reduce_f256</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>x</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>d</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">9</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>&amp;=</operator> <literal type="number">0x01FF</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>+=</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>-=</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>-=</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+=</operator> <name>x</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Perform a "final reduction" in field F256 (field for curve P-256).
 * The source value must be less than twice the modulus. If the value
 * is not lower than the modulus, then the modulus is subtracted and
 * this function returns 1; otherwise, it leaves it untouched and it
 * returns 0.
 */</comment>
<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>reduce_final_f256</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>cc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><sizeof>sizeof <name>t</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>cc</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>uint32_t</name></type> <name>w</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>w</name> <operator>=</operator> <name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name>cc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cc</name> <operator>=</operator> <name>w</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>w</name> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><name>cc</name> <operator>^=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>CCOPY</name><argument_list>(<argument><expr><name>cc</name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><sizeof>sizeof <name>t</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>cc</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Perform a multiplication of two integers modulo
 * 2^256-2^224+2^192+2^96-1 (for NIST curve P-256). Operands are arrays
 * of 20 words, each containing 13 bits of data, in little-endian order.
 * On input, upper word may be up to 13 bits (hence value up to 2^260-1);
 * on output, value fits on 257 bits and is lower than twice the modulus.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>mul_f256</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t</name><index>[<expr><literal type="number">40</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>cc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<comment type="block">/*
	 * Compute raw multiplication. All result words fit in 13 bits
	 * each.
	 */</comment>
	<expr_stmt><expr><call><name>mul20</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Modular reduction: each high word in added/subtracted where
	 * necessary.
	 *
	 * The modulus is:
	 *    p = 2^256 - 2^224 + 2^192 + 2^96 - 1
	 * Therefore:
	 *    2^256 = 2^224 - 2^192 - 2^96 + 1 mod p
	 *
	 * For a word x at bit offset n (n &gt;= 256), we have:
	 *    x*2^n = x*2^(n-32) - x*2^(n-64)
	 *            - x*2^(n - 160) + x*2^(n-256) mod p
	 *
	 * Thus, we can nullify the high word if we reinject it at some
	 * proper emplacements.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">39</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>--</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>uint32_t</name></type> <name>x</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name> <operator>+=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">3</literal></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">7</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">4</literal></expr>]</index></name> <operator>-=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">5</literal></expr>]</index></name> <operator>-=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">12</literal></expr>]</index></name> <operator>-=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">13</literal></expr>]</index></name> <operator>-=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">9</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">19</literal></expr>]</index></name> <operator>+=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">20</literal></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
	</block_content>}</block></for>

	<comment type="block">/*
	 * Propagate carries. This is a signed propagation, and the
	 * result may be negative. The loop above may enlarge values,
	 * but not two much: worst case is the chain involving t[i - 3],
	 * in which a value may be added to itself up to 7 times. Since
	 * starting values are 13-bit each, all words fit on 20 bits
	 * (21 to account for the sign bit).
	 */</comment>
	<expr_stmt><expr><name>cc</name> <operator>=</operator> <call><name>norm13</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Perform modular reduction again for the bits beyond 256 (the carry
	 * and the bits 256..259). Since the largest shift below is by 10
	 * bits, and the values fit on 21 bits, values fit in 32-bit words,
	 * thereby allowing injecting full word values.
	 */</comment>
	<expr_stmt><expr><name>cc</name> <operator>=</operator> <operator>(</operator><name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>t</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">9</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>&amp;=</operator> <literal type="number">0x01FF</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>-=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>-=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name></expr>;</expr_stmt>

	<comment type="block">/*
	 * If the carry is negative, then after carry propagation, we may
	 * end up with a value which is negative, and we don't want that.
	 * Thus, in that case, we add the modulus. Note that the subtraction
	 * result, when the carry is negative, is always smaller than the
	 * modulus, so the extra addition will not make the value exceed
	 * twice the modulus.
	 */</comment>
	<expr_stmt><expr><name>cc</name> <operator>&gt;&gt;=</operator> <literal type="number">31</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-=</operator> <name>cc</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>-=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">9</literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Square an integer modulo 2^256-2^224+2^192+2^96-1 (for NIST curve
 * P-256). Operand is an array of 20 words, each containing 13 bits of
 * data, in little-endian order. On input, upper word may be up to 13
 * bits (hence value up to 2^260-1); on output, value fits on 257 bits
 * and is lower than twice the modulus.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>square_f256</name><parameter_list>(<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t</name><index>[<expr><literal type="number">40</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>cc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<comment type="block">/*
	 * Compute raw square. All result words fit in 13 bits each.
	 */</comment>
	<expr_stmt><expr><call><name>square20</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Modular reduction: each high word in added/subtracted where
	 * necessary.
	 *
	 * The modulus is:
	 *    p = 2^256 - 2^224 + 2^192 + 2^96 - 1
	 * Therefore:
	 *    2^256 = 2^224 - 2^192 - 2^96 + 1 mod p
	 *
	 * For a word x at bit offset n (n &gt;= 256), we have:
	 *    x*2^n = x*2^(n-32) - x*2^(n-64)
	 *            - x*2^(n - 160) + x*2^(n-256) mod p
	 *
	 * Thus, we can nullify the high word if we reinject it at some
	 * proper emplacements.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">39</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>--</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>uint32_t</name></type> <name>x</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name> <operator>+=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">3</literal></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">7</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">4</literal></expr>]</index></name> <operator>-=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">5</literal></expr>]</index></name> <operator>-=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">12</literal></expr>]</index></name> <operator>-=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">13</literal></expr>]</index></name> <operator>-=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">9</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">19</literal></expr>]</index></name> <operator>+=</operator> <call><name>ARSH</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">20</literal></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1FFF</literal></expr>;</expr_stmt>
	</block_content>}</block></for>

	<comment type="block">/*
	 * Propagate carries. This is a signed propagation, and the
	 * result may be negative. The loop above may enlarge values,
	 * but not two much: worst case is the chain involving t[i - 3],
	 * in which a value may be added to itself up to 7 times. Since
	 * starting values are 13-bit each, all words fit on 20 bits
	 * (21 to account for the sign bit).
	 */</comment>
	<expr_stmt><expr><name>cc</name> <operator>=</operator> <call><name>norm13</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Perform modular reduction again for the bits beyond 256 (the carry
	 * and the bits 256..259). Since the largest shift below is by 10
	 * bits, and the values fit on 21 bits, values fit in 32-bit words,
	 * thereby allowing injecting full word values.
	 */</comment>
	<expr_stmt><expr><name>cc</name> <operator>=</operator> <operator>(</operator><name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>t</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">9</literal><operator>)</operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>&amp;=</operator> <literal type="number">0x01FF</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>-=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>-=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name></expr>;</expr_stmt>

	<comment type="block">/*
	 * If the carry is negative, then after carry propagation, we may
	 * end up with a value which is negative, and we don't want that.
	 * Thus, in that case, we add the modulus. Note that the subtraction
	 * result, when the carry is negative, is always smaller than the
	 * modulus, so the extra addition will not make the value exceed
	 * twice the modulus.
	 */</comment>
	<expr_stmt><expr><name>cc</name> <operator>&gt;&gt;=</operator> <literal type="number">31</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-=</operator> <name>cc</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>-=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>+=</operator> <name>cc</name> <operator>&lt;&lt;</operator> <literal type="number">9</literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Jacobian coordinates for a point in P-256: affine coordinates (X,Y)
 * are such that:
 *   X = x / z^2
 *   Y = y / z^3
 * For the point at infinity, z = 0.
 * Each point thus admits many possible representations.
 *
 * Coordinates are represented in arrays of 32-bit integers, each holding
 * 13 bits of data. Values may also be slightly greater than the modulus,
 * but they will always be lower than twice the modulus.
 */</comment>
<typedef>typedef <type><struct>struct <block>{
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>x</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>y</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>z</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>p256_jacobian</name>;</typedef>

<comment type="block">/*
 * Convert a point to affine coordinates:
 *  - If the point is the point at infinity, then all three coordinates
 *    are set to 0.
 *  - Otherwise, the 'z' coordinate is set to 1, and the 'x' and 'y'
 *    coordinates are the 'X' and 'Y' affine coordinates.
 * The coordinates are guaranteed to be lower than the modulus.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>p256_to_affine</name><parameter_list>(<parameter><decl><type><name>p256_jacobian</name> <modifier>*</modifier></type><name>P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t1</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t2</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<comment type="block">/*
	 * Invert z with a modular exponentiation: the modulus is
	 * p = 2^256 - 2^224 + 2^192 + 2^96 - 1, and the exponent is
	 * p-2. Exponent bit pattern (from high to low) is:
	 *  - 32 bits of value 1
	 *  - 31 bits of value 0
	 *  - 1 bit of value 1
	 *  - 96 bits of value 0
	 *  - 94 bits of value 1
	 *  - 1 bit of value 0
	 *  - 1 bit of value 1
	 * Thus, we precompute z^(2^31-1) to speed things up.
	 *
	 * If z = 0 (point at infinity) then the modular exponentiation
	 * will yield 0, which leads to the expected result (all three
	 * coordinates set to 0).
	 */</comment>

	<comment type="block">/*
	 * A simple square-and-multiply for z^(2^31-1). We could save about
	 * two dozen multiplications here with an addition chain, but
	 * this would require a bit more code, and extra stack buffers.
	 */</comment>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><sizeof>sizeof <name><name>P</name><operator>-&gt;</operator><name>z</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">30</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>

	<comment type="block">/*
	 * Square-and-multiply. Apart from the squarings, we have a few
	 * multiplications to set bits to 1; we multiply by the original z
	 * for setting 1 bit, and by t1 for setting 31 bits.
	 */</comment>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><sizeof>sizeof <name><name>P</name><operator>-&gt;</operator><name>z</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<switch>switch <condition>(<expr><name>i</name></expr>)</condition> <block>{<block_content>
		<case>case <expr><literal type="number">31</literal></expr>:</case>
		<case>case <expr><literal type="number">190</literal></expr>:</case>
		<case>case <expr><literal type="number">221</literal></expr>:</case>
		<case>case <expr><literal type="number">252</literal></expr>:</case>
			<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		<case>case <expr><literal type="number">63</literal></expr>:</case>
		<case>case <expr><literal type="number">253</literal></expr>:</case>
		<case>case <expr><literal type="number">255</literal></expr>:</case>
			<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block></switch>
	</block_content>}</block></for>

	<comment type="block">/*
	 * Now that we have 1/z, multiply x by 1/z^2 and y by 1/z^3.
	 */</comment>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_final_f256</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_final_f256</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Multiply z by 1/z. If z = 0, then this will yield 0, otherwise
	 * this will set z to 1.
	 */</comment>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_final_f256</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Double a point in P-256. This function works for all valid points,
 * including the point at infinity.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>p256_double</name><parameter_list>(<parameter><decl><type><name>p256_jacobian</name> <modifier>*</modifier></type><name>Q</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/*
	 * Doubling formulas are:
	 *
	 *   s = 4*x*y^2
	 *   m = 3*(x + z^2)*(x - z^2)
	 *   x' = m^2 - 2*s
	 *   y' = m*(s - x') - 8*y^4
	 *   z' = 2*y*z
	 *
	 * These formulas work for all points, including points of order 2
	 * and points at infinity:
	 *   - If y = 0 then z' = 0. But there is no such point in P-256
	 *     anyway.
	 *   - If z = 0 then z' = 0.
	 */</comment>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t1</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t2</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t3</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t4</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<comment type="block">/*
	 * Compute z^2 in t1.
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name><name>Q</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute x-z^2 in t2 and x+z^2 in t1.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <name><name>Q</name><operator>-&gt;</operator><name>x</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <name><name>Q</name><operator>-&gt;</operator><name>x</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute 3*(x+z^2)*(x-z^2) in t1.
	 */</comment>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>MUL15</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name><name>t3</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute 4*x*y^2 (in t2) and 2*y^2 (in t3).
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><name><name>Q</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t3</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name><name>Q</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute x' = m^2 - 2*s.
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name><name>Q</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>Q</name><operator>-&gt;</operator><name>x</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><name><name>t2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name><name>Q</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>Q</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name><name>Q</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute z' = 2*y*z.
	 */</comment>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name><name>Q</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name><name>Q</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>Q</name><operator>-&gt;</operator><name>z</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>t4</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name><name>Q</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name><name>Q</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name><name>Q</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute y' = m*(s - x') - 8*y^4. Note that we already have
	 * 2*y^2 in t3.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>Q</name><operator>-&gt;</operator><name>x</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name><name>Q</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>Q</name><operator>-&gt;</operator><name>y</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><name><name>t4</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name><name>Q</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name><name>Q</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name><name>Q</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Add point P2 to point P1.
 *
 * This function computes the wrong result in the following cases:
 *
 *   - If P1 == 0 but P2 != 0
 *   - If P1 != 0 but P2 == 0
 *   - If P1 == P2
 *
 * In all three cases, P1 is set to the point at infinity.
 *
 * Returned value is 0 if one of the following occurs:
 *
 *   - P1 and P2 have the same Y coordinate
 *   - P1 == 0 and P2 == 0
 *   - The Y coordinate of one of the points is 0 and the other point is
 *     the point at infinity.
 *
 * The third case cannot actually happen with valid points, since a point
 * with Y == 0 is a point of order 2, and there is no point of order 2 on
 * curve P-256.
 *
 * Therefore, assuming that P1 != 0 and P2 != 0 on input, then the caller
 * can apply the following:
 *
 *   - If the result is not the point at infinity, then it is correct.
 *   - Otherwise, if the returned value is 1, then this is a case of
 *     P1+P2 == 0, so the result is indeed the point at infinity.
 *   - Otherwise, P1 == P2, so a "double" operation should have been
 *     performed.
 */</comment>
<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>p256_add</name><parameter_list>(<parameter><decl><type><name>p256_jacobian</name> <modifier>*</modifier></type><name>P1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>p256_jacobian</name> <modifier>*</modifier></type><name>P2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/*
	 * Addtions formulas are:
	 *
	 *   u1 = x1 * z2^2
	 *   u2 = x2 * z1^2
	 *   s1 = y1 * z2^3
	 *   s2 = y2 * z1^3
	 *   h = u2 - u1
	 *   r = s2 - s1
	 *   x3 = r^2 - h^3 - 2 * u1 * h^2
	 *   y3 = r * (u1 * h^2 - x3) - s1 * h^3
	 *   z3 = h * z1 * z2
	 */</comment>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t1</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t2</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t3</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t4</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t5</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t6</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t7</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>ret</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<comment type="block">/*
	 * Compute u1 = x1*z2^2 (in t1) and s1 = y1*z2^3 (in t3).
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><name><name>P2</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name><name>P2</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute u2 = x2*z1^2 (in t2) and s2 = y2*z1^3 (in t4).
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name><name>P2</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t5</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name><name>P2</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name>t5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute h = h2 - u1 (in t2) and r = s2 - s1 (in t4).
	 * We need to test whether r is zero, so we will do some extra
	 * reduce.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t4</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>t3</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_final_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>ret</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>ret</name> <operator>|=</operator> <name><name>t4</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><name>ret</name> <operator>=</operator> <operator>(</operator><name>ret</name> <operator>|</operator> <operator>-</operator><name>ret</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">31</literal></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute u1*h^2 (in t6) and h^3 (in t5);
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t7</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute x3 = r^2 - h^3 - 2*u1*h^2.
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>-</operator> <name><name>t5</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <operator>(</operator><name><name>t6</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute y3 = r*(u1*h^2 - x3) - s1*h^3.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t6</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>P1</name><operator>-&gt;</operator><name>x</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute z3 = h*z1*z2.
	 */</comment>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name><name>P2</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Add point P2 to point P1. This is a specialised function for the
 * case when P2 is a non-zero point in affine coordinate.
 *
 * This function computes the wrong result in the following cases:
 *
 *   - If P1 == 0
 *   - If P1 == P2
 *
 * In both cases, P1 is set to the point at infinity.
 *
 * Returned value is 0 if one of the following occurs:
 *
 *   - P1 and P2 have the same Y coordinate
 *   - The Y coordinate of P2 is 0 and P1 is the point at infinity.
 *
 * The second case cannot actually happen with valid points, since a point
 * with Y == 0 is a point of order 2, and there is no point of order 2 on
 * curve P-256.
 *
 * Therefore, assuming that P1 != 0 on input, then the caller
 * can apply the following:
 *
 *   - If the result is not the point at infinity, then it is correct.
 *   - Otherwise, if the returned value is 1, then this is a case of
 *     P1+P2 == 0, so the result is indeed the point at infinity.
 *   - Otherwise, P1 == P2, so a "double" operation should have been
 *     performed.
 */</comment>
<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>p256_add_mixed</name><parameter_list>(<parameter><decl><type><name>p256_jacobian</name> <modifier>*</modifier></type><name>P1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>p256_jacobian</name> <modifier>*</modifier></type><name>P2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/*
	 * Addtions formulas are:
	 *
	 *   u1 = x1
	 *   u2 = x2 * z1^2
	 *   s1 = y1
	 *   s2 = y2 * z1^3
	 *   h = u2 - u1
	 *   r = s2 - s1
	 *   x3 = r^2 - h^3 - 2 * u1 * h^2
	 *   y3 = r * (u1 * h^2 - x3) - s1 * h^3
	 *   z3 = h * z1
	 */</comment>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>t1</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t2</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t3</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t4</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t5</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t6</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t7</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>ret</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<comment type="block">/*
	 * Compute u1 = x1 (in t1) and s1 = y1 (in t3).
	 */</comment>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><sizeof>sizeof <name>t1</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><sizeof>sizeof <name>t3</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute u2 = x2*z1^2 (in t2) and s2 = y2*z1^3 (in t4).
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name><name>P2</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t5</name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name><name>P2</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name>t5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute h = h2 - u1 (in t2) and r = s2 - s1 (in t4).
	 * We need to test whether r is zero, so we will do some extra
	 * reduce.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>t4</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>t3</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_final_f256</name><argument_list>(<argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>ret</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>ret</name> <operator>|=</operator> <name><name>t4</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><name>ret</name> <operator>=</operator> <operator>(</operator><name>ret</name> <operator>|</operator> <operator>-</operator><name>ret</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">31</literal></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute u1*h^2 (in t6) and h^3 (in t5);
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t7</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute x3 = r^2 - h^3 - 2*u1*h^2.
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>-</operator> <name><name>t5</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <operator>(</operator><name><name>t6</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute y3 = r*(u1*h^2 - x3) - s1*h^3.
	 */</comment>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t6</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>P1</name><operator>-&gt;</operator><name>x</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Compute z3 = h*z1*z2.
	 */</comment>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name><name>P1</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name><name>P1</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><name>t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Decode a P-256 point. This function does not support the point at
 * infinity. Returned value is 0 if the point is invalid, 1 otherwise.
 */</comment>
<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>p256_decode</name><parameter_list>(<parameter><decl><type><name>p256_jacobian</name> <modifier>*</modifier></type><name>P</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>tx</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>ty</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t1</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>t2</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>bad</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>len</name> <operator>!=</operator> <literal type="number">65</literal></expr>)</condition> <block>{<block_content>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<expr_stmt><expr><name>buf</name> <operator>=</operator> <name>src</name></expr>;</expr_stmt>

	<comment type="block">/*
	 * First byte must be 0x04 (uncompressed format). We could support
	 * "hybrid format" (first byte is 0x06 or 0x07, and encodes the
	 * least significant bit of the Y coordinate), but it is explicitly
	 * forbidden by RFC 5480 (section 2.2).
	 */</comment>
	<expr_stmt><expr><name>bad</name> <operator>=</operator> <call><name>NEQ</name><argument_list>(<argument><expr><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Decode the coordinates, and check that they are both lower
	 * than the modulus.
	 */</comment>
	<expr_stmt><expr><name><name>tx</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>=</operator> <call><name>be8_to_le13</name><argument_list>(<argument><expr><name>tx</name></expr></argument>, <argument><expr><name>buf</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>ty</name><index>[<expr><literal type="number">19</literal></expr>]</index></name> <operator>=</operator> <call><name>be8_to_le13</name><argument_list>(<argument><expr><name>ty</name></expr></argument>, <argument><expr><name>buf</name> <operator>+</operator> <literal type="number">33</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>bad</name> <operator>|=</operator> <call><name>reduce_final_f256</name><argument_list>(<argument><expr><name>tx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>bad</name> <operator>|=</operator> <call><name>reduce_final_f256</name><argument_list>(<argument><expr><name>ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * Check curve equation.
	 */</comment>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>tx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>mul_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>tx</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>square_f256</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>ty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>F256</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>-</operator> <call><name>MUL15</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name><name>tx</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator>+</operator> <name><name>P256_B</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name><name>t2</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>norm13</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_final_f256</name><argument_list>(<argument><expr><name>t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>bad</name> <operator>|=</operator> <name><name>t1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>

	<comment type="block">/*
	 * Copy coordinates to the point structure.
	 */</comment>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name>tx</name></expr></argument>, <argument><expr><sizeof>sizeof <name>tx</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name>ty</name></expr></argument>, <argument><expr><sizeof>sizeof <name>ty</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>P</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <name><name>P</name><operator>-&gt;</operator><name>z</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>P</name><operator>-&gt;</operator><name>z</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<return>return <expr><call><name>EQ</name><argument_list>(<argument><expr><name>bad</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<comment type="block">/*
 * Encode a point into a buffer. This function assumes that the point is
 * valid, in affine coordinates, and not the point at infinity.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>p256_encode</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>p256_jacobian</name> <modifier>*</modifier></type><name>P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>buf</name> <operator>=</operator> <name>dst</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x04</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>le13_to_be8</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>le13_to_be8</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">33</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name><name>P</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Multiply a curve point by an integer. The integer is assumed to be
 * lower than the curve order, and the base point must not be the point
 * at infinity.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>p256_mul</name><parameter_list>(<parameter><decl><type><name>p256_jacobian</name> <modifier>*</modifier></type><name>P</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>xlen</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/*
	 * qz is a flag that is initially 1, and remains equal to 1
	 * as long as the point is the point at infinity.
	 *
	 * We use a 2-bit window to handle multiplier bits by pairs.
	 * The precomputed window really is the points P2 and P3.
	 */</comment>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>qz</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>p256_jacobian</name></type> <name>P2</name></decl>, <decl><type ref="prev"/><name>P3</name></decl>, <decl><type ref="prev"/><name>Q</name></decl>, <decl><type ref="prev"/><name>T</name></decl>, <decl><type ref="prev"/><name>U</name></decl>;</decl_stmt>

	<comment type="block">/*
	 * Compute window values.
	 */</comment>
	<expr_stmt><expr><name>P2</name> <operator>=</operator> <operator>*</operator><name>P</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_double</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>P3</name> <operator>=</operator> <operator>*</operator><name>P</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_add</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P3</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>P2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * We start with Q = 0. We process multiplier bits 2 by 2.
	 */</comment>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <name>Q</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>qz</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>xlen</name> <operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>

		<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">6</literal></expr>;</init> <condition><expr><name>k</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>k</name> <operator>-=</operator> <literal type="number">2</literal></expr></incr>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name>uint32_t</name></type> <name>bits</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>uint32_t</name></type> <name>bnz</name></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>p256_double</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>p256_double</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>T</name> <operator>=</operator> <operator>*</operator><name>P</name></expr>;</expr_stmt>
			<expr_stmt><expr><name>U</name> <operator>=</operator> <name>Q</name></expr>;</expr_stmt>
			<expr_stmt><expr><name>bits</name> <operator>=</operator> <operator>(</operator><operator>*</operator><name>x</name> <operator>&gt;&gt;</operator> <name>k</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">3</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>bnz</name> <operator>=</operator> <call><name>NEQ</name><argument_list>(<argument><expr><name>bits</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>CCOPY</name><argument_list>(<argument><expr><call><name>EQ</name><argument_list>(<argument><expr><name>bits</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>T</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>P2</name></expr></argument>, <argument><expr><sizeof>sizeof <name>T</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>CCOPY</name><argument_list>(<argument><expr><call><name>EQ</name><argument_list>(<argument><expr><name>bits</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>T</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>P3</name></expr></argument>, <argument><expr><sizeof>sizeof <name>T</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>p256_add</name><argument_list>(<argument><expr><operator>&amp;</operator><name>U</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>CCOPY</name><argument_list>(<argument><expr><name>bnz</name> <operator>&amp;</operator> <name>qz</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>T</name></expr></argument>, <argument><expr><sizeof>sizeof <name>Q</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>CCOPY</name><argument_list>(<argument><expr><name>bnz</name> <operator>&amp;</operator> <operator>~</operator><name>qz</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>U</name></expr></argument>, <argument><expr><sizeof>sizeof <name>Q</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>qz</name> <operator>&amp;=</operator> <operator>~</operator><name>bnz</name></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt><expr><name>x</name> <operator>++</operator></expr>;</expr_stmt>
	</block_content>}</block></while>
	<expr_stmt><expr><operator>*</operator><name>P</name> <operator>=</operator> <name>Q</name></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Precomputed window: k*G points, where G is the curve generator, and k
 * is an integer from 1 to 15 (inclusive). The X and Y coordinates of
 * the point are encoded as 20 words of 13 bits each (little-endian
 * order); 13-bit words are then grouped 2-by-2 into 32-bit words
 * (little-endian order within each word).
 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>Gwin</name><index>[<expr><literal type="number">15</literal></expr>]</index><index>[<expr><literal type="number">20</literal></expr>]</index></name> <init>= <expr><block>{

	<expr><block>{ <expr><literal type="number">0x04C60296</literal></expr>, <expr><literal type="number">0x02721176</literal></expr>, <expr><literal type="number">0x19D00F4A</literal></expr>, <expr><literal type="number">0x102517AC</literal></expr>,
	  <expr><literal type="number">0x13B8037D</literal></expr>, <expr><literal type="number">0x0748103C</literal></expr>, <expr><literal type="number">0x1E730E56</literal></expr>, <expr><literal type="number">0x08481FE2</literal></expr>,
	  <expr><literal type="number">0x0F97012C</literal></expr>, <expr><literal type="number">0x00D605F4</literal></expr>, <expr><literal type="number">0x1DFA11F5</literal></expr>, <expr><literal type="number">0x0C801A0D</literal></expr>,
	  <expr><literal type="number">0x0F670CBB</literal></expr>, <expr><literal type="number">0x0AED0CC5</literal></expr>, <expr><literal type="number">0x115E0E33</literal></expr>, <expr><literal type="number">0x181F0785</literal></expr>,
	  <expr><literal type="number">0x13F514A7</literal></expr>, <expr><literal type="number">0x0FF30E3B</literal></expr>, <expr><literal type="number">0x17171E1A</literal></expr>, <expr><literal type="number">0x009F18D0</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x1B341978</literal></expr>, <expr><literal type="number">0x16911F11</literal></expr>, <expr><literal type="number">0x0D9A1A60</literal></expr>, <expr><literal type="number">0x1C4E1FC8</literal></expr>,
	  <expr><literal type="number">0x1E040969</literal></expr>, <expr><literal type="number">0x096A06B0</literal></expr>, <expr><literal type="number">0x091C0030</literal></expr>, <expr><literal type="number">0x09EF1A29</literal></expr>,
	  <expr><literal type="number">0x18C40D03</literal></expr>, <expr><literal type="number">0x00F91C9E</literal></expr>, <expr><literal type="number">0x13C313D1</literal></expr>, <expr><literal type="number">0x096F0748</literal></expr>,
	  <expr><literal type="number">0x011419E0</literal></expr>, <expr><literal type="number">0x1CC713A6</literal></expr>, <expr><literal type="number">0x1DD31DAD</literal></expr>, <expr><literal type="number">0x1EE80C36</literal></expr>,
	  <expr><literal type="number">0x1ECD0C69</literal></expr>, <expr><literal type="number">0x1A0800A4</literal></expr>, <expr><literal type="number">0x08861B8E</literal></expr>, <expr><literal type="number">0x000E1DD5</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x173F1D6C</literal></expr>, <expr><literal type="number">0x02CC06F1</literal></expr>, <expr><literal type="number">0x14C21FB4</literal></expr>, <expr><literal type="number">0x043D1EB6</literal></expr>,
	  <expr><literal type="number">0x0F3606B7</literal></expr>, <expr><literal type="number">0x1A971C59</literal></expr>, <expr><literal type="number">0x1BF71951</literal></expr>, <expr><literal type="number">0x01481323</literal></expr>,
	  <expr><literal type="number">0x068D0633</literal></expr>, <expr><literal type="number">0x00BD12F9</literal></expr>, <expr><literal type="number">0x13EA1032</literal></expr>, <expr><literal type="number">0x136209E8</literal></expr>,
	  <expr><literal type="number">0x1C1E19A7</literal></expr>, <expr><literal type="number">0x06C7013E</literal></expr>, <expr><literal type="number">0x06C10AB0</literal></expr>, <expr><literal type="number">0x14C908BB</literal></expr>,
	  <expr><literal type="number">0x05830CE1</literal></expr>, <expr><literal type="number">0x1FEF18DD</literal></expr>, <expr><literal type="number">0x00620998</literal></expr>, <expr><literal type="number">0x010E0D19</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x18180852</literal></expr>, <expr><literal type="number">0x0604111A</literal></expr>, <expr><literal type="number">0x0B771509</literal></expr>, <expr><literal type="number">0x1B6F0156</literal></expr>,
	  <expr><literal type="number">0x00181FE2</literal></expr>, <expr><literal type="number">0x1DCC0AF4</literal></expr>, <expr><literal type="number">0x16EF0659</literal></expr>, <expr><literal type="number">0x11F70E80</literal></expr>,
	  <expr><literal type="number">0x11A912D0</literal></expr>, <expr><literal type="number">0x01C414D2</literal></expr>, <expr><literal type="number">0x027618C6</literal></expr>, <expr><literal type="number">0x05840FC6</literal></expr>,
	  <expr><literal type="number">0x100215C4</literal></expr>, <expr><literal type="number">0x187E0C3B</literal></expr>, <expr><literal type="number">0x12771C96</literal></expr>, <expr><literal type="number">0x150C0B5D</literal></expr>,
	  <expr><literal type="number">0x0FF705FD</literal></expr>, <expr><literal type="number">0x07981C67</literal></expr>, <expr><literal type="number">0x1AD20C63</literal></expr>, <expr><literal type="number">0x01C11C55</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x1E8113ED</literal></expr>, <expr><literal type="number">0x0A940370</literal></expr>, <expr><literal type="number">0x12920215</literal></expr>, <expr><literal type="number">0x1FA31D6F</literal></expr>,
	  <expr><literal type="number">0x1F7C0C82</literal></expr>, <expr><literal type="number">0x10CD03F7</literal></expr>, <expr><literal type="number">0x02640560</literal></expr>, <expr><literal type="number">0x081A0B5E</literal></expr>,
	  <expr><literal type="number">0x1BD21151</literal></expr>, <expr><literal type="number">0x00A21642</literal></expr>, <expr><literal type="number">0x0D0B0DA4</literal></expr>, <expr><literal type="number">0x0176113F</literal></expr>,
	  <expr><literal type="number">0x04440D1D</literal></expr>, <expr><literal type="number">0x001A1360</literal></expr>, <expr><literal type="number">0x1068012F</literal></expr>, <expr><literal type="number">0x1F141E49</literal></expr>,
	  <expr><literal type="number">0x10DF136B</literal></expr>, <expr><literal type="number">0x0E4F162B</literal></expr>, <expr><literal type="number">0x0D44104A</literal></expr>, <expr><literal type="number">0x01C1105F</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x011411A9</literal></expr>, <expr><literal type="number">0x01551A4F</literal></expr>, <expr><literal type="number">0x0ADA0C6B</literal></expr>, <expr><literal type="number">0x01BD0EC8</literal></expr>,
	  <expr><literal type="number">0x18120C74</literal></expr>, <expr><literal type="number">0x112F1778</literal></expr>, <expr><literal type="number">0x099202CB</literal></expr>, <expr><literal type="number">0x0C05124B</literal></expr>,
	  <expr><literal type="number">0x195316A4</literal></expr>, <expr><literal type="number">0x01600685</literal></expr>, <expr><literal type="number">0x1E3B1FE2</literal></expr>, <expr><literal type="number">0x189014E3</literal></expr>,
	  <expr><literal type="number">0x0B5E1FD7</literal></expr>, <expr><literal type="number">0x0E0311F8</literal></expr>, <expr><literal type="number">0x08E000F7</literal></expr>, <expr><literal type="number">0x174E00DE</literal></expr>,
	  <expr><literal type="number">0x160702DF</literal></expr>, <expr><literal type="number">0x1B5A15BF</literal></expr>, <expr><literal type="number">0x03A11237</literal></expr>, <expr><literal type="number">0x01D01704</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x0C3D12A3</literal></expr>, <expr><literal type="number">0x0C501C0C</literal></expr>, <expr><literal type="number">0x17AD1300</literal></expr>, <expr><literal type="number">0x1715003F</literal></expr>,
	  <expr><literal type="number">0x03F719F8</literal></expr>, <expr><literal type="number">0x18031ED8</literal></expr>, <expr><literal type="number">0x1D980667</literal></expr>, <expr><literal type="number">0x0F681896</literal></expr>,
	  <expr><literal type="number">0x1B7D00BF</literal></expr>, <expr><literal type="number">0x011C14CE</literal></expr>, <expr><literal type="number">0x0FA000B4</literal></expr>, <expr><literal type="number">0x1C3501B0</literal></expr>,
	  <expr><literal type="number">0x0D901C55</literal></expr>, <expr><literal type="number">0x06790C10</literal></expr>, <expr><literal type="number">0x029E0736</literal></expr>, <expr><literal type="number">0x0DEB0400</literal></expr>,
	  <expr><literal type="number">0x034F183A</literal></expr>, <expr><literal type="number">0x030619B4</literal></expr>, <expr><literal type="number">0x0DEF0033</literal></expr>, <expr><literal type="number">0x00E71AC7</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x1B7D1393</literal></expr>, <expr><literal type="number">0x1B3B1076</literal></expr>, <expr><literal type="number">0x0BED1B4D</literal></expr>, <expr><literal type="number">0x13011F3A</literal></expr>,
	  <expr><literal type="number">0x0E0E1238</literal></expr>, <expr><literal type="number">0x156A132B</literal></expr>, <expr><literal type="number">0x013A02D3</literal></expr>, <expr><literal type="number">0x160A0D01</literal></expr>,
	  <expr><literal type="number">0x1CED1EE9</literal></expr>, <expr><literal type="number">0x00C5165D</literal></expr>, <expr><literal type="number">0x184C157E</literal></expr>, <expr><literal type="number">0x08141A83</literal></expr>,
	  <expr><literal type="number">0x153C0DA5</literal></expr>, <expr><literal type="number">0x1ED70F9D</literal></expr>, <expr><literal type="number">0x05170D51</literal></expr>, <expr><literal type="number">0x02CF13B8</literal></expr>,
	  <expr><literal type="number">0x18AE1771</literal></expr>, <expr><literal type="number">0x1B04113F</literal></expr>, <expr><literal type="number">0x05EC11E9</literal></expr>, <expr><literal type="number">0x015A16B3</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x04A41EE0</literal></expr>, <expr><literal type="number">0x1D1412E4</literal></expr>, <expr><literal type="number">0x1C591D79</literal></expr>, <expr><literal type="number">0x118511B7</literal></expr>,
	  <expr><literal type="number">0x14F00ACB</literal></expr>, <expr><literal type="number">0x1AE31E1C</literal></expr>, <expr><literal type="number">0x049C0D51</literal></expr>, <expr><literal type="number">0x016E061E</literal></expr>,
	  <expr><literal type="number">0x1DB71EDF</literal></expr>, <expr><literal type="number">0x01D41A35</literal></expr>, <expr><literal type="number">0x0E8208FA</literal></expr>, <expr><literal type="number">0x14441293</literal></expr>,
	  <expr><literal type="number">0x011F1E85</literal></expr>, <expr><literal type="number">0x1D54137A</literal></expr>, <expr><literal type="number">0x026B114F</literal></expr>, <expr><literal type="number">0x151D0832</literal></expr>,
	  <expr><literal type="number">0x00A50964</literal></expr>, <expr><literal type="number">0x1F9C1E1C</literal></expr>, <expr><literal type="number">0x064B12C9</literal></expr>, <expr><literal type="number">0x005409D1</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x062B123F</literal></expr>, <expr><literal type="number">0x0C0D0501</literal></expr>, <expr><literal type="number">0x183704C3</literal></expr>, <expr><literal type="number">0x08E31120</literal></expr>,
	  <expr><literal type="number">0x0A2E0A6C</literal></expr>, <expr><literal type="number">0x14440FED</literal></expr>, <expr><literal type="number">0x090A0D1E</literal></expr>, <expr><literal type="number">0x13271964</literal></expr>,
	  <expr><literal type="number">0x0B590A3A</literal></expr>, <expr><literal type="number">0x019D1D9B</literal></expr>, <expr><literal type="number">0x05780773</literal></expr>, <expr><literal type="number">0x09770A91</literal></expr>,
	  <expr><literal type="number">0x0F770CA3</literal></expr>, <expr><literal type="number">0x053F19D4</literal></expr>, <expr><literal type="number">0x02C80DED</literal></expr>, <expr><literal type="number">0x1A761304</literal></expr>,
	  <expr><literal type="number">0x091E0DD9</literal></expr>, <expr><literal type="number">0x15D201B8</literal></expr>, <expr><literal type="number">0x151109AA</literal></expr>, <expr><literal type="number">0x010F0198</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x05E101D1</literal></expr>, <expr><literal type="number">0x072314DD</literal></expr>, <expr><literal type="number">0x045F1433</literal></expr>, <expr><literal type="number">0x1A041541</literal></expr>,
	  <expr><literal type="number">0x10B3142E</literal></expr>, <expr><literal type="number">0x01840736</literal></expr>, <expr><literal type="number">0x1C1B19DB</literal></expr>, <expr><literal type="number">0x098B0418</literal></expr>,
	  <expr><literal type="number">0x1DBC083B</literal></expr>, <expr><literal type="number">0x007D1444</literal></expr>, <expr><literal type="number">0x01511740</literal></expr>, <expr><literal type="number">0x11DD1F3A</literal></expr>,
	  <expr><literal type="number">0x04ED0E2F</literal></expr>, <expr><literal type="number">0x1B4B1A62</literal></expr>, <expr><literal type="number">0x10480D04</literal></expr>, <expr><literal type="number">0x09E911A2</literal></expr>,
	  <expr><literal type="number">0x04211AFA</literal></expr>, <expr><literal type="number">0x19140893</literal></expr>, <expr><literal type="number">0x04D60CC4</literal></expr>, <expr><literal type="number">0x01210648</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x112703C4</literal></expr>, <expr><literal type="number">0x018B1BA1</literal></expr>, <expr><literal type="number">0x164C1D50</literal></expr>, <expr><literal type="number">0x05160BE0</literal></expr>,
	  <expr><literal type="number">0x0BCC1830</literal></expr>, <expr><literal type="number">0x01CB1554</literal></expr>, <expr><literal type="number">0x13291732</literal></expr>, <expr><literal type="number">0x1B2B1918</literal></expr>,
	  <expr><literal type="number">0x0DED0817</literal></expr>, <expr><literal type="number">0x00E80775</literal></expr>, <expr><literal type="number">0x0A2401D3</literal></expr>, <expr><literal type="number">0x0BFE08B3</literal></expr>,
	  <expr><literal type="number">0x0E531199</literal></expr>, <expr><literal type="number">0x058616E9</literal></expr>, <expr><literal type="number">0x04770B91</literal></expr>, <expr><literal type="number">0x110F0C55</literal></expr>,
	  <expr><literal type="number">0x19C11554</literal></expr>, <expr><literal type="number">0x0BFB1159</literal></expr>, <expr><literal type="number">0x03541C38</literal></expr>, <expr><literal type="number">0x000E1C2D</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x10390C01</literal></expr>, <expr><literal type="number">0x02BB0751</literal></expr>, <expr><literal type="number">0x0AC5098E</literal></expr>, <expr><literal type="number">0x096C17AB</literal></expr>,
	  <expr><literal type="number">0x03C90E28</literal></expr>, <expr><literal type="number">0x10BD18BF</literal></expr>, <expr><literal type="number">0x002E1F2D</literal></expr>, <expr><literal type="number">0x092B0986</literal></expr>,
	  <expr><literal type="number">0x1BD700AC</literal></expr>, <expr><literal type="number">0x002E1F20</literal></expr>, <expr><literal type="number">0x1E3D1FD8</literal></expr>, <expr><literal type="number">0x077718BB</literal></expr>,
	  <expr><literal type="number">0x06F919C4</literal></expr>, <expr><literal type="number">0x187407ED</literal></expr>, <expr><literal type="number">0x11370E14</literal></expr>, <expr><literal type="number">0x081E139C</literal></expr>,
	  <expr><literal type="number">0x00481ADB</literal></expr>, <expr><literal type="number">0x14AB0289</literal></expr>, <expr><literal type="number">0x066A0EBE</literal></expr>, <expr><literal type="number">0x00C70ED6</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x0694120B</literal></expr>, <expr><literal type="number">0x124E1CC9</literal></expr>, <expr><literal type="number">0x0E2F0570</literal></expr>, <expr><literal type="number">0x17CF081A</literal></expr>,
	  <expr><literal type="number">0x078906AC</literal></expr>, <expr><literal type="number">0x066D17CF</literal></expr>, <expr><literal type="number">0x1B3207F4</literal></expr>, <expr><literal type="number">0x0C5705E9</literal></expr>,
	  <expr><literal type="number">0x10001C38</literal></expr>, <expr><literal type="number">0x00A919DE</literal></expr>, <expr><literal type="number">0x06851375</literal></expr>, <expr><literal type="number">0x0F900BD8</literal></expr>,
	  <expr><literal type="number">0x080401BA</literal></expr>, <expr><literal type="number">0x0EEE0D42</literal></expr>, <expr><literal type="number">0x1B8B11EA</literal></expr>, <expr><literal type="number">0x0B4519F0</literal></expr>,
	  <expr><literal type="number">0x090F18C0</literal></expr>, <expr><literal type="number">0x062E1508</literal></expr>, <expr><literal type="number">0x0DD909F4</literal></expr>, <expr><literal type="number">0x01EB067C</literal></expr> }</block></expr>,

	<expr><block>{ <expr><literal type="number">0x0CDC1D5F</literal></expr>, <expr><literal type="number">0x0D1818F9</literal></expr>, <expr><literal type="number">0x07781636</literal></expr>, <expr><literal type="number">0x125B18E8</literal></expr>,
	  <expr><literal type="number">0x0D7003AF</literal></expr>, <expr><literal type="number">0x13110099</literal></expr>, <expr><literal type="number">0x1D9B1899</literal></expr>, <expr><literal type="number">0x175C1EB7</literal></expr>,
	  <expr><literal type="number">0x0E34171A</literal></expr>, <expr><literal type="number">0x01E01153</literal></expr>, <expr><literal type="number">0x081A0F36</literal></expr>, <expr><literal type="number">0x0B391783</literal></expr>,
	  <expr><literal type="number">0x1D1F147E</literal></expr>, <expr><literal type="number">0x19CE16D7</literal></expr>, <expr><literal type="number">0x11511B21</literal></expr>, <expr><literal type="number">0x1F2C10F9</literal></expr>,
	  <expr><literal type="number">0x12CA0E51</literal></expr>, <expr><literal type="number">0x05A31D39</literal></expr>, <expr><literal type="number">0x171A192E</literal></expr>, <expr><literal type="number">0x016B0E4F</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/*
 * Lookup one of the Gwin[] values, by index. This is constant-time.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>lookup_Gwin</name><parameter_list>(<parameter><decl><type><name>p256_jacobian</name> <modifier>*</modifier></type><name>T</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>idx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>xy</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>k</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>size_t</name></type> <name>u</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>xy</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <name>xy</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <literal type="number">15</literal></expr>;</condition> <incr><expr><name>k</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<decl_stmt><decl><type><name>uint32_t</name></type> <name>m</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>m</name> <operator>=</operator> <operator>-</operator><call><name>EQ</name><argument_list>(<argument><expr><name>idx</name></expr></argument>, <argument><expr><name>k</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for>for <control>(<init><expr><name>u</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>u</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>u</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<expr_stmt><expr><name><name>xy</name><index>[<expr><name>u</name></expr>]</index></name> <operator>|=</operator> <name>m</name> <operator>&amp;</operator> <name><name>Gwin</name><index>[<expr><name>k</name></expr>]</index><index>[<expr><name>u</name></expr>]</index></name></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></for>
	<for>for <control>(<init><expr><name>u</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>u</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>u</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name><name>T</name><operator>-&gt;</operator><name>x</name><index>[<expr><operator>(</operator><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>xy</name><index>[<expr><name>u</name></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0xFFFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>T</name><operator>-&gt;</operator><name>x</name><index>[<expr><operator>(</operator><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>xy</name><index>[<expr><name>u</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>T</name><operator>-&gt;</operator><name>y</name><index>[<expr><operator>(</operator><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>xy</name><index>[<expr><name>u</name> <operator>+</operator> <literal type="number">10</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0xFFFF</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>T</name><operator>-&gt;</operator><name>y</name><index>[<expr><operator>(</operator><name>u</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>xy</name><index>[<expr><name>u</name> <operator>+</operator> <literal type="number">10</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>T</name><operator>-&gt;</operator><name>z</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <name><name>T</name><operator>-&gt;</operator><name>z</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>T</name><operator>-&gt;</operator><name>z</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/*
 * Multiply the generator by an integer. The integer is assumed non-zero
 * and lower than the curve order.
 */</comment>
<function><type><specifier>static</specifier> <name>void</name></type>
<name>p256_mulgen</name><parameter_list>(<parameter><decl><type><name>p256_jacobian</name> <modifier>*</modifier></type><name>P</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>xlen</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/*
	 * qz is a flag that is initially 1, and remains equal to 1
	 * as long as the point is the point at infinity.
	 *
	 * We use a 4-bit window to handle multiplier bits by groups
	 * of 4. The precomputed window is constant static data, with
	 * points in affine coordinates; we use a constant-time lookup.
	 */</comment>
	<decl_stmt><decl><type><name>p256_jacobian</name></type> <name>Q</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>qz</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <name>Q</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>qz</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>xlen</name> <operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>unsigned</name></type> <name>bx</name></decl>;</decl_stmt>

		<expr_stmt><expr><name>bx</name> <operator>=</operator> <operator>*</operator><name>x</name> <operator>++</operator></expr>;</expr_stmt>
		<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>k</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name>uint32_t</name></type> <name>bits</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>uint32_t</name></type> <name>bnz</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>p256_jacobian</name></type> <name>T</name></decl>, <decl><type ref="prev"/><name>U</name></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>p256_double</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>p256_double</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>p256_double</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>p256_double</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>bits</name> <operator>=</operator> <operator>(</operator><name>bx</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x0F</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>bnz</name> <operator>=</operator> <call><name>NEQ</name><argument_list>(<argument><expr><name>bits</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>lookup_Gwin</name><argument_list>(<argument><expr><operator>&amp;</operator><name>T</name></expr></argument>, <argument><expr><name>bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>U</name> <operator>=</operator> <name>Q</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>p256_add_mixed</name><argument_list>(<argument><expr><operator>&amp;</operator><name>U</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>CCOPY</name><argument_list>(<argument><expr><name>bnz</name> <operator>&amp;</operator> <name>qz</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>T</name></expr></argument>, <argument><expr><sizeof>sizeof <name>Q</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>CCOPY</name><argument_list>(<argument><expr><name>bnz</name> <operator>&amp;</operator> <operator>~</operator><name>qz</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>U</name></expr></argument>, <argument><expr><sizeof>sizeof <name>Q</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>qz</name> <operator>&amp;=</operator> <operator>~</operator><name>bnz</name></expr>;</expr_stmt>
			<expr_stmt><expr><name>bx</name> <operator>&lt;&lt;=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></while>
	<expr_stmt><expr><operator>*</operator><name>P</name> <operator>=</operator> <name>Q</name></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>P256_G</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x6B</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0xD1</literal></expr>, <expr><literal type="number">0xF2</literal></expr>, <expr><literal type="number">0xE1</literal></expr>, <expr><literal type="number">0x2C</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xF8</literal></expr>,
	<expr><literal type="number">0xBC</literal></expr>, <expr><literal type="number">0xE6</literal></expr>, <expr><literal type="number">0xE5</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0xF2</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x7D</literal></expr>,
	<expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x2D</literal></expr>, <expr><literal type="number">0xEB</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0xA0</literal></expr>, <expr><literal type="number">0xF4</literal></expr>, <expr><literal type="number">0xA1</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xD8</literal></expr>,
	<expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0xC2</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x4F</literal></expr>, <expr><literal type="number">0xE3</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0xE2</literal></expr>, <expr><literal type="number">0xFE</literal></expr>, <expr><literal type="number">0x1A</literal></expr>, <expr><literal type="number">0x7F</literal></expr>,
	<expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0x8E</literal></expr>, <expr><literal type="number">0xE7</literal></expr>, <expr><literal type="number">0xEB</literal></expr>, <expr><literal type="number">0x4A</literal></expr>, <expr><literal type="number">0x7C</literal></expr>, <expr><literal type="number">0x0F</literal></expr>, <expr><literal type="number">0x9E</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x2B</literal></expr>,
	<expr><literal type="number">0xCE</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x6B</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x5E</literal></expr>, <expr><literal type="number">0xCE</literal></expr>, <expr><literal type="number">0xCB</literal></expr>, <expr><literal type="number">0xB6</literal></expr>, <expr><literal type="number">0x40</literal></expr>,
	<expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xBF</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0xF5</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>P256_N</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>,
	<expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0xBC</literal></expr>, <expr><literal type="number">0xE6</literal></expr>, <expr><literal type="number">0xFA</literal></expr>, <expr><literal type="number">0xAD</literal></expr>,
	<expr><literal type="number">0xA7</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x9E</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0xF3</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xCA</literal></expr>, <expr><literal type="number">0xC2</literal></expr>, <expr><literal type="number">0xFC</literal></expr>, <expr><literal type="number">0x63</literal></expr>,
	<expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x51</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type>
<name>api_generator</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>curve</name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>len</name> <operator>=</operator> <sizeof>sizeof <name>P256_G</name></sizeof></expr>;</expr_stmt>
	<return>return <expr><name>P256_G</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type>
<name>api_order</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>curve</name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>len</name> <operator>=</operator> <sizeof>sizeof <name>P256_N</name></sizeof></expr>;</expr_stmt>
	<return>return <expr><name>P256_N</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>size_t</name></type>
<name>api_xoff</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>curve</name></expr>;</expr_stmt>
	<expr_stmt><expr><operator>*</operator><name>len</name> <operator>=</operator> <literal type="number">32</literal></expr>;</expr_stmt>
	<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>api_mul</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>G</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>Glen</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>xlen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>r</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>p256_jacobian</name></type> <name>P</name></decl>;</decl_stmt>

	<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>curve</name></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>Glen</name> <operator>!=</operator> <literal type="number">65</literal></expr>)</condition> <block>{<block_content>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>p256_decode</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>, <argument><expr><name>G</name></expr></argument>, <argument><expr><name>Glen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_to_affine</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_encode</name><argument_list>(<argument><expr><name>G</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>size_t</name></type>
<name>api_mulgen</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>R</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>xlen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>p256_jacobian</name></type> <name>P</name></decl>;</decl_stmt>

	<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>curve</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_mulgen</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_to_affine</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_encode</name><argument_list>(<argument><expr><name>R</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">65</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>api_muladd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>A</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>B</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>xlen</name></decl></parameter>,
	<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>ylen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>curve</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>p256_jacobian</name></type> <name>P</name></decl>, <decl><type ref="prev"/><name>Q</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>uint32_t</name></type> <name>r</name></decl>, <decl><type ref="prev"/><name>t</name></decl>, <decl><type ref="prev"/><name>z</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

	<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>curve</name></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>len</name> <operator>!=</operator> <literal type="number">65</literal></expr>)</condition> <block>{<block_content>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>p256_decode</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>B</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><call><name>p256_mulgen</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>ylen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if> <else>else <block>{<block_content>
		<expr_stmt><expr><name>r</name> <operator>&amp;=</operator> <call><name>p256_decode</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>p256_mul</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>ylen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>

	<comment type="block">/*
	 * The final addition may fail in case both points are equal.
	 */</comment>
	<expr_stmt><expr><name>t</name> <operator>=</operator> <call><name>p256_add</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>reduce_final_f256</name><argument_list>(<argument><expr><name><name>P</name><operator>.</operator><name>z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>z</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">20</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
		<expr_stmt><expr><name>z</name> <operator>|=</operator> <name><name>P</name><operator>.</operator><name>z</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><name>z</name> <operator>=</operator> <call><name>EQ</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_double</name><argument_list>(<argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/*
	 * If z is 1 then either P+Q = 0 (t = 1) or P = Q (t = 0). So we
	 * have the following:
	 *
	 *   z = 0, t = 0   return P (normal addition)
	 *   z = 0, t = 1   return P (normal addition)
	 *   z = 1, t = 0   return Q (a 'double' case)
	 *   z = 1, t = 1   report an error (P+Q = 0)
	 */</comment>
	<expr_stmt><expr><call><name>CCOPY</name><argument_list>(<argument><expr><name>z</name> <operator>&amp;</operator> <operator>~</operator><name>t</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>P</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>Q</name></expr></argument>, <argument><expr><sizeof>sizeof <name>Q</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_to_affine</name><argument_list>(<argument><expr><operator>&amp;</operator><name>P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>p256_encode</name><argument_list>(<argument><expr><name>A</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>r</name> <operator>&amp;=</operator> <operator>~</operator><operator>(</operator><name>z</name> <operator>&amp;</operator> <name>t</name><operator>)</operator></expr>;</expr_stmt>
	<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>

<comment type="block">/* see bearssl_ec.h */</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>br_ec_impl</name></type> <name>br_ec_p256_m15</name> <init>= <expr><block>{
	<expr><operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x00800000</literal></expr>,
	<expr><operator>&amp;</operator><name>api_generator</name></expr>,
	<expr><operator>&amp;</operator><name>api_order</name></expr>,
	<expr><operator>&amp;</operator><name>api_xoff</name></expr>,
	<expr><operator>&amp;</operator><name>api_mul</name></expr>,
	<expr><operator>&amp;</operator><name>api_mulgen</name></expr>,
	<expr><operator>&amp;</operator><name>api_muladd</name></expr>
}</block></expr></init></decl>;</decl_stmt>
</unit>
