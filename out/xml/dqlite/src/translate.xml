<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/dqlite/src/translate.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"translate.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;raft.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"assert.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"leader.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"protocol.h"</cpp:file></cpp:include>

<comment type="block">/* Translate a raft error to a dqlite one. */</comment>
<function><type><name>int</name></type> <name>translateRaftErrCode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>code</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>code</name></expr>)</condition> <block>{<block_content>
		<case>case <expr><name>RAFT_NOTLEADER</name></expr>:</case>
			<return>return <expr><name>SQLITE_IOERR_NOT_LEADER</name></expr>;</return>
		<case>case <expr><name>RAFT_LEADERSHIPLOST</name></expr>:</case>
			<return>return <expr><name>SQLITE_IOERR_LEADERSHIP_LOST</name></expr>;</return>
		<case>case <expr><name>RAFT_CANTCHANGE</name></expr>:</case>
			<return>return <expr><name>SQLITE_BUSY</name></expr>;</return>
		<default>default:</default>
			<return>return <expr><name>SQLITE_ERROR</name></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

<comment type="block">/* Translate a dqlite role code to its raft equivalent. */</comment>
<function><type><name>int</name></type> <name>translateDqliteRole</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>role</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>role</name></expr>)</condition> <block>{<block_content>
		<case>case <expr><name>DQLITE_VOTER</name></expr>:</case>
			<return>return <expr><name>RAFT_VOTER</name></expr>;</return>
		<case>case <expr><name>DQLITE_STANDBY</name></expr>:</case>
			<return>return <expr><name>RAFT_STANDBY</name></expr>;</return>
		<case>case <expr><name>DQLITE_SPARE</name></expr>:</case>
			<return>return <expr><name>RAFT_SPARE</name></expr>;</return>
		<default>default:</default>
			<comment type="block">/* For backward compat with clients that don't set a
			 * role. */</comment>
			<return>return <expr><name>DQLITE_VOTER</name></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>

<comment type="block">/* Translate a raft role code to its dqlite equivalent. */</comment>
<function><type><name>int</name></type> <name>translateRaftRole</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>role</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<switch>switch <condition>(<expr><name>role</name></expr>)</condition> <block>{<block_content>
		<case>case <expr><name>RAFT_VOTER</name></expr>:</case>
			<return>return <expr><name>DQLITE_VOTER</name></expr>;</return>
		<case>case <expr><name>RAFT_STANDBY</name></expr>:</case>
			<return>return <expr><name>DQLITE_STANDBY</name></expr>;</return>
		<case>case <expr><name>RAFT_SPARE</name></expr>:</case>
			<return>return <expr><name>DQLITE_SPARE</name></expr>;</return>
		<default>default:</default>
			<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
	</block_content>}</block></switch>
</block_content>}</block></function>
</unit>
