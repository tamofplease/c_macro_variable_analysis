<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/dqlite/src/dqlite.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../include/dqlite.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vfs.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>dqlite_version_number</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
        <return>return <expr><name>DQLITE_VERSION_NUMBER</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_init</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsInit</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_enable_disk</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsEnableDisk</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>dqlite_vfs_close</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>VfsClose</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_poll</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>,
		    <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,
		    <parameter><decl><type><name>dqlite_vfs_frame</name> <modifier>*</modifier><modifier>*</modifier></type><name>frames</name></decl></parameter>,
		    <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsPoll</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>frames</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_apply</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>,
		     <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,
		     <parameter><decl><type><name>unsigned</name></type> <name>n</name></decl></parameter>,
		     <parameter><decl><type><name>unsigned</name> <name>long</name> <modifier>*</modifier></type><name>page_numbers</name></decl></parameter>,
		     <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>frames</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsApply</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><name>page_numbers</name></expr></argument>, <argument><expr><name>frames</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_abort</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsAbort</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_snapshot</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>,
			<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,
			<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl></parameter>,
			<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsSnapshot</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_snapshot_disk</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>,
			<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,
			<parameter><decl><type><name><name>struct</name> <name>dqlite_buffer</name></name></type> <name><name>bufs</name><index>[]</index></name></decl></parameter>,
			<parameter><decl><type><name>unsigned</name></type> <name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>int</name></type> <name>rv</name></decl>;</decl_stmt>
	<if_stmt><if>if <condition>(<expr><name>n</name> <operator>!=</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
		<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>rv</name> <operator>=</operator> <call><name>VfsDiskSnapshotDb</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>bufs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>rv</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<return>return <expr><name>rv</name></expr>;</return>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><name>rv</name> <operator>=</operator> <call><name>VfsDiskSnapshotWal</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>bufs</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><name>rv</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_num_pages</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>,
			 <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,
			 <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsDatabaseNumPages</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_shallow_snapshot</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>,
				<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,
				<parameter><decl><type><name><name>struct</name> <name>dqlite_buffer</name></name></type> <name><name>bufs</name><index>[]</index></name></decl></parameter>,
				<parameter><decl><type><name>unsigned</name></type> <name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsShallowSnapshot</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>bufs</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_restore</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>,
		       <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,
		       <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
		       <parameter><decl><type><name>size_t</name></type> <name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsRestore</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>dqlite_vfs_restore_disk</name><parameter_list>(<parameter><decl><type><name>sqlite3_vfs</name> <modifier>*</modifier></type><name>vfs</name></decl></parameter>,
		       <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,
		       <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
		       <parameter><decl><type><name>size_t</name></type> <name>main_size</name></decl></parameter>,
		       <parameter><decl><type><name>size_t</name></type> <name>wal_size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<return>return <expr><call><name>VfsDiskRestore</name><argument_list>(<argument><expr><name>vfs</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>main_size</name></expr></argument>, <argument><expr><name>wal_size</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
