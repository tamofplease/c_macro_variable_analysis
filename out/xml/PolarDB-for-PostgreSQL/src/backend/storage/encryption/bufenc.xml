<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/PolarDB-for-PostgreSQL/src/backend/storage/encryption/bufenc.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * bufenc.c
 *
 * Portions Copyright (c) 2019, PostgreSQL Global Development Group
 * Portions Copyright (c) 2020, Alibaba Group Holding Limited
 *
 *
 * IDENTIFICATION
 *	  src/backend/storage/encryption/bufenc.c
 *
 *-------------------------------------------------------------------------
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/bufpage.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/encryption.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/fd.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"storage/kmgr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils/guc.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>buf_encryption_iv</name><index>[<expr><name>ENC_IV_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>set_buffer_encryption_iv</name><parameter_list>(<parameter><decl><type><name>Page</name></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>BlockNumber</name></type> <name>blocknum</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type>
<name>EncryptBufferBlock</name><parameter_list>(<parameter><decl><type><name>BlockNumber</name></type> <name>blocknum</name></decl></parameter>, <parameter><decl><type><name>Page</name></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>PageSetEncrypted</name><argument_list>(<argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>set_buffer_encryption_iv</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>blocknum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>pg_tde_encrypt</name><argument_list>(<argument><expr><name>page</name> <operator>+</operator> <name>PageEncryptOffset</name></expr></argument>,
			   <argument><expr><name>page</name> <operator>+</operator> <name>PageEncryptOffset</name></expr></argument>,
			   <argument><expr><name>SizeOfPageEncryption</name></expr></argument>,
			   <argument><expr><call><name>KmgrGetRelationEncryptionKey</name><argument_list>()</argument_list></call></expr></argument>,
			   <argument><expr><name>buf_encryption_iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>polar_enable_debug</name></expr>)</condition>
	<block>{<block_content>
		<comment type="block">/*no cover line*/</comment>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>DEBUG1</name></expr></argument>, <argument><expr><literal type="string">"POLARDB: Page %u is encrypted, enc offset %lu, encsize %lu, iv is %s, key is %s"</literal></expr></argument>,
				<argument><expr><name>blocknum</name></expr></argument>, <argument><expr><name>PageEncryptOffset</name></expr></argument>, <argument><expr><name>SizeOfPageEncryption</name></expr></argument>,
				<argument><expr><name>buf_encryption_iv</name></expr></argument>, <argument><expr><call><name>KmgrGetRelationEncryptionKey</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<function><type><name>void</name></type>
<name>DecryptBufferBlock</name><parameter_list>(<parameter><decl><type><name>BlockNumber</name></type> <name>blocknum</name></decl></parameter>, <parameter><decl><type><name>Page</name></type> <name>page</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<expr_stmt><expr><call><name>set_buffer_encryption_iv</name><argument_list>(<argument><expr><name>page</name></expr></argument>, <argument><expr><name>blocknum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>pg_decrypt</name><argument_list>(<argument><expr><name>page</name> <operator>+</operator> <name>PageEncryptOffset</name></expr></argument>,
			   <argument><expr><name>page</name> <operator>+</operator> <name>PageEncryptOffset</name></expr></argument>,
			   <argument><expr><name>SizeOfPageEncryption</name></expr></argument>,
			   <argument><expr><call><name>KmgrGetRelationEncryptionKey</name><argument_list>()</argument_list></call></expr></argument>,
			   <argument><expr><name>buf_encryption_iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><name>polar_enable_debug</name></expr>)</condition>
	<block>{<block_content>
		<comment type="block">/*no cover line*/</comment>
		<expr_stmt><expr><call><name>elog</name><argument_list>(<argument><expr><name>DEBUG1</name></expr></argument>, <argument><expr><literal type="string">"POLARDB: Page %u is decrypted."</literal></expr></argument>, <argument><expr><name>blocknum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>set_buffer_encryption_iv</name><parameter_list>(<parameter><decl><type><name>Page</name></type> <name>page</name></decl></parameter>, <parameter><decl><type><name>BlockNumber</name></type> <name>blocknum</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name>buf_encryption_iv</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>MemSet</name><argument_list>(<argument><expr><name>buf_encryption_iv</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ENC_IV_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block">/* page lsn (8 byte) */</comment>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><operator>&amp;</operator><operator>(</operator><operator>(</operator><name>PageHeader</name><operator>)</operator> <name>page</name><operator>)</operator><operator>-&gt;</operator><name>pd_lsn</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>PageXLogRecPtr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>p</name> <operator>+=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>PageXLogRecPtr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

	<comment type="block">/* block number (4 byte) */</comment>
	<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>blocknum</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>BlockNumber</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>p</name> <operator>+=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>BlockNumber</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

	<comment type="block">/* Space for counter (4 byte) */</comment>
	<expr_stmt><expr><call><name>MemSet</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ENC_BUFFER_AES_COUNTER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>ENC_BUFFER_AES_COUNTER_SIZE</name></expr>;</expr_stmt>
</block_content>}</block></function>

</unit>
