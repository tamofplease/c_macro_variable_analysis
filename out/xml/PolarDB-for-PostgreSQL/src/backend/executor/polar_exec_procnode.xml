<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/PolarDB-for-PostgreSQL/src/backend/executor/polar_exec_procnode.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 * polar_exec_procnode.c
 *
 *
 * Copyright (c) 2021, Alibaba Group Holding Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * IDENTIFICATION
 *	  src/backend/executor/polar_exec_procnode.c
 *-------------------------------------------------------------------------
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/nodes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nodes/execnodes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"executor/instrument.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"executor/polar_exec_procnode.h"</cpp:file></cpp:include>

<comment type="block">/* ------------------------------------------------------------------------
 *		polar_check_instrument_option
 *
 *		For polar db we only gather plan node information about 
 *		scan node, join node, sort node
 *
 *		Inputs:
 *		  'plan' is the current node of the plan produced by the query planner
 *		  'estate' is the shared execution state for the plan tree
 *		Returns a polar instrument option.
 * ------------------------------------------------------------------------
 */</comment>
<function><type><name>int</name></type> <name>polar_check_instrument_option</name><parameter_list>(<parameter><decl><type><name>Plan</name> <modifier>*</modifier></type><name>plan</name></decl></parameter>, <parameter><decl><type><name>EState</name> <modifier>*</modifier></type><name>estate</name></decl></parameter>)</parameter_list>
<block>{<block_content>
	<comment type="block">/*
	 * We assume the plan node isn't scan node, join node, sort node, set the value to zero.
	 * Only when the instrument option is INSTRUMENT_POLAR_ROWS and 
	 * plan node is can node, join node, sort node, we reset the instrument option.
	 */</comment>
	<decl_stmt><decl><type><name>int</name></type> <name>polar_instrument_option</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<comment type="block">/*
	 * If the instrument option is not include INSTRUMENT_POLAR_ROWS, all the plan nodes need instrument info
	 * so we just return the original instrument option.
	 */</comment>
	<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>estate</name><operator>-&gt;</operator><name>es_instrument</name></name> <operator>&amp;</operator> <name>INSTRUMENT_POLAR_PLAN</name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>
	<block>{<block_content>
		<return>return <expr><name><name>estate</name><operator>-&gt;</operator><name>es_instrument</name></name></expr>;</return>
	</block_content>}</block></if></if_stmt>
	<switch>switch <condition>(<expr><call><name>nodeTag</name><argument_list>(<argument><expr><name>plan</name></expr></argument>)</argument_list></call></expr>)</condition>
	<block>{<block_content>
		<comment type="block">/*
	 	 * For scan nodes
		 */</comment>
		<case>case <expr><name>T_Scan</name></expr>:</case>
		<case>case <expr><name>T_SeqScan</name></expr>:</case>
		<case>case <expr><name>T_SampleScan</name></expr>:</case>
		<case>case <expr><name>T_IndexScan</name></expr>:</case>
		<case>case <expr><name>T_IndexOnlyScan</name></expr>:</case>
		<case>case <expr><name>T_BitmapIndexScan</name></expr>:</case>
		<case>case <expr><name>T_BitmapHeapScan</name></expr>:</case>
		<case>case <expr><name>T_TidScan</name></expr>:</case>
		<case>case <expr><name>T_SubqueryScan</name></expr>:</case>
		<case>case <expr><name>T_FunctionScan</name></expr>:</case>
		<case>case <expr><name>T_ValuesScan</name></expr>:</case>
		<case>case <expr><name>T_TableFuncScan</name></expr>:</case>
		<case>case <expr><name>T_CteScan</name></expr>:</case>
		<case>case <expr><name>T_NamedTuplestoreScan</name></expr>:</case>
		<case>case <expr><name>T_WorkTableScan</name></expr>:</case>
		<case>case <expr><name>T_ForeignScan</name></expr>:</case>
		<case>case <expr><name>T_CustomScan</name></expr>:</case>
		<comment type="block">/*
	 	 * For join nodes
		 */</comment>
		<case>case <expr><name>T_NestLoop</name></expr>:</case>
		<case>case <expr><name>T_MergeJoin</name></expr>:</case>
		<case>case <expr><name>T_HashJoin</name></expr>:</case>
		<comment type="block">/*
	 	 * For sort nodes
		 */</comment>
		<case>case <expr><name>T_Sort</name></expr>:</case>
		<comment type="block">/*
	 	 * For group or agg nodes
		 */</comment>
		<case>case <expr><name>T_Group</name></expr>:</case>
		<case>case <expr><name>T_Agg</name></expr>:</case>
		<comment type="block">/*
	 	 * For hash nodes
		 */</comment>
		<case>case <expr><name>T_Hash</name></expr>:</case>
			<comment type="block">/*
	 		 * The instrument option is INSTRUMENT_POLAR_ROWS and plan node is scan node, hashjoin node, sort group/agg hash nodes, 
			 * so we reset the instrument option.
			 */</comment>
			<expr_stmt><expr><name>polar_instrument_option</name> <operator>=</operator> <name><name>estate</name><operator>-&gt;</operator><name>es_instrument</name></name></expr>;</expr_stmt>
			<break>break;</break>
		<default>default:</default>
			<break>break;</break>
	</block_content>}</block></switch>
	<return>return <expr><name>polar_instrument_option</name></expr>;</return>
</block_content>}</block></function>
</unit>
