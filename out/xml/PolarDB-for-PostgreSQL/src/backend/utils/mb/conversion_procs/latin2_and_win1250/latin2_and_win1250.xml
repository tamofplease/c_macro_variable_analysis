<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/PolarDB-for-PostgreSQL/src/backend/utils/mb/conversion_procs/latin2_and_win1250/latin2_and_win1250.c"><comment type="block">/*-------------------------------------------------------------------------
 *
 *	  LATIN2 and WIN1250
 *
 * Portions Copyright (c) 1996-2018, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 * IDENTIFICATION
 *	  src/backend/utils/mb/conversion_procs/latin2_and_win1250/latin2_and_win1250.c
 *
 *-------------------------------------------------------------------------
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"postgres.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fmgr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mb/pg_wchar.h"</cpp:file></cpp:include>

<expr_stmt><expr><name>PG_MODULE_MAGIC</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PG_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>latin2_to_mic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PG_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>mic_to_latin2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PG_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>win1250_to_mic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PG_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>mic_to_win1250</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PG_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>latin2_to_win1250</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PG_FUNCTION_INFO_V1</name><argument_list>(<argument><expr><name>win1250_to_latin2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="block">/* ----------
 * conv_proc(
 *		INTEGER,	-- source encoding id
 *		INTEGER,	-- destination encoding id
 *		CSTRING,	-- source string (null terminated C string)
 *		CSTRING,	-- destination string (null terminated C string)
 *		INTEGER		-- source string length
 * ) returns VOID;
 * ----------
 */</comment>

<comment type="block">/* WIN1250 to ISO-8859-2 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>win1250_2_iso88592</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x87</literal></expr>,
	<expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0xA9</literal></expr>, <expr><literal type="number">0x8B</literal></expr>, <expr><literal type="number">0xA6</literal></expr>, <expr><literal type="number">0xAB</literal></expr>, <expr><literal type="number">0xAE</literal></expr>, <expr><literal type="number">0xAC</literal></expr>,
	<expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x97</literal></expr>,
	<expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0xB6</literal></expr>, <expr><literal type="number">0xBB</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0xBC</literal></expr>,
	<expr><literal type="number">0xA0</literal></expr>, <expr><literal type="number">0xB7</literal></expr>, <expr><literal type="number">0xA2</literal></expr>, <expr><literal type="number">0xA3</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xA1</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xA7</literal></expr>,
	<expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xAA</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xAD</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xAF</literal></expr>,
	<expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xB2</literal></expr>, <expr><literal type="number">0xB3</literal></expr>, <expr><literal type="number">0xB4</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
	<expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0xB1</literal></expr>, <expr><literal type="number">0xBA</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xBD</literal></expr>, <expr><literal type="number">0xB5</literal></expr>, <expr><literal type="number">0xBF</literal></expr>,
	<expr><literal type="number">0xC0</literal></expr>, <expr><literal type="number">0xC1</literal></expr>, <expr><literal type="number">0xC2</literal></expr>, <expr><literal type="number">0xC3</literal></expr>, <expr><literal type="number">0xC4</literal></expr>, <expr><literal type="number">0xC5</literal></expr>, <expr><literal type="number">0xC6</literal></expr>, <expr><literal type="number">0xC7</literal></expr>,
	<expr><literal type="number">0xC8</literal></expr>, <expr><literal type="number">0xC9</literal></expr>, <expr><literal type="number">0xCA</literal></expr>, <expr><literal type="number">0xCB</literal></expr>, <expr><literal type="number">0xCC</literal></expr>, <expr><literal type="number">0xCD</literal></expr>, <expr><literal type="number">0xCE</literal></expr>, <expr><literal type="number">0xCF</literal></expr>,
	<expr><literal type="number">0xD0</literal></expr>, <expr><literal type="number">0xD1</literal></expr>, <expr><literal type="number">0xD2</literal></expr>, <expr><literal type="number">0xD3</literal></expr>, <expr><literal type="number">0xD4</literal></expr>, <expr><literal type="number">0xD5</literal></expr>, <expr><literal type="number">0xD6</literal></expr>, <expr><literal type="number">0xD7</literal></expr>,
	<expr><literal type="number">0xD8</literal></expr>, <expr><literal type="number">0xD9</literal></expr>, <expr><literal type="number">0xDA</literal></expr>, <expr><literal type="number">0xDB</literal></expr>, <expr><literal type="number">0xDC</literal></expr>, <expr><literal type="number">0xDD</literal></expr>, <expr><literal type="number">0xDE</literal></expr>, <expr><literal type="number">0xDF</literal></expr>,
	<expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xE1</literal></expr>, <expr><literal type="number">0xE2</literal></expr>, <expr><literal type="number">0xE3</literal></expr>, <expr><literal type="number">0xE4</literal></expr>, <expr><literal type="number">0xE5</literal></expr>, <expr><literal type="number">0xE6</literal></expr>, <expr><literal type="number">0xE7</literal></expr>,
	<expr><literal type="number">0xE8</literal></expr>, <expr><literal type="number">0xE9</literal></expr>, <expr><literal type="number">0xEA</literal></expr>, <expr><literal type="number">0xEB</literal></expr>, <expr><literal type="number">0xEC</literal></expr>, <expr><literal type="number">0xED</literal></expr>, <expr><literal type="number">0xEE</literal></expr>, <expr><literal type="number">0xEF</literal></expr>,
	<expr><literal type="number">0xF0</literal></expr>, <expr><literal type="number">0xF1</literal></expr>, <expr><literal type="number">0xF2</literal></expr>, <expr><literal type="number">0xF3</literal></expr>, <expr><literal type="number">0xF4</literal></expr>, <expr><literal type="number">0xF5</literal></expr>, <expr><literal type="number">0xF6</literal></expr>, <expr><literal type="number">0xF7</literal></expr>,
	<expr><literal type="number">0xF8</literal></expr>, <expr><literal type="number">0xF9</literal></expr>, <expr><literal type="number">0xFA</literal></expr>, <expr><literal type="number">0xFB</literal></expr>, <expr><literal type="number">0xFC</literal></expr>, <expr><literal type="number">0xFD</literal></expr>, <expr><literal type="number">0xFE</literal></expr>, <expr><literal type="number">0xFF</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="block">/* ISO-8859-2 to WIN1250 */</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>iso88592_2_win1250</name><index>[]</index></name> <init>= <expr><block>{
	<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x87</literal></expr>,
	<expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x8B</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
	<expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x97</literal></expr>,
	<expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x9B</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
	<expr><literal type="number">0xA0</literal></expr>, <expr><literal type="number">0xA5</literal></expr>, <expr><literal type="number">0xA2</literal></expr>, <expr><literal type="number">0xA3</literal></expr>, <expr><literal type="number">0xA4</literal></expr>, <expr><literal type="number">0xBC</literal></expr>, <expr><literal type="number">0x8C</literal></expr>, <expr><literal type="number">0xA7</literal></expr>,
	<expr><literal type="number">0xA8</literal></expr>, <expr><literal type="number">0x8A</literal></expr>, <expr><literal type="number">0xAA</literal></expr>, <expr><literal type="number">0x8D</literal></expr>, <expr><literal type="number">0x8F</literal></expr>, <expr><literal type="number">0xAD</literal></expr>, <expr><literal type="number">0x8E</literal></expr>, <expr><literal type="number">0xAF</literal></expr>,
	<expr><literal type="number">0xB0</literal></expr>, <expr><literal type="number">0xB9</literal></expr>, <expr><literal type="number">0xB2</literal></expr>, <expr><literal type="number">0xB3</literal></expr>, <expr><literal type="number">0xB4</literal></expr>, <expr><literal type="number">0xBE</literal></expr>, <expr><literal type="number">0x9C</literal></expr>, <expr><literal type="number">0xA1</literal></expr>,
	<expr><literal type="number">0xB8</literal></expr>, <expr><literal type="number">0x9A</literal></expr>, <expr><literal type="number">0xBA</literal></expr>, <expr><literal type="number">0x9D</literal></expr>, <expr><literal type="number">0x9F</literal></expr>, <expr><literal type="number">0xBD</literal></expr>, <expr><literal type="number">0x9E</literal></expr>, <expr><literal type="number">0xBF</literal></expr>,
	<expr><literal type="number">0xC0</literal></expr>, <expr><literal type="number">0xC1</literal></expr>, <expr><literal type="number">0xC2</literal></expr>, <expr><literal type="number">0xC3</literal></expr>, <expr><literal type="number">0xC4</literal></expr>, <expr><literal type="number">0xC5</literal></expr>, <expr><literal type="number">0xC6</literal></expr>, <expr><literal type="number">0xC7</literal></expr>,
	<expr><literal type="number">0xC8</literal></expr>, <expr><literal type="number">0xC9</literal></expr>, <expr><literal type="number">0xCA</literal></expr>, <expr><literal type="number">0xCB</literal></expr>, <expr><literal type="number">0xCC</literal></expr>, <expr><literal type="number">0xCD</literal></expr>, <expr><literal type="number">0xCE</literal></expr>, <expr><literal type="number">0xCF</literal></expr>,
	<expr><literal type="number">0xD0</literal></expr>, <expr><literal type="number">0xD1</literal></expr>, <expr><literal type="number">0xD2</literal></expr>, <expr><literal type="number">0xD3</literal></expr>, <expr><literal type="number">0xD4</literal></expr>, <expr><literal type="number">0xD5</literal></expr>, <expr><literal type="number">0xD6</literal></expr>, <expr><literal type="number">0xD7</literal></expr>,
	<expr><literal type="number">0xD8</literal></expr>, <expr><literal type="number">0xD9</literal></expr>, <expr><literal type="number">0xDA</literal></expr>, <expr><literal type="number">0xDB</literal></expr>, <expr><literal type="number">0xDC</literal></expr>, <expr><literal type="number">0xDD</literal></expr>, <expr><literal type="number">0xDE</literal></expr>, <expr><literal type="number">0xDF</literal></expr>,
	<expr><literal type="number">0xE0</literal></expr>, <expr><literal type="number">0xE1</literal></expr>, <expr><literal type="number">0xE2</literal></expr>, <expr><literal type="number">0xE3</literal></expr>, <expr><literal type="number">0xE4</literal></expr>, <expr><literal type="number">0xE5</literal></expr>, <expr><literal type="number">0xE6</literal></expr>, <expr><literal type="number">0xE7</literal></expr>,
	<expr><literal type="number">0xE8</literal></expr>, <expr><literal type="number">0xE9</literal></expr>, <expr><literal type="number">0xEA</literal></expr>, <expr><literal type="number">0xEB</literal></expr>, <expr><literal type="number">0xEC</literal></expr>, <expr><literal type="number">0xED</literal></expr>, <expr><literal type="number">0xEE</literal></expr>, <expr><literal type="number">0xEF</literal></expr>,
	<expr><literal type="number">0xF0</literal></expr>, <expr><literal type="number">0xF1</literal></expr>, <expr><literal type="number">0xF2</literal></expr>, <expr><literal type="number">0xF3</literal></expr>, <expr><literal type="number">0xF4</literal></expr>, <expr><literal type="number">0xF5</literal></expr>, <expr><literal type="number">0xF6</literal></expr>, <expr><literal type="number">0xF7</literal></expr>,
	<expr><literal type="number">0xF8</literal></expr>, <expr><literal type="number">0xF9</literal></expr>, <expr><literal type="number">0xFA</literal></expr>, <expr><literal type="number">0xFB</literal></expr>, <expr><literal type="number">0xFC</literal></expr>, <expr><literal type="number">0xFD</literal></expr>, <expr><literal type="number">0xFE</literal></expr>, <expr><literal type="number">0xFF</literal></expr>
}</block></expr></init></decl>;</decl_stmt>


<function><type><name>Datum</name></type>
<name>latin2_to_mic</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dest</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>len</name> <init>= <expr><call><name>PG_GETARG_INT32</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>CHECK_ENCODING_CONVERSION_ARGS</name><argument_list>(<argument><expr><name>PG_LATIN2</name></expr></argument>, <argument><expr><name>PG_MULE_INTERNAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>latin2mic</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>LC_ISO8859_2</name></expr></argument>, <argument><expr><name>PG_LATIN2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>mic_to_latin2</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dest</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>len</name> <init>= <expr><call><name>PG_GETARG_INT32</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>CHECK_ENCODING_CONVERSION_ARGS</name><argument_list>(<argument><expr><name>PG_MULE_INTERNAL</name></expr></argument>, <argument><expr><name>PG_LATIN2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>mic2latin</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>LC_ISO8859_2</name></expr></argument>, <argument><expr><name>PG_LATIN2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>win1250_to_mic</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dest</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>len</name> <init>= <expr><call><name>PG_GETARG_INT32</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>CHECK_ENCODING_CONVERSION_ARGS</name><argument_list>(<argument><expr><name>PG_WIN1250</name></expr></argument>, <argument><expr><name>PG_MULE_INTERNAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>latin2mic_with_table</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>LC_ISO8859_2</name></expr></argument>, <argument><expr><name>PG_WIN1250</name></expr></argument>,
						 <argument><expr><name>win1250_2_iso88592</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>mic_to_win1250</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dest</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>len</name> <init>= <expr><call><name>PG_GETARG_INT32</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>CHECK_ENCODING_CONVERSION_ARGS</name><argument_list>(<argument><expr><name>PG_MULE_INTERNAL</name></expr></argument>, <argument><expr><name>PG_WIN1250</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>mic2latin_with_table</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>LC_ISO8859_2</name></expr></argument>, <argument><expr><name>PG_WIN1250</name></expr></argument>,
						 <argument><expr><name>iso88592_2_win1250</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>latin2_to_win1250</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dest</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>len</name> <init>= <expr><call><name>PG_GETARG_INT32</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>CHECK_ENCODING_CONVERSION_ARGS</name><argument_list>(<argument><expr><name>PG_LATIN2</name></expr></argument>, <argument><expr><name>PG_WIN1250</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>local2local</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>PG_LATIN2</name></expr></argument>, <argument><expr><name>PG_WIN1250</name></expr></argument>, <argument><expr><name>iso88592_2_win1250</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>Datum</name></type>
<name>win1250_to_latin2</name><parameter_list>(<parameter><decl><type><name>PG_FUNCTION_ARGS</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dest</name> <init>= <expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <call><name>PG_GETARG_CSTRING</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type>			<name>len</name> <init>= <expr><call><name>PG_GETARG_INT32</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name>CHECK_ENCODING_CONVERSION_ARGS</name><argument_list>(<argument><expr><name>PG_WIN1250</name></expr></argument>, <argument><expr><name>PG_LATIN2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>local2local</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>PG_WIN1250</name></expr></argument>, <argument><expr><name>PG_LATIN2</name></expr></argument>, <argument><expr><name>win1250_2_iso88592</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name>PG_RETURN_VOID</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
