<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/redis/src/Win32_Interop/Win32_Error.c"><comment type="block">/*
 * Copyright (c), Microsoft Open Technologies, Inc.
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *  - Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *  - Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;Windows.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern <literal type="string">"C"</literal>
<block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Converts error codes returned by GetLastError/WSAGetLastError to errno codes */</comment>
<function><type><name>int</name></type> <name>translate_sys_error</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>sys_error</name></decl></parameter>)</parameter_list> <block>{<block_content>
  <switch>switch <condition>(<expr><name>sys_error</name></expr>)</condition> <block>{<block_content>
    <case>case <expr><name>ERROR_SUCCESS</name></expr>:</case>                     <return>return <expr><literal type="number">0</literal></expr>;</return>
    <case>case <expr><name>ERROR_NOACCESS</name></expr>:</case>                    <return>return <expr><name>EACCES</name></expr>;</return>
    <case>case <expr><name>WSAEACCES</name></expr>:</case>                         <return>return <expr><name>EACCES</name></expr>;</return>
    <case>case <expr><name>ERROR_ADDRESS_ALREADY_ASSOCIATED</name></expr>:</case>  <return>return <expr><name>EADDRINUSE</name></expr>;</return>
    <case>case <expr><name>WSAEADDRINUSE</name></expr>:</case>                     <return>return <expr><name>EADDRINUSE</name></expr>;</return>
    <case>case <expr><name>WSAEADDRNOTAVAIL</name></expr>:</case>                  <return>return <expr><name>EADDRNOTAVAIL</name></expr>;</return>
    <case>case <expr><name>WSAEAFNOSUPPORT</name></expr>:</case>                   <return>return <expr><name>EAFNOSUPPORT</name></expr>;</return>
    <case>case <expr><name>WSAEWOULDBLOCK</name></expr>:</case>                    <return>return <expr><name>EAGAIN</name></expr>;</return>
    <case>case <expr><name>WSAEALREADY</name></expr>:</case>                       <return>return <expr><name>EALREADY</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_FLAGS</name></expr>:</case>               <return>return <expr><name>EBADF</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_HANDLE</name></expr>:</case>              <return>return <expr><name>EBADF</name></expr>;</return>
    <case>case <expr><name>ERROR_LOCK_VIOLATION</name></expr>:</case>              <return>return <expr><name>EBUSY</name></expr>;</return>
    <case>case <expr><name>ERROR_PIPE_BUSY</name></expr>:</case>                   <return>return <expr><name>EBUSY</name></expr>;</return>
    <case>case <expr><name>ERROR_SHARING_VIOLATION</name></expr>:</case>           <return>return <expr><name>EBUSY</name></expr>;</return>
    <case>case <expr><name>ERROR_OPERATION_ABORTED</name></expr>:</case>           <return>return <expr><name>ECANCELED</name></expr>;</return>
    <case>case <expr><name>WSAEINTR</name></expr>:</case>                          <return>return <expr><name>ECANCELED</name></expr>;</return>
    <case>case <expr><name>ERROR_CONNECTION_ABORTED</name></expr>:</case>          <return>return <expr><name>ECONNABORTED</name></expr>;</return>
    <case>case <expr><name>WSAECONNABORTED</name></expr>:</case>                   <return>return <expr><name>ECONNABORTED</name></expr>;</return>
    <case>case <expr><name>ERROR_CONNECTION_REFUSED</name></expr>:</case>          <return>return <expr><name>ECONNREFUSED</name></expr>;</return>
    <case>case <expr><name>WSAECONNREFUSED</name></expr>:</case>                   <return>return <expr><name>ECONNREFUSED</name></expr>;</return>
    <case>case <expr><name>ERROR_NETNAME_DELETED</name></expr>:</case>             <return>return <expr><name>ECONNRESET</name></expr>;</return>
    <case>case <expr><name>WSAECONNRESET</name></expr>:</case>                     <return>return <expr><name>ECONNRESET</name></expr>;</return>
    <case>case <expr><name>ERROR_ALREADY_EXISTS</name></expr>:</case>              <return>return <expr><name>EEXIST</name></expr>;</return>
    <case>case <expr><name>ERROR_FILE_EXISTS</name></expr>:</case>                 <return>return <expr><name>EEXIST</name></expr>;</return>
    <case>case <expr><name>ERROR_BUFFER_OVERFLOW</name></expr>:</case>             <return>return <expr><name>EFAULT</name></expr>;</return>
    <case>case <expr><name>WSAEFAULT</name></expr>:</case>                         <return>return <expr><name>EFAULT</name></expr>;</return>
    <case>case <expr><name>ERROR_HOST_UNREACHABLE</name></expr>:</case>            <return>return <expr><name>EHOSTUNREACH</name></expr>;</return>
    <case>case <expr><name>WSAEHOSTUNREACH</name></expr>:</case>                   <return>return <expr><name>EHOSTUNREACH</name></expr>;</return>
    <case>case <expr><name>ERROR_INSUFFICIENT_BUFFER</name></expr>:</case>         <return>return <expr><name>EINVAL</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_DATA</name></expr>:</case>                <return>return <expr><name>EINVAL</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_PARAMETER</name></expr>:</case>           <return>return <expr><name>EINVAL</name></expr>;</return>
    <case>case <expr><name>ERROR_SYMLINK_NOT_SUPPORTED</name></expr>:</case>       <return>return <expr><name>EINVAL</name></expr>;</return>
    <case>case <expr><name>WSAEINVAL</name></expr>:</case>                         <return>return <expr><name>EINVAL</name></expr>;</return>
    <case>case <expr><name>WSAEPFNOSUPPORT</name></expr>:</case>                   <return>return <expr><name>EINVAL</name></expr>;</return>
    <case>case <expr><name>WSAESOCKTNOSUPPORT</name></expr>:</case>                <return>return <expr><name>EINVAL</name></expr>;</return>
    <case>case <expr><name>ERROR_BEGINNING_OF_MEDIA</name></expr>:</case>          <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_BUS_RESET</name></expr>:</case>                   <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_CRC</name></expr>:</case>                         <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_DEVICE_DOOR_OPEN</name></expr>:</case>            <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_DEVICE_REQUIRES_CLEANING</name></expr>:</case>    <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_DISK_CORRUPT</name></expr>:</case>                <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_EOM_OVERFLOW</name></expr>:</case>                <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_FILEMARK_DETECTED</name></expr>:</case>           <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_GEN_FAILURE</name></expr>:</case>                 <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_BLOCK_LENGTH</name></expr>:</case>        <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_IO_DEVICE</name></expr>:</case>                   <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_NO_DATA_DETECTED</name></expr>:</case>            <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_NO_SIGNAL_SENT</name></expr>:</case>              <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_OPEN_FAILED</name></expr>:</case>                 <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_SETMARK_DETECTED</name></expr>:</case>            <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>ERROR_SIGNAL_REFUSED</name></expr>:</case>              <return>return <expr><name>EIO</name></expr>;</return>
    <case>case <expr><name>WSAEISCONN</name></expr>:</case>                        <return>return <expr><name>EISCONN</name></expr>;</return>
    <case>case <expr><name>ERROR_CANT_RESOLVE_FILENAME</name></expr>:</case>       <return>return <expr><name>ELOOP</name></expr>;</return>
    <case>case <expr><name>ERROR_TOO_MANY_OPEN_FILES</name></expr>:</case>         <return>return <expr><name>EMFILE</name></expr>;</return>
    <case>case <expr><name>WSAEMFILE</name></expr>:</case>                         <return>return <expr><name>EMFILE</name></expr>;</return>
    <case>case <expr><name>WSAEMSGSIZE</name></expr>:</case>                       <return>return <expr><name>EMSGSIZE</name></expr>;</return>
    <case>case <expr><name>ERROR_FILENAME_EXCED_RANGE</name></expr>:</case>        <return>return <expr><name>ENAMETOOLONG</name></expr>;</return>
    <case>case <expr><name>ERROR_NETWORK_UNREACHABLE</name></expr>:</case>         <return>return <expr><name>ENETUNREACH</name></expr>;</return>
    <case>case <expr><name>WSAENETUNREACH</name></expr>:</case>                    <return>return <expr><name>ENETUNREACH</name></expr>;</return>
    <case>case <expr><name>WSAENOBUFS</name></expr>:</case>                        <return>return <expr><name>ENOBUFS</name></expr>;</return>
    <case>case <expr><name>ERROR_DIRECTORY</name></expr>:</case>                   <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>ERROR_FILE_NOT_FOUND</name></expr>:</case>              <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_NAME</name></expr>:</case>                <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_DRIVE</name></expr>:</case>               <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_REPARSE_DATA</name></expr>:</case>        <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>ERROR_MOD_NOT_FOUND</name></expr>:</case>               <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>ERROR_PATH_NOT_FOUND</name></expr>:</case>              <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>WSAHOST_NOT_FOUND</name></expr>:</case>                 <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>WSANO_DATA</name></expr>:</case>                        <return>return <expr><name>ENOENT</name></expr>;</return>
    <case>case <expr><name>ERROR_NOT_ENOUGH_MEMORY</name></expr>:</case>           <return>return <expr><name>ENOMEM</name></expr>;</return>
    <case>case <expr><name>ERROR_OUTOFMEMORY</name></expr>:</case>                 <return>return <expr><name>ENOMEM</name></expr>;</return>
    <case>case <expr><name>ERROR_CANNOT_MAKE</name></expr>:</case>                 <return>return <expr><name>ENOSPC</name></expr>;</return>
    <case>case <expr><name>ERROR_DISK_FULL</name></expr>:</case>                   <return>return <expr><name>ENOSPC</name></expr>;</return>
    <case>case <expr><name>ERROR_EA_TABLE_FULL</name></expr>:</case>               <return>return <expr><name>ENOSPC</name></expr>;</return>
    <case>case <expr><name>ERROR_END_OF_MEDIA</name></expr>:</case>                <return>return <expr><name>ENOSPC</name></expr>;</return>
    <case>case <expr><name>ERROR_HANDLE_DISK_FULL</name></expr>:</case>            <return>return <expr><name>ENOSPC</name></expr>;</return>
    <case>case <expr><name>ERROR_NOT_CONNECTED</name></expr>:</case>               <return>return <expr><name>ENOTCONN</name></expr>;</return>
    <case>case <expr><name>WSAENOTCONN</name></expr>:</case>                       <return>return <expr><name>ENOTCONN</name></expr>;</return>
    <case>case <expr><name>ERROR_DIR_NOT_EMPTY</name></expr>:</case>               <return>return <expr><name>ENOTEMPTY</name></expr>;</return>
    <case>case <expr><name>WSAENOTSOCK</name></expr>:</case>                       <return>return <expr><name>ENOTSOCK</name></expr>;</return>
    <case>case <expr><name>ERROR_NOT_SUPPORTED</name></expr>:</case>               <return>return <expr><name>ENOTSUP</name></expr>;</return>
    <case>case <expr><name>ERROR_BROKEN_PIPE</name></expr>:</case>                 <return>return <expr><name>EPIPE</name></expr>;</return>
    <case>case <expr><name>ERROR_ACCESS_DENIED</name></expr>:</case>               <return>return <expr><name>EPERM</name></expr>;</return>
    <case>case <expr><name>ERROR_PRIVILEGE_NOT_HELD</name></expr>:</case>          <return>return <expr><name>EPERM</name></expr>;</return>
    <case>case <expr><name>ERROR_BAD_PIPE</name></expr>:</case>                    <return>return <expr><name>EPIPE</name></expr>;</return>
    <case>case <expr><name>ERROR_NO_DATA</name></expr>:</case>                     <return>return <expr><name>EPIPE</name></expr>;</return>
    <case>case <expr><name>ERROR_PIPE_NOT_CONNECTED</name></expr>:</case>          <return>return <expr><name>EPIPE</name></expr>;</return>
    <case>case <expr><name>WSAESHUTDOWN</name></expr>:</case>                      <return>return <expr><name>EPIPE</name></expr>;</return>
    <case>case <expr><name>WSAEPROTONOSUPPORT</name></expr>:</case>                <return>return <expr><name>EPROTONOSUPPORT</name></expr>;</return>
    <case>case <expr><name>ERROR_WRITE_PROTECT</name></expr>:</case>               <return>return <expr><name>EROFS</name></expr>;</return>
    <case>case <expr><name>ERROR_SEM_TIMEOUT</name></expr>:</case>                 <return>return <expr><name>ETIMEDOUT</name></expr>;</return>
    <case>case <expr><name>WSAETIMEDOUT</name></expr>:</case>                      <return>return <expr><name>ETIMEDOUT</name></expr>;</return>
    <case>case <expr><name>ERROR_NOT_SAME_DEVICE</name></expr>:</case>             <return>return <expr><name>EXDEV</name></expr>;</return>
    <case>case <expr><name>ERROR_INVALID_FUNCTION</name></expr>:</case>            <return>return <expr><name>EISDIR</name></expr>;</return>
    <case>case <expr><name>ERROR_META_EXPANSION_TOO_LONG</name></expr>:</case>     <return>return <expr><name>E2BIG</name></expr>;</return>
    <default>default:</default>                                <return>return <expr><operator>-</operator><literal type="number">9999</literal></expr>;</return> <comment type="line">// to avoid conflicts with other custom codes</comment>
  </block_content>}</block></switch>
</block_content>}</block></function>

<comment type="block">/* */</comment>
<function><type><name>void</name></type> <name>set_errno_from_last_error</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><name>errno</name> <operator>=</operator> <call><name>translate_sys_error</name><argument_list>(<argument><expr><call><name>GetLastError</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block">/* */</comment>
<function><type><name>int</name></type> <name>strerror_r</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>err</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>buflen</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>size</name> <init>= <expr><call><name>FormatMessageA</name><argument_list>(<argument><expr><name>FORMAT_MESSAGE_FROM_SYSTEM</name> <operator>|</operator>
        <name>FORMAT_MESSAGE_IGNORE_INSERTS</name></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>,
        <argument><expr><name>err</name></expr></argument>,
        <argument><expr><literal type="number">0</literal></expr></argument>,
        <argument><expr><name>buf</name></expr></argument>,
        <argument><expr><operator>(</operator><name>DWORD</name><operator>)</operator> <name>buflen</name></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>size</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>strerr</name> <init>= <expr><call><name>strerror</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>strerr</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <name>buflen</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>errno</name> <operator>=</operator> <name>ERANGE</name></expr>;</expr_stmt>
            <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>strerr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>size</name> <operator>&gt;</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <name><name>buf</name><index>[<expr><name>size</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\r'</literal></expr>)</condition> <block>{<block_content>
        <comment type="block">/* remove extra CRLF */</comment>
        <expr_stmt><expr><name><name>buf</name><index>[<expr><name>size</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><name>char</name></type> <name><name>wsa_strerror_buf</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>
<comment type="block">/* */</comment>
<function><type><name>char</name> <modifier>*</modifier></type><name>wsa_strerror</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>err</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>size</name> <init>= <expr><call><name>FormatMessageA</name><argument_list>(<argument><expr><name>FORMAT_MESSAGE_FROM_SYSTEM</name> <operator>|</operator>
        <name>FORMAT_MESSAGE_IGNORE_INSERTS</name></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>,
        <argument><expr><name>err</name></expr></argument>,
        <argument><expr><literal type="number">0</literal></expr></argument>,
        <argument><expr><name>wsa_strerror_buf</name></expr></argument>,
        <argument><expr><literal type="number">128</literal></expr></argument>,
        <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>size</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><call><name>strerror</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>size</name> <operator>&gt;</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <name><name>wsa_strerror_buf</name><index>[<expr><name>size</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\r'</literal></expr>)</condition> <block>{<block_content>
        <comment type="block">/* remove extra CRLF */</comment>
        <expr_stmt><expr><name><name>wsa_strerror_buf</name><index>[<expr><name>size</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return>return <expr><name>wsa_strerror_buf</name></expr>;</return>
</block_content>}</block></function>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
