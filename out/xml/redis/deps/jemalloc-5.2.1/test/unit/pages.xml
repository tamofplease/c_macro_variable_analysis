<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/redis/deps/jemalloc-5.2.1/test/unit/pages.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test/jemalloc_test.h"</cpp:file></cpp:include>

<macro><name>TEST_BEGIN</name><argument_list>(<argument>test_pages_huge</argument>)</argument_list></macro> <block>{<block_content>
	<decl_stmt><decl><type><name>size_t</name></type> <name>alloc_size</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>commit</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>pages</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>hugepage</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>alloc_size</name> <operator>=</operator> <name>HUGEPAGE</name> <operator>*</operator> <literal type="number">2</literal> <operator>-</operator> <name>PAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>commit</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>pages</name> <operator>=</operator> <call><name>pages_map</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>alloc_size</name></expr></argument>, <argument><expr><name>PAGE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>commit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>assert_ptr_not_null</name><argument_list>(<argument><expr><name>pages</name></expr></argument>, <argument><expr><literal type="string">"Unexpected pages_map() error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt><if>if <condition>(<expr><name>init_system_thp_mode</name> <operator>==</operator> <name>thp_mode_default</name></expr>)</condition> <block>{<block_content>
	    <expr_stmt><expr><name>hugepage</name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><operator>(</operator><call><name>ALIGNMENT_CEILING</name><argument_list>(<argument><expr><operator>(</operator><name>uintptr_t</name><operator>)</operator><name>pages</name></expr></argument>, <argument><expr><name>HUGEPAGE</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>
	    <expr_stmt><expr><call><name>assert_b_ne</name><argument_list>(<argument><expr><call><name>pages_huge</name><argument_list>(<argument><expr><name>hugepage</name></expr></argument>, <argument><expr><name>HUGEPAGE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>have_madvise_huge</name></expr></argument>,
	        <argument><expr><literal type="string">"Unexpected pages_huge() result"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><call><name>assert_false</name><argument_list>(<argument><expr><call><name>pages_nohuge</name><argument_list>(<argument><expr><name>hugepage</name></expr></argument>, <argument><expr><name>HUGEPAGE</name></expr></argument>)</argument_list></call></expr></argument>,
	        <argument><expr><literal type="string">"Unexpected pages_nohuge() result"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<expr_stmt><expr><call><name>pages_unmap</name><argument_list>(<argument><expr><name>pages</name></expr></argument>, <argument><expr><name>alloc_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>
<function><type><name>TEST_END</name>

<name>int</name></type>
<name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
	<return>return <expr><call><name>test</name><argument_list>(
	    <argument><expr><name>test_pages_huge</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
