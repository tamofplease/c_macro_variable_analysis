<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/tools/fakefs.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>FS_FAKEFSIFY_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FS_FAKEFSIFY_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<struct>struct <name>fakefsify_error</name> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>line</name></decl>;</decl_stmt>
    <enum>enum <block>{
        <decl><name>ERR_ARCHIVE</name></decl>,
        <decl><name>ERR_SQLITE</name></decl>,
        <decl><name>ERR_POSIX</name></decl>,
        <decl><name>ERR_CANCELLED</name></decl>,
    }</block> <decl><name>type</name></decl>;</enum>
    <decl_stmt><decl><type><name>int</name></type> <name>code</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>message</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>progress</name> <block>{
    <decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>cookie</name></decl>;</decl_stmt>
    <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cookie</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>progress</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>message</name></decl></parameter>, <parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>cancel_out</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<function_decl><type><name>bool</name></type> <name>fakefs_import</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>archive_path</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>fakefsify_error</name></name> <modifier>*</modifier></type><name>err_out</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>progress</name></name></type> <name>progress</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>fakefs_export</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>archive_path</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>fakefsify_error</name></name> <modifier>*</modifier></type><name>err_out</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>progress</name></name></type> <name>progress</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
