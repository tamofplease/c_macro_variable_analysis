<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/app/LinuxInterop.h"><comment type="line">//</comment>
<comment type="line">//  LinuxInterop.h</comment>
<comment type="line">//  iSH</comment>
<comment type="line">//</comment>
<comment type="line">//  Created by Theodore Dubois on 7/3/21.</comment>
<comment type="line">//</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>LinuxInterop_h</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LinuxInterop_h</name></cpp:macro></cpp:define>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>__KERNEL__</name></cpp:ifndef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/fs.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> <name>async_do_in_irq</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>^</modifier><name>block</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>async_do_in_workqueue</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>^</modifier><name>block</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>async_do_in_ios</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>^</modifier><name>block</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>sync_do_in_workqueue</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>^</modifier><name>block</name>)<parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>^</modifier><name>done</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>

<comment type="line">// call into ios from kernel:</comment>

<function_decl><type><name>void</name></type> <name>actuate_kernel</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmdline</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ReportPanic</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>message</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ConsoleLog</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>DefaultRootPath</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>nsobj_t</name>;</typedef>
<function_decl><type><name>nsobj_t</name></type> <name>objc_get</name><parameter_list>(<parameter><decl><type><name>nsobj_t</name></type> <name>object</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>objc_put</name><parameter_list>(<parameter><decl><type><name>nsobj_t</name></type> <name>object</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>linux_tty</name> <block>{
    <decl_stmt><decl><type><name><name>struct</name> <name>linux_tty_callbacks</name></name> <modifier>*</modifier></type><name>ops</name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct <name>linux_tty_callbacks</name> <block>{
    <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>can_output</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>linux_tty</name></name> <modifier>*</modifier></type><name>tty</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>send_input</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>linux_tty</name></name> <modifier>*</modifier></type><name>tty</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>resize</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>linux_tty</name></name> <modifier>*</modifier></type><name>tty</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cols</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rows</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>hangup</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>linux_tty</name></name> <modifier>*</modifier></type><name>tty</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__KERNEL__</name></cpp:ifdef>
<function_decl><type><name><name>struct</name> <name>file</name></name> <modifier>*</modifier></type><name>ios_pty_open</name><parameter_list>(<parameter><decl><type><name>nsobj_t</name> <modifier>*</modifier></type><name>terminal_out</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>nsobj_t</name></type> <name>Terminal_terminalWithType_number</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>number</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>Terminal_setLinuxTTY</name><parameter_list>(<parameter><decl><type><name>nsobj_t</name></type> <name>_self</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>linux_tty</name></name> <modifier>*</modifier></type><name>tty</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>Terminal_sendOutput_length</name><parameter_list>(<parameter><decl><type><name>nsobj_t</name></type> <name>_self</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>Terminal_roomForOutput</name><parameter_list>(<parameter><decl><type><name>nsobj_t</name></type> <name>_self</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>nsobj_t</name></type> <name>UIPasteboard_get</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>long</name></type> <name>UIPasteboard_changeCount</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UIPasteboard_set</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>NSData_length</name><parameter_list>(<parameter><decl><type><name>nsobj_t</name></type> <name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>NSData_bytes</name><parameter_list>(<parameter><decl><type><name>nsobj_t</name></type> <name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<comment type="line">// call into kernel from ios:</comment>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>^</modifier><name>StartSessionDoneBlock</name>)<parameter_list>(<parameter><decl><type><name>int</name></type> <name>retval</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><name>nsobj_t</name></type> <name>terminal</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>void</name></type> <name>linux_start_session</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>exe</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>envp</name></decl></parameter>, <parameter><decl><type><name>StartSessionDoneBlock</name></type> <name>done</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>linux_sethostname</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hostname</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ssize_t</name></type> <name>linux_read_file</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ssize_t</name></type> <name>linux_write_file</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>linux_remove_directory</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* LinuxInterop_h */</comment>
</unit>
