<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/app/Terminal.h"><comment type="line">//</comment>
<comment type="line">//  Terminal.h</comment>
<comment type="line">//  iSH</comment>
<comment type="line">//</comment>
<comment type="line">//  Created by Theodore Dubois on 10/18/17.</comment>
<comment type="line">//</comment>

<cpp:empty>#import &lt;UIKit/UIKit.h&gt;</cpp:empty>
<cpp:empty>#import &lt;WebKit/WebKit.h&gt;</cpp:empty>

<struct_decl>struct <name>tty</name>;</struct_decl>

@<decl_stmt><decl><type><name>interface</name></type> <name>Terminal</name> <range>: <expr><name>NSObject</name>

<operator>+</operator> <operator>(</operator><name>Terminal</name> <operator>*</operator><operator>)</operator><name>terminalWithType</name><operator>:</operator><operator>(</operator><name>int</name><operator>)</operator><name>type</name> <name>number</name><operator>:</operator><operator>(</operator><name>int</name><operator>)</operator><name>number</name></expr></range></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>ISH_LINUX</name></expr></cpp:if>
<comment type="line">// Returns a strong struct tty and a Terminal that has a weak reference to the same tty</comment>
<expr_stmt><expr><operator>+</operator> <operator>(</operator><name>Terminal</name> <operator>*</operator><operator>)</operator><name>createPseudoTerminal</name><operator>:</operator><operator>(</operator>struct <name>tty</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>tty</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><operator>+</operator> <operator>(</operator><name>Terminal</name> <operator>*</operator><operator>)</operator><name>terminalWithUUID</name><operator>:</operator><operator>(</operator><name>NSUUID</name> <operator>*</operator><operator>)</operator><name>uuid</name></expr>;</expr_stmt>
@<macro><name>property</name> <argument_list>(<argument>readonly</argument>)</argument_list></macro> <decl_stmt><decl><type><name>NSUUID</name> <modifier>*</modifier></type><name>uuid</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>+</operator> <operator>(</operator><name>void</name><operator>)</operator><name>convertCommand</name><operator>:</operator><operator>(</operator><name><name>NSArray</name><argument_list type="generic">&lt;<argument><expr><name>NSString</name> <operator>*</operator></expr></argument>&gt;</argument_list></name> <operator>*</operator><operator>)</operator><name>command</name> <name>toArgs</name><operator>:</operator><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name>argv</name> <name>limitSize</name><operator>:</operator><operator>(</operator><name>size_t</name><operator>)</operator><name>maxSize</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>int</name><operator>)</operator><name>sendOutput</name><operator>:</operator><operator>(</operator><specifier>const</specifier> <name>void</name> <operator>*</operator><operator>)</operator><name>buf</name> <name>length</name><operator>:</operator><operator>(</operator><name>int</name><operator>)</operator><name>len</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>sendInput</name><operator>:</operator><operator>(</operator><name>NSData</name> <operator>*</operator><operator>)</operator><name>input</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSString</name> <operator>*</operator><operator>)</operator><name>arrow</name><operator>:</operator><operator>(</operator><name>char</name><operator>)</operator><name>direction</name></expr>;</expr_stmt>

<comment type="line">// Make this terminal no longer be the singleton terminal with its type and number. Will happen eventually if all references go away, but sometimes you want it to happen now.</comment>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>destroy</name></expr>;</expr_stmt>

@<macro><name>property</name> <argument_list>(<argument>readonly</argument>)</argument_list></macro> <decl_stmt><decl><type><name>WKWebView</name> <modifier>*</modifier></type><name>webView</name></decl>;</decl_stmt>
@<macro><name>property</name> <argument_list>(<argument>nonatomic</argument>)</argument_list></macro> <decl_stmt><decl><type><name>BOOL</name></type> <name>enableVoiceOverAnnounce</name></decl>;</decl_stmt>
<comment type="line">// Use KVO on this</comment>
@<macro><name>property</name> <argument_list>(<argument>readonly</argument>)</argument_list></macro> <decl_stmt><decl><type><name>BOOL</name></type> <name>loaded</name></decl>;</decl_stmt>

@<expr_stmt><expr><name>end</name>

<specifier>extern</specifier> struct <name>tty_driver</name> <name>ios_console_driver</name></expr>;</expr_stmt>
</unit>
