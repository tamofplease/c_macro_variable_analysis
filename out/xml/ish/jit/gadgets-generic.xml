<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/jit/gadgets-generic.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cpu-offsets.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ifin</name><parameter_list>(<parameter><type><name>thing</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_ifin(thing, __COUNTER__, __VA_ARGS__)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ifin</name><parameter_list>(<parameter><type><name>thing</name></type></parameter>, <parameter><type><name>line</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__ifin(thing, line, __VA_ARGS__)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__ifin</name><parameter_list>(<parameter><type><name>thing</name></type></parameter>, <parameter><type><name>line</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>irp da_op##line, __VA_ARGS__ N .ifc thing,\da_op##line</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>endifin</name></cpp:macro> <cpp:value>endif N .endr</cpp:value></cpp:define>

<cpp:empty># sync with enum reg</cpp:empty>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REG_LIST</name></cpp:macro> <cpp:value>reg_a,reg_c,reg_d,reg_b,reg_sp,reg_bp,reg_si,reg_di</cpp:value></cpp:define>
<cpp:empty># sync with enum arg</cpp:empty>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GADGET_LIST</name></cpp:macro> <cpp:value>REG_LIST,imm,mem,addr,gs</cpp:value></cpp:define>
<cpp:empty># sync with enum size</cpp:empty>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZE_LIST</name></cpp:macro> <cpp:value>8,16,32</cpp:value></cpp:define>

<cpp:empty># darwin/linux compatibility</cpp:empty>
<expr><operator>.</operator><name><name>macro</name> <operator>.</operator><name>pushsection_rodata</name>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__APPLE__</name></expr></cpp:if>
    <operator>.</operator><name>pushsection</name></name> <name>__DATA</name></expr><operator>,</operator><expr><name><name>__const</name>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
    <operator>.</operator><name>pushsection</name> <operator>.</operator><name>data</name><operator>.</operator><name>rel</name><operator>.</operator><name>ro</name>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<operator>.</operator><name>endm</name>
<operator>.</operator><name>macro</name> <operator>.</operator><name>pushsection_bullshit</name>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__APPLE__</name></expr></cpp:if>
    <operator>.</operator><name>pushsection</name></name> <name>__TEXT</name></expr><operator>,</operator><expr><name>__text_bullshit</name></expr><operator>,</operator><expr><name>regular</name></expr><operator>,</operator><expr><name><name>pure_instructions</name>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
    <operator>.</operator><name>pushsection</name> <operator>.</operator><name>text</name><operator>.</operator><name>bullshit</name>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<operator>.</operator><name>endm</name>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__APPLE__</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAME</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_##x</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAME</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>x</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<operator>.</operator><name>macro</name> <operator>.</operator><name>global</name><operator>.</operator><name>name</name></name> <name><name>name</name>
    <operator>.</operator><name>global</name></name> <macro><name>NAME</name><argument_list>(<argument>\name</argument>)</argument_list></macro>
    <call><name>NAME</name><argument_list>(<argument><expr><operator>\</operator><name>name</name></expr></argument>)</argument_list></call><operator>\</operator><operator>(</operator><operator>)</operator><operator>:</operator>
<operator>.</operator><name><name>endm</name>

<operator>.</operator><name>macro</name> <operator>.</operator><name>type_compat</name></name> <name>type</name><operator>:</operator><name><name>vararg</name>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>__APPLE__</name></expr></cpp:if>
    <operator>.</operator><name>type</name></name> <operator>\</operator><name><name>type</name>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<operator>.</operator><name>endm</name>

<cpp:empty># an array of gadgets</cpp:empty>
<operator>.</operator><name>macro</name></name> <name>_gadget_array_start</name> <name><name>name</name>
    <operator>.</operator><name>pushsection_rodata</name>
    <operator>.</operator><name>type_compat</name></name> <operator>\</operator><name>name</name><operator>\</operator><operator>(</operator><operator>)</operator><name>_gadgets</name></expr><operator>,</operator>@<expr><name><name>object</name>
    <operator>.</operator><name>global</name><operator>.</operator><name>name</name></name> <operator>\</operator><name>name</name><operator>\</operator><operator>(</operator><operator>)</operator><name><name>_gadgets</name>
<operator>.</operator><name>endm</name>

<operator>.</operator><name>macro</name></name> <name>gadgets</name> <name>type</name></expr><operator>,</operator> <expr><name>list</name><operator>:</operator><name><name>vararg</name>
    <operator>.</operator><name>irp</name></name> <name>arg</name></expr><operator>,</operator> <expr><operator>\</operator><name><name>list</name>
        <operator>.</operator><name>ifndef</name></name> <call><name>NAME</name><argument_list>(<argument><expr><name>gadget_</name><operator>\</operator><name>type</name><operator>\</operator><operator>(</operator><operator>)</operator><name>_</name><operator>\</operator><name>arg</name></expr></argument>)</argument_list></call>
            <operator>.</operator><name>set</name> <call><name>NAME</name><argument_list>(<argument><expr><name>gadget_</name><operator>\</operator><name>type</name><operator>\</operator><operator>(</operator><operator>)</operator><name>_</name><operator>\</operator><name>arg</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><literal type="number">0</literal>
        <operator>.</operator><name><name>endif</name>
        <operator>.</operator><name>quad</name></name> <call><name>NAME</name><argument_list>(<argument><expr><name>gadget_</name><operator>\</operator><name>type</name><operator>\</operator><operator>(</operator><operator>)</operator><name>_</name><operator>\</operator><name>arg</name></expr></argument>)</argument_list></call>
    <operator>.</operator><name><name>endr</name>
<operator>.</operator><name>endm</name>

<operator>.</operator><name>macro</name> <operator>.</operator><name>gadget_list</name></name> <name>type</name></expr><operator>,</operator> <expr><name>list</name><operator>:</operator><name>vararg</name>
    <name>_gadget_array_start</name> <operator>\</operator><name>type</name>
        <name>gadgets</name> <operator>\</operator><name>type</name></expr><operator>,</operator> <expr><operator>\</operator><name><name>list</name>
    <operator>.</operator><name>popsection</name>
<operator>.</operator><name>endm</name>

<operator>.</operator><name>macro</name> <operator>.</operator><name>gadget_list_size</name></name> <name>type</name></expr><operator>,</operator> <expr><name>list</name><operator>:</operator><name>vararg</name>
    <name>_gadget_array_start</name> <operator>\</operator><name>type</name>
        <cpp:empty># sync with enum size</cpp:empty>
        <name>gadgets</name> <operator>\</operator><name>type</name><operator>\</operator><operator>(</operator><operator>)</operator><literal type="number">8</literal></expr><operator>,</operator> <expr><operator>\</operator><name>list</name>
        <name>gadgets</name> <operator>\</operator><name>type</name><operator>\</operator><operator>(</operator><operator>)</operator><literal type="number">16</literal></expr><operator>,</operator> <expr><operator>\</operator><name>list</name>
        <name>gadgets</name> <operator>\</operator><name>type</name><operator>\</operator><operator>(</operator><operator>)</operator><literal type="number">32</literal></expr><operator>,</operator> <expr><operator>\</operator><name>list</name>
        <name>gadgets</name> <operator>\</operator><name>type</name><operator>\</operator><operator>(</operator><operator>)</operator><literal type="number">64</literal></expr><operator>,</operator> <expr><operator>\</operator><name>list</name>
        <name>gadgets</name> <operator>\</operator><name>type</name><operator>\</operator><operator>(</operator><operator>)</operator><literal type="number">80</literal></expr><operator>,</operator> <expr><operator>\</operator><name><name>list</name>
    <operator>.</operator><name>popsection</name>
<operator>.</operator><name>endm</name>

<operator>.</operator><name>macro</name> <operator>.</operator><name>gadget_array</name></name> <name><name>type</name>
    <operator>.</operator><name>gadget_list_size</name></name> <operator>\</operator><name>type</name></expr><operator>,</operator> <expr><name><name>GADGET_LIST</name>
<operator>.</operator><name>endm</name></name></expr>

<cpp:empty># jfc</cpp:empty>
<cpp:empty># https:</cpp:empty><comment type="line">//github.com/llvm-mirror/llvm/blob/release_80/lib/Target/AArch64/MCTargetDesc/AArch64MCAsmInfo.cpp#L41</comment>
<cpp:empty># https:</cpp:empty><comment type="line">//bugs.llvm.org/show_bug.cgi?id=39010#c4</comment>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__arm64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N</name></cpp:macro> <cpp:value>%%</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N</name></cpp:macro> <cpp:value>;</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:empty># vim: ft=gas</cpp:empty>
</unit>
