<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/jit/offsets.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jit/jit.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jit/frame.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"emu/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"emu/tlb.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>cpu</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>eax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>ebx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>ecx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>esi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>edi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>ebp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>esp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>ax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>bx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>cx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>di</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>bp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>gs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>tls_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>eflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>of</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>cf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>flags_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>df_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>fsw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>xmm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>PF_RES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>ZF_RES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>SF_RES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>AF_OPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>PF_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>AF_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>ZF_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>SF_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>DF_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>LOCAL</name></expr></argument>, <argument><expr><name>jit_frame</name></expr></argument>, <argument><expr><name>bp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>LOCAL</name></expr></argument>, <argument><expr><name>jit_frame</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>LOCAL</name></expr></argument>, <argument><expr><name>jit_frame</name></expr></argument>, <argument><expr><name>value_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>LOCAL</name></expr></argument>, <argument><expr><name>jit_frame</name></expr></argument>, <argument><expr><name>last_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>LOCAL</name></expr></argument>, <argument><expr><name>jit_frame</name></expr></argument>, <argument><expr><name>ret_cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>segfault_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>segfault_was_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>CPU</name></expr></argument>, <argument><expr><name>cpu_state</name></expr></argument>, <argument><expr><name>poked_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>MEM_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>MACRO</name><argument_list>(<argument><expr><name>MEM_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>JIT_BLOCK</name></expr></argument>, <argument><expr><name>jit_block</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>JIT_BLOCK</name></expr></argument>, <argument><expr><name>jit_block</name></expr></argument>, <argument><expr><name>code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>TLB</name></expr></argument>, <argument><expr><name>tlb</name></expr></argument>, <argument><expr><name>entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>TLB</name></expr></argument>, <argument><expr><name>tlb</name></expr></argument>, <argument><expr><name>dirty_page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>TLB</name></expr></argument>, <argument><expr><name>tlb</name></expr></argument>, <argument><expr><name>segfault_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>TLB_ENTRY</name></expr></argument>, <argument><expr><name>tlb_entry</name></expr></argument>, <argument><expr><name>page</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>TLB_ENTRY</name></expr></argument>, <argument><expr><name>tlb_entry</name></expr></argument>, <argument><expr><name>page_if_writable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>TLB_ENTRY</name></expr></argument>, <argument><expr><name>tlb_entry</name></expr></argument>, <argument><expr><name>data_minus_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
