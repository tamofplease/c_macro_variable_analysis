<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/tests/e2e/sse2/movss.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;xmmintrin.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOINLINE</name></cpp:macro> <cpp:value>__attribute__ ((noinline))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>printout</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>printf("%05.2f %05.2f %05.2f %05.2f\n", out[0], out[1], out[2], out[3])</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>move5</name><parameter_list>(<parameter><decl><type><name>__m128</name> <modifier>*</modifier></type><name>xmm1</name></decl></parameter>, <parameter><decl><type><name>__m128</name> <modifier>*</modifier></type><name>xmm2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>move1612</name><parameter_list>(<parameter><decl><type><name>__m128</name> <modifier>*</modifier></type><name>xmm1</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>fa</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>store1612</name><parameter_list>(<parameter><decl><type><name>__m128</name> <modifier>*</modifier></type><name>xmm1</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>fa</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>float</name></type> <name><name>out</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>float</name></type> <name><name>buf1234</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">11.11</literal></expr>, <expr><literal type="number">22.22</literal></expr>, <expr><literal type="number">33.33</literal></expr>, <expr><literal type="number">44.44</literal></expr> }</block></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>float</name></type> <name><name>buf5678</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">55.55</literal></expr>, <expr><literal type="number">66.66</literal></expr>, <expr><literal type="number">77.77</literal></expr>, <expr><literal type="number">88.88</literal></expr> }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>float</name></type> <name>fa</name> <init>= <expr><literal type="number">16.12</literal></expr></init></decl>;</decl_stmt>

	<comment type="line">// xmm1 Initially 1234</comment>
	<decl_stmt><decl><type><name>__m128</name></type> <name>xmm1</name> <init>= <expr><call><name>_mm_load_ps</name><argument_list>(<argument><expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator> <name>buf1234</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>_mm_store_ps</name><argument_list>(<argument><expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator> <name>out</name></expr></argument>, <argument><expr><name>xmm1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>printout</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

	<comment type="line">// xmm2 Initially 5678</comment>
	<decl_stmt><decl><type><name>__m128</name></type> <name>xmm2</name> <init>= <expr><call><name>_mm_load_ps</name><argument_list>(<argument><expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator> <name>buf5678</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>_mm_store_ps</name><argument_list>(<argument><expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator> <name>out</name></expr></argument>, <argument><expr><name>xmm2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>printout</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <comment type="line">//move5(&amp;xmm1, &amp;xmm2);</comment>
	<decl_stmt><decl><type><name>__m128</name></type> <name>xmm3</name> <init>= <expr><call><name>_mm_move_ss</name><argument_list>(<argument><expr><name>xmm1</name></expr></argument>, <argument><expr><name>xmm2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>_mm_store_ps</name><argument_list>(<argument><expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator> <name>out</name></expr></argument>, <argument><expr><name>xmm3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>printout</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name>move1612</name><argument_list>(<argument><expr><operator>&amp;</operator><name>xmm1</name></expr></argument>, <argument><expr><name>fa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>_mm_store_ps</name><argument_list>(<argument><expr><operator>(</operator><name>float</name><operator>*</operator><operator>)</operator> <name>out</name></expr></argument>, <argument><expr><name>xmm1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>printout</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>fa</name> <operator>=</operator> <literal type="number">00.00</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>store1612</name><argument_list>(<argument><expr><operator>&amp;</operator><name>xmm1</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%05.2f\n"</literal></expr></argument>, <argument><expr><name>fa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name> <name>NOINLINE</name></type> <name>move5</name><parameter_list>(<parameter><decl><type><name>__m128</name> <modifier>*</modifier></type><name>xmm1</name></decl></parameter>, <parameter><decl><type><name>__m128</name> <modifier>*</modifier></type><name>xmm2</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<comment type="line">// Move the 5 from 5678, rest should remain: 5234.</comment>
	<comment type="line">//*xmm1 = _mm_move_ss(*xmm1, *xmm2);</comment>
	<asm>asm <specifier>volatile</specifier>(	"movss %[vec2], %[vec1]\n\t"
		: [vec1] "+x" (*xmm1)
		: [vec2] "x" (*xmm2));</asm>
</block_content>}</block></function>

<function><type><name>void</name> <name>NOINLINE</name></type> <name>move1612</name><parameter_list>(<parameter><decl><type><name>__m128</name> <modifier>*</modifier></type><name>xmm1</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>fa</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <comment type="line">// Move the 16.12 into first position of xmm1.</comment>
    <comment type="line">// This is mem, so rest should be zeroed.</comment>
	<asm>asm <specifier>volatile</specifier>(	"movss %[flt], %[vec]\n\t"
		: [vec] "+x" (*xmm1)
		: [flt] "m" (fa));</asm>
</block_content>}</block></function>

<function><type><name>void</name> <name>NOINLINE</name></type> <name>store1612</name><parameter_list>(<parameter><decl><type><name>__m128</name> <modifier>*</modifier></type><name>xmm1</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>fa</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <comment type="line">// Store the 16.12 into float.</comment>
	<asm>asm <specifier>volatile</specifier>(	"movss %[vec], %[flt]\n\t"
		: [flt] "+m" (*fa)
		: [vec] "x" (*xmm1));</asm>
</block_content>}</block></function>
</unit>
