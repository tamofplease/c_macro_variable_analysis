<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/kernel/misc.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"kernel/calls.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRCTL_SET_KEEPCAPS_</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRCTL_SET_NAME_</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>

<function><type><name>int_t</name></type> <name>sys_prctl</name><parameter_list>(<parameter><decl><type><name>dword_t</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>uint_t</name></type> <name>arg2</name></decl></parameter>, <parameter><function_decl><type><name>uint_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>arg3</name></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><function_decl><type><name>uint_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>arg4</name></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><function_decl><type><name>uint_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>arg5</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list> <block>{<block_content>
    <switch>switch <condition>(<expr><name>option</name></expr>)</condition> <block>{<block_content>
        <case>case <expr><name>PRCTL_SET_KEEPCAPS_</name></expr>:</case>
            <comment type="line">// stub</comment>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        <case>case <expr><name>PRCTL_SET_NAME_</name></expr>:</case> <block>{<block_content>
            <decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name>user_read_string</name><argument_list>(<argument><expr><name>arg2</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
                <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt><expr><name><name>name</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"prctl(PRCTL_SET_NAME, \"%s\")"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>current</name><operator>-&gt;</operator><name>comm</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        </block_content>}</block>
        <default>default:</default>
            <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"prctl(%#x)"</literal></expr></argument>, <argument><expr><name>option</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>_EINVAL</name></expr>;</return>
    </block_content>}</block></switch>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_arch_prctl</name><parameter_list>(<parameter><decl><type><name>int_t</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>addr</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"arch_prctl(%#x, %#x)"</literal></expr></argument>, <argument><expr><name>code</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>_EINVAL</name></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REBOOT_MAGIC1</name></cpp:macro> <cpp:value>0xfee1dead</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REBOOT_MAGIC2</name></cpp:macro> <cpp:value>672274793</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REBOOT_MAGIC2A</name></cpp:macro> <cpp:value>85072278</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REBOOT_MAGIC2B</name></cpp:macro> <cpp:value>369367448</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REBOOT_MAGIC2C</name></cpp:macro> <cpp:value>537993216</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REBOOT_CMD_CAD_OFF</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REBOOT_CMD_CAD_ON</name></cpp:macro> <cpp:value>0x89abcdef</cpp:value></cpp:define>

<function><type><name>int_t</name></type> <name>sys_reboot</name><parameter_list>(<parameter><decl><type><name>int_t</name></type> <name>magic</name></decl></parameter>, <parameter><decl><type><name>int_t</name></type> <name>magic2</name></decl></parameter>, <parameter><decl><type><name>int_t</name></type> <name>cmd</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"reboot(%#x, %d, %d)"</literal></expr></argument>, <argument><expr><name>magic</name></expr></argument>, <argument><expr><name>magic2</name></expr></argument>, <argument><expr><name>cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>superuser</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>magic</name> <operator>!=</operator> <operator>(</operator><name>int</name><operator>)</operator> <name>REBOOT_MAGIC1</name> <operator>||</operator>
            <operator>(</operator><name>magic2</name> <operator>!=</operator> <name>REBOOT_MAGIC2</name> <operator>&amp;&amp;</operator>
             <name>magic2</name> <operator>!=</operator> <name>REBOOT_MAGIC2A</name> <operator>&amp;&amp;</operator>
             <name>magic2</name> <operator>!=</operator> <name>REBOOT_MAGIC2B</name> <operator>&amp;&amp;</operator>
             <name>magic2</name> <operator>!=</operator> <name>REBOOT_MAGIC2C</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <switch>switch <condition>(<expr><name>cmd</name></expr>)</condition> <block>{<block_content>
        <case>case <expr><name>REBOOT_CMD_CAD_ON</name></expr>:</case>
        <case>case <expr><name>REBOOT_CMD_CAD_OFF</name></expr>:</case>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        <default>default:</default>
            <return>return <expr><name>_EPERM</name></expr>;</return>
    </block_content>}</block></switch>
</block_content>}</block></function>
</unit>
