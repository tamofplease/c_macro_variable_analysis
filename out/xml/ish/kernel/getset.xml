<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/kernel/getset.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"kernel/calls.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"kernel/task.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"kernel/personality.h"</cpp:file></cpp:include>

<function><type><name>pid_t_</name></type> <name>sys_getpid</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getpid()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>tgid</name></name></expr>;</return>
</block_content>}</block></function>
<function><type><name>pid_t_</name></type> <name>sys_gettid</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"gettid()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>pid</name></name></expr>;</return>
</block_content>}</block></function>
<function><type><name>pid_t_</name></type> <name>sys_getppid</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getppid()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>pid_t_</name></type> <name>ppid</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name>pids_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name><name>current</name><operator>-&gt;</operator><name>parent</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name>ppid</name> <operator>=</operator> <name><name>current</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>pid</name></name></expr>;</expr_stmt></block_content></block></if>
    <else>else<block type="pseudo"><block_content>
        <expr_stmt><expr><name>ppid</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt><expr><call><name>unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name>pids_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name>ppid</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>dword_t</name></type> <name>sys_getuid32</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getuid32()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>uid</name></name></expr>;</return>
</block_content>}</block></function>
<function><type><name>dword_t</name></type> <name>sys_getuid</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getuid()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>uid</name></name> <operator>&amp;</operator> <literal type="number">0xffff</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>dword_t</name></type> <name>sys_geteuid32</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"geteuid32()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>euid</name></name></expr>;</return>
</block_content>}</block></function>
<function><type><name>dword_t</name></type> <name>sys_geteuid</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"geteuid()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>euid</name></name> <operator>&amp;</operator> <literal type="number">0xffff</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_setuid</name><parameter_list>(<parameter><decl><type><name>uid_t_</name></type> <name>uid</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"setuid(%d)"</literal></expr></argument>, <argument><expr><name>uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>superuser</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>uid</name></name> <operator>=</operator> <name><name>current</name><operator>-&gt;</operator><name>suid</name></name> <operator>=</operator> <name>uid</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>uid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>uid</name></name> <operator>&amp;&amp;</operator> <name>uid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>suid</name></name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>euid</name></name> <operator>=</operator> <name>uid</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>dword_t</name></type> <name>sys_setresuid</name><parameter_list>(<parameter><decl><type><name>uid_t_</name></type> <name>ruid</name></decl></parameter>, <parameter><decl><type><name>uid_t_</name></type> <name>euid</name></decl></parameter>, <parameter><decl><type><name>uid_t_</name></type> <name>suid</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"setresuid(%d, %d, %d)"</literal></expr></argument>, <argument><expr><name>ruid</name></expr></argument>, <argument><expr><name>euid</name></expr></argument>, <argument><expr><name>suid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>superuser</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>ruid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>ruid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>uid</name></name> <operator>&amp;&amp;</operator> <name>ruid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>euid</name></name> <operator>&amp;&amp;</operator> <name>ruid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>suid</name></name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>euid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>euid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>uid</name></name> <operator>&amp;&amp;</operator> <name>euid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>euid</name></name> <operator>&amp;&amp;</operator> <name>euid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>suid</name></name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>suid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>suid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>uid</name></name> <operator>&amp;&amp;</operator> <name>suid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>euid</name></name> <operator>&amp;&amp;</operator> <name>suid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>suid</name></name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>ruid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>uid</name></name> <operator>=</operator> <name>ruid</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>euid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>euid</name></name> <operator>=</operator> <name>euid</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>suid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>suid</name></name> <operator>=</operator> <name>suid</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_getresuid</name><parameter_list>(<parameter><decl><type><name>addr_t</name></type> <name>ruid_addr</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>euid_addr</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>suid_addr</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getresuid(%#x, %#x, %#x)"</literal></expr></argument>, <argument><expr><name>ruid_addr</name></expr></argument>, <argument><expr><name>euid_addr</name></expr></argument>, <argument><expr><name>suid_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>user_put</name><argument_list>(<argument><expr><name>ruid_addr</name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>uid</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>user_put</name><argument_list>(<argument><expr><name>euid_addr</name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>euid</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>user_put</name><argument_list>(<argument><expr><name>suid_addr</name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>suid</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_setreuid</name><parameter_list>(<parameter><decl><type><name>uid_t_</name></type> <name>ruid</name></decl></parameter>, <parameter><decl><type><name>uid_t_</name></type> <name>euid</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>sys_setresuid</name><argument_list>(<argument><expr><name>ruid</name></expr></argument>, <argument><expr><name>euid</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>dword_t</name></type> <name>sys_getgid32</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getgid32()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>gid</name></name></expr>;</return>
</block_content>}</block></function>
<function><type><name>dword_t</name></type> <name>sys_getgid</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getgid()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>gid</name></name> <operator>&amp;</operator> <literal type="number">0xffff</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>dword_t</name></type> <name>sys_getegid32</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getegid32()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>egid</name></name></expr>;</return>
</block_content>}</block></function>
<function><type><name>dword_t</name></type> <name>sys_getegid</name><parameter_list>()</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getegid()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>egid</name></name> <operator>&amp;</operator> <literal type="number">0xffff</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_setgid</name><parameter_list>(<parameter><decl><type><name>uid_t_</name></type> <name>gid</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"setgid(%d)"</literal></expr></argument>, <argument><expr><name>gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>superuser</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>gid</name></name> <operator>=</operator> <name><name>current</name><operator>-&gt;</operator><name>sgid</name></name> <operator>=</operator> <name>gid</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else>else <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>gid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>gid</name></name> <operator>&amp;&amp;</operator> <name>gid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>sgid</name></name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>egid</name></name> <operator>=</operator> <name>gid</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>dword_t</name></type> <name>sys_setresgid</name><parameter_list>(<parameter><decl><type><name>uid_t_</name></type> <name>rgid</name></decl></parameter>, <parameter><decl><type><name>uid_t_</name></type> <name>egid</name></decl></parameter>, <parameter><decl><type><name>uid_t_</name></type> <name>sgid</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"setresgid(%d, %d, %d)"</literal></expr></argument>, <argument><expr><name>rgid</name></expr></argument>, <argument><expr><name>egid</name></expr></argument>, <argument><expr><name>sgid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>superuser</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>rgid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>rgid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>gid</name></name> <operator>&amp;&amp;</operator> <name>rgid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>egid</name></name> <operator>&amp;&amp;</operator> <name>rgid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>sgid</name></name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>egid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>egid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>gid</name></name> <operator>&amp;&amp;</operator> <name>egid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>egid</name></name> <operator>&amp;&amp;</operator> <name>egid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>sgid</name></name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>sgid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>sgid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>gid</name></name> <operator>&amp;&amp;</operator> <name>sgid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>egid</name></name> <operator>&amp;&amp;</operator> <name>sgid</name> <operator>!=</operator> <name><name>current</name><operator>-&gt;</operator><name>sgid</name></name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>_EPERM</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>

    <if_stmt><if>if <condition>(<expr><name>rgid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>gid</name></name> <operator>=</operator> <name>rgid</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>egid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>egid</name></name> <operator>=</operator> <name>egid</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>sgid</name> <operator>!=</operator> <operator>(</operator><name>uid_t</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>sgid</name></name> <operator>=</operator> <name>sgid</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_getresgid</name><parameter_list>(<parameter><decl><type><name>addr_t</name></type> <name>rgid_addr</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>egid_addr</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>sgid_addr</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getresgid(%#x, %#x, %#x)"</literal></expr></argument>, <argument><expr><name>rgid_addr</name></expr></argument>, <argument><expr><name>egid_addr</name></expr></argument>, <argument><expr><name>sgid_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>user_put</name><argument_list>(<argument><expr><name>rgid_addr</name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>gid</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>user_put</name><argument_list>(<argument><expr><name>egid_addr</name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>egid</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>user_put</name><argument_list>(<argument><expr><name>sgid_addr</name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>sgid</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_setregid</name><parameter_list>(<parameter><decl><type><name>uid_t_</name></type> <name>rgid</name></decl></parameter>, <parameter><decl><type><name>uid_t_</name></type> <name>egid</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <return>return <expr><call><name>sys_setresgid</name><argument_list>(<argument><expr><name>rgid</name></expr></argument>, <argument><expr><name>egid</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_getgroups</name><parameter_list>(<parameter><decl><type><name>dword_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>list</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"getgroups(%d, %#x)"</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>size</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>ngroups</name></name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><name>size</name> <operator>&lt;</operator> <name><name>current</name><operator>-&gt;</operator><name>ngroups</name></name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EINVAL</name></expr>;</return></block_content></block></if></if_stmt>
    <for>for <control>(<init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>current</name><operator>-&gt;</operator><name>ngroups</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">" %d"</literal></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>groups</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <if_stmt><if>if <condition>(<expr><call><name>user_write</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>groups</name></name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>ngroups</name></name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uid_t_</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>ngroups</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int_t</name></type> <name>sys_setgroups</name><parameter_list>(<parameter><decl><type><name>dword_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>list</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"setgroups(%d, %#x)"</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>size</name> <operator>&gt;</operator> <name>MAX_GROUPS</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EINVAL</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt><if>if <condition>(<expr><call><name>user_read</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>groups</name></name></expr></argument>, <argument><expr><name>size</name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uid_t_</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>
    <for>for <control>(<init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">" %d"</literal></expr></argument>, <argument><expr><name><name>current</name><operator>-&gt;</operator><name>groups</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt><expr><name><name>current</name><operator>-&gt;</operator><name>ngroups</name></name> <operator>=</operator> <name>size</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<comment type="line">// this does not really work</comment>
<function><type><name>int_t</name></type> <name>sys_capget</name><parameter_list>(<parameter><decl><type><name>addr_t</name></type> <name>header_addr</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>data_addr</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"capget(%#x, %#x)"</literal></expr></argument>, <argument><expr><name>header_addr</name></expr></argument>, <argument><expr><name>data_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
<function><type><name>int_t</name></type> <name>sys_capset</name><parameter_list>(<parameter><decl><type><name>addr_t</name></type> <name>header_addr</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>data_addr</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"capset(%#x, %#x)"</literal></expr></argument>, <argument><expr><name>header_addr</name></expr></argument>, <argument><expr><name>data_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<comment type="line">// minimal version according to Linux sys/personality.h</comment>
<function><type><name>int_t</name></type> <name>sys_personality</name><parameter_list>(<parameter><decl><type><name>dword_t</name></type> <name>persona</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <expr_stmt><expr><call><name>STRACE</name><argument_list>(<argument><expr><literal type="string">"personality(%#x)"</literal></expr></argument>, <argument><expr><name>persona</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line">// Get the personality</comment>
    <if_stmt><if>if <condition>(<expr><name>persona</name> <operator>==</operator> <literal type="number">0xffffffff</literal></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>group</name><operator>-&gt;</operator><name>personality</name></name></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line">// ADDR_NO_RANDOMIZE is the only thing we support, and you can't turn it off</comment>
    <if_stmt><if>if <condition>(<expr><name>persona</name> <operator>!=</operator> <name>ADDR_NO_RANDOMIZE_</name></expr>)</condition><block type="pseudo"><block_content>
        <return>return <expr><name>_EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <return>return <expr><name><name>current</name><operator>-&gt;</operator><name>group</name><operator>-&gt;</operator><name>personality</name></name></expr>;</return>
</block_content>}</block></function>
</unit>
