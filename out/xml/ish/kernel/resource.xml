<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/kernel/resource.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>RESOURCE_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESOURCE_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"kernel/time.h"</cpp:file></cpp:include>

<typedef>typedef <type><name>qword_t</name></type> <name>rlim_t_</name>;</typedef>
<typedef>typedef <type><name>dword_t</name></type> <name>rlim32_t_</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIM_INFINITY_</name></cpp:macro> <cpp:value>((rlim_t_) -1)</cpp:value></cpp:define>

<struct>struct <name>rlimit_</name> <block>{
    <decl_stmt><decl><type><name>rlim_t_</name></type> <name>cur</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rlim_t_</name></type> <name>max</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>rlimit32_</name> <block>{
    <decl_stmt><decl><type><name>rlim32_t_</name></type> <name>cur</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>rlim32_t_</name></type> <name>max</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_CPU_</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_FSIZE_</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_DATA_</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_STACK_</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_CORE_</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_RSS_</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_NPROC_</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_NOFILE_</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_MEMLOCK_</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_AS_</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_LOCKS_</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_SIGPENDING_</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_MSGQUEUE_</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_NICE_</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_RTPRIO_</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_RTTIME_</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RLIMIT_NLIMITS_</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<function_decl><type><name>dword_t</name></type> <name>sys_getrlimit32</name><parameter_list>(<parameter><decl><type><name>dword_t</name></type> <name>resource</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>rlim_addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>dword_t</name></type> <name>sys_setrlimit32</name><parameter_list>(<parameter><decl><type><name>dword_t</name></type> <name>resource</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>rlim_addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>dword_t</name></type> <name>sys_prlimit64</name><parameter_list>(<parameter><decl><type><name>pid_t_</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><name>dword_t</name></type> <name>resource</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>new_limit_addr</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>old_limit_addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>dword_t</name></type> <name>sys_old_getrlimit32</name><parameter_list>(<parameter><decl><type><name>dword_t</name></type> <name>resource</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>rlim_addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>rlim_t_</name></type> <name>rlimit</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>resource</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>rusage_</name> <block>{
    <decl_stmt><decl><type><name><name>struct</name> <name>timeval_</name></name></type> <name>utime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>struct</name> <name>timeval_</name></name></type> <name>stime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>maxrss</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>ixrss</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>idrss</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>isrss</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>minflt</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>majflt</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>nswap</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>inblock</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>oublock</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>msgsnd</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>msgrcv</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>nsignals</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>nvcsw</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>nivcsw</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name><name>struct</name> <name>rusage_</name></name></type> <name>rusage_get_current</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>rusage_add</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rusage_</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>rusage_</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUSAGE_SELF_</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUSAGE_CHILDREN_</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<function_decl><type><name>dword_t</name></type> <name>sys_getrusage</name><parameter_list>(<parameter><decl><type><name>dword_t</name></type> <name>who</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>rusage_addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_t</name></type> <name>sys_sched_getaffinity</name><parameter_list>(<parameter><decl><type><name>pid_t_</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><name>dword_t</name></type> <name>cpusetsize</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>cpuset_addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int_t</name></type> <name>sys_sched_setaffinity</name><parameter_list>(<parameter><decl><type><name>pid_t_</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><name>dword_t</name></type> <name>cpusetsize</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>cpuset_addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int_t</name></type> <name>sys_getpriority</name><parameter_list>(<parameter><decl><type><name>int_t</name></type> <name>which</name></decl></parameter>, <parameter><decl><type><name>pid_t_</name></type> <name>who</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int_t</name></type> <name>sys_setpriority</name><parameter_list>(<parameter><decl><type><name>int_t</name></type> <name>which</name></decl></parameter>, <parameter><decl><type><name>pid_t_</name></type> <name>who</name></decl></parameter>, <parameter><decl><type><name>int_t</name></type> <name>prio</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_t</name></type> <name>sys_sched_getparam</name><parameter_list>(<parameter><decl><type><name>pid_t_</name></type> <name>pid</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>param_addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int_t</name></type> <name>sys_sched_getscheduler</name><parameter_list>(<parameter><function_decl><type><name>pid_t_</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>pid</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int_t</name></type> <name>sys_sched_setscheduler</name><parameter_list>(<parameter><function_decl><type><name>pid_t_</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>pid</name></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>int_t</name></type> <name>policy</name></decl></parameter>, <parameter><decl><type><name>addr_t</name></type> <name>param_addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int_t</name></type> <name>sys_sched_get_priority_max</name><parameter_list>(<parameter><decl><type><name>int_t</name></type> <name>policy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int_t</name></type> <name>sys_ioprio_set</name><parameter_list>(<parameter><function_decl><type><name>int_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>which</name></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><function_decl><type><name>int_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>who</name></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><function_decl><type><name>int_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>ioprio</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int_t</name></type> <name>sys_ioprio_get</name><parameter_list>(<parameter><function_decl><type><name>int_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>which</name></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><function_decl><type><name>int_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>who</name></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><function_decl><type><name>int_t</name></type> <name>UNUSED</name><parameter_list>(<parameter><decl><type><name>ioprio</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
