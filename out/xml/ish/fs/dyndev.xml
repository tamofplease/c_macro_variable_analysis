<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/fs/dyndev.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>FS_DYN_DEV_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FS_DYN_DEV_H</name></cpp:macro></cpp:define>

<comment type="line">// dyn_dev's are dynamically added devices (character only for now)</comment>
<comment type="line">// with custom dev_ops assigned</comment>
<comment type="line">// It's useful to add new device "drivers" in runtime (for example,</comment>
<comment type="line">// devices only present on some platforms)</comment>

<comment type="line">// dev_ops handing char device with DYN_DEV_MAJOR major number</comment>
<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>dev_ops</name></name></type> <name>dyn_dev_char</name></decl>;</decl_stmt>

<comment type="line">// Registeres new block/character device with provided major and</comment>
<comment type="line">// minor numbers, handled by provided ops</comment>
<comment type="line">//</comment>
<comment type="line">// ops should be valid for "kernel" lifetime (should not be freed, but</comment>
<comment type="line">// might be static), and should not be null</comment>
<comment type="line">//</comment>
<comment type="line">// type is DEV_BLOCK or DEV_CHAR</comment>
<comment type="line">// (only char is supported for now)</comment>
<comment type="line">//</comment>
<comment type="line">// major should be DYN_DEV_MAJOR</comment>
<comment type="line">//</comment>
<comment type="line">// minor should be 0-255</comment>
<comment type="line">//</comment>
<comment type="line">// Return value:</comment>
<comment type="line">//  - 0 on success</comment>
<comment type="line">//  - _EEXIST if provided minor number is alredy taken</comment>
<comment type="line">//  - _EINVAL if provided arguments are invalid</comment>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dyn_dev_register</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dev_ops</name></name> <modifier>*</modifier></type><name>ops</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>major</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>minor</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
