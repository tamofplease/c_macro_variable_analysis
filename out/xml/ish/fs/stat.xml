<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="../out/cloned_projects/ish/fs/stat.h"><cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>FS_STAT_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FS_STAT_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"misc.h"</cpp:file></cpp:include>

<struct>struct <name>statbuf</name> <block>{
    <decl_stmt><decl><type><name>qword_t</name></type> <name>dev</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qword_t</name></type> <name>inode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>mode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>nlink</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>uid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>gid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qword_t</name></type> <name>rdev</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qword_t</name></type> <name>size</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>blksize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qword_t</name></type> <name>blocks</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>atime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>atime_nsec</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>mtime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>mtime_nsec</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>ctime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>ctime_nsec</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>oldstat</name> <block>{
    <decl_stmt><decl><type><name>word_t</name></type> <name>dev</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>ino</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>mode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>nlink</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>uid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>gid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>rdev</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>size</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>atime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>mtime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>ctime</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>newstat</name> <block>{
    <decl_stmt><decl><type><name>dword_t</name></type> <name>dev</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>ino</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>mode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>nlink</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>uid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>word_t</name></type> <name>gid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>rdev</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>size</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>blksize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>blocks</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>atime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>atime_nsec</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>mtime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>mtime_nsec</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>ctime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>ctime_nsec</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name></type> <name><name>pad</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>newstat64</name> <block>{
    <decl_stmt><decl><type><name>qword_t</name></type> <name>dev</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>_pad1</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>fucked_ino</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>mode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>nlink</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>uid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>gid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qword_t</name></type> <name>rdev</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>_pad2</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qword_t</name></type> <name>size</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>blksize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qword_t</name></type> <name>blocks</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>atime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>atime_nsec</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>mtime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>mtime_nsec</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>ctime</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>dword_t</name></type> <name>ctime_nsec</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>qword_t</name></type> <name>ino</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>packed</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>

<struct>struct <name>statfsbuf</name> <block>{
    <decl_stmt><decl><type><name>long</name></type> <name>type</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>bsize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>blocks</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>bfree</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>bavail</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>files</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>ffree</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>fsid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>namelen</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>frsize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name>flags</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name></type> <name><name>spare</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>statfs_</name> <block>{
    <decl_stmt><decl><type><name>uint_t</name></type> <name>type</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>bsize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>blocks</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>bfree</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>bavail</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>files</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>ffree</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>fsid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>namelen</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>frsize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>flags</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name><name>spare</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>packed</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>

<struct>struct <name>statfs64_</name> <block>{
    <decl_stmt><decl><type><name>uint_t</name></type> <name>type</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>bsize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>blocks</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>bfree</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>bavail</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>files</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>ffree</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint64_t</name></type> <name>fsid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>namelen</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>frsize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name>flags</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>uint_t</name></type> <name><name>pad</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>packed</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
