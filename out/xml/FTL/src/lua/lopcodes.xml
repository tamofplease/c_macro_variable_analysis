<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/cloned_projects/FTL/src/lua/lopcodes.c"><comment type="block">/*
** $Id: lopcodes.c $
** Opcodes for Lua virtual machine
** See Copyright Notice in lua.h
*/</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>lopcodes_c</name></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LUA_CORE</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lprefix.h"</cpp:file></cpp:include>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lopcodes.h"</cpp:file></cpp:include>


<comment type="block">/* ORDER OP */</comment>

<decl_stmt><decl><type><name>LUAI_DDEF</name> <specifier>const</specifier> <name>lu_byte</name></type> <name><name>luaP_opmodes</name><index>[<expr><name>NUM_OPCODES</name></expr>]</index></name> <init>= <expr><block>{
<comment type="block">/*       MM OT IT T  A  mode		   opcode  */</comment>
  <expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_MOVE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iAsBx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LOADI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iAsBx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LOADF */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LOADK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LOADKX */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LOADFALSE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LFALSESKIP */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LOADTRUE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LOADNIL */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_GETUPVAL */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SETUPVAL */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_GETTABUP */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_GETTABLE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_GETI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_GETFIELD */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SETTABUP */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SETTABLE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SETI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SETFIELD */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_NEWTABLE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SELF */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_ADDI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_ADDK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SUBK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_MULK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_MODK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_POWK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_DIVK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_IDIVK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_BANDK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_BORK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_BXORK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SHRI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SHLI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_ADD */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SUB */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_MUL */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_MOD */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_POW */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_DIV */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_IDIV */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_BAND */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_BOR */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_BXOR */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SHL */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SHR */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_MMBIN */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_MMBINI*/</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_MMBINK*/</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_UNM */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_BNOT */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_NOT */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LEN */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_CONCAT */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_CLOSE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_TBC */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>isJ</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_JMP */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_EQ */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LT */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_EQK */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_EQI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LTI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_LEI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_GTI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_GEI */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_TEST */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_TESTSET */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_CALL */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_TAILCALL */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_RETURN */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_RETURN0 */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_RETURN1 */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_FORLOOP */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_FORPREP */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_TFORPREP */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_TFORCALL */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_TFORLOOP */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_SETLIST */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABx</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_CLOSURE */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_VARARG */</comment>
 ,<expr><call><name>opmode</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>iABC</name></expr></argument>)</argument_list></call></expr>		<comment type="block">/* OP_VARARGPREP */</comment>
 ,<macro><name>opmode</name><argument_list>(<argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>iAx</argument>)</argument_list></macro>		<comment type="block">/* OP_EXTRAARG */</comment>
}</block></expr></init></decl>;</decl_stmt>

</unit>
