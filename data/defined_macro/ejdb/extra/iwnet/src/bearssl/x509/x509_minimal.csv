id,name,value
e8838ba8-4e69-46a1-bf9e-aa6a6941d820,T0_VBYTE,(unsigned char)((((uint32_t)(x) >> (n)) & 0x7F) | 0x80)
a32d6efd-3b1e-4a10-9886-4f4c9cc38de0,T0_FBYTE,(unsigned char)(((uint32_t)(x) >> (n)) & 0x7F)
6115ef38-84d8-4c81-808e-e1ce981e7ccb,T0_SBYTE,(unsigned char)((((uint32_t)(x) >> 28) + 0xF8) ^ 0xF8)
75c38e1d-1714-40dd-abd3-244526a37cec,T0_INT1,"T0_FBYTE(x, 0)"
2d508404-ece1-43e4-94b9-02e78742a90c,T0_INT2,"T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
86e3b8de-bb8b-48f5-8770-d8097b97016c,T0_INT3,"T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
bcc5fe03-b514-4f91-aba5-150b018b46a9,T0_INT4,"T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
9418d4e6-c1e8-4a4c-a101-f0bfe07e6b6e,T0_INT5,"T0_SBYTE(x), T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
41f72526-125a-478b-a535-7d0bec014808,CTX,"((br_x509_minimal_context *)(void *)((unsigned char *)t0ctx - offsetof(br_x509_minimal_context, cpu)))"
0b55dd32-999b-422e-8f8c-04d334f19b87,CONTEXT_NAME,br_x509_minimal_context
4a482257-9e02-4122-aa1b-6bfacc312057,DNHASH_LEN,((CTX->dn_hash_impl->desc >> BR_HASHDESC_OUT_OFF) & BR_HASHDESC_OUT_MASK)
160b2a60-70aa-4f30-bdde-f5aa4470a733,T0_INTERPRETED,60
7514314b-15a5-4004-803e-d230f6598a41,T0_ENTER,"do { \
		const unsigned char *t0_newip; \
		uint32_t t0_lnum; \
		t0_newip = &t0_codeblock[t0_caddr[(slot) - T0_INTERPRETED]]; \
		t0_lnum = t0_parse7E_unsigned(&t0_newip); \
		(rp) += t0_lnum; \
		*((rp) ++) = (uint32_t)((ip) - &t0_codeblock[0]) + (t0_lnum << 16); \
		(ip) = t0_newip; \
	} while (0)"
c38ca39a-967d-41a2-b9f9-210e5377fee3,T0_DEFENTRY,"void \
name(void *ctx) \
{ \
	t0_context *t0ctx = ctx; \
	t0ctx->ip = &t0_codeblock[0]; \
	T0_ENTER(t0ctx->ip, t0ctx->rp, slot); \
}"
9f33e8f4-8c79-4fcd-943c-5630feac8c9c,T0_NEXT,(*(*(t0ipp)) ++)
07677b0b-51c2-4379-98de-eace6336aca2,T0_LOCAL,(*(rp - 2 - (x)))
b3c92ecd-1cff-4126-a3b9-e1b92516aef4,T0_POP,(*-- dp)
bb4b0e44-ed6e-41c8-8566-7a6c7c8bbe75,T0_POPi,(*(int32_t *)(-- dp))
f156dcae-24a2-481d-9dd7-d9d4f2235037,T0_PEEK,(*(dp - 1 - (x)))
54740c9c-75ac-4a3e-9f35-229e9ecdc692,T0_PEEKi,(*(int32_t *)(dp - 1 - (x)))
64182f25-694d-41b1-9c3c-97b4cbed20e6,T0_PUSH,do { *dp = (v); dp ++; } while (0)
e76a44a9-7643-4187-afbf-e8af4ed6a38f,T0_PUSHi,do { *(int32_t *)dp = (v); dp ++; } while (0)
6ae68580-91ff-4636-a853-40ff8ae375b9,T0_RPOP,(*-- rp)
9f1be74b-b515-4da5-8a04-bd3ee4903ba7,T0_RPOPi,(*(int32_t *)(-- rp))
d0bae8e0-1e0b-4f32-a08c-640b0b6afe26,T0_RPUSH,do { *rp = (v); rp ++; } while (0)
1734ce90-9995-4447-b24d-95f7c6b17c3e,T0_RPUSHi,do { *(int32_t *)rp = (v); rp ++; } while (0)
aee7cf52-4792-41a0-b7d4-ca689ec3c8ba,T0_ROLL,"do { \
	size_t t0len = (size_t)(x); \
	uint32_t t0tmp = *(dp - 1 - t0len); \
	memmove(dp - t0len - 1, dp - t0len, t0len * sizeof *dp); \
	*(dp - 1) = t0tmp; \
} while (0)"
638275f2-ec79-4a1c-8a74-fa5bffe924b4,T0_SWAP,"do { \
	uint32_t t0tmp = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
6953bdec-1f85-4cdb-bee3-3c5dc1bb881f,T0_ROT,"do { \
	uint32_t t0tmp = *(dp - 3); \
	*(dp - 3) = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
f4c91877-6a1a-442d-a7c4-420c0b4f5364,T0_NROT,"do { \
	uint32_t t0tmp = *(dp - 1); \
	*(dp - 1) = *(dp - 2); \
	*(dp - 2) = *(dp - 3); \
	*(dp - 3) = t0tmp; \
} while (0)"
bb4e3aa8-c938-4ee5-88b0-bd8962f627a6,T0_PICK,"do { \
	uint32_t t0depth = (x); \
	T0_PUSH(T0_PEEK(t0depth)); \
} while (0)"
b0eee6a2-9914-4f3e-b99d-51f190fcc55c,T0_CO,"do { \
	goto t0_exit; \
} while (0)"
4bc4f1b9-c3c5-4867-a870-879fcfe4eeb9,T0_RET,goto t0_next
