id,name,value
c45f043a-c180-4b68-9cf0-6dc2660ea571,T0_VBYTE,(unsigned char)((((uint32_t)(x) >> (n)) & 0x7F) | 0x80)
060561e1-f513-4021-89d0-9a3d199956a9,T0_FBYTE,(unsigned char)(((uint32_t)(x) >> (n)) & 0x7F)
1e8d6095-6a4c-478b-9a23-9d1f57158ca2,T0_SBYTE,(unsigned char)((((uint32_t)(x) >> 28) + 0xF8) ^ 0xF8)
adacc772-0ed4-4b8e-8390-0ad3a5b523af,T0_INT1,"T0_FBYTE(x, 0)"
d469e7d2-a91f-4c78-b3aa-b66ed200ad93,T0_INT2,"T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
d532a3be-6b8c-4d67-b679-3665abb6c7fa,T0_INT3,"T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
a14a3855-05f2-4c04-9759-d665f253d4a1,T0_INT4,"T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
b7e08059-26bd-460e-b346-a8813066d376,T0_INT5,"T0_SBYTE(x), T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
048af8b9-23ec-42e2-878d-78fb5929bb8b,CTX,"((br_skey_decoder_context *)(void *)((unsigned char *)t0ctx - offsetof(br_skey_decoder_context, cpu)))"
fc60092e-7d69-42ab-9182-3c2d539687a4,CONTEXT_NAME,br_skey_decoder_context
14588801-1479-4876-abe1-8115fad0b7b9,T0_INTERPRETED,34
047cee59-889b-4993-b288-c31798ba48ba,T0_ENTER,"do { \
		const unsigned char *t0_newip; \
		uint32_t t0_lnum; \
		t0_newip = &t0_codeblock[t0_caddr[(slot) - T0_INTERPRETED]]; \
		t0_lnum = t0_parse7E_unsigned(&t0_newip); \
		(rp) += t0_lnum; \
		*((rp) ++) = (uint32_t)((ip) - &t0_codeblock[0]) + (t0_lnum << 16); \
		(ip) = t0_newip; \
	} while (0)"
e431dba3-93b2-4e4b-83c6-55ab30cf4eac,T0_DEFENTRY,"void \
name(void *ctx) \
{ \
	t0_context *t0ctx = ctx; \
	t0ctx->ip = &t0_codeblock[0]; \
	T0_ENTER(t0ctx->ip, t0ctx->rp, slot); \
}"
bd307816-0eb7-4204-8ccd-6ea6bc4b7c4d,T0_NEXT,(*(*(t0ipp)) ++)
2b667883-500e-43f1-88b1-cbbfed7490cb,T0_LOCAL,(*(rp - 2 - (x)))
dfff67e8-a5e3-4651-9c15-19ba57559bfc,T0_POP,(*-- dp)
3b1eaa2c-acdb-427c-ba39-c7e3dbb6147c,T0_POPi,(*(int32_t *)(-- dp))
94c9b366-0a37-4b1a-8682-becbaaa16e84,T0_PEEK,(*(dp - 1 - (x)))
8f0a2f2c-3023-4ae5-aa7e-def4c2a0d803,T0_PEEKi,(*(int32_t *)(dp - 1 - (x)))
356fe96f-f96e-427a-875a-24e87521b12b,T0_PUSH,do { *dp = (v); dp ++; } while (0)
23b65f6a-047f-457a-944e-a9ff48220792,T0_PUSHi,do { *(int32_t *)dp = (v); dp ++; } while (0)
d1e2626c-0b6d-403f-86c6-aba1cc10a119,T0_RPOP,(*-- rp)
4d6b5495-e9bf-4a61-a08f-d8a2fa3345cb,T0_RPOPi,(*(int32_t *)(-- rp))
f1fd29d0-499d-4095-8e71-e550cb30e202,T0_RPUSH,do { *rp = (v); rp ++; } while (0)
e4c461cb-91ab-4917-8061-93abba84f5fe,T0_RPUSHi,do { *(int32_t *)rp = (v); rp ++; } while (0)
5834b858-32f6-478e-b14b-ea3c0654e2c5,T0_ROLL,"do { \
	size_t t0len = (size_t)(x); \
	uint32_t t0tmp = *(dp - 1 - t0len); \
	memmove(dp - t0len - 1, dp - t0len, t0len * sizeof *dp); \
	*(dp - 1) = t0tmp; \
} while (0)"
9cea3d6c-afb2-439b-9484-26785f2ed2ab,T0_SWAP,"do { \
	uint32_t t0tmp = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
0432b420-8f35-4de3-96a9-09a05b20df31,T0_ROT,"do { \
	uint32_t t0tmp = *(dp - 3); \
	*(dp - 3) = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
ac12b490-c2e8-4a34-a90a-af0cecea65f7,T0_NROT,"do { \
	uint32_t t0tmp = *(dp - 1); \
	*(dp - 1) = *(dp - 2); \
	*(dp - 2) = *(dp - 3); \
	*(dp - 3) = t0tmp; \
} while (0)"
a38b6264-481f-401a-ae0b-979c2edf005d,T0_PICK,"do { \
	uint32_t t0depth = (x); \
	T0_PUSH(T0_PEEK(t0depth)); \
} while (0)"
ef71f006-b514-4b19-8bb9-c30e86e5414c,T0_CO,"do { \
	goto t0_exit; \
} while (0)"
fe2c2e5e-66db-46a3-8ea6-78327636c7ad,T0_RET,goto t0_next
