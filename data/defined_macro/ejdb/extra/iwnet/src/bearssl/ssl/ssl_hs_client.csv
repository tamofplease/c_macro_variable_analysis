id,name,value
a15a9559-609f-458a-a1cd-dfbffeb2f094,T0_VBYTE,(unsigned char)((((uint32_t)(x) >> (n)) & 0x7F) | 0x80)
0c4cb196-0e70-4e7f-9940-f6e485b6b2db,T0_FBYTE,(unsigned char)(((uint32_t)(x) >> (n)) & 0x7F)
19d022f5-3ad1-40f2-a750-3e496fe49592,T0_SBYTE,(unsigned char)((((uint32_t)(x) >> 28) + 0xF8) ^ 0xF8)
aaea367c-8a60-4b5c-9cdf-f2f6eac48b46,T0_INT1,"T0_FBYTE(x, 0)"
c3a73742-8557-4351-8063-7c11ca4dfc8a,T0_INT2,"T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
71763d92-c228-48ee-8ebd-fdcc9851e120,T0_INT3,"T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
0548801e-f767-429a-b8e4-2b7607cfb624,T0_INT4,"T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
59795de1-9380-4862-b4db-7f8e6003cad0,T0_INT5,"T0_SBYTE(x), T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
2b0e0c33-99f6-4ad3-b679-b35cc821b811,ENG,"((br_ssl_engine_context *)(void *)((unsigned char *)t0ctx - offsetof(br_ssl_engine_context, cpu)))"
88208c19-44dd-4895-9fc3-d4b8e6509383,CTX,((br_ssl_client_context *)ENG)
63e386fb-95a8-49d2-bb18-3020eb1a3ffe,T0_INTERPRETED,88
def70198-ac56-4e32-8505-61fa08e986ca,T0_ENTER,"do { \
		const unsigned char *t0_newip; \
		uint32_t t0_lnum; \
		t0_newip = &t0_codeblock[t0_caddr[(slot) - T0_INTERPRETED]]; \
		t0_lnum = t0_parse7E_unsigned(&t0_newip); \
		(rp) += t0_lnum; \
		*((rp) ++) = (uint32_t)((ip) - &t0_codeblock[0]) + (t0_lnum << 16); \
		(ip) = t0_newip; \
	} while (0)"
9a54132b-76a6-4ef7-b866-d58f8901641e,T0_DEFENTRY,"void \
name(void *ctx) \
{ \
	t0_context *t0ctx = ctx; \
	t0ctx->ip = &t0_codeblock[0]; \
	T0_ENTER(t0ctx->ip, t0ctx->rp, slot); \
}"
758b911b-f2a6-44d3-95c5-01bc8419ec08,T0_NEXT,(*(*(t0ipp)) ++)
dd58cf12-a50a-4cba-a627-a0b0a100279e,T0_LOCAL,(*(rp - 2 - (x)))
20c96167-d53a-4525-91e1-5778fff26cba,T0_POP,(*-- dp)
754b68d1-8fe6-4b55-9af3-5ffcb326582a,T0_POPi,(*(int32_t *)(-- dp))
bdf09906-b9bc-4640-aef3-18cb48a2312f,T0_PEEK,(*(dp - 1 - (x)))
eff4de97-2aae-4557-99ea-0894b544cddb,T0_PEEKi,(*(int32_t *)(dp - 1 - (x)))
f6800992-f35d-4d3a-9f7b-7121e0e3c03f,T0_PUSH,do { *dp = (v); dp ++; } while (0)
edfb95e6-c0a0-4cdc-9d0f-f8552d144400,T0_PUSHi,do { *(int32_t *)dp = (v); dp ++; } while (0)
7cdb8c62-55ab-461c-82d1-cae2c52ccabc,T0_RPOP,(*-- rp)
d776c4e0-5e1c-4078-b7f6-eccfba5e1cbc,T0_RPOPi,(*(int32_t *)(-- rp))
d071db0b-f315-4b57-b487-c75c6f1f6f11,T0_RPUSH,do { *rp = (v); rp ++; } while (0)
296e7ce7-bb7d-490f-bfc6-6541c9cbf5a2,T0_RPUSHi,do { *(int32_t *)rp = (v); rp ++; } while (0)
6f4aed59-a128-41e3-8e2f-98b57bddc211,T0_ROLL,"do { \
	size_t t0len = (size_t)(x); \
	uint32_t t0tmp = *(dp - 1 - t0len); \
	memmove(dp - t0len - 1, dp - t0len, t0len * sizeof *dp); \
	*(dp - 1) = t0tmp; \
} while (0)"
5f1304ee-93b2-4019-b643-83cdbee0a365,T0_SWAP,"do { \
	uint32_t t0tmp = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
7f7d77ed-3e50-4db7-aae1-7d95a98db3ad,T0_ROT,"do { \
	uint32_t t0tmp = *(dp - 3); \
	*(dp - 3) = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
42f3c47e-79be-475c-9fec-6f57814a60b4,T0_NROT,"do { \
	uint32_t t0tmp = *(dp - 1); \
	*(dp - 1) = *(dp - 2); \
	*(dp - 2) = *(dp - 3); \
	*(dp - 3) = t0tmp; \
} while (0)"
00f3bd7d-d224-40f7-9284-75afb220de4d,T0_PICK,"do { \
	uint32_t t0depth = (x); \
	T0_PUSH(T0_PEEK(t0depth)); \
} while (0)"
704e522d-d7ff-4304-b4bd-14c624e50e1f,T0_CO,"do { \
	goto t0_exit; \
} while (0)"
0f746697-9d78-4f81-b55a-9bd228185799,T0_RET,goto t0_next
