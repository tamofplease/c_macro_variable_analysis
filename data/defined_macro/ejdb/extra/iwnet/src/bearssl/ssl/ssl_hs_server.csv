id,name,value
01fda8d0-ad34-4499-a35c-3d2799dc8ada,T0_VBYTE,(unsigned char)((((uint32_t)(x) >> (n)) & 0x7F) | 0x80)
34715f4a-668e-4228-ac93-a71396999b88,T0_FBYTE,(unsigned char)(((uint32_t)(x) >> (n)) & 0x7F)
f995c4c3-250a-4583-9af9-0300a352c10f,T0_SBYTE,(unsigned char)((((uint32_t)(x) >> 28) + 0xF8) ^ 0xF8)
1b96e17e-7b8d-49c8-aea4-6fd4bbe0cc5d,T0_INT1,"T0_FBYTE(x, 0)"
6189a6dd-19c3-4839-b618-8121a1c7f8be,T0_INT2,"T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
d970ed2e-f38f-4b65-9c02-af0bea9a3d8d,T0_INT3,"T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
f9c2fb3a-2f33-41d1-bbab-2027d13a297e,T0_INT4,"T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
dc2a76db-7d62-4496-a4a8-9777cda7a34f,T0_INT5,"T0_SBYTE(x), T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
55c4fea2-e25c-4aa2-9056-3c4ebdb2ad08,ENG,"((br_ssl_engine_context *)(void *)((unsigned char *)t0ctx - offsetof(br_ssl_engine_context, cpu)))"
38ae7cc2-1692-4370-87da-0538f19468b1,CTX,((br_ssl_server_context *)ENG)
c90729ff-e617-41ec-af0e-06c6105fa6e1,T0_INTERPRETED,93
aa4407ba-6876-43e0-a1c8-457c32b56026,T0_ENTER,"do { \
		const unsigned char *t0_newip; \
		uint32_t t0_lnum; \
		t0_newip = &t0_codeblock[t0_caddr[(slot) - T0_INTERPRETED]]; \
		t0_lnum = t0_parse7E_unsigned(&t0_newip); \
		(rp) += t0_lnum; \
		*((rp) ++) = (uint32_t)((ip) - &t0_codeblock[0]) + (t0_lnum << 16); \
		(ip) = t0_newip; \
	} while (0)"
1fa40dc6-e260-4fa8-b2ba-55df90af007b,T0_DEFENTRY,"void \
name(void *ctx) \
{ \
	t0_context *t0ctx = ctx; \
	t0ctx->ip = &t0_codeblock[0]; \
	T0_ENTER(t0ctx->ip, t0ctx->rp, slot); \
}"
67c445d0-3a99-4437-8ef8-660a1f362ec2,T0_NEXT,(*(*(t0ipp)) ++)
553f8be9-cc29-4dd8-ab80-b0d4b6b668c8,T0_LOCAL,(*(rp - 2 - (x)))
43a530e7-c9b8-4f99-9014-2e958211583c,T0_POP,(*-- dp)
52c56c64-ad59-4954-8bfb-8440ede550ce,T0_POPi,(*(int32_t *)(-- dp))
618e8141-3030-4525-b792-a2c4bb539eda,T0_PEEK,(*(dp - 1 - (x)))
79446e2a-0a2f-4525-8532-d457761e0aba,T0_PEEKi,(*(int32_t *)(dp - 1 - (x)))
13d863a0-dcbd-423b-9ef0-e373d14cd6d3,T0_PUSH,do { *dp = (v); dp ++; } while (0)
0733c1c8-d388-401c-b2c0-fd27fe2b75d9,T0_PUSHi,do { *(int32_t *)dp = (v); dp ++; } while (0)
3ef6f016-f9d7-4be1-8c69-4c4ade9ac7ca,T0_RPOP,(*-- rp)
6b785e15-ed1d-43c1-84f2-9e6ce066cd2e,T0_RPOPi,(*(int32_t *)(-- rp))
63302d14-71f2-451b-a5c5-f947394ba777,T0_RPUSH,do { *rp = (v); rp ++; } while (0)
7d3ee355-f255-42b6-af06-41a8987f28bf,T0_RPUSHi,do { *(int32_t *)rp = (v); rp ++; } while (0)
857533e9-176a-4d69-abc0-9bc809a19393,T0_ROLL,"do { \
	size_t t0len = (size_t)(x); \
	uint32_t t0tmp = *(dp - 1 - t0len); \
	memmove(dp - t0len - 1, dp - t0len, t0len * sizeof *dp); \
	*(dp - 1) = t0tmp; \
} while (0)"
08e061ad-b9a9-47d0-b7f9-ba00f74043d5,T0_SWAP,"do { \
	uint32_t t0tmp = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
e72074ff-f367-4979-b737-8beb3c64a4c5,T0_ROT,"do { \
	uint32_t t0tmp = *(dp - 3); \
	*(dp - 3) = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
8be13db6-60fe-4740-9647-6ac55f15bd4c,T0_NROT,"do { \
	uint32_t t0tmp = *(dp - 1); \
	*(dp - 1) = *(dp - 2); \
	*(dp - 2) = *(dp - 3); \
	*(dp - 3) = t0tmp; \
} while (0)"
ade1acce-1a2a-4ba3-bfd3-da8b91855725,T0_PICK,"do { \
	uint32_t t0depth = (x); \
	T0_PUSH(T0_PEEK(t0depth)); \
} while (0)"
78cf2ff0-d492-4be3-bb0a-b9915205f398,T0_CO,"do { \
	goto t0_exit; \
} while (0)"
32e1600f-bdee-4ff9-904d-6fa846d77472,T0_RET,goto t0_next
