id,name,value
9e93814d-b32a-4108-9137-c479881641b1,T0_VBYTE,(unsigned char)((((uint32_t)(x) >> (n)) & 0x7F) | 0x80)
f58674f6-8bba-4d57-9a1b-bc976910ff86,T0_FBYTE,(unsigned char)(((uint32_t)(x) >> (n)) & 0x7F)
05d81a2f-5570-4433-9c3c-1f5cc8b1d806,T0_SBYTE,(unsigned char)((((uint32_t)(x) >> 28) + 0xF8) ^ 0xF8)
eccec417-fa91-4d48-acef-6a7bdc76fe27,T0_INT1,"T0_FBYTE(x, 0)"
764536bd-e83a-4471-8c95-341cda224fef,T0_INT2,"T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
66f559bc-7854-47bc-97f7-63c6852d1af7,T0_INT3,"T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
2c3ef643-2b2f-4361-9194-e238534c6f71,T0_INT4,"T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
f6c7573b-2442-4aed-b0bd-4933196bdcc3,T0_INT5,"T0_SBYTE(x), T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
bc21d32f-b35b-414d-b207-a886d4a2d473,ENG,"((br_ssl_engine_context *)(void *)((unsigned char *)t0ctx - offsetof(br_ssl_engine_context, cpu)))"
3626bfee-21ab-4bdf-84f7-c25b462becf8,CTX,((br_ssl_server_context *)ENG)
7e61bad8-dd80-4762-89c6-af7510d95e4a,T0_INTERPRETED,93
c0b07fba-6f83-4a2f-a36f-d72f17cd8b91,T0_ENTER,"do { \
		const unsigned char *t0_newip; \
		uint32_t t0_lnum; \
		t0_newip = &t0_codeblock[t0_caddr[(slot) - T0_INTERPRETED]]; \
		t0_lnum = t0_parse7E_unsigned(&t0_newip); \
		(rp) += t0_lnum; \
		*((rp) ++) = (uint32_t)((ip) - &t0_codeblock[0]) + (t0_lnum << 16); \
		(ip) = t0_newip; \
	} while (0)"
b35f68d5-1653-4682-9396-96c8abee8822,T0_DEFENTRY,"void \
name(void *ctx) \
{ \
	t0_context *t0ctx = ctx; \
	t0ctx->ip = &t0_codeblock[0]; \
	T0_ENTER(t0ctx->ip, t0ctx->rp, slot); \
}"
8e6832b8-4fc1-4650-8289-81584a5149bd,T0_NEXT,(*(*(t0ipp)) ++)
1d4a0297-ab54-452a-b8d3-491076a6bf48,T0_LOCAL,(*(rp - 2 - (x)))
2c9ee2ff-6e32-418f-ab11-78df066decdc,T0_POP,(*-- dp)
5a193223-e74c-4987-bc39-40f56fee495f,T0_POPi,(*(int32_t *)(-- dp))
44ac0a87-d31e-4ada-90d6-5c7a5cfcb064,T0_PEEK,(*(dp - 1 - (x)))
f0d3a6ba-4d75-447c-8283-9f4867216bd6,T0_PEEKi,(*(int32_t *)(dp - 1 - (x)))
58236b09-6510-4ac2-87f3-4bdf1ea2e434,T0_PUSH,do { *dp = (v); dp ++; } while (0)
0c1946e5-7e0f-4e1b-b3a8-94da94da5cdd,T0_PUSHi,do { *(int32_t *)dp = (v); dp ++; } while (0)
224616cf-dc88-49ea-8dfa-4407646f5ce8,T0_RPOP,(*-- rp)
51ed338a-0ee7-4aab-8064-4e4f7dbf3cbc,T0_RPOPi,(*(int32_t *)(-- rp))
ac06186e-1efc-4d17-8ab7-43db77cd1d2a,T0_RPUSH,do { *rp = (v); rp ++; } while (0)
f23fea29-17ef-460e-bc08-f83a5dcd7dbd,T0_RPUSHi,do { *(int32_t *)rp = (v); rp ++; } while (0)
6911f59c-617f-4793-b28d-130a6cd36671,T0_ROLL,"do { \
	size_t t0len = (size_t)(x); \
	uint32_t t0tmp = *(dp - 1 - t0len); \
	memmove(dp - t0len - 1, dp - t0len, t0len * sizeof *dp); \
	*(dp - 1) = t0tmp; \
} while (0)"
27488f16-6ded-40a8-bc71-213050bf0863,T0_SWAP,"do { \
	uint32_t t0tmp = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
07143e9b-b92d-4401-96b4-f0a14242796b,T0_ROT,"do { \
	uint32_t t0tmp = *(dp - 3); \
	*(dp - 3) = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
0f4e630d-4512-44ed-b8b1-7a3f22d47d0f,T0_NROT,"do { \
	uint32_t t0tmp = *(dp - 1); \
	*(dp - 1) = *(dp - 2); \
	*(dp - 2) = *(dp - 3); \
	*(dp - 3) = t0tmp; \
} while (0)"
61d06159-5e2a-4a99-b4d6-55fa6c08669f,T0_PICK,"do { \
	uint32_t t0depth = (x); \
	T0_PUSH(T0_PEEK(t0depth)); \
} while (0)"
506f6fc1-3094-45e1-a745-90871900afe0,T0_CO,"do { \
	goto t0_exit; \
} while (0)"
d4984543-8d5f-417c-9144-1a623a99fccf,T0_RET,goto t0_next
