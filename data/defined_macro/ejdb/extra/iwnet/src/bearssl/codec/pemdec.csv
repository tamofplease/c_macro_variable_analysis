id,name,value
35fb59eb-f575-400b-8927-8b377e6f3dba,T0_VBYTE,(unsigned char)((((uint32_t)(x) >> (n)) & 0x7F) | 0x80)
0207d0f7-7f8d-4de3-8b49-418cb1bafcb1,T0_FBYTE,(unsigned char)(((uint32_t)(x) >> (n)) & 0x7F)
85aa863d-efb9-4162-8f6f-e1e1ad987321,T0_SBYTE,(unsigned char)((((uint32_t)(x) >> 28) + 0xF8) ^ 0xF8)
8fd9de9e-af27-42ec-85c8-63f43175b0df,T0_INT1,"T0_FBYTE(x, 0)"
d410cd8e-6f12-428d-8a75-6bc55babaf74,T0_INT2,"T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
4e4e2856-6296-4e08-9144-5c7ecee500a0,T0_INT3,"T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
7160a857-d555-40d6-b945-0ec8e5809938,T0_INT4,"T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
fb5d2c62-87e6-4cc1-9967-ca28e08aec09,T0_INT5,"T0_SBYTE(x), T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
5ffa9ffe-07ea-4647-9c56-c4c15f0e766c,CTX,"((br_pem_decoder_context *)(void *)((unsigned char *)t0ctx - offsetof(br_pem_decoder_context, cpu)))"
69a11ffa-4fbc-41a7-8793-b14667351044,T0_INTERPRETED,29
6cf6138a-6917-48d4-a1c9-0a5496bb4f57,T0_ENTER,"do { \
		const unsigned char *t0_newip; \
		uint32_t t0_lnum; \
		t0_newip = &t0_codeblock[t0_caddr[(slot) - T0_INTERPRETED]]; \
		t0_lnum = t0_parse7E_unsigned(&t0_newip); \
		(rp) += t0_lnum; \
		*((rp) ++) = (uint32_t)((ip) - &t0_codeblock[0]) + (t0_lnum << 16); \
		(ip) = t0_newip; \
	} while (0)"
252caeeb-96ba-4830-82f4-7586aa520bf1,T0_DEFENTRY,"void \
name(void *ctx) \
{ \
	t0_context *t0ctx = ctx; \
	t0ctx->ip = &t0_codeblock[0]; \
	T0_ENTER(t0ctx->ip, t0ctx->rp, slot); \
}"
7a3abf94-4e2d-4418-9e8f-25273eae9a20,T0_NEXT,(*(*(t0ipp)) ++)
a10756b5-ac76-4e12-804c-528431316c3f,T0_LOCAL,(*(rp - 2 - (x)))
370bb356-b740-4ed0-9624-58fa126e068f,T0_POP,(*-- dp)
e7ce33d3-771a-4487-b53a-62975950c7bc,T0_POPi,(*(int32_t *)(-- dp))
338db31c-f7d6-45ca-887d-9c75a4994707,T0_PEEK,(*(dp - 1 - (x)))
697b2ad6-6eed-418b-962d-5cda69038c40,T0_PEEKi,(*(int32_t *)(dp - 1 - (x)))
e86c44ca-85c7-4411-a788-1e389da66f57,T0_PUSH,do { *dp = (v); dp ++; } while (0)
3fcf867b-db2f-49df-8711-cfd7d12bc9ef,T0_PUSHi,do { *(int32_t *)dp = (v); dp ++; } while (0)
f0a94216-2d45-4ac0-92ae-e790e3b60103,T0_RPOP,(*-- rp)
fbe27ba4-16ee-4989-bb46-cda512a17a06,T0_RPOPi,(*(int32_t *)(-- rp))
c64a7c66-2f64-4247-b796-fcd4c58fbff1,T0_RPUSH,do { *rp = (v); rp ++; } while (0)
730d79b9-99f2-4120-924e-9f6c043d5821,T0_RPUSHi,do { *(int32_t *)rp = (v); rp ++; } while (0)
26bc11ec-feb2-4953-aa5d-19e88d96236b,T0_ROLL,"do { \
	size_t t0len = (size_t)(x); \
	uint32_t t0tmp = *(dp - 1 - t0len); \
	memmove(dp - t0len - 1, dp - t0len, t0len * sizeof *dp); \
	*(dp - 1) = t0tmp; \
} while (0)"
7c2db2d3-153a-43e0-a74b-fef57ff759cd,T0_SWAP,"do { \
	uint32_t t0tmp = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
539ea40a-666a-45c6-9790-20c3ff55fc61,T0_ROT,"do { \
	uint32_t t0tmp = *(dp - 3); \
	*(dp - 3) = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
fa2e0242-7588-4116-a087-4c7c19f2cdae,T0_NROT,"do { \
	uint32_t t0tmp = *(dp - 1); \
	*(dp - 1) = *(dp - 2); \
	*(dp - 2) = *(dp - 3); \
	*(dp - 3) = t0tmp; \
} while (0)"
9671ac3d-5f53-40d8-b34d-62f4ce5e3fee,T0_PICK,"do { \
	uint32_t t0depth = (x); \
	T0_PUSH(T0_PEEK(t0depth)); \
} while (0)"
8d45cb7c-fa6b-43c9-8952-8061e30720f5,T0_CO,"do { \
	goto t0_exit; \
} while (0)"
71e1ac2f-c813-450d-887c-04be60dd8362,T0_RET,goto t0_next
