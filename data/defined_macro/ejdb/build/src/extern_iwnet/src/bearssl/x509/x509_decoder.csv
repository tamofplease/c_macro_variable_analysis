id,name,value
7b0cfd19-471b-4c70-b579-523ab0200341,T0_VBYTE,(unsigned char)((((uint32_t)(x) >> (n)) & 0x7F) | 0x80)
071faac6-1ca7-41e9-aab6-93b97aaba0bd,T0_FBYTE,(unsigned char)(((uint32_t)(x) >> (n)) & 0x7F)
fe58243e-9deb-4185-93a6-080f72e96b20,T0_SBYTE,(unsigned char)((((uint32_t)(x) >> 28) + 0xF8) ^ 0xF8)
5809379a-ddf3-41cd-b937-357dbf4b0203,T0_INT1,"T0_FBYTE(x, 0)"
54706c18-c73d-4285-bf7d-864e94eb9191,T0_INT2,"T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
0020f8c7-b161-4fac-8fb3-6cb04a67cc75,T0_INT3,"T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
ead70a51-07a5-453a-917d-f09bee0ed025,T0_INT4,"T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
5d0c8cc6-74df-48c5-8af1-4955831c881f,T0_INT5,"T0_SBYTE(x), T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
5394c3f1-3752-4757-9acf-d16383bf7bc8,CTX,"((br_x509_decoder_context *)(void *)((unsigned char *)t0ctx - offsetof(br_x509_decoder_context, cpu)))"
d36389b7-ce19-4a33-9e1f-cd0d53e3b0c7,CONTEXT_NAME,br_x509_decoder_context
d6f84152-3180-420b-af5b-3757982f37d2,T0_INTERPRETED,39
cbef8915-a18d-4884-b393-553850461cd6,T0_ENTER,"do { \
		const unsigned char *t0_newip; \
		uint32_t t0_lnum; \
		t0_newip = &t0_codeblock[t0_caddr[(slot) - T0_INTERPRETED]]; \
		t0_lnum = t0_parse7E_unsigned(&t0_newip); \
		(rp) += t0_lnum; \
		*((rp) ++) = (uint32_t)((ip) - &t0_codeblock[0]) + (t0_lnum << 16); \
		(ip) = t0_newip; \
	} while (0)"
f8b29d0c-2813-4b76-8df4-a04597248079,T0_DEFENTRY,"void \
name(void *ctx) \
{ \
	t0_context *t0ctx = ctx; \
	t0ctx->ip = &t0_codeblock[0]; \
	T0_ENTER(t0ctx->ip, t0ctx->rp, slot); \
}"
8a4e81d8-e1e2-4c03-89b1-a70646a5438e,T0_NEXT,(*(*(t0ipp)) ++)
52e7008c-aa12-47ec-87d9-84f0833b54a7,T0_LOCAL,(*(rp - 2 - (x)))
fe0094e5-9f9f-4fab-8bcc-e57ae5d37a6b,T0_POP,(*-- dp)
1a389b20-ced5-4e8b-ae8a-3c2fc5d10672,T0_POPi,(*(int32_t *)(-- dp))
7c20b794-5e65-46a1-9af0-fed3d2990af8,T0_PEEK,(*(dp - 1 - (x)))
b23a8ddd-a649-4b42-b9c3-bfb79e1d12cf,T0_PEEKi,(*(int32_t *)(dp - 1 - (x)))
330cdc47-506b-426f-9ebf-51bd6e5ca917,T0_PUSH,do { *dp = (v); dp ++; } while (0)
5743f1ce-f54c-4c89-a57f-13e0a42297f7,T0_PUSHi,do { *(int32_t *)dp = (v); dp ++; } while (0)
bbec178b-cd5d-4054-9067-6f22a450ac1a,T0_RPOP,(*-- rp)
d89079e9-2c3f-47ec-b9af-c21a1cbbc435,T0_RPOPi,(*(int32_t *)(-- rp))
c933f7da-4949-49e0-9343-6165ad7dbc76,T0_RPUSH,do { *rp = (v); rp ++; } while (0)
cc6833a4-5b46-410a-a7b6-e771669d3728,T0_RPUSHi,do { *(int32_t *)rp = (v); rp ++; } while (0)
4f569c40-c7a3-4aa3-a24f-a81a68c37a7a,T0_ROLL,"do { \
	size_t t0len = (size_t)(x); \
	uint32_t t0tmp = *(dp - 1 - t0len); \
	memmove(dp - t0len - 1, dp - t0len, t0len * sizeof *dp); \
	*(dp - 1) = t0tmp; \
} while (0)"
90c22e0a-f0e8-4e7f-aa85-0b5d359a7f59,T0_SWAP,"do { \
	uint32_t t0tmp = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
77c29347-0c4e-48df-bb8b-3fac03afd9a0,T0_ROT,"do { \
	uint32_t t0tmp = *(dp - 3); \
	*(dp - 3) = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
ad69d347-f614-414f-8d7e-92fee3b914f8,T0_NROT,"do { \
	uint32_t t0tmp = *(dp - 1); \
	*(dp - 1) = *(dp - 2); \
	*(dp - 2) = *(dp - 3); \
	*(dp - 3) = t0tmp; \
} while (0)"
79c8a5c2-6fe5-4eef-96cb-a0d0cc768cb5,T0_PICK,"do { \
	uint32_t t0depth = (x); \
	T0_PUSH(T0_PEEK(t0depth)); \
} while (0)"
ae5ce05e-a660-498a-b97d-1e177a633eac,T0_CO,"do { \
	goto t0_exit; \
} while (0)"
c1bf8f4e-06d1-468a-aee4-c86e557a0d38,T0_RET,goto t0_next
