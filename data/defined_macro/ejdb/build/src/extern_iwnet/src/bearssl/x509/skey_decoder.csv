id,name,value
ad93bd97-d954-48f9-8073-3736631cb8e4,T0_VBYTE,(unsigned char)((((uint32_t)(x) >> (n)) & 0x7F) | 0x80)
c3f30995-f88f-450a-8720-7cad98d92a07,T0_FBYTE,(unsigned char)(((uint32_t)(x) >> (n)) & 0x7F)
e1f29fb3-2d2e-4d2b-82c9-21f159f67606,T0_SBYTE,(unsigned char)((((uint32_t)(x) >> 28) + 0xF8) ^ 0xF8)
b9a3222e-bb61-409f-b8e9-47cb5e659d7a,T0_INT1,"T0_FBYTE(x, 0)"
8470f578-f5ab-46b3-bc2a-2fd133fae4aa,T0_INT2,"T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
5bb3e5b7-2bef-41d5-870a-87bdcad4adad,T0_INT3,"T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
ec40e71c-9679-4aeb-a768-b776e30dbe53,T0_INT4,"T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
7bc955e2-8bc2-4818-b231-d3db47bb0469,T0_INT5,"T0_SBYTE(x), T0_VBYTE(x, 21), T0_VBYTE(x, 14), T0_VBYTE(x, 7), T0_FBYTE(x, 0)"
815d797f-3115-4151-a2fe-e0adc9556d36,CTX,"((br_skey_decoder_context *)(void *)((unsigned char *)t0ctx - offsetof(br_skey_decoder_context, cpu)))"
2755ef79-8f33-4640-bfa3-4806f69d412b,CONTEXT_NAME,br_skey_decoder_context
16b683bc-2b96-4046-956b-fc579735a3ab,T0_INTERPRETED,34
dfbceccf-c3c8-47d2-9fe1-9536ea7cf70e,T0_ENTER,"do { \
		const unsigned char *t0_newip; \
		uint32_t t0_lnum; \
		t0_newip = &t0_codeblock[t0_caddr[(slot) - T0_INTERPRETED]]; \
		t0_lnum = t0_parse7E_unsigned(&t0_newip); \
		(rp) += t0_lnum; \
		*((rp) ++) = (uint32_t)((ip) - &t0_codeblock[0]) + (t0_lnum << 16); \
		(ip) = t0_newip; \
	} while (0)"
86112667-9d23-486b-9607-43ccccf01d8b,T0_DEFENTRY,"void \
name(void *ctx) \
{ \
	t0_context *t0ctx = ctx; \
	t0ctx->ip = &t0_codeblock[0]; \
	T0_ENTER(t0ctx->ip, t0ctx->rp, slot); \
}"
cd62a79d-3a3a-4eac-8961-38ff8bee520e,T0_NEXT,(*(*(t0ipp)) ++)
015adc24-9a9a-4636-94c2-5b4a4114309d,T0_LOCAL,(*(rp - 2 - (x)))
59f8d3b5-7b50-42b9-94e6-65270e1a7262,T0_POP,(*-- dp)
874f36ea-8680-47c2-8211-8daf241db642,T0_POPi,(*(int32_t *)(-- dp))
7c9f5824-af0d-4a1c-9c6d-59bb69c90d5b,T0_PEEK,(*(dp - 1 - (x)))
8539f7e7-66f0-498f-b906-c930ee7b7e01,T0_PEEKi,(*(int32_t *)(dp - 1 - (x)))
acee3efb-884f-4ae7-8c26-7f168b39973c,T0_PUSH,do { *dp = (v); dp ++; } while (0)
015041d9-21c1-4714-b16d-f7492dbf4eae,T0_PUSHi,do { *(int32_t *)dp = (v); dp ++; } while (0)
a2ca8ebc-8837-4a7f-9e10-d7b505bd33ad,T0_RPOP,(*-- rp)
108b9174-d160-424f-9a56-e69873fa75db,T0_RPOPi,(*(int32_t *)(-- rp))
c7bd41cc-1c4f-45f3-a355-aa9c9988342f,T0_RPUSH,do { *rp = (v); rp ++; } while (0)
d40fedcd-c0a8-457d-9d7d-44fe4dd0c0f7,T0_RPUSHi,do { *(int32_t *)rp = (v); rp ++; } while (0)
52a54ecb-4a6e-4e5c-b6f9-4a5d7c45cbab,T0_ROLL,"do { \
	size_t t0len = (size_t)(x); \
	uint32_t t0tmp = *(dp - 1 - t0len); \
	memmove(dp - t0len - 1, dp - t0len, t0len * sizeof *dp); \
	*(dp - 1) = t0tmp; \
} while (0)"
6de9a4ee-c576-40ce-bd3c-1590780d32c1,T0_SWAP,"do { \
	uint32_t t0tmp = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
00896032-27b4-42ba-9c00-90ddaccfb359,T0_ROT,"do { \
	uint32_t t0tmp = *(dp - 3); \
	*(dp - 3) = *(dp - 2); \
	*(dp - 2) = *(dp - 1); \
	*(dp - 1) = t0tmp; \
} while (0)"
84514cec-7c95-4a6a-9b4f-10a9be9a83ec,T0_NROT,"do { \
	uint32_t t0tmp = *(dp - 1); \
	*(dp - 1) = *(dp - 2); \
	*(dp - 2) = *(dp - 3); \
	*(dp - 3) = t0tmp; \
} while (0)"
0893f418-02f5-4d1e-ae8e-5452a1a9164a,T0_PICK,"do { \
	uint32_t t0depth = (x); \
	T0_PUSH(T0_PEEK(t0depth)); \
} while (0)"
15c90fcb-d9ee-482b-93d3-a7c7589a5e2c,T0_CO,"do { \
	goto t0_exit; \
} while (0)"
a911d0dd-18fa-4ad7-9dbb-7a113bbe4318,T0_RET,goto t0_next
