id,name,value
e96535a3-ef51-4a6a-b731-b4a50785bbd2,_GNU_SOURCE,
66221a10-afa9-4a1d-bf27-3e2e621a71b7,MUTEX_INIT,"pthread_spin_init(&(x)->lock, PTHREAD_PROCESS_PRIVATE)"
c297b466-b6dc-4aba-9e5a-637ed36ad8ae,MUTEX_DESTROY,pthread_spin_destroy(&(x)->lock)
93f2c202-77b6-41f0-84ca-e11d8ded85f4,MUTEX_LOCK,pthread_spin_lock(&(x)->lock)
14523318-7557-476b-baa2-cf117e93e064,MUTEX_UNLOCK,pthread_spin_unlock(&(x)->lock)
97c366b1-ce47-4151-a3fc-b2e8d6dd8e5a,MUTEX_INIT,"thread_mutex_init(&(x)->lock, NULL)"
82801d82-1cd9-4699-8504-39ec0d54f808,MUTEX_DESTROY,thread_mutex_destroy(&(x)->lock)
1db6076d-7049-470f-8f00-05bd52a5a534,MUTEX_LOCK,thread_mutex_lock(&(x)->lock)
10a5dc53-14eb-47d9-8ece-5ffd25b26b46,MUTEX_UNLOCK,thread_mutex_unlock(&(x)->lock)
cb0ae855-cd6b-4cbe-b17e-9313a8893846,SIGNATURE,0xdead
a83441f5-f718-4b1e-8309-c86233efc8d1,FILLER,0x0
88b20933-12cf-4289-80a9-219db14a9641,CHECK_PTR,"{ \
  if (_ptr == 0) { \
    acl_msg_panic(""%s(%d), %s: in %s(%d), null pointer input"", \
      __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
  } \
  _real_ptr = (MBLOCK *) ((char *) _ptr - offsetof(MBLOCK, u.payload[0])); \
  if (_real_ptr->signature != SIGNATURE) { \
    acl_msg_panic(""%s(%d), %s: in %s(%d), corrupt or unallocated memory block(%d, 0x%x, 0x%x)"", \
      __FILE__, __LINE__, __FUNCTION__, _fname, _line, \
      (int) _real_ptr->length, _real_ptr->signature, SIGNATURE); \
  } \
  if ((_len = _real_ptr->length) < 1) { \
    acl_msg_panic(""%s(%d), %s: in %s(%d), corrupt memory block length"", \
      __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
  } \
}"
621b80aa-f543-4e76-973e-07e15786b456,CHECK_IN_PTR,"{ \
    if (_ptr == 0) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d), null pointer input"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
    } \
    _real_ptr = (MBLOCK *) ((char *) _ptr - offsetof(MBLOCK, u.payload[0])); \
    if (_real_ptr->signature != SIGNATURE) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d), corrupt or unallocated memory block(%d, 0x%x, 0x%x)"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line, \
        (int) _real_ptr->length, _real_ptr->signature, SIGNATURE); \
    } \
    _real_ptr->signature = 0; \
    if ((_len = _real_ptr->length) < 1) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d), corrupt memory block length"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
    } \
}"
cf903cd0-c11b-45f0-b763-c149b4411a95,CHECK_IN_PTR2,"{ \
    if (_ptr == 0) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d), null pointer input"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
    } \
    _real_ptr = (MBLOCK *) ((char *) _ptr - offsetof(MBLOCK, u.payload[0])); \
    if (_real_ptr->signature != SIGNATURE) { \
      acl_msg_panic(""%s(%d)(CHECK_IN_PTR2): corrupt or unallocated memory block(%d, 0x%x, 0x%x)"", \
        _fname, _line, (int) _real_ptr->length, _real_ptr->signature, SIGNATURE); \
    } \
    if ((_len = _real_ptr->length) < 1) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d) corrupt memory block length"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
    } \
}"
68053184-fd42-444c-a2f3-51875360abce,CHECK_OUT_PTR,"{ \
  _real_ptr->signature = SIGNATURE; \
  _real_ptr->mem_slice = _mem_slice; \
  _real_ptr->length = _len; \
  _ptr = _real_ptr->u.payload; \
}"
7e35d568-295e-443f-b453-2a307c10cdf1,SPACE_FOR,"(offsetof(MBLOCK, u.payload[0]) + _len)"
