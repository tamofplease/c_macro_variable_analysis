id,name,value
28f3acb7-81e4-4923-9be6-5b3213a46461,_GNU_SOURCE,
3e9a87c7-ab28-4ca4-8b51-93a6fbe8f264,MUTEX_INIT,"pthread_spin_init(&(x)->lock, PTHREAD_PROCESS_PRIVATE)"
05b9bbcf-40a8-4827-a92f-bea8dfd8b1e1,MUTEX_DESTROY,pthread_spin_destroy(&(x)->lock)
f63827c3-5b2d-43bf-b5ff-e41fbc618676,MUTEX_LOCK,pthread_spin_lock(&(x)->lock)
f79f17a3-eab7-4b32-85c2-2eec881f89e9,MUTEX_UNLOCK,pthread_spin_unlock(&(x)->lock)
7ab68c3f-080d-47e6-85a8-4de5d3c5301d,MUTEX_INIT,"thread_mutex_init(&(x)->lock, NULL)"
220d7911-b83a-4a22-aa4e-4d04ebb15130,MUTEX_DESTROY,thread_mutex_destroy(&(x)->lock)
74bbf40d-8b0f-4953-b314-5e9ea7a96e6a,MUTEX_LOCK,thread_mutex_lock(&(x)->lock)
3173e190-4932-4049-9b2e-375fae7282fa,MUTEX_UNLOCK,thread_mutex_unlock(&(x)->lock)
5f5b72a8-5034-45fa-aa49-1fb92052e516,SIGNATURE,0xdead
cf2134a6-579a-42ae-8ad2-196e348e7fdb,FILLER,0x0
37df1272-5462-4bae-b48c-b6e79061ba49,CHECK_PTR,"{ \
  if (_ptr == 0) { \
    acl_msg_panic(""%s(%d), %s: in %s(%d), null pointer input"", \
      __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
  } \
  _real_ptr = (MBLOCK *) ((char *) _ptr - offsetof(MBLOCK, u.payload[0])); \
  if (_real_ptr->signature != SIGNATURE) { \
    acl_msg_panic(""%s(%d), %s: in %s(%d), corrupt or unallocated memory block(%d, 0x%x, 0x%x)"", \
      __FILE__, __LINE__, __FUNCTION__, _fname, _line, \
      (int) _real_ptr->length, _real_ptr->signature, SIGNATURE); \
  } \
  if ((_len = _real_ptr->length) < 1) { \
    acl_msg_panic(""%s(%d), %s: in %s(%d), corrupt memory block length"", \
      __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
  } \
}"
072dc1fa-27c1-4087-9b7b-340700398265,CHECK_IN_PTR,"{ \
    if (_ptr == 0) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d), null pointer input"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
    } \
    _real_ptr = (MBLOCK *) ((char *) _ptr - offsetof(MBLOCK, u.payload[0])); \
    if (_real_ptr->signature != SIGNATURE) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d), corrupt or unallocated memory block(%d, 0x%x, 0x%x)"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line, \
        (int) _real_ptr->length, _real_ptr->signature, SIGNATURE); \
    } \
    _real_ptr->signature = 0; \
    if ((_len = _real_ptr->length) < 1) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d), corrupt memory block length"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
    } \
}"
7bb084bf-27c2-4811-9fa7-05c8d9e8a455,CHECK_IN_PTR2,"{ \
    if (_ptr == 0) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d), null pointer input"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
    } \
    _real_ptr = (MBLOCK *) ((char *) _ptr - offsetof(MBLOCK, u.payload[0])); \
    if (_real_ptr->signature != SIGNATURE) { \
      acl_msg_panic(""%s(%d)(CHECK_IN_PTR2): corrupt or unallocated memory block(%d, 0x%x, 0x%x)"", \
        _fname, _line, (int) _real_ptr->length, _real_ptr->signature, SIGNATURE); \
    } \
    if ((_len = _real_ptr->length) < 1) { \
      acl_msg_panic(""%s(%d), %s: in %s(%d) corrupt memory block length"", \
        __FILE__, __LINE__, __FUNCTION__, _fname, _line); \
    } \
}"
916fa3d7-804a-4502-a48d-840094c205be,CHECK_OUT_PTR,"{ \
  _real_ptr->signature = SIGNATURE; \
  _real_ptr->mem_slice = _mem_slice; \
  _real_ptr->length = _len; \
  _ptr = _real_ptr->u.payload; \
}"
75b4fd55-d6a2-4a0d-bc12-35b7035d50e2,SPACE_FOR,"(offsetof(MBLOCK, u.payload[0]) + _len)"
