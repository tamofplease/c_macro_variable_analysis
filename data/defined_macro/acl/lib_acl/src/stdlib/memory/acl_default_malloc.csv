id,name,value
27e2defb-b5f9-44a1-8370-b69a259d4016,SIGNATURE,0xdead
dac57480-f59d-4be4-a8a9-797723c6c6b7,FILLER,0x0
b7a6bc4f-92d1-4c92-8e0c-9be475419079,CHECK_PTR,"{ \
  if (_ptr_ == 0) \
    acl_msg_fatal(""%s(%d): null pointer input"", _fname_, _line_); \
  _real_ptr_ = (MBLOCK *) (((char*)_ptr_) - offsetof(MBLOCK, u.payload[0])); \
  if (_real_ptr_->signature != SIGNATURE) \
    acl_msg_fatal(""%s(%d): corrupt or unallocated block(%d, 0x%x, 0x%x)"", \
      _fname_, _line_, (int) _real_ptr_->length, \
      (int) _real_ptr_->signature, SIGNATURE); \
  if ((_len_ = _real_ptr_->length) < 1) \
    acl_msg_fatal(""%s(%d): corrupt memory block length"", _fname_, _line_); \
}"
a88fb53d-ee8d-41af-bcb3-d1487dd1582c,CHECK_IN_PTR,"{ \
  if (_ptr_ == 0) \
    acl_msg_fatal(""%s(%d): null pointer input"", _fname_, _line_); \
  _real_ptr_ = (MBLOCK *) (((char*)_ptr_) - offsetof(MBLOCK, u.payload[0])); \
  if (_real_ptr_->signature != SIGNATURE) \
    acl_msg_fatal(""%s(%d): corrupt or unallocated block(%d, 0x%x, 0x%x)"", \
      _fname_, _line_, (int) _real_ptr_->length, \
      (int) _real_ptr_->signature, SIGNATURE); \
  _real_ptr_->signature = 0; \
  if ((_len_ = _real_ptr_->length) < 1) \
    acl_msg_fatal(""%s(%d): corrupt memory block length"", _fname_, _line_); \
}"
f6b4d34b-d706-44d9-96c9-95c5207dc5fc,CHECK_OUT_PTR,"{ \
  _real_ptr_->signature = SIGNATURE; \
  _real_ptr_->length = _len_; \
  _ptr_ = _real_ptr_->u.payload; \
}"
c4d6b311-0aa0-48a1-9b9c-8bd1a7bcc339,SPACE_FOR,"(offsetof(MBLOCK, u.payload[0]) + len)"
e6110e80-2a61-42cb-a3da-ddd727497926,SET_FILE,"do {  \
	_ptr_ = strrchr(_filename_, '/');  \
	if (_ptr_ == NULL) {  \
		_ptr_ = strrchr(_filename_, '\\');  \
	}  \
	if (_ptr_ == NULL)  \
		_ptr_ = filename;  \
	else  \
		_ptr_++;  \
} while (0)"
bd8cc012-5c66-4205-9ee8-ba02ae1490ef,SET_FILE,"do {  \
	_ptr_ = strrchr(_filename_, '/');  \
	if (_ptr_ == NULL)  \
		_ptr_ = filename;  \
	else  \
		_ptr_++;  \
} while (0)"
