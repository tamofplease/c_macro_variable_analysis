id,name,value
9e44d373-9d4e-4c53-b2db-76d1e730fdd6,SIGNATURE,0xdead
647d0e86-4163-4058-b502-d5de35191111,FILLER,0x0
2c1ad4ef-7012-4dc9-83eb-22772449adde,CHECK_PTR,"{ \
  if (_ptr_ == 0) \
    acl_msg_fatal(""%s(%d): null pointer input"", _fname_, _line_); \
  _real_ptr_ = (MBLOCK *) (((char*)_ptr_) - offsetof(MBLOCK, u.payload[0])); \
  if (_real_ptr_->signature != SIGNATURE) \
    acl_msg_fatal(""%s(%d): corrupt or unallocated block(%d, 0x%x, 0x%x)"", \
      _fname_, _line_, (int) _real_ptr_->length, \
      (int) _real_ptr_->signature, SIGNATURE); \
  if ((_len_ = _real_ptr_->length) < 1) \
    acl_msg_fatal(""%s(%d): corrupt memory block length"", _fname_, _line_); \
}"
146ac578-f6ef-4ee7-bceb-463ced6baa29,CHECK_IN_PTR,"{ \
  if (_ptr_ == 0) \
    acl_msg_fatal(""%s(%d): null pointer input"", _fname_, _line_); \
  _real_ptr_ = (MBLOCK *) (((char*)_ptr_) - offsetof(MBLOCK, u.payload[0])); \
  if (_real_ptr_->signature != SIGNATURE) \
    acl_msg_fatal(""%s(%d): corrupt or unallocated block(%d, 0x%x, 0x%x)"", \
      _fname_, _line_, (int) _real_ptr_->length, \
      (int) _real_ptr_->signature, SIGNATURE); \
  _real_ptr_->signature = 0; \
  if ((_len_ = _real_ptr_->length) < 1) \
    acl_msg_fatal(""%s(%d): corrupt memory block length"", _fname_, _line_); \
}"
35c16500-ba42-4231-b959-04af4a9c9970,CHECK_OUT_PTR,"{ \
  _real_ptr_->signature = SIGNATURE; \
  _real_ptr_->length = _len_; \
  _ptr_ = _real_ptr_->u.payload; \
}"
780c24bc-d0b6-4149-9def-84b0b0e5cf0d,SPACE_FOR,"(offsetof(MBLOCK, u.payload[0]) + len)"
474c081c-83bf-47ba-90d8-b50f4eae91a2,SET_FILE,"do {  \
	_ptr_ = strrchr(_filename_, '/');  \
	if (_ptr_ == NULL) {  \
		_ptr_ = strrchr(_filename_, '\\');  \
	}  \
	if (_ptr_ == NULL)  \
		_ptr_ = filename;  \
	else  \
		_ptr_++;  \
} while (0)"
77af8d99-455d-4bc2-9843-0926088abb91,SET_FILE,"do {  \
	_ptr_ = strrchr(_filename_, '/');  \
	if (_ptr_ == NULL)  \
		_ptr_ = filename;  \
	else  \
		_ptr_++;  \
} while (0)"
